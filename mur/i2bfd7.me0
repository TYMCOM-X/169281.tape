PROCEDURE HW.WEEKLY
BEGIN

FIELDS

WEEKS                   AS "4N",
CURRENT.WEEK            AS "4N",
STARTING.REPORT.DATE    SAME AS DATE.,
MULTIPLE.SYSTEMS        AS "C" DEFAULT "N",
SITE.INPUT              AS "3C",
CLASS.INPUT             AS "3C",
CRASHES.TODAY           AS "6ZB",
TOTAL.CRASHES           AS "7Z",
TOTAL.SCHEDULED.CRASHES AS "7Z",
TOTAL.PRIME.CRASHES     AS "7Z",
TOTAL.ADJUSTED.CRASHES  AS "7Z",
TOTAL.UP.TIME           AS "4ZN.5N",
TOTAL.SCHEDULED.UP.TIME AS "4ZN.5N",
TOTAL.PRIME.UP.TIME     AS "4ZN.5N",
TOTAL.ADJUSTED.UP.TIME  AS "4ZN.5N",
TOTAL.TIME              AS "4ZN.5N",
TOTAL.SCHEDULED.TIME    AS "4ZN.5N",
TOTAL.PRIME.TIME        AS "4ZN.5N",
WEEK.SCHEDULED.TS       AS "4ZN",
SCHEDULED.TS            AS "4ZN",
WEEK.TOTAL              AS "4ZN",
DD                      AS DATE "    WWW",
DW                      AS DATE "  ZM/DD",
HARDWARE.ID             SAME AS HW.ID,
PRIME.CRASH.FLAG        AS "N",
SCHEDULED.CRASH.FLAG    AS "N",
CRASH.FLAG              AS "N",
REPORT.DATE             SAME AS DATE.,
CURRENT.DATE            SAME AS DATE.,
ZERO                    AS "N",
ELAPSED.TIME            AS "3ZN",

UN.SCHEDULED.TIME       AS "3ZN",
SCHEDULED.TIME          AS "3ZN",
NON.PRIME.TIME          AS "3ZN",
PRIME.TIME              AS "3ZN",

ALL.CRASHES             AS "ZN",
SCHEDULED.CRASHES       AS "ZN",
PRIME.CRASHES           AS "ZN",
ADJUSTED.CRASHES        AS "ZN"

CONTROLS FOR RELATIONS CONCURRENT UPDATE

REPORT TO OUTPUT.FILE PAGE.SIZE 1

RELATION TOTALS. IS
KEY     HW.ID,
        CLASS.ID,
        CODE.ID,
        DATE.
DATA    UN.SCHEDULED.TIME,
        SCHEDULED.TIME,
        NON.PRIME.TIME,
        PRIME.TIME

RELATION GROUP.TOTALS. IS
KEY     HW.ID,
        CLASS.ID,
        DATE.,
        GROUP.ID
DATA    UN.SCHEDULED.TIME,
        SCHEDULED.TIME,
        NON.PRIME.TIME,
        PRIME.TIME

RELATION SCHEDULED.TS. IS
KEY     HW.ID,
        CLASS.ID,
        CURRENT.DATE
DATA    SCHEDULED.TS

RELATION CRASH. IS
KEY     HW.ID,
        CLASS.ID,
        DATE.,
        CODE.ID
DATA    ALL.CRASHES,
        SCHEDULED.CRASHES,
        PRIME.CRASHES,
        ADJUSTED.CRASHES

RELATION HARDWARE.ID. IS
KEY     HW.ID,
        CLASS.ID
DATA    SITE.ID

GET.DATE.OF.REPORT:
BEGIN
TYPE "DATE OF REPORT: " ACCEPT REPORT.DATE
IF REPORT.DATE>TODAY THEN REPEAT GET.DATE.OF.REPORT
END %GET.DATE.OF.REPORT%

LET STARTING.REPORT.DATE=REPORT.DATE

TYPE "WEEKS: " ACCEPT WEEKS

TYPE "HARDWARE ID: " ACCEPT HARDWARE.ID

   GET.SITE:
   BEGIN
   TYPE "SITE: " ACCEPT SITE.INPUT
   IF SITE.INPUT="ALL" THEN FINISH GET.SITE
   FOR EACH SITE. IF ABBREV=SITE.INPUT THEN FINISH GET.SITE
   TYPE "NO SUCH SITE",@CR
   REPEAT GET.SITE
 END %GET.SITE%

 GET.CLASS:
 BEGIN
 TYPE "CLASS: " ACCEPT CLASS.INPUT
 IF CLASS.INPUT="ALL" THEN FINISH GET.CLASS
 FOR EACH CLASS. IF ABBREV=CLASS.INPUT THEN FINISH GET.CLASS
 TYPE "NO SUCH CLASS",@CR
 REPEAT GET.CLASS
 END %GET.CLASS%

GET.OUTPUT.FILE.NAME:
BEGIN
TYPE "OUTPUT TO: " ACCEPT OUTPUT.FILE

IF OUTPUT.FILE="TER" OR "TERM" OR "TERMI" OR "TERMIN" OR "TERMINA"
   OR "TERMINAL" THEN FINISH GET.OUTPUT.FILE.NAME
IF USER.NAME NE "MURMAINT" THEN LET REPORT.DIRECTORY = "("+USER.NAME+")"
IF SUBSTR(OUTPUT.FILE,1,1)="(" AS "C" THEN
   BEGIN
   TYPE @CR,"REPORTS ARE FORCED INTO USER NAME ",REPORT.DIRECTORY
   TYPE @CR,"PLEASE TYPE IN A FILE NAME ONLY",@CR,@CR
   REPEAT GET.OUTPUT.FILE.NAME
   END
  ELSE
   BEGIN
   LET OUTPUT.FILE=REPORT.DIRECTORY+OUTPUT.FILE
   TYPE "REPORT WILL BE ON FILE ",OUTPUT.FILE,@CR
   END
END %GET.OUTPUT.FILE.NAME%


WRITE.REPORT:
WRITE REPORT BEGIN %OPEN UP OUTPUT FILE%

WHILE WEEKS>0 DO
      BEGIN
      SUBTRACT 1 FROM WEEKS
      LET REPORT.DATE=STARTING.REPORT.DATE+(CURRENT.WEEK*7)
      IF REPORT.DATE>TODAY THEN FINISH WRITE.REPORT
      ADD 1 TO CURRENT.WEEK

%INITIALIZE RELATIONS%

DELETE FROM TOTALS. ALL
DELETE FROM GROUP.TOTALS. ALL
DELETE FROM SCHEDULED.TS. ALL
DELETE FROM CRASH. ALL
DELETE FROM HARDWARE.ID. ALL

LET DD,DW=REPORT.DATE

 FOR EACH TIME. WHERE NOT (DATE.<REPORT.DATE OR DATE.>REPORT.DATE+6)
     SORTED ON HW.ID,DATE.,START.TIME
     THIS.RECORD:
     BEGIN

  HW.ID.CHECK:
  BEGIN
     IF HARDWARE.ID#"" AND HW.ID#HARDWARE.ID THEN FINISH THIS.RECORD

     IF SITE.INPUT="ALL" THEN NOTHING ELSE
     IF SITE.INPUT=ABBREV(SITE. VIA ID=SITE.ID) THEN NOTHING ELSE
        FINISH THIS.RECORD

     IF CLASS.INPUT="ALL" THEN NOTHING ELSE
     IF CLASS.INPUT=ABBREV(CLASS. VIA ID=CLASS.ID) THEN NOTHING ELSE
        FINISH THIS.RECORD
   END %HW.ID.CHECK%

     SELECT HARDWARE.ID. VIA KEY
        THEN ALTER HARDWARE.ID.
        ELSE INSERT INTO HARDWARE.ID.

     LET ELAPSED.TIME=STOP.TIME-START.TIME

     SELECT.TOTALS:
        BEGIN
         SELECT TOTALS. VIA KEY
                THEN
                    BEGIN
                    CONDITIONAL ON SCHED.FLAG
                                BEGIN
                                1: ADD ELAPSED.TIME TO SCHEDULED.TIME
                                2: ADD ELAPSED.TIME TO UN.SCHEDULED.TIME
                                END
                    CONDITIONAL ON PRIME.FLAG
                                BEGIN
                                1: ADD ELAPSED.TIME TO PRIME.TIME
                                2: ADD ELAPSED.TIME TO NON.PRIME.TIME
                                END
                    ALTER TOTALS.
                    END
               ELSE
                   BEGIN
                   INSERT INTO TOTALS.
                          USING (ZERO FOR UN.SCHEDULED.TIME,
                                 ZERO FOR SCHEDULED.TIME,
                                 ZERO FOR NON.PRIME.TIME,
                                 ZERO FOR PRIME.TIME)
                   REPEAT SELECT.TOTALS
                   END
        END %SELECT.TOTALS%
     SELECT.CRASH:
        BEGIN
        SELECT CRASH. VIA KEY
               THEN
                   BEGIN
                   IF CRASH.FLAG=1 AND TYPE.ABBREV(CODE. VIA ID=CODE.ID)="LST"
                      THEN ADD 1 TO ALL.CRASHES
                   IF TYPE.ABBREV(CODE. VIA ID=CODE.ID)="UP"
                      THEN LET CRASH.FLAG=1
                      ELSE LET CRASH.FLAG=0
                   CONDITIONAL ON SCHED.FLAG
                       BEGIN
                       1: CONDITIONAL ON TYPE.ABBREV(CODE. VIA ID=CODE.ID)
                              BEGIN
                               "UP": LET SCHEDULED.CRASH.FLAG=1
                              "SDN": LET SCHEDULED.CRASH.FLAG=0
                              "LST": BEGIN
                                     IF SCHEDULED.CRASH.FLAG=1 THEN
                                        BEGIN
                                        ADD 1 TO SCHEDULED.CRASHES
                                        IF EXCEPTION.FLAG(CODE. VIA ID=CODE.ID)="N"
                                           THEN ADD 1 TO ADJUSTED.CRASHES
                                           END
                                     LET SCHEDULED.CRASH.FLAG=0
                                     END
                              END
                       2: LET SCHEDULED.CRASH.FLAG=0
                       END %OF CONDITIONAL ON SCHED.FLAG%
                   CONDITIONAL ON PRIME.FLAG
                       BEGIN
                       1: BEGIN
                          CONDITIONAL ON TYPE.ABBREV(CODE. VIA ID=CODE.ID)
                              BEGIN
                               "UP": LET PRIME.CRASH.FLAG=1
                              "SDN": LET PRIME.CRASH.FLAG=0
                              "LST": BEGIN
                                     IF PRIME.CRASH.FLAG=1 THEN ADD 1 TO PRIME.CRASHES
                                     LET PRIME.CRASH.FLAG=0
                                     END
                              END
                          END
                       2: LET PRIME.CRASH.FLAG=0
                       END
                    ALTER CRASH.
                    END
               ELSE
                   BEGIN
                   INSERT INTO CRASH.
                          USING (ZERO FOR ALL.CRASHES,
                                 ZERO FOR SCHEDULED.CRASHES,
                                 ZERO FOR PRIME.CRASHES,
                                 ZERO FOR ADJUSTED.CRASHES)
                   REPEAT SELECT.CRASH
                   END
        END %SELECT.CRASH%
     END %FOR EACH TIME%

%PUT CODE TOTALS INTO GROUP TOTALS%

FOR EACH TOTALS.
 SELECT GROUP.TOTALS. VIA (HW.ID,CLASS.ID,DATE.,GROUP.ID=GROUP.ID(CODE. VIA ID=CODE.ID)) THEN
        BEGIN
        ADD UN.SCHEDULED.TIME OF TOTALS. TO UN.SCHEDULED.TIME OF GROUP.TOTALS.
        ADD SCHEDULED.TIME OF TOTALS. TO SCHEDULED.TIME OF GROUP.TOTALS.
        ADD NON.PRIME.TIME OF TOTALS. TO NON.PRIME.TIME OF GROUP.TOTALS.
        ADD PRIME.TIME OF TOTALS. TO PRIME.TIME OF GROUP.TOTALS.
        ALTER GROUP.TOTALS.
        END
     ELSE INSERT INTO GROUP.TOTALS. USING (GROUP.ID(CODE. VIA ID=CODE.ID) FOR GROUP.ID)

%OUTPUT THE INDIVIDUAL REPORTS FOR THIS WEEK%

FOR EACH HARDWARE.ID. SORTED ON SITE.ID,CLASS.ID,HW.ID
    BEGIN

%OUTPUT REPORT HEADING%

IF MULTIPLE.SYSTEMS="Y" THEN PRINT @FF
LET MULTIPLE.SYSTEMS="Y"
PRINT @CR,@TAB TO 11,
      TRIM(TITLE(SITE. VIA ID=SITE.ID OF HARDWARE.ID.))," ",
      TRIM(TITLE(CLASS. VIA ID=CLASS.ID OF HARDWARE.ID.)),
      " HARDWARE ",TRIM(HW.ID OF HARDWARE.ID.),
      " FOR WEEK OF ",REPORT.DATE AS DATE "MMM ZD, YYYY",@CR
PRINT @TAB TO 19,DD,DD+1,DD+2,DD+3,DD+4,DD+5,DD+6,"  WEEKLY",@CR
PRINT @TAB TO 19,DW,DW+1,DW+2,DW+3,DW+4,DW+5,DW+6,"  TOTALS",@CR

%OUTPUT INDIVIDUAL CODE TOTALS%

 FOR EACH GROUP. WHERE TYPE.ABBREV="UP" OR "SDN" OR "LST" SORTED ON POS
 FOR EACH CODE. WHERE CLASS.ID=CLASS.ID OF HARDWARE.ID.
  AND GROUP.ID=ID OF GROUP. AND NOT (END.DATE<REPORT.DATE OR START.DATE>REPORT.DATE+6)
  SORTED ON CODE
  BEGIN
  PRINT CODE AS "ZN"
  IF EXCEPTION.FLAG="N" THEN PRINT " " ELSE PRINT "*"
  PRINT TITLE
  LET WEEK.TOTAL=0
LET CURRENT.DATE=REPORT.DATE-1
WHILE CURRENT.DATE>=REPORT.DATE-1 AND <REPORT.DATE+6 DO
 BEGIN
 ADD 1 TO CURRENT.DATE
  SELECT TOTALS. VIA (HW.ID,CLASS.ID,CODE.ID=ID OF CODE.,DATE.=CURRENT.DATE) THEN
   BEGIN
   LET ELAPSED.TIME=UN.SCHEDULED.TIME+SCHEDULED.TIME
   ADD ELAPSED.TIME TO WEEK.TOTAL
   PRINT (ELAPSED.TIME/60) AS "3ZB",":",
         ((ELAPSED.TIME-(ELAPSED.TIME/60)*60)) AS "NN"
   END
   ELSE PRINT @TAB 7
  END
 IF WEEK.TOTAL=0 THEN PRINT @CR ELSE
    PRINT (WEEK.TOTAL/60) AS "4ZB",":",
          ((WEEK.TOTAL-(WEEK.TOTAL/60)*60)) AS "NN",@CR
  END %SINGLE CODE OUTPUT%

%OUTPUT DAILY TOTALS%

PRINT @TAB TO 4,"DAILY TOTALS" AS "15C"
LET WEEK.TOTAL=0
LET TOTAL.TIME,TOTAL.SCHEDULED.TIME,TOTAL.PRIME.TIME=0
LET CURRENT.DATE=REPORT.DATE-1

WHILE CURRENT.DATE>=REPORT.DATE-1 AND <REPORT.DATE+6 DO
 BEGIN
 ADD 1 TO CURRENT.DATE
 LET ELAPSED.TIME=0
 FOR EACH GROUP.TOTALS. VIA (HW.ID,CLASS.ID,DATE.=CURRENT.DATE)
            BEGIN
            ADD UN.SCHEDULED.TIME+SCHEDULED.TIME TO ELAPSED.TIME,TOTAL.TIME
            ADD SCHEDULED.TIME TO TOTAL.SCHEDULED.TIME
            ADD PRIME.TIME TO TOTAL.PRIME.TIME
            END
 IF ELAPSED.TIME=0 THEN PRINT @TAB 7 ELSE
    PRINT (ELAPSED.TIME/60) AS "3ZB",":",
          ((ELAPSED.TIME-(ELAPSED.TIME/60)*60)) AS "NN"
 ADD ELAPSED.TIME TO WEEK.TOTAL
 END %WHILE STATMENT FOR DAILY TOTALS OUTPUT%

 IF WEEK.TOTAL=0 THEN PRINT @CR ELSE
    PRINT (WEEK.TOTAL/60) AS "4ZB",":",
          ((WEEK.TOTAL-(WEEK.TOTAL/60)*60)) AS "NN",@CR

%END DAILY TOTALS OUTPUT%

%OUTPUT SCHEDULED TIME GROUP TOTALS%

PRINT @CR,@TAB TO 28,"SCHEDULED TIME GROUP TOTALS",@CR
FOR EACH GROUP. WHERE TYPE.ABBREV="UP" OR "SDN" OR "LST" SORTED ON POS
 LIST.GROUP:
 BEGIN
 LIST.GROUP.CHECK:
      BEGIN
      FOR EACH CODE. WHERE GROUP.ID=ID OF GROUP. AND
          CLASS.ID=CLASS.ID OF HARDWARE.ID. AND
          NOT (START.DATE>REPORT.DATE+6 OR END.DATE<REPORT.DATE)
          FINISH LIST.GROUP.CHECK
      FINISH LIST.GROUP %DON'T LIST THIS GROUP%
 END %LIST.GROUP.CHECK%

 PRINT @TAB TO 4,TITLE
 LET WEEK.TOTAL=0
 LET CURRENT.DATE=REPORT.DATE-1
 WHILE CURRENT.DATE>=REPORT.DATE-1 AND <REPORT.DATE+6 DO
  BEGIN
  ADD 1 TO CURRENT.DATE
  LET ELAPSED.TIME=0
   SELECT GROUP.TOTALS. VIA (HW.ID,CLASS.ID,DATE.=CURRENT.DATE,GROUP.ID=ID OF GROUP.) THEN
             ADD SCHEDULED.TIME TO ELAPSED.TIME
 IF ELAPSED.TIME=0 THEN PRINT @TAB 7 ELSE
    BEGIN
    PRINT (ELAPSED.TIME/60) AS "3ZB",":",
        ((ELAPSED.TIME-(ELAPSED.TIME/60)*60)) AS "NN"
    SELECT SCHEDULED.TS. VIA KEY THEN
           BEGIN
           ADD ELAPSED.TIME TO SCHEDULED.TS
           ALTER SCHEDULED.TS.
           END
         ELSE INSERT INTO SCHEDULED.TS. USING (ELAPSED.TIME FOR SCHEDULED.TS)
   END %IF ELAPSED.TIME#0%
  ADD ELAPSED.TIME TO WEEK.TOTAL
  END %WHILE%
 IF WEEK.TOTAL=0 THEN PRINT @CR ELSE
    PRINT (WEEK.TOTAL/60) AS "4ZB",":",
          ((WEEK.TOTAL-(WEEK.TOTAL/60)*60)) AS "NN",@CR
 END %LIST GROUP%

%OUTPUT SCHEDULED TS TOTALS%

PRINT @TAB TO 4,"SCHEDULED TS" AS "15C"
LET CURRENT.DATE=REPORT.DATE-1
LET WEEK.TOTAL=0
WHILE CURRENT.DATE>=REPORT.DATE-1 AND <REPORT.DATE+6 DO
 BEGIN
 ADD 1 TO CURRENT.DATE
 SELECT SCHEDULED.TS. VIA KEY THEN
  BEGIN
  PRINT (SCHEDULED.TS/60) AS "3ZB",":",
        ((SCHEDULED.TS-(SCHEDULED.TS/60)*60)) AS "NN"
  ADD SCHEDULED.TS TO WEEK.TOTAL
  END %OF SELECTION%
  ELSE PRINT @TAB 7
END %WHILE%
IF WEEK.TOTAL=0 THEN PRINT @CR ELSE
   PRINT (WEEK.TOTAL/60) AS "4ZB",":",
         ((WEEK.TOTAL-(WEEK.TOTAL/60)*60)) AS "NN",@CR

%OUTPUT AVAILABILITY FIGURES%

LET TOTAL.UP.TIME=0
LET TOTAL.SCHEDULED.UP.TIME=0
LET TOTAL.PRIME.UP.TIME=0
FOR EACH GROUP.TOTALS. VIA (HW.ID,CLASS.ID)
    IF TYPE.ABBREV(GROUP. VIA ID=GROUP.ID)="UP" THEN
    BEGIN
    ADD UN.SCHEDULED.TIME+SCHEDULED.TIME TO TOTAL.UP.TIME
    ADD SCHEDULED.TIME TO TOTAL.SCHEDULED.UP.TIME
    ADD PRIME.TIME TO TOTAL.PRIME.UP.TIME
    END

LET ELAPSED.TIME=0
FOR EACH TOTALS. VIA (HW.ID,CLASS.ID)
 IF EXCEPTION.FLAG(CODE. VIA ID=CODE.ID)="Y" THEN
    ADD SCHEDULED.TIME TO ELAPSED.TIME

LET TOTAL.ADJUSTED.UP.TIME=TOTAL.SCHEDULED.UP.TIME+ELAPSED.TIME

PRINT @TAB TO 4,"AVAILABILITY" AS "16C"
PRINT " ","24 HR",(TOTAL.UP.TIME/TOTAL.TIME*100) AS "4Z.NN","%"
PRINT " ","PRIME"
IF TOTAL.PRIME.TIME=0 THEN PRINT @TAB 8
   ELSE PRINT (TOTAL.PRIME.UP.TIME/TOTAL.PRIME.TIME*100) AS "4Z.NN","%"
PRINT " ","SCHED"
IF TOTAL.SCHEDULED.TIME=0 THEN PRINT @TAB 8
   ELSE PRINT (TOTAL.SCHEDULED.UP.TIME/TOTAL.SCHEDULED.TIME*100) AS "4Z.NN","%"
PRINT " ","*ADJ'D"
IF TOTAL.SCHEDULED.TIME=0 THEN PRINT @CR
   ELSE PRINT (TOTAL.ADJUSTED.UP.TIME/TOTAL.SCHEDULED.TIME*100) AS "4Z.NN","%",@CR

%OUTPUT SCHEDULED TIME CRASH SUMMARY%

PRINT @CR,@TAB TO 28,"SCHEDULED TIME CRASH SUMMARY",@CR

FOR EACH GROUP. WHERE TYPE.ABBREV="LST" SORTED ON POS
 FOR EACH CODE. WHERE (NOT (START.DATE>REPORT.DATE+6 OR END.DATE<REPORT.DATE))
     AND CLASS.ID=CLASS.ID OF HARDWARE.ID.
     AND GROUP.ID=ID OF GROUP. SORTED ON CODE
  BEGIN
  PRINT @TAB TO 3
  IF EXCEPTION.FLAG="Y" THEN PRINT "*" ELSE PRINT " "
  PRINT TITLE OF CODE.
  LET WEEK.TOTAL=0
  LET CURRENT.DATE=REPORT.DATE-1
  WHILE CURRENT.DATE>=REPORT.DATE-1 AND <REPORT.DATE+6 DO
   BEGIN
   ADD 1 TO CURRENT.DATE
   SELECT CRASH. VIA (HW.ID,CLASS.ID,DATE.=CURRENT.DATE,CODE.ID=ID OF CODE.) THEN
    BEGIN
    ADD SCHEDULED.CRASHES TO WEEK.TOTAL
    PRINT SCHEDULED.CRASHES AS "6ZB"
    END
   ELSE PRINT @TAB 7
  END %WHILE%
 
IF WEEK.TOTAL=0 THEN PRINT @CR ELSE
   PRINT WEEK.TOTAL AS "8Z",@CR

END %EACH GROUP OF CRASH CODES%

%OUTPUT DAILY TOTALS FOR SCHEDULED TIME CRASHES%

LET TOTAL.CRASHES=0
LET WEEK.TOTAL=0
LET TOTAL.SCHEDULED.CRASHES=0
LET TOTAL.PRIME.CRASHES=0
LET TOTAL.ADJUSTED.CRASHES=0

PRINT @TAB TO 4,"DAILY TOTALS" AS "15C"
LET CURRENT.DATE=REPORT.DATE-1
WHILE CURRENT.DATE>=REPORT.DATE-1 AND <REPORT.DATE+6 DO
 BEGIN
 ADD 1 TO CURRENT.DATE
 LET CRASHES.TODAY=0
 FOR EACH CRASH. VIA (HW.ID,CLASS.ID,DATE.=CURRENT.DATE)
     BEGIN
     ADD ALL.CRASHES TO TOTAL.CRASHES
     ADD SCHEDULED.CRASHES TO TOTAL.SCHEDULED.CRASHES
     ADD PRIME.CRASHES TO TOTAL.PRIME.CRASHES
     ADD ADJUSTED.CRASHES TO TOTAL.ADJUSTED.CRASHES
     ADD SCHEDULED.CRASHES TO CRASHES.TODAY
     END
  ADD CRASHES.TODAY TO WEEK.TOTAL
  PRINT CRASHES.TODAY

 END %WHILE%
 PRINT WEEK.TOTAL AS "7ZB",@CR

%OUTPUT 24 HOUR,PRIME TIME,ETC. CRASHES%

PRINT @TAB TO 4,"TOTAL CRASHES" AS "15C"
PRINT " ","24 HOUR:" AS "8C",TOTAL.CRASHES AS "4ZB"
PRINT " ","PRIME:" AS "8C",TOTAL.PRIME.CRASHES AS "4ZB"
PRINT " ","SCHED:" AS "8C",TOTAL.SCHEDULED.CRASHES AS "4ZB"
PRINT " ","*ADJ'D:" AS "8C",TOTAL.ADJUSTED.CRASHES AS "5ZB",@CR

END %HARDWARE ID REPORT%

END %WEEK REPORT%

END %REPORT%
END
 