TITLE	FIXDUL
SUBTTL	Recreated from DDT and a lot of typing

	F==0
	V==1
	A==2
	B==A+1
	C==B+1
	D==C+1
	E==D+1
	P==7
	INDEX==10
	BP==11
	BP2==12
	CH==13
	N==14
	N1==N+1
	N2==N+2
	
FIXDUL:	RESET
	CLRBFI 0
	MOVE P,PDP
	MOVEI INDEX,0
	SETZM OVBLK

CH1:	OPEN 1,[17
		SIXBIT \SYS\
		0]
	JRST ERR3

	MOVEI F,5
	MOVE V,[1,,4]
	MOVE A,[SIXBIT \DUL\]
	HRLZI B,'SYS'
CH2:	LOOKUP 1,F
	JRST ERR3
CH3:	ENTER 1,F
	JRST ERR3
	MOVEM D,DULSIZ
	LSH D,-7
	MOVEM D,NXTBLK

GETAUN:	OUTSTR [ASCIZ \PPN: \]
	SETZ A,
	MOVEI N2,E
	MOVE BP,[POINT 3,2,17]
GETLOP:	PUSHJ P,GETCHR
	JRST GOTSEC
	JRST FIRSTI
	IDPB CH,BP
	SOJG N2,GETLOP
GETLP1:	PUSHJ P,GETCHR
	JRST GOTSEC
	SKIPA 0
	JRST GETLP1

FIRSTI:	JUMPE N2,SECOND
	LSH A,-3
	SOJG N2,.-1

SECOND:	HRLZM A,N
	SETZ A,0
	MOVEI N2,E
	MOVE BP,[POINT 3,2,17]
SECLOP:	PUSHJ P,GETCHR
	JRST GOTSEC
	JRST BADCHR
	IDPB CH,BP
	SOJG N2,SECLOP
SECLP1:	PUSHJ P,GETCHR
	JRST GOTSEC
	JRST BADCHR
	JRST SECLP1

GOTSEC:	JUMPE N2,GOTNON
	LSH A,-3
	SOJG N2,.-1
GOTNON:	HRRM A,N
	CLRBFI 0
	MOVE A,N
	IDIVI A,145
	ADDI B,1
	MOVEM B,HLOC
CH4:	USETI 1,@HLOC
CH5:	INPUT 1,DULLST
CH6:	STATZ 1,760000
	JRST ERR3

FINPPN:	SETZ C,0
	SKIPN DULBLK(C)
	JRST FNDIT
	SKIPG DULBLK(C)
	JRST GETOV
	CAMN N,DULBLK(C)
	JRST ERR2
	ADDI C,B
	JRST FINPPN+1

MAKOV:	AOS D,NXTBLK			; get block number and increment
	HRLI D,400000			; set sign bit for pointer
	MOVEM D,DULBLK(C)		; set overflow block
	USETO 1,@HLOC			; where to write this one
	OUTPUT 1,DULLST			; write it
	STATZ 1,760000			; check for errors
	JRST ERR3			; complain, and die!
	HRRM D,OVBLK			; set current to "new" block
	SETZM DULBLK			; then fake the read
	MOVE C,[DULBLK,,DULBLK+1]	;  by clearing
	BLT C,DULBLK+177		;  the existing block
	JRST FINPPN			; and fall into insert code

GETOV:	HRRZ C,DULBLK(C)
	MOVEM C,OVBLK
CH12:	USETI 1,@OVBLK
CH13:	INPUT 1,DULLST
CH14:	STATZ 1,760000
	JRST ERR3
	JRST FINPPN

FNDIT:	CAIL C,176			; can we squeeze in?
	  JRST MAKOV			; no, make an overflow block
	MOVEM N,DULBLK(C)
	PUSHJ P,GETNAM
	SKIPN A,OVBLK			; any overflow block
	  MOVE A,HLOC			; no! use current block
CH7:	USETO 1,@A
CH8:	OUTPUT 1,DULLST
CH9:	STATZ 1,760000
	JRST ERR3
CH10:	CLOSE 1,0
CH11:	RELEAS 1,0
GOBACK:	OUTSTR [ASCIZ \ENTRY INSERTED.
\]
	JRST FIXDUL

ERR3:	OUTSTR [ASCIZ \DSK ERROR.
\]
	EXIT 1,
ERR2:	OUTSTR [ASCIZ \ALLREADY THERE!!!
\]
	JRST FIXDUL
ERR4:	OUTSTR [ASCIZ \MUST MAKE OVERFLOW BLOCK!!!
\]
	EXIT 1,

GETNAM:	MOVE BP,[POINT 6,DULBLK+1(C)]
	OUTSTR [ASCIZ \NAME: \]
	MOVEI N,^D12
NXTCHR:	INCHWL CH
	CAIN CH,15
	POPJ P,0
	CAIL CH,140			; if lower case
	  MOVEI CH,"A"-"a"(CH)		;  convert to upper
	SUBI CH,40			; then make it sixbit
	IDPB CH,BP
	SOJG N,NXTCHR
	POPJ P,0

GETCHR:	INCHWL CH
	CAIN CH,15
	POPJ P,0
	CAIE CH,54
	JRST GETNXT
	AOS 0(P)
	POPJ P,0

GETNXT:	SUBI CH,60
	CAILE CH,P
	JRST BADCHR
	JUMPL CH,BADCHR
	AOS 0(P)
	AOS 0(P)
	POPJ P,0

BADCHR:	OUTSTR [ASCIZ \ILLEGAL CHARACTER.
\]
	CLRBFI 0
	JRST FIXDUL

PDP:	-20,,PDP
	BLOCK 20

DULLST:	-200,,DULLST+1
	0

DULBLK:	BLOCK 200

DULSIZ:	0			; size of DUL in words
NXTBLK:	0			; highest block in use
OVBLK:	0			; current overflow block
HLOC:	0			; current block in/to use

	END	FIXDUL
