Title	Runexe	Program to map-in an EXE file and run it!
Subttl	Carl A Baltrunas	Tymshare TSG 1981

	SEARCH	Carl,Macten,JOBDAT,UUOSYM
	SALL

	.REQUEST DSK:TYMCAB.REL		; SUBROUTINES

	EXTERNAL    GETWRD,OUTOCT,OUTSIX,$$$TYC

	SUBTTL	MACRO DEFINITIONS

	VER==1		;VERSION 1
	EDIT==0		;EDIT NUMBER

DEFINE VERSION(VER,EDIT)<
	LOC 137
	BYTE	(3)0(9)<VER>(6)0(18)<EDIT>
	RELOC
>

	VERSION	VER,EDIT	;SETUP VERSION

	Chan==1

	SUBTTL	Initialization section

RUNEXE:	RESET				;RESET ANY & ALL I/O LINES
	STORE	T1,T2,P,0		;CLEAR AC'S
	MOVE	P,[IOWD 100,PDL]	;SETUP PDL LIST
	Caia
FNF:	 Outstr	[Asciz\?File Not found!\]
Main:	Outstr	[Asciz\
File: \]
	SETZ	T1,			;MAKE SURE WE'RE READY HERE
	PUSHJ	P,GETWRD		;LOOK FOR A WORD (SOMETHING)
	  Jumpe	T2,Main
	Movem	T2,Direct+.RBNAM	;Store name
	Movsi	T2,'EXE'		;  and extension
	Movem	T2,Direct+.RBEXT

	OPEN	CHAN,OPNBLK		;OPEN A CHANNEL
	  HALT	.

	LOOKUP	CHAN,DIRECT		;LOOKUP THE FILE
	  Jrst	FNF
	Hrrz	P1,.Jbrel		; Coresize-1 in words
	Aoj	P1,			; Fix the -1
	Movem	P1,Offset		; Remember this
	Lsh	P1,-^D9			; Convert to pages
	Movem	P1,Pages		; Save it!
	Hll	P1,[1b7+1b17]		; Make ready, .prro!1 page
	Push	P,P1			; Save this for later
	Movei	P2,2			; From file page (2)
	Move	T1,[.Chmfp,,chan]	; Read in the job data area?
	Chanio	T1,P1
	  Halt	.
	Move	P1,Offset		; Use offset into block!
	Move	T1,.Jbcor(P1)		; Get core needed for lowseg
	Movem	T1,Jbcor		; Be mnemonic!
	Tlz	T1,777777		; Zap half.
	Aoj	T1,			; Add 1 to use pages
	Lsh	T1,-^D9			; And convert!
	Subi	T1,400			; Don't forget this one!
	Movem	T1,Hghpag		; Highpage! Offset.
	Move	T1,.Jbhrl(P1)		; Likewise... for High-seg if any
	Skipe	T1			; High!?
	Movei	T1,-400000(T1)		; Clear left half & 400000 bit
	Movem	T1,Jbhrl		; Be mnemonic!
	Pop	P,P1			; Restore code from aboce!
	Vclear	P1,			; Now remove that page *** !
	  Halt	.			; Not typically possible! So STOP!
	Hrrz	T1,Jbcor		; Lowcore.
	Add	T1,Jbhrl		; Add high -- If any!
	Hrrz	T2,.Jbrel		; Get my current core!!!
	Camg	T1,T2			; Do I need More?
	  Jrst	Nocore			; No!  Don't take any away either!
	Core	T1,			; Get the core.
	  Halt	.			; OOPS!

Nocore:	Move	P1,Pages		; Get page # we want to use!
	Hll	P1,[1b7+1b17]		; Make ready, .prro!1 page
	Vclear	P1,			; Now remove that page *** !
	  Halt	.			; Not typically possible! So STOP!
	Movei	P2,1			; From file page (1)
	Move	T1,[.Chmfp,,chan]	; Read in the page map page
	Chanio	T1,P1
	  Halt	.
	Move	P1,Offset		; Get the offset figure
	Hlrz	T1,(P1)			; Check code.
	Caie	T1,1776			;  for 1776,,count
	  Jrst	Errexe			;  OOPS!

	Hrrz	T1,(P1)			; Get count
	Lsh	T1,-1			; Convert to number of pairs in block
	Movns	T1			; Negate
	Hrlz	T1,T1			; Convert to -n,,0
	Hrr	T1,Offset		;	-n,,pageoffset
	Subttl	Main processing Loop

Loop:	Ldb	T3,[point 13,1(T1),35]	; Get the file page # (-1)
	Ldb	T2,[point 13,2(T1),35]	; Get the process page #
	Ldb	T4,[point  9,2(T1),8]	; Get the repeat count -1
Addone:	Camle	T2,Pages		; Do something special-pages in core
	  Jrst	Normal			;  else skip to the normal routine
	Aoj	T3,			; Increment physical page # in file
	Jumpe	T4,Justadd		; If repeat = 0, then add to list
	Movem	T3,Base(T2)		; Otherwise, Add one here
	Cain	T3,1			; If File-page = 1, make zeroes
	  Setz	T3,			;   and make sure it stays = 1!
	Aoj	T2,			; Increment process page #
	Soja	T4,Addone		; Decrement repeat by 1 & Loop

Normal:	Jumpe	T3,Donext		; Well?  Why clear then create?
	Aoj	T3,			; Increment file page # for real
	Aoj	T4,			; Increment count for real
	Cail	T2,400			; Check if it's high-seg
	  Add	T2,Hghpag		; Blam!
	Hrl	T2,T4			; Copy as Repeat,,Process-page
	Tlo	T2,2000			; Add reference bit!
	Vclear	T2,			; First clear the page
	  Jrst	Errclr			; Error trying to clear it???
	Tlz	T2,2000			; Clear bit!
	Tlo	T2,4000			; Equiv to 2b7, (Copy on Write)
	Move	[.Chmfp,,chan]		; Setup UUO call to map the page
	Chanio	T2			; Map the page
	  Jrst	Errmap			;  Error mapping the page ???
	Jrst	Workit			; Add it to the working set

Nullit:	Vcreat	T2,			; Create private pages for now!
	  Jrst	Errvcr			; No? something's wrong!
Workit:	Tlz	T2,4000			; Clear (copy on write bit)
	Tlo	T2,2000			; Set Add to working set bit
	Move	[.Wsrng,,T2]		; Setup funtion code
	Wsctl				; Add it!
	  Jrst	Errwsc			;  Error in working set command
	 Caia				; Skip! and do next pair!
Justad:	Movem	T3,Base(T2)		; Set page in table (Must be r/w)
DoNext:	Aoj	T1,			; Increment first part
	Aobjn	T1,Loop			; Do next pair
	Move	T2,[Xwd 1777,1]		; Get End-of-map,,Len=1 constant
	Came	T2,1(T1)		;  and make sure we made it ok!
	  Jrst	Errexe			; Nope, Bad EXE format!
	Skipe	T2,.Jbddt		; Skip if DDT!
	 Outstr	[Asciz\
% DDT loaded!
\]

Lastpt:	Move	T1,Hghpag		; Get the high-seg start page
	Movei	T1,400(T1)		; and make it real again.
	Lsh	T1,^D9			; Shift it to make words.
	Soj	T1,			; Subtract to get top address
	Skipn	Jbhrl			; Should we have a high segment?
	  Setz	T1,			; No-- Set value to 0
	Move	P3,T1			; Save the REMAP? value!
	Move	T1,[Base,,140]		; Copy page list to page 0
	Blt	T1,137+20		; -- max of 20 words! --
	Movsi	T1,Finals		; Get the address of this code
	Hrri	T1,140+20		; And where to put it!
	Blt	T1,137+20+Finalz	; -- Copy Code --
	Move	P1,Offset		; Save this since it's going away
	Move	P2,Pages		; .. Ditto ..
	Jrst	140+20			; Bye!

	Xlist
	lit
	var
	list

Finals:	Phase	140+20			; Just to remind me that 20!


Finalb:	Movsi	T1,(P2)			; Subtract 1 & set as the count
	Tlo	T1,2000			; Set 1b7 to remove reference bits
	Hrri	T1,1			; Begin at page 1
	Vclear	T1,			; All Gone!!! Now set them up!
	  Halt	.			; Huh?
	Movn	T1,P2			; Get count as -n
	Movss	T1			; Now swap
	Hrri	T1,141			; Begin with first page (must b one)

Finall:	Skipn	T3,(T1)			; Do we have a page?
	  Jrst	Paged			; Not any more!
	Movei	T2,-140(T1)		; Process page #
	Hrli	T2,(2b7!1b17)		; Set C-o-W & 1 page
	Move	[.Chmfp,,chan]		; Get ready!
	Chanio	T2			; Create page! (read from file)
	  Halt	.
	Hrli	T2,2001			; Set Add to working set bit
	Move	[.Wsrng,,T2]		; Setup funtion code
	Wsctl				; Add it!
	  Halt	.
Paged:	Aobjn	T1,Finall		; Loop on pages that were in core

; Now do page 0

Page0:	Movsi	T4,(1b7!1b17)		; For Vclear! page 0
	Move	T3,140			; Page # in file
	Movsi	T2,(2b7!1b17)		; Set C-o-W & 1 page for page 0
	Skipn	P3			; Don't remap if no high-seg
	  Jrst	Pager			; .
	 Remap	P3,
	  Halt	.
Pager:	Move	T1,[Pounce,,P1]		; Begin here!
	Blt	T1,17			; Copy all!
	Move	T1,[.Wsrng,,T2]		; Working set stuff!
	Move	[.Chmfp,,chan]		; Get ready!
	Jrst	P1

	lit
	var

Pounce:
	Dephase
	Phase	P1
	Vclear	T2,			; Clear page 0!
	  Halt	.
	Chanio	T2			; Create page! (read from file)
	  Halt	.
	Setmm	140			; Usually here! Ref to make copy!
	Move	T1,.Jbsa		; Start address!
	Jrst	(T1)			; Bye!
	12
	13
	14
	15
	16
	16
	Dephase

Finalz==.-Finals
	SUBTTL	DATA AREAS FOR DIRECTORY LOOKUPS & FILE LOOKUPS

Errmap:	Halt	.
Errwsc:	Halt	.
Errvcr:	Halt	.
Errclr:	Halt	.
Errexe:	Halt	.

DIRECT:	Exp	35
	Z
	Z
	Sixbit	/EXE/
	BLOCK	36-4		;SETUP BLOCK FOR DIRECTORIES

OPNBLK:	17				;SET MODE DUMP
DEVBLK:	SIXBIT	/DSK/			;SIXBIT/DSK/
	XWD	0,0			;BUFFER SPACE

Offset:	Block	1
Pages:	Block	1
Hghpag:	Block	1
Jbcor:	Block	1
Jbhrl:	Block	1
Base:	Block	20

PDL:	BLOCK	100			;SETUP PDL LIST

	END	Runexe
