        SUBROUTINE MTTR(SDAT,DUP,TIM1,TUP,ELM,HOUR)
C
C       SUBROUTINE TO CALCULATE ELAPSED TIME OF A TICKET
C
        INTEGER SDAT,TIM1,TUP,DUP,EH,EM,SH,SM
        INTEGER NDUP,NTUP
        REAL HOUR,ELM
C
        IF (ELM.GT.0) GOTO 105
        IF (DUP.GT.0) GOTO 50
        CALL RTIM(NTUP,NDUP)
        DECODE(5,100,NTUP)EH,EM
        GOTO 75

50      NDUP=DUP
        DECODE(5,100,TUP)EH,EM
100     FORMAT(I2,1X,I2)
75      DECODE(5,100,TIM1)SH,SM
        IF (NDUP.GT.SDAT) GOTO 120
        IF (EH.GT.SH) ELM=(60-SM)+EM+((EH-SH)*60)-60
        IF (EH.EQ.SH) ELM=EM-SM
        IF ((EH.EQ.SH).AND.(EM.EQ.SM)) ELM=1
        IF (ELM.LT.6) ELM=6
105     HOUR=ELM/60
        RETURN

120	ELM=(((NDUP-SDAT)-1)*1440)+(EH*60)+EM+((23-SH)*60)+(60-SM)
        IF (ELM.LT.0) ELM=0
125     HOUR=ELM/60
        RETURN

        END
	SUBROUTINE MOTRAC(TOT1)
C
C       SUBROUTINE TO MOVE BASE6 TO BASE7
C
        INTEGER TOT1,I,TNUM,SDAT,TIM1,NDAT,NTIM,RS,STAT
        INTEGER MAINT,SVER,COC,ZONE,IERT,IERC,TOT2
        REAL ELM,AELM
	DOUBLE PRECISION NET
C
	TYPE 55
55      FORMAT(/1X,'MOVING BASE6 TO BASE7... STANDBY',/)
        TOT2=TOT1
        CALL DBERR($190,IERT,IERC,0)
100     DO 200 I=1,TOT1
        TYPE 105,I
105     FORMAT('+',1X,I4,$)
        CALL DBGREC($200,I)
        CALL DBVAL(1,TNUM,2,SDAT,3,TIM1,4,NDAT,5,NTIM,6,RS,
     1  7,STAT,8,MAINT,9,ELM,10,NET,11,SVER,12,PROB,13,COC,14,WHO,15,
     2  LO,16,HO,17,ZONE,18,AELM)
        CALL DBSET(2)
        CALL DBADD(1,TNUM,2,SDAT,3,TIM1,4,NDAT,5,NTIM,6,RS,
     1  7,STAT,8,MAINT,9,ELM,10,NET,11,SVER,12,PROB,13,COC,14,WHO,15,
     2  LO,16,HO,17,ZONE,18,AELM)
        CALL DBSET(1)
        CALL DBFIND('RS','GE',8)
        GOTO 200
190     IF (IERT.EQ.7) GOTO 197
        TYPE 192,I,NUMBER,TNUM
192     FORMAT(3X,'ERROR OCCURRED WHILE TRANSFERING TICKET ',I8,/1X,
     1  'THIS WAR RECORD NUM= ',I4,' OF ',I4,' PLEASE REPORT THIS !',/)
        TYPE 150,IERT,IERC
150     FORMAT(/1X,'TYPE ',I4,'  CODE ',I4)
        RETURN
197     TYPE 198
198     FORMAT(1X,'STANDBY FOR BUSY...')
        CALL WAIT(8.0)
        GOTO 100
200     CONTINUE
        CALL DBSET(1)
        CALL DBUPD(-1)
        CALL DBFIND('RS','GE',8)
        DO 220 I=1,TOT2
        CALL DBGREC($220,I)
        CALL DBDEL
220     CONTINUE
        RETURN

        END
        SUBROUTINE GTIM(TIM1,SDAT,LIC)
C
C       ROUTINE TO INPUT THE TIME IN XX:YY FORMAT AND THEN SEE
C       IF THE INPUT IS EMPTY. IF IT IS EMPTY THEN CALL THE TIME
C       FROM 1022 AND USE THAT AS THE OFFICAL TIME. THE TIME WILL
C       BE CALLED FROM 1022 ANYWAY TO CHECK IF THE TIME YOU ENTER
C       IS AHEAD OF THE CURRENT TIME. IF IT IS THEN YOU WILL HAVE 
C       THE CHANCE TO RECORRECT OR HAVE THE PROGRAM ASSUME THAT
C       YOU HAVE CHANGED DAYS (PASSED THE 24:00 MARK).
C
        INTEGER TIM1,TTIM,H1,H2,M1,M2,SDAT
        INTEGER C1,C2,C3,C4,C5,LIC
        INTEGER NDAT
C
	CALL RTIM(TIM1,SDAT)
        IF (LIC.EQ.0) GOTO 30
12      TYPE 15,TIM1
15      FORMAT(1X,'ENTER TIME OR C.R. FOR ',A5,' GMT : ',$)
        ACCEPT 20,TTIM
20      FORMAT(A5)
        IF (TTIM.NE.'     ') GOTO 50
25      FORMAT(A1,A1,A1,A1,A1)
30      CONTINUE
        RETURN

50      DECODE(5,25,TTIM)C1,C2,C3,C4,C5
        IF (C3.NE.':') GOTO 12
        IF ((C1.LT.'0').OR.(C1.GT.'2')) GOTO 12
        IF ((C2.LT.'0').OR.(C2.GT.'9')) GOTO 12
        IF ((C4.LT.'0').OR.(C4.GT.'5')) GOTO 12
        IF ((C5.LT.'0').OR.(C5.GT.'9')) GOTO 12
        DECODE(5,55,TIM1)H1,M1
55      FORMAT(I2,1X,I2)
        DECODE(5,55,TTIM)H2,M2
        IF (H2.GT.H1) SDAT=SDAT-1
        TIM1=TTIM
        RETURN

        END
        SUBROUTINE RTIM(TIM1,SDAT)
C
C       ROUTINE TO PULL UP THE DATE REGARDLESS OF TIME ZONE
C
        INTEGER IA1,IA2,IA3,IA4,IA5,IA6,TIM1,SDAT

        CALL FGMT(IA1,IA2,IA3,IA4,IA5,IA6)
        IF (IA5.GT.9) ENCODE(5,50,TIM1)IA4,IA5
        IF (IA5.LT.10)ENCODE(5,52,TIM1)IA4,IA5
52      FORMAT(I2,2H:0,I1)
50      FORMAT(I2,1H:,I2)
        IA3=IA3+1900
        CALL DBDATN(SDAT,IA1,IA2,IA3)
        RETURN

        END
        SUBROUTINE VDIS(V4,V6,ELM)
C
C       ROUTINE TO CHECK ELM MINUS V6 ... UNLESS V6*60 IS MORE THAN
C       ELM. WE ALSO CLEAR OUT V4 WILL WE ARE AT IT.
C
        INTEGER V4,V6
        REAL ELM
C
	IF (ELM.GT.V6*60) GOTO 938
        IF (V6*60-ELM.LT.60) V6=V6-1
        IF (V6*60-ELM.GE.60) V6=V6-(((V6*60-ELM)/60)+1)
938     V4=0
        ELM=ELM-V6*60
        RETURN

        END
        SUBROUTINE GTHRE(OUT,IN,Z)
C
C***********************
C
C       ROUTINE TO GET INFO FOR PROFILE
C
C***********************
C
        INTEGER OUT(3),IN(4),Z,INOLD(4)

        IF(Z.NE.7) GOTO 100
        INOLD(1)=IN(1)
        INOLD(2)=IN(2)
        INOLD(3)=IN(3)
        INOLD(4)=IN(4)
        TYPE 10,OUT,IN
10      FORMAT(/1X,'THE CURRENT VALUE FOR ',3A5,' IS ',4A5,/1X,
     1  'TYPE THE NEW VALUE OR C.R. FOR NO CHANGE',/1X)
100     TYPE 105,OUT
105     FORMAT(1H+,3A5,2H :,T20,$)
        ACCEPT 110,IN
110     FORMAT(4A5)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(4)=INOLD(4)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(2)=INOLD(2)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(3)=INOLD(3)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(1)=INOLD(1)
        IF (Z.EQ.7) RETURN
        IF (IN(1).NE.'     ') Z=2
        RETURN

        END
        SUBROUTINE GTWO(OUT,IN,Z,I)
C
C************************
C
C       GET INPUT FROM 2A5 OUTPUT
C
C************************
C
        INTEGER OUT(2),IN(4),Z,I,INOLD(4)

        IF(Z.NE.7) GOTO 100
        INOLD(1)=IN(1)
        INOLD(2)=IN(2)
        INOLD(3)=IN(3)
        INOLD(4)=IN(4)
        TYPE 10,OUT,IN
10      FORMAT(/1X,'THE CURRENT VALUE FOR ',2A5,' IS ',4A5,/1X,
     1  'TYPE THE NEW VALUE OR C.R. FOR NO CHANGE',/1X)
100     TYPE 105,OUT
105     FORMAT(1H+,2A5,2H :,T20,$)
        ACCEPT 110,IN
110     FORMAT(4A5)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(4)=INOLD(4)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(2)=INOLD(2)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(3)=INOLD(3)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(1)=INOLD(1)
        IF (Z.EQ.7) GOTO 115
        IF (IN(1).NE.'     ') Z=2
        IF ((IN(1).NE.'     ').AND.(I.EQ.2))CALL UPCASE(IN)
        IF(IN(1).EQ.'     ') GOTO 100
115     RETURN

        END
        SUBROUTINE GONE(OUT,IN,Z)
C
C****************
C
C       ROUTINE TO GET ON ITEM
C
C****************
C
        INTEGER OUT,IN,Z,INOLD

        IF(Z.NE.7) GOTO 100
        INOLD=IN
        TYPE 10,OUT,IN
10      FORMAT(/1X,'THE CURRENT VALUE FOR ',A5,' IS ',I8,/1X,
     1  'TYPE THE NEW VALUE OR C.R. FOR NO CHANGE',/1X)
100     TYPE 105,OUT
105     FORMAT(1H+,A5,2H :,T20,$)
        ACCEPT 110,IN
110     FORMAT(I8)
        IF((Z.EQ.7).AND.(IN.EQ.0)) IN=INOLD
        IF (Z.EQ.7) RETURN
        IF (IN.GT.0) Z=2
        RETURN

        END
        SUBROUTINE GPROD(P,Z)
C
C**************************
C
C       GET PRODUCT NUMBER
C
C**************************
C
        INTEGER NTYPE,P,Z,I
	COMMON /NTYPE/NTYPE

	I=1
100	TYPE 101
101	FORMAT(1H+,'ENTER THE PRODUCT CODE  OR A C.R. FOR ',
     1  'HELP : ',$)
        ACCEPT 110,P
110     FORMAT(I2)
        IF ((P.GE.1).AND.(P.LE.NTYPE)) GOTO 120
        IF ((P.EQ.0).OR.(I.EQ.2)) CALL HPROD
        IF (I.GT.2) TYPE 111
111     FORMAT(' YOU MUST ENTER A NUMBER GREATER THAN ZERO ')
        I=I+1
        GOTO 100
120     IF (Z.EQ.7) RETURN
        Z=2
        RETURN

        END
        SUBROUTINE MPGPRO(P,Z,PROD)

        INTEGER NTYPE,P,Z,PROD
	COMMON /NTYPE/NTYPE

100     TYPE 101,PROD
101     FORMAT(/1X,'PRODUCT CODE = ',A5)
	TYPE 102
102	FORMAT(/1X,'ENTER THE PRODUCT CODE  OR A  -1  FOR ',
     1  'HELP OR C.R. FOR NO CHANGE : ',$)
        ACCEPT 110,P
110     FORMAT(I2)
        IF ((P.GE.1).AND.(P.LE.NTYPE)) RETURN
        IF (P.EQ.0) RETURN
        IF (P.EQ.-1) CALL HPROD
        GOTO 100

        END
        SUBROUTINE GRGN(I,P,Z)
C
C*******************************
C
C       ROUTINE TO GET REGIONS FOR RELATIONAL DATA BASE
C
C*******************************
C
        INTEGER I,P,Z,NATTN
	COMMON /NATTN/NATTN

100     IF (I.EQ.1)TYPE 105
        IF (I.EQ.2)TYPE 110
        ACCEPT 115,P
105     FORMAT(1X,'ENTER THE SOFTWARE DISTRICT NUMBER OR C.R. FOR ',
     1  'HELP : ',$)
110     FORMAT(1X,'ENTER THE HARDWARE DISTRICT SERVING THIS INTERFACE ',
     1  'OR C.R. FOR HELP : ',$)
115     FORMAT(I8)
        IF ((P.GE.1).AND.(P.LE.NATTN)) GOTO 150
        IF (P.EQ.0) CALL HREFR
        GOTO 100
150     Z=2
        RETURN

        END
        SUBROUTINE MPGRGN(I,P,Z,RGN)

        INTEGER I,P,Z,NATTN,RGN
	DOUBLE PRECISION SWHW(2)
	COMMON /NATTN/NATTN
	DATA (SWHW(K),K=1,2)/'SOFTWARE','HARDWARE'/

100	TYPE 101,SWHW(I),RGN
101     FORMAT(/1X,A10,'DISTRICT = ',A5)
	TYPE 102,SWHW(I)
102	FORMAT(1X,'ENTER THE ',A10,'DISTRICT SERVING THIS INTERFACE ',
     1  'OR  -1  FOR HELP OR C.R. FOR NO CHANGE : ',$)
        ACCEPT 110,P
110     FORMAT(I8)
        IF ((P.GE.1).AND.(P.LE.NATTN)) RETURN
        IF (P.EQ.-1) CALL HREFR
        IF (P.EQ.0) RETURN
        GOTO 100

        END
        SUBROUTINE GTHR3(OUT,IN,Z,I)

        INTEGER OUT(3),IN(3),Z,I,INOLD(3)

        IF(Z.NE.7) GOTO 100
        INOLD(1)=IN(1)
        INOLD(2)=IN(2)
        INOLD(3)=IN(3)
        TYPE 10,OUT,IN
10      FORMAT(/1X,'THE CURRENT VALUE FOR ',3A5,' IS ',3A5,/1X,
     1  'TYPE THE NEW VALUE OR C.R. FOR NO CHANGE',/1X)
100     TYPE 105,OUT
105     FORMAT(1H+,3A5,2H :,T20,$)
        ACCEPT 110,IN
110     FORMAT(3A5)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(3)=INOLD(3)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(2)=INOLD(2)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(1)=INOLD(1)
        IF (Z.EQ.7) GOTO 114
        IF (IN(1).NE.'     ') Z=2
114     IF((IN(1).NE.'     ').AND.(I.EQ.2))CALL UPCAS3(IN)
        IF((I.EQ.1).OR.((I.EQ.2).AND.(IN(1).NE.'     '))) GOTO 120
        TYPE 115
115     FORMAT(/1X,'THE CUSTOMER NAME MAY NOT BE LEFT BLANK!',/1X,
     1  'YOU MUST ENTER SOMETHING',/)
        GOTO 100
120     RETURN

        END
        SUBROUTINE GTW1(OUT,IN,Z)

        INTEGER OUT(2),IN,Z,INOLD

        IF(Z.NE.7) GOTO 100
        INOLD=IN
        TYPE 10,OUT,IN
10      FORMAT(/1X,'THE CURRENT VALUE FOR ',2A5,' IS ',A5,/1X,
     1  'TYPE THE NEW VALUE OR C.R. FOR NO CHANGE',/1X)
100     TYPE 105,OUT
105     FORMAT(1H+,2A5,2H :,T20,$)
        ACCEPT 110,IN
110     FORMAT(A5)
        IF((Z.EQ.7).AND.(IN.EQ.'     ')) IN=INOLD
        IF (Z.EQ.7) RETURN
        IF (IN.NE.'     ') Z=2
        RETURN

        END
        SUBROUTINE G1NE(OUT,IN,Z)

        INTEGER OUT,IN,Z,INOLD

        IF(Z.NE.7) GOTO 100
        INOLD=IN
        TYPE 10,OUT,IN
10      FORMAT(/1X,'THE CURRENT VALUE FOR ',A5,' IS ',A5,/1X,
     1  'TYPE THE NEW VALUE OR C.R. FOR NO CHANGE',/1X)
100     TYPE 105,OUT
105     FORMAT(1H+,A5,2H :,T20,$)
        ACCEPT 115,IN
115     FORMAT(A5)
        IF((Z.EQ.7).AND.(IN.EQ.'     ')) IN=INOLD
        IF (Z.EQ.7) RETURN
        IF (IN.NE.'  ') Z=2
        RETURN

        END
        SUBROUTINE GTW2(OUT,IN,Z)

        INTEGER OUT(2),IN,Z

100     TYPE 105
105     FORMAT('+PRIMARY ...1=NO, 2=YES : ',$)
        ACCEPT 110,IN
110     FORMAT(I8)
        IF (IN.GT.0) Z=2
        RETURN

        END
        SUBROUTINE GTW3(OUT,IN,Z)

        INTEGER OUT(2),IN,Z,INOLD

        IF(Z.NE.7) GOTO 100
        INOLD=IN
        TYPE 10,OUT,IN
10      FORMAT(/1X,'THE CURRENT VALUE FOR ',2A5,' IS ',I8,/1X,
     1  'TYPE THE NEW VALUE OR C.R. FOR NO CHANGE',/1X)
100     TYPE 105,OUT
105     FORMAT(1H+,2A5,2H :,T20,$)
        ACCEPT 110,IN
110     FORMAT(I8)
        IF((Z.EQ.7).AND.(IN.EQ.0)) IN=INOLD
        IF (Z.EQ.7) RETURN
        IF (IN.GT.0) Z=2
        RETURN

        END
        SUBROUTINE GPNUM(IN,OUT)
C
C       ROUTINE TO GET NUMBER
C
        INTEGER IN,OUT
	TYPE 105,IN
105     FORMAT(1H+,A5,T20,2H: ,$)
        ACCEPT 110,OUT
110     FORMAT(I6)
        RETURN

        END
        SUBROUTINE GZONE(IN,Z)
C
C       SUBROUTINE TO GET ZONE FOR HARDWARE
C
        INTEGER Z,IN

90      TYPE 100
100     FORMAT(1X,'ENTER HARDWARE ZONE (DISTANCE TO THE NEAREST F.E.',
     1  /1X,'OFFICE',/2X,'ZONE 1  = ONSITE',/7X,'2  = 0 - 50 MILES',/7X,
     2  '3  = 51 - 150 MILES',/7X,'4  = GREATER THAN 150 MILES',/2X,
     3  'ENTER NUMBER : ',$)
        ACCEPT 105,IN
105     FORMAT(I1)
        IF ((IN.LT.0).OR.(IN.GT.4)) GOTO 90
        IF (Z.EQ.7) RETURN
        IF (IN.GT.0) Z=2
        RETURN

        END
        SUBROUTINE CSTAT(INFO,TRASH,Z,TNUM)
C
C       SUBROUTINE TO CHECK IF STATUS IS TYPED CORRECTLY
C
        INTEGER INFO(64),TRASH,Z,TNUM

        CALL TYPINF(INFO,4)
        TYPE 100,TNUM
100     FORMAT(/1X'IS THE STATUS CORRECT ? FOR TICKET #',I8,/,
     1  'A C.R. WILL WRITE IT TO THE DATA BASE, ANYTHING ELSE,',/
     2  2X,'WILL CAUSE YOU TO START OVER AGAIN : ',$)
        ACCEPT 110,TRASH
110     FORMAT(A1)
        RETURN

        END
        SUBROUTINE TOTELM(DOIT,ELM,HOUR,D)
C
C       SUB-ROUTINE TO DETERMINE ALL ELM'S
C
        INTEGER L,A,DOIT
        REAL D,B,ELM
C       ENCODE(5,10,L)DOIT
10      FORMAT(I5)
        HOUR=0
        ELM=0
        DO 200 A=1,DOIT
        CALL DBGREC($200,A)
        CALL DBVAL('ELM',B)
        ELM=ELM+B
200     CONTINUE
        ELM=ELM/DOIT
c       STDV=SQRT((E-C*C/DOIT)/(DOIT-1))
c       TYPE 205,STDV
205     FORMAT(/1X,'STANDARD DEV.   ',F40.20,/)
        HOUR=ELM/60
        RETURN

        END
        SUBROUTINE MTRAVE(D,ELD,ELH,RLM)
C
C       SUBROUTINE TO DETERMINE SPLIT OF MTTR
C
        INTEGER D,ELD,ELH,RLM

        IF (D.GT.1439) GOTO 100
        ELD=0
        ELH=D/60
        RLM=D-(ELH*60)
        RETURN

100     ELD=D/1440
        ELH=(D-(ELD*1440))/60
        RLM=D-((ELD*1440)+(ELH*60))
        RETURN

        END
        SUBROUTINE CDDWN
C
C       SUBROUTINE TO TAKE NORMAL DATE AND CHANGE TO 1022
C
        INTEGER DAT,SM,SD,SY

        TYPE 100
100     FORMAT(1X,'ENTER DATE MM/DD/YY : ',$)
        ACCEPT 105,SM,SD,SY
105     FORMAT(I2,1X,I2,1X,I4)
        CALL CDAT(SY)
        CALL DBDATN(DAT,SM,SD,SY)
        TYPE 110,DAT
110     FORMAT(1X,'THE 1022 FORMAT IS  ',I9)
        RETURN

        END
        SUBROUTINE CDAT(SY)
C
C       ROUTINE TO CHECK YEAR AND MAKE YEAR 4 PLACES.
C       IF IS 4 THEN MAKE TWO IF IS 2 THEN MAKE 4
C
        INTEGER SY
C
        IF (SY.GT.1800) SY=SY-1900
        IF (SY.LT.100) SY=SY+1900
        RETURN

        END
        SUBROUTINE CHATIM(SDAT,TIM1,DUP,TUP,NUMBER,I)
C
C       SUBROUTINE TO CHANGE TUP IF BAD
C
        INTEGER SDAT,TIM1,DUP,TUP,NUMBER,I,C

        TYPE 100
100     FORMAT(1X,'YOU CAN DO ONE OF THREE',/3X,'1= LEAVE ALONE',
     1  /3X'2= CHANGE',/3X,'3= EXIT PROGRAM')
        ACCEPT 105,C
105     FORMAT(I1)
        IF (C.EQ.1) RETURN
        IF (C.EQ.2) GOTO 200
        I=NUMBER
        RETURN

200     TYPE 205,SDAT,TIM1,DUP,TUP
205     FORMAT(1X,I9,2X,A5,5X,I9,2X,A5)
        ACCEPT 210,TUP
210     FORMAT(A5)
        ENCODE(11,215,TUP)TUP
215     FORMAT(I11)
        CALL DBCHNG(20,TUP)
        RETURN

        END
        SUBROUTINE PERIOD(NDAT,NDUP,SM,SD,SY,EM,ED,EY)
C
C       SUBROUTINE TO FIND BEGINNING PERIOD AND END PERIOD
C
        INTEGER NDAT,NDUP,SY,SM,SD,EY,EM,ED

        TYPE 100
100     FORMAT(1X,'ENTER START DATE : MM/DD/YYYY ? = ',$)
        ACCEPT 110,SM,SD,SY
110     FORMAT(I2,1X,I2,1X,I4)
        TYPE 120
120     FORMAT('+ENTER END DATE   : MM/DD/YYYY ? = ',$)
        ACCEPT 110,EM,ED,EY
        IF (EM.EQ.0) EY=2010
        CALL DBDATN(NDAT,SM,SD,SY)
        CALL DBDATN(NDUP,EM,ED,EY)
        SY=SY-1900
        EY=EY-1900
        RETURN

        END
        SUBROUTINE MOOPEN(TOT1)
C
C       SUBROUTINE TO MOVE BASE1 TO BASE4
C
        INTEGER TOT1,I,TNUM,SDAT,TIM1,RS,STAT
        INTEGER MAINT,SVER,PROD,WHO,TOT2
        INTEGER DISC(169),SCON(4),SITP(4),NODE,SLOT,HOST,CKT(4)
        INTEGER TRB(4),DUP,TUP,COC(2),CBY
        INTEGER RFON(4),RNAM(4),PRO,T40,F2,CCC,HQCC,ONUM(2),SRGN
        INTEGER HRGN,LOC(4),KHST,COV,COMMNT(4),CDAT,TCLSD,STH,EHR
        INTEGER PORT,CNAM(3),TECH(3),VER,V5,V6,V1,V2,V3,V4
        INTEGER BILL,ESC,F1,NT,HN,PROBL(2)
        REAL ELM
	DOUBLE PRECISION NET

	TYPE 45
45      FORMAT(/1X,'MOVING BASE1 TO BASE4... STANDBY',/)
	CALL DBERR($190,IERT,IERC,0)
        TOT2=TOT1
100     DO 200 I=1,TOT1
        TYPE 105,I
105     FORMAT('+',1X,I4,$)
        CALL DBGREC($200,I)
        CALL DBVAL(1,TNUM,2,PRO,3,T40,4,F2,5,SDAT,6,TIM1,7,RNAM,8,RFON,
     1  9,NET,10,WHO,11,RS,12,SCON,13,SITP,14,PROD,15,STAT,16,DISC,17,
     2  CCC,18,HQCC,19,ONUM,20,SRGN,21,HRGN,22,
     3  LOC,23,KHST,24,COV,25,COMMNT,26,CDAT,27,TCLSD,28,STH,29,EHR,
     4  30,PORT,31,CNAM,32,TECH,33,VER,34,V5,35,V6,36,V1,37,V2,38,V3,
     5  39,V4,40,NODE,41,SLOT,42,HOST,43,CKT,44,TRB,45,BILL,46,ESC,47,
     6  F1,48,NT,49,DUP,50,TUP,51,MAINT,52,SVER,53,HN,54,ELM,55,COC,
     7  56,CBY,57,PROBL)
        CALL DBSET(2)
        CALL DBADD(1,TNUM,2,PRO,3,T40,4,F2,5,SDAT,6,TIM1,7,RNAM,8,RFON,
     1  9,NET,10,WHO,11,RS,12,SCON,13,SITP,14,PROD,15,STAT,16,DISC,17,
     2  CCC,18,HQCC,19,ONUM,20,SRGN,21,HRGN,22,
     3  LOC,23,KHST,24,COV,25,COMMNT,26,CDAT,27,TCLSD,28,STH,29,EHR,
     4  30,PORT,31,CNAM,32,TECH,33,VER,34,V5,35,V6,36,V1,37,V2,38,V3,
     5  39,V4,40,NODE,41,SLOT,42,HOST,43,CKT,44,TRB,45,BILL,46,ESC,47,
     6  F1,48,NT,49,DUP,50,TUP,51,MAINT,52,SVER,53,HN,54,ELM,55,COC,
     7  56,CBY,57,PROBL)
        CALL DBSET(1)
        CALL DBFIND('RS','GE',8)
        GOTO 200
190     IF (IERT.EQ.7) GOTO 197
        IF (IERT.NE.3) RETURN
        CALL DBSET(1)
        CALL DBFIND(1,1,TNUM)
        CALL DBCHNG('RS',4)
        TOT2=TOT1-1
        CALL DBFIND('RS','GE',8)
        GOTO 200
197     TYPE 198
198     FORMAT(1X,'STANDBY.. FOR BUSY')
        CALL WAIT(8.0)
        GOTO 100
200     CONTINUE
        CALL DBSET(1)
        CALL DBFIND('RS','GE',8)
        DO 220 I=1,T        CALL DBGREC($220,I)
        CALL DBDEL
220     CONTINUE
        RETURN

        END
        SUBROUTINE MOSTAT(TOT1)
C
C       SUBROUTINE TO MOVE BASE2 TO BASE5
C
        INTEGER TOT1,TOT2,I,TNUM,SDAT,TIM1,RS,STAT
        INTEGER INFO(64),INT,UNAM(3),ORDER

40      TYPE 45
45      FORMAT(/1X,'MOVING BASE2 TO BASE5... STANDBY',/)
50      CALL DBERR($190,IERT,IERC,-1)
        TOT2=TOT1
100     DO 200 I=1,TOT1
        TYPE 105,I
105     FORMAT('+',1X,I4,$)
        CALL DBGREC($200,I)
        CALL DBVAL(1,TNUM,2,SDAT,3,TIM1,4,INT,5,RS,6,STAT,7,INFO,
     1  8,UNAM,9,ORDER)
        CALL DBSET(2)
        CALL DBADD(1,TNUM,2,SDAT,3,TIM1,4,INT,5,RS,6,STAT,7,INFO,
     1  8,UNAM,9,ORDER)
        CALL DBSET(1)
        CALL DBFIND('RS',1,8)
        GOTO 200

190     IF (IERT.EQ.7) GOTO 197
        TYPE 192,I,NUMBER,TNUM
192     FORMAT(3X,'ERROR OCCURRED WHILE TRANSFERING TICKET  ',I8,
     1  '. THIS WAS RECORD NUMBER',/3X,I4,' OF ',I4,' PLEASE REPORT '
     2  'THIS.',/)
        RETURN

197     TYPE 198
198     FORMAT(1X,'STANDBY... FOR BUSY')
        CALL WAIT(8.0)
        GOTO 100

200     CONTINUE
        CALL DBSET(1)
        CALL DBFIND('RS',1,8)
        DO 220 I=1,TOT2
        CALL DBGREC($220,I)
        CALL DBDEL
220     CONTINUE
        RETURN

        END
        SUBROUTINE GETIM(TUP,DUP)
C
C       ROUTINE TO INPUT THE TIM1 IN XX:YY FORMAT AND THEN SEE
C       IF THE INPUT IS EMPTY. IF IT IS EMPTY THEN CALL THE TIME
C       FROM 1022 AND USE THAT AS THE OFFICAL TIME. THE TIME WILL
C       BE CALLED FROM 1022 ANYWAY TO CHECK IF THE TIME YOU ENTER
C       IS AHEAD OF THE CURRENT TIME. IF IT IS THEN YOU WILL HAVE 
C       THE CHANCE TO RECORRECT OR HAVE THE PROGRAM ASSUME THAT
C       YOU HAVE CHANGED DAYS (PASSED THE 24:00 MARK).
C
        INTEGER TTIM,H1,H2,M1,M2
        INTEGER C1,C2,C3,C4,C5,TUP,DUP
C
10      CALL RTIM(TUP,DUP)
        TYPE 15,TUP
15      FORMAT(1X,'ENTER TIME UP  OR A C.R. FOR ',A5,' GMT: ',$)
        ACCEPT 20,TTIM
20      FORMAT(A5)
        IF (TTIM.NE.'     ') GOTO 50
25      FORMAT(A1,A1,A1,A1,A1)
        RETURN

50      DECODE(5,25,TTIM)C1,C2,C3,C4,C5
        IF (C3.NE.':') GOTO 10
        IF ((C1.LT.'0').OR.(C1.GT.'2')) GOTO 10
        IF ((C2.LT.'0').OR.(C2.GT.'9')) GOTO 10
        IF ((C4.LT.'0').OR.(C4.GT.'5')) GOTO 10
        IF ((C5.LT.'0').OR.(C5.GT.'9')) GOTO 10
        DECODE(5,55,TUP)H1,M1
55      FORMAT(I2,1X,I2)
        DECODE(5,55,TTIM)H2,M2
        IF (H2.GT.H1) DUP=DUP-1
        TUP=TTIM
        RETURN
        END
        SUBROUTINE GETDES(HQCC,ONUM)
C
C       SUBROUTINE TO INPUT THE CLOSE OUT CODE FOR HQTECH
C
        INTEGER HQCC,ONUM(2)

100     TYPE 105
C105     FORMAT(2X,'ENTER THE DE-ESCALATION CODE FOR THIS TROUBLE ',
C    1  'TICKET'//5X'SOFTWARE',T30,'HARDWARE'/5X'--------',T30,'----',
C    2  '----'//5X'1 SOFTWARE REPAIR',T30,'50 MODEM - ASYNC'/5X'2 ',
C    3  'CUSTOM CODE',T30,'51 MODEM - SYNC'/5X'3 RELEASE UPGRADE',T30,
C    4  '52 DSU'/5X'4 UNABLE TO REPRODUCE',T30,'54 DISK DRIVE'/5X,
C    5  'NON-TYMNET PROBLEM',T30,'55 TAPE DRIVE'/5X'6 DOCUMENTATION',
C    6  T30,'56 ENGINE'/5X'7 CONFIGURATION ERROR',T30,'57 MINI ENG.',
C    7  /5X'8 UNSUPPORTED CONFIG.',T30,'58 MICRO ENG.'/5X'9 PIR ',
C    8  'REQUIRED',T30,'59 HDLC MICRO ENG.'/4X'10 SOURCE CHANGE AND ',
C    9  'NSR REQ.',T30,'60 PICO ENG.'/4X'11 REGEN & RELOAD',T30,'61 ',
C    A  'T.S.I.'/4X'13 SOFTWARE RETROFIT',T30,'63 TELCO ISSUE'/,T30,
C    B  '64 CUSTOMER PROVIDED EQUIP. PROB.'/2X,'ENTER THE NUMBER : ',$)
105     FORMAT(2X,'ENTER THE DE-ESCALATION CODE FOR THIS TROUBLE ',
     1  'TICKET',//5X,'1 = ECO/FCO/EAR/NSR/SOURCE CHANGE',/5X,
     2  '2 = TRAP OR DIAGNOSTIC PATCH PROVIDED',/5X,
     3  '3 = DUMP OR TRACE REQUESTED',/5X,
     4  '4 = MORE INFORMATION REQUESTED',/5X,
     5  '5 = TEST OR DIAGNOSTIC REQUESTED',/5X,
     6  '6 = TEST EQUIPMENT REQUESTED',/5X,
     7  '7 = WAITING FOR HARDWARE',/5X,
     8  '8 = RESOLVED (BE SURE TO ENTER A RESOLUTION CODE)',//2X,
     9  'ENTER THE NUMBER : ',$)
        ACCEPT 110,HQCC
110     FORMAT(I2)
C       IF ((HQCC.GE.1).AND.(HQCC.LE.2)) GOTO 115
C       IF ((HQCC.GE.3).AND.(HQCC.LE.13)) RETURN
C       IF ((HQCC.GE.50).AND.(HQCC.LE.64)) RETURN
        IF (HQCC.EQ.2) GOTO 115
        IF (HQCC.EQ.1) RETURN
        IF ((HQCC.GE.3).AND.(HQCC.LE.8)) RETURN
        GOTO 100

115     TYPE 116
116     FORMAT('+ENTER THE PATCH FILE NAME : ',$)
        ACCEPT 118,ONUM
118     FORMAT(2A5)
        IF (ONUM(1).EQ.'     ') GOTO 115
        RETURN

        END
        SUBROUTINE GETEW(EWC)
C
c       routine to get the end of work codes from the field person
c
        INTEGER EWC
C
50      TYPE 100
100     FORMAT(1X,'ENDING WORK CODES ARE ...'/2X,' 1. t/o hardware',/3x,
     1  '2. t/o software',/3x,'3. ticket with higher priority',/3x,
     2  '4. waiting for customer call/info',/3x,'5. could not duplicate',
     3  /3X,'6. customer hardware',/3x,'7. customer software',/3x,
     4  '8. customer error',/3x,'9. dump and reload',/2x,'10. regen ',
     5  '- no change',/2x,'11. parameter change',/2x,'12. out of office',
     6  '(home, lunch, etc)',/2x,'13. waiting for info (internal)',/1x,
     7 'ENTER SELECTION : ',$)
          ACCEPT 120,EWC
120     FORMAT(I2)
          IF ((EWC.GE.1).AND.(EWC.LE.13)) RETURN
          GOTO 50

          END
        SUBROUTINE CHFLD(TNUM,I,TIM1,TUP,TCLSD,Z)
C
C       SUBROUTINE TO FIX TIME FIELDS IN THE TICKET SYSTEM
C
        INTEGER TNUM,I,TIM1,TUP,TCLSD,Z,M1,M2,M3,M4,M5

100     Z=0
        TYPE 102,I,TNUM,TIM1,TUP,TCLSD
        IF (TUP.EQ.0) GOTO 131
        DECODE(5,105,TUP)M1,M2,M3,M4,M5
105     FORMAT(A1,A1,A1,A1,A1)
102     FORMAT(2X,I5,2X,I6,2X,A5,3X,A5,3X,A5)
        IF ((M1.GE.'0').AND.(M1.LE.'2')) GOTO 110
        Z=1
        M1='0'
110     IF ((M2.GE.'0').AND.(M2.LE.'9')) GOTO 115
        Z=1
        M2='0'
115     IF (M3.NE.':') GOTO 120
        Z=1
        M3=':'
120     IF ((M4.GE.'0').AND.(M4.LE.'5')) GOTO 125
        Z=1
        M4='0'
125     IF ((M5.GE.'0').AND.(M5.LE.'9')) GOTO 130
        Z=1
        M5='0'
130     IF (Z.EQ.1) ENCODE(5,105,TUP)M1,M2,M3,M4,M5
131     IF (TIM1.EQ.0) GOTO 156
        DECODE(5,105,TIM1)M1,M2,M3,M4,M5
        IF ((M1.GE.'0').AND.(M1.LE.'2')) GOTO 135
        Z=1
        M1='0'
135     IF ((M2.GE.'0').AND.(M2.LE.'9')) GOTO 140
        Z=1
        M2='0'
140     IF (M3.NE.':') GOTO 145
        Z=1
        M3=':'
145     IF ((M4.GE.'0').AND.(M4.LE.'5')) GOTO 150
        Z=1
        M4='0'
150     IF ((M5.GE.'0').AND.(M5.LE.'9')) GOTO 155
        Z=1
        M5='0'
155     IF (Z.EQ.1) ENCODE(5,105,TIM1)M1,M2,M3,M4,M5
156     IF (TCLSD.EQ.0) GOTO 181
        DECODE(5,105,TCLSD)M1,M2,M3,M4,M5
        IF ((M1.GE.'0').AND.(M1.LE.'2')) GOTO 160
        Z=1
        M1='0'
160     IF ((M2.GE.'0').AND.(M2.LE.'9')) GOTO 165
        Z=1
        M2='0'
165     IF (M3.NE.':') GOTO 170
        Z=1
        M3=':'
170     IF ((M4.GE.'0').AND.(M4.LE.'5')) GOTO 175
        Z=1
        M4='0'
175     IF ((M5.GE.'0').AND.(M5.LE.'9')) GOTO 180
        Z=1
        M5='0'
180     IF (Z.EQ.1) ENCODE(5,105,TCLSD)M1,M2,M3,M4,M5
181     RETURN

        END
        SUBROUTINE MOCLBK(TOT1)
C
C       SUBROUTINE TO MOVE CALBAK LOG TO "OCALBK"
C
        INTEGER TOT1,TOT2,I,TNUM,SDAT,TIM1,DUP,TUP,RS,WHO
        INTEGER RNAM(4),CBY,SITP(4),SCON(4),CBAK(4),CHEX

	TYPE 45
45      FORMAT(/1X,'MOVING CALBAK TO OCALBK... STANDBY',/)
	CALL DBERR($190,IERT,IERC,-1)
        TOT2=TOT1
100     DO 200 I=1,TOT1
        TYPE 105,I
105     FORMAT('+',1X,I4,$)
        CALL DBGREC($200,I)
        CALL DBVAL(1,TNUM,2,SDAT,3,TIM1,4,RNAM,5,INT,6,RS,7,SCON,
     1  8,SITP,9,DUP,10,TUP,11,CBY,12,CBAK,13,CHEX)
        CALL DBSET(2)
        CALL DBADD(1,TNUM,2,SDAT,3,TIM1,4,RNAM,5,INT,6,RS,7,SCON,
     1  8,SITP,9,DUP,10,TUP,11,CBY,12,CBAK,13,CHEX)
        CALL DBSET(1)
        CALL DBFIND('RS','GE',8)
        GOTO 200

190     IF (IERT.EQ.7) GOTO 197
        IF (IERT.EQ.3) RETURN
        CALL DBSET(1)
        CALL DBFIND(1,1,TNUM)
        CALL DBCHNG('RS',4)
        TOT2=TOT1-1
        CALL DBFIND('RS','GE',8)
        GOTO 200

197     TYPE 198
198     FORMAT(1X,'STANDBY... FOR BUSY')
        CALL WAIT(8.0)
        GOTO 100

200     CONTINUE
        CALL DBSET(1)
        CALL DBFIND('RS','GE',8)
        DO 220 I=1,TOT1
        CALL DBGREC($220,I)
        CALL DBDEL
220     CONTINUE
        RETURN

        END
        SUBROUTINE HREFR
C
C*************************************************
C
C       ROUTINE TO LIST THE REFERED HELP LIST
C
C*************************************************
C
	INTEGER ATTN,NATTN,I
	COMMON /NATTN/NATTN
	COMMON /ATTN/ATTN(170)

	TYPE 100
100	FORMAT(3X,'THE REFERRED GROUPS ARE...')
	TYPE 200,(I,ATTN(I),I=1,NATTN)
200	FORMAT(/1X,7(I3,'= ',A5,3X))
	TYPE 300
300	FORMAT(/1X)

        RETURN

        END
        SUBROUTINE HLP1(NNET,FLAG,SRT)
C
C*****************************************
C
C       PRINTS HELP LIST
C
C*****************************************
C
        INTEGER FLAG,SRT
	DOUBLE PRECISION NNET

        TYPE 79,NNET
79      FORMAT(25X,A10,' NETWORK TICKETS',/25X,'-------------------',
     1  '-------')
        IF ((FLAG.EQ.1).OR.(FLAG.EQ.-1)) TYPE 80
        IF ((FLAG.EQ.0).OR.(FLAG.GT.1)) TYPE 81
80      FORMAT(/5X,'CREATE',T30,'UPDATE',T55,'REPORTS',/5X,'------',
     1  T30,'------',T55,'-------',/5X,'A = ADD TICKET',T30,
     2  'S = UPDATE/CHANGE STATUS',T55,'F = CREATE A DISK FILE',/5X,
     3  'T = TRACK A TICKET',T30,'G = MODIFY ATTRIBUTES',T55,'K = ',
     4  'KNOW WHAT IS YOURS',/5X,'V = ADD QA MARKS',T30,'D = DEFER TIC',
     5  'KET',T55,'E = ESCALATE',/5X,'A1 = ADD CALL BACK',T30,'C = ',
     6  'CLOSE TICKET',T55,'                     '/5X,' TICKET',T30,
     7  '               '/5X,'-----------',T30,'             ',/5X,
     8  'L = LOOK AT A TICKET',/5X,
     9  'O = LIST OPEN TICKETS',/5X,'N = HISTORICAL TICKETS',T55,
     A  'MISCELLANEOUS',/5X,'                       ',T55,'-------',
     B  '------',/5X,'I = LIST CHART OF NETS',T55,'Q = QUIT PROGRAM',
     C  /5X,'7 = LIST UN-UPDATED TICKETS',T55,'5 = ALL OPEN TICKETS',
     D  /5X,'X = EXAMINE A TICKET',T55,'2 = LIST ESCALATED TICKETS',
     E  /5X,'1 = TICKETS BY PRODUCT',T55,'                      ',
     F  /5X'4 = TIC BY F.E. REGION',T55,'                          ')
81      FORMAT(/5X,'CREATE',T30,'UPDATE',T55,'REPORTS',/5X,'------',
     1  T30,'------',T55,'-------',
     2  /5X,'L = LOOK AT A TICKET',T30,
     3  'N = HISTORICAL DATA',T55,'O = LIST OPEN TICKETS',/5X,
     4  T30,'K = KNOW WHAT IS YOURS',T55,
     5  'Q = QUIT PROGRAM',/,T30,'G = CHANGE HEADER INFO',
     6  T55,'F = CREATE A FILE',/,
     7  T54,'AR = POST',
     8  ' ARRIVAL ON SITE',/,T54,'DP = DISPLAY PROFILE')
        TYPE 82
82      FORMAT(5X,'? = EXTENDED HELP LIST',T55,'9 = LIST LAST ',
     1  'STATUS TIME')
        IF (SRT.GE.1) TYPE 62
62      FORMAT(5X,'S = ADD STATUS TO TICKET',/)
        RETURN

        END
        SUBROUTINE HLP2(NNET,FLAG,SRT,XX)
C
C***********************************************
C
C       EXTENDED HELP LIST
C
C***********************************************
C
        INTEGER FLAG,SRT,XX
	DOUBLE PRECISION NNET

	TYPE 105,NNET
105     FORMAT(25X,A10,' NETWORK TICKETS',/25X,'-------------------',
     1  '-------',/)
        TYPE 110
110     FORMAT(/5X'THE FOLLOWING UPPER CASE COMMANDS ARE ALSO ',
     1  'AVAILABLE...',/,/5X'TIME = PRINTS LOCAL AND GMT',T50,
     2  'VER   = PRINTS VERSION OF PAPER',/5X,'( )   = PRINTS ',
     3  'PRIMARY HELP LIST',T50,'                       ')
        IF (XX.LT.0) TYPE 115
115     FORMAT(5X,'INT   = REENTER INITIALS',T50,'REOPE = REOPENS A ',
     1  'TICKET',/5X,'DELET = DELETES ANY TICKET #',T50,
     2  '                        ',/5X'        ',
     3  '                       ',T50,'Z     = RESETS TICKET #',
     4  /5X,'U     = MOVES TICKET TO CURRENT',T50,
     5  'V     = ENTER Q.A. POINTS',/5X,'        ',
     6  '                          ')
        RETURN

        END
        SUBROUTINE HLP3(FLAG,SRT,XX)
C
C********************************************
C
C       PRINTS PROGRAM UPDATES
C
C*******************************************
C
        INTEGER A,B,C,D

100     TYPE 101
101     FORMAT(/,/,/2X'JULY 19,1987    THE FOLLOWING CHANGES HAVE ',
     1  'BEEN MADE TO THE PROGRAM...',/3X,'1. REFORMATED DATA BASE',
     2  /,/)
        TYPE 102
102     FORMAT(/1X,'END OF CHANGES')
        RETURN

        END
        SUBROUTINE HLPNET
C
C**************************************
C
C       SUBROUTINE TO LIST THE NETWORK NAMES
C
C**************************************
C
        INTEGER I
	DOUBLE PRECISION VNET
	COMMON /VNET/VNET(60)

	TYPE 100
100	FORMAT(/1X,'NETWORK NUMBERS EQUAL...')
	TYPE 200,(I,VNET(I),I=1,60)
200	FORMAT(/3X,4(I3,' = ',A10,4X))
	TYPE 300
300	FORMAT(/1X)
        RETURN

        END
        SUBROUTINE HPROD
C       
C       SUBROUTINE TO LIST PRODUCT TYPES(7/30/91)
C
        INTEGER X,I,T
C
100     TYPE 2434
2434    FORMAT(/1X,'MISC.',T13,'LINES',T26,'INTERFACES',T52,
     1  'APPLICATIONS',/1X,'----------',T13,'----------',T26,
     2  '----------',T52,'------------',/1X,' 1 DIALUP',T13,
     3  '20 4.8',T26,' 3 BPS',T39,' 7 MSERVER',T52,'49 CFRS  ',T65,
     4  '69 UTIL',/1X,' 2 ATC',T13,'21 9.6',T26,' 5 MCP',T39,
     5  '32 TLNET',T52,'50 NETALERT',T65,'71 INTLS',/1X,' 4 PAP',
     6  T13,'22 14.4',T26,' 6 BDLC',T39,'35 SUPERV',T52,'52 CMS',
     7  T65,'75 CDM',/1X,' 9 SUN',T13,'23 19.2',T26,' 8 ISCS  ',
     8  T39,'36 ONTYME',T52,'53 ALC',T65,'76 CMF',/1X,'10 SWITCHER',
     9  T13,'24 56KB',T26,'11 XCOM',T39,'37 PROBE',T52,'54 INTDU',
     A  T65,'77 CPC',/1X,'12 ISIS',T13,'25 T-1',T26,'13 PBH',T39,
     B  '38 UN2',T52,'56 CMH',T65,'78 CPPP',/1X,'27 SYNCDBU',T13,
     C  '26 HW-OCL',T26,'14 PBT',T39,'39 TII',T52,'57     ',T65,
     D  '79 NAD',/1X,'30 VALID',T13,'28 XDIAL  ',T26,'15 SNA',T39,
     E  '40 EDI ',T52,'58 ELF',T65,'80 CPAS')
        TYPE 2435
2435    FORMAT(1X,'31 PROJECT',T13,'29 OUTDIAL',T26,'16 BBXS',
     1  T39,'41 EMSGA ',T52,'59 HSA',T65,'81 BITS',/1X,
     2  '33 PERIF',T13,'          ',T26,'17 X.75',T39,'42 CMTI',
     3  T52,'61 MUX',T65,'82 SVR  ',/1X,'34 OEM',T13,'          ',
     4  T26,'18 X.PC',T39,'43 UTS',T52,'62 NCONSOLE',T65,
     5  '83 SVP    ',/1X,'51 PICO',T13,'         ',T26,
     6  '19 ACOM  ',T39,'44 TMCS',T52,'63        ',T65,
     7  '84 SVC    ',/1X,'55 FRE   ',T13,'         ',T26,'65 TIIG',
     8  T39,'45 NEM',T52,'64 TDI',T65,'          ',/1X,'60 VIDEO',
     9  T13,'         ',T26,'70 SDLC',T39,'46 RAM',T52,
     A  '66 DIALCOM',T65,'86 PAPER  ',/1X,'72 TURBO',T13,'         ',
     B  T26,'73 PTI',T39,'47 NETVAL',T52,'67 F/SM',T65,
     C  '87     ',/1X,'88 FRAD',T13,'        ',T26,'74 PHR',T39,
     D  '48 DG    ',T52,'68 P/SM',T65,'91 ITS   ',/1X,
     E  '89 OTHER',T26,'90 CRDU',T39,'92 MFX  ',T52,'93 EZTYM',
     F  T65,/1X,'85 PADS  ',T26,'94 LEM',T39,'97 CMTU  ',/1X,
     G  '95 PXL  ',/1X,
     H  '96 NODE ',/1X)
        RETURN

        END
        SUBROUTINE CLOUT(CCC,TNUM)
C
        INTEGER CCC,I,J,K,L,M,N,PARTNO(4),SERNO(4),TNUM
        INTEGER PROJNO(4),MAIN
C
100     TYPE 105
105     FORMAT(' ENTER THE RESOLUTION CODE CATEGORY...',
     1  /5X,'1 = HARDWARE',/5X,'2 = SOFTWARE',
     2  /5X,'3 = OEM/MODEM',/5X,'4 = CUSTOMER INDUCED',/5X,
     3  '5 = TELCO/COMMON CARRIER',/5X,'6 = NETWORK CONFIGUR',
     4  'ATION/TOPOLOGY',
     5  /5X,'7 = POWER OUTAGE AT THE SITE',/5X,'8 = PROJECT',
     6  /5X,'9 = OTHER',/2X,'ENTER CHOICE... ? :',$)
        ACCEPT 110,CCC
110     FORMAT(I2)
        IF ((CCC.LT.1).OR.(CCC.GT.9)) GOTO 100
        CALL CCMENU(CCC,MAIN)
        IF(MAIN.EQ.1) GOTO 100
C       IF ((CCC.GT.9).AND.(CCC.LT.16)) GOTO 113
C       IF ((CCC.GT.29).AND.(CCC.LT.36)) GOTO 113
C       IF ((CCC.GT.79).AND.(CCC.LT.81)) GOTO 113
        GOTO 150

113     CALL DBERR($118,IERT,IERC,0)
        GOTO 116

118     IF (IERT.NE.7) TYPE 117
        TYPE 121,IERT,IERC
121     FORMAT(/1X,I3,4X,I3)
117     FORMAT(/1X,'SOMETHING WENT WRONG, THE PARTS DATABASE MAY ',
     1  'HAVE A PROBLEM.',/1X,'PLEASE NOTIFY NSSC')
        IF (IERT.NE.7) GOTO 150
        TYPE 115
115     FORMAT(/1X,'DATABASE BUSY.....WAITING')
        CALL WAIT(5.5)
116     CALL DBOPEN('PARTS')
        CALL DBUPD(-1)
119     TYPE 120
120     FORMAT(/1X,'ENTER PART NUMBER : ',$)
        ACCEPT 130,PARTNO
130     FORMAT(4A5)
        IF (PARTNO(1).EQ.'     ') GOTO 140
        TYPE 135
135     FORMAT(/1X,'ENTER THE SERIAL NUMBER : ',$)
        ACCEPT 130,SERNO
        TYPE 136
136     FORMAT(/1X,'ENTER THE PROJECT NUMBER : ',$)
        ACCEPT 130,PROJNO
        CALL DBADD(1,TNUM,2,PARTNO,3,SERNO,4,PROJNO)
        GOTO 119

140     CALL DBUPD(0)
        CALL DBCLOS
150     RETURN

        END
        SUBROUTINE CCMENU(CCC,MAIN)

        INTEGER CCC,MAIN,CHO,I

        MAIN=0
        I=0
2       FORMAT(/2X,'ENTER CHOICE... ? (-1 TO RETURN TO MAIN ',
     1  'RESOLUTION CODE MENU) : ',$)
        IF (CCC.EQ.1) GOTO 100
        IF (CCC.EQ.2) GOTO 200
        IF (CCC.EQ.3) GOTO 300
        IF (CCC.EQ.4) GOTO 400
        IF (CCC.EQ.5) GOTO 500
        IF (CCC.EQ.6) GOTO 600
        IF (CCC.EQ.7) GOTO 700
        IF (CCC.EQ.8) GOTO 800
        IF (CCC.EQ.9) GOTO 900
100     TYPE 110
110     FORMAT(/1X,'HARDWARE CATEGORY SUBMENU',/,/)
        TYPE 120
120     FORMAT(/5X,'10 = POWER SUPPLY',/5X,'11 = BOARD         ',
     1  /5X,'12 = CABLE         ',/5X,'13 = PERIPHERAL-DISK/TAPE ',
     2  'DRIVE',/5X,'14 = BACKPLANE/CHASSIS',/5X,'15 = SET-UP/',
     3  'INSTALLATION PROBLEM            ',/5X,'16 = REPLACED ENGINE',
     4  /5X)
        TYPE 2
        ACCEPT 125,CHO
125     FORMAT(I3)
        I=I+1
        IF (CHO.LT.0) GOTO 1049
        IF ((CHO.GT.9).AND.(CHO.LT.17)) GOTO 1050
        IF (I.GT.2) GOTO 1000
        GOTO 100

200     TYPE 210
210     FORMAT(/1X,'SOFTWARE CATEGORY SUBMENU',/,/)
        TYPE 220
220     FORMAT(/5X,'20 = CONFIG/PARAM CHANGE-NO VERSION CHANGE',
     1  /5X,'21 = UPGRADE TO NEW VERSION',/5X,'22 = BACK UP TO ',
     2  'OLDER VERSION',/5X,'23 = INSTALL KNOWN PATCH FIX',
     3  /5X,'24 = NEW PATCH/PATCH NSR SUBMITTED',/5X,
     4  '25 = UNSUPPORTED-FEATURE UNSUPPORTED BY PRODUCT',/5X,
     5  '26 = PIR REQUIRED',/5X,'27 = ANOMALY NSR SUBMITTED',/5X,
     6  '28 = MORE INFO REQUESTED',/5X,'29 = VENDOR SOFTWARE',/5X)
        TYPE 2
        ACCEPT 125,CHO
        I=I+1
        IF (CHO.LT.0) GOTO 1049
        IF ((CHO.GT.19).AND.(CHO.LT.30)) GOTO 1050
        IF (I.GT.2) GOTO 1000
        GOTO 200

300     TYPE 310
310     FORMAT(/1X,'OEM CATEGORY SUBMENU',/,/)
        TYPE 320
320     FORMAT(/5X,'30 = ASYNC MODEM',/5X,'31 = SYNC MODEM',/5X,
     1  '32 = DIGITAL MODEM',/5X,'33 = PAD-BT OWNED OR LEASED',/5X
     2  '34 = BRIDGE/ROUTER',/5X,'35 = SOFTWARE/CONFIGURATION',/5X,
     3  '36 = IPX FAILURE',/5X)
        TYPE 2
        ACCEPT 125,CHO
        I=I+1
        IF (CHO.LT.0) GOTO 1049
        IF ((CHO.GT.29).AND.(CHO.LT.37)) GOTO 1050
        IF (I.GT.2) GOTO 1000
        GOTO 300

400     TYPE 410
410     FORMAT(/1X,'CUSTOMER CATEGORY SUBMENU',/,/)
        TYPE 420
420     FORMAT(/5X,'40 = OPERATOR/PROCEDURE ERROR',/5X,
     1  '41 = VENDOR SOFTWARE PROBLEM',/5X,'42 = VENDOR HARDWARE ',
     2  'PROBLEM',/5X,'43 = CHANGE',/5X,'44 = DOWNTIME',/5X)
        TYPE 2
        ACCEPT 125,CHO
        I=I+1
        IF (CHO.LT.0) GOTO 1049
        IF ((CHO.GT.39).AND.(CHO.LT.45)) GOTO 1050
        IF (I.GT.2) GOTO 1000
        GOTO 400

500     TYPE 510
510     FORMAT(/1X,'TELCO CATEGORY SUBMENU',/,/)
        TYPE 520
520     FORMAT(/5X,'50 = DIAL-UP/OUTDIAL-PUBLIC OR PRIVATE',/5X,
     1  '51 = ANALOG LEASED LINE',/5X,'52 = DIGITAL FACILITY',/5X,
     2  '53 = SPECIAL SERVICES (800/950)',/5X,'54 = T-1',/5X)
        TYPE 2
        ACCEPT 125,CHO
        I=I+1
        IF (CHO.LT.0) GOTO 1049
        IF ((CHO.GT.49).AND.(CHO.LT.55)) GOTO 1050
        IF (I.GT.2) GOTO 1000
        GOTO 500

600     TYPE 610
610     FORMAT(/1X,'CONFIG/TOPOLOGY CATEGORY SUBMENU',/,/)
        TYPE 620
620     FORMAT(/5X,'60 = CONFIGURATION GUIDELINES EXCEEDED',/5X,
     1  '61 = DEAD-ENDED NODE',/5X,'62 = VALIDATIONS',/5X,
     2  '63 = FOREIGN NETWORK/IRC/PTT',/5X)
        TYPE 2
        ACCEPT 125,CHO
        I=I+1
        IF (CHO.LT.0) GOTO 1049
        IF ((CHO.GT.59).AND.(CHO.LT.64)) GOTO 1050
        IF (I.GT.2) GOTO 1000
        GOTO 600

700     TYPE 710
710     FORMAT(/1X,'POWER CATEGORY SUBMENU',/,/)
        TYPE 720
720     FORMAT(/5X,'70 = SCHEDULED OUTAGE',/5X,'71 = UNSCHEDULED ',
     1  'OUTAGE',/5X,'72 = CUSTOMER SITE OUTAGE',/5X)
        TYPE 2
        ACCEPT 125,CHO
        I=I+1
        IF (CHO.LT.0) GOTO 1049
        IF ((CHO.GT.69).AND.(CHO.LT.73)) GOTO 1050
        IF (I.GT.2) GOTO 1000
        GOTO 700

800     TYPE 810
810     FORMAT(/1X,'PROJECT CATEGORY SUBMENU',/,/)
        TYPE 820
820     FORMAT(/5X,'80 = PROJECT',/5X)
        TYPE 2
        ACCEPT 125,CHO
        I=I+1
        IF (CHO.LT.0) GOTO 1049
        IF ((CHO.GT.79).AND.(CHO.LT.81)) GOTO 1050
        IF (I.GT.2) GOTO 1000
        GOTO 800

900     TYPE 910
910     FORMAT(/1X,'OTHER CATEGORY SUBMENU',/,/)
        TYPE 920
920     FORMAT(/5X,'90 = SLOT RELOAD',/5X,'91 = SLOT DUMPED & ',
     1  'RELOADED',/5X,'92 = NODE RELOAD',/5X,'93 = NODE DUMPED ',
     2  '& RELOADED',/5X,'94 = DOCUMENTATION',/5X,'95 = PROBLEM ',
     3  'CLEARED BEFORE RESOLUTION/NTF     ',/5X,'96 = SLOT H&E',/5X,
     4  '97 = REF. TO EXISTING TKT',/5X,'98 = CLEARED WHILE ',
     5  'TESTING',/5X,'99 = TRACKING',/4X,'100 = SOFT PORT/LINK ',
     6  'RESET',/4X,'101 = HUMAN ERROR',/4X)
        TYPE 2
        ACCEPT 125,CHO
        I=I+1
        IF (CHO.LT.0) GOTO 1049
        IF ((CHO.GT.89).AND.(CHO.LT.102)) GOTO 1050
        IF (I.GT.2) GOTO 1000
        GOTO 900

1000    MAIN=1
        CCC=0
        TYPE 1010
1010    FORMAT(/1X,'INVALID SUBMENU SELECTION....',/1X,
     1  'RETURNING TO MAIN CLOSEOUT CODE MENU.')
        RETURN

1050    CCC=CHO
        RETURN

1049    MAIN=1
        RETURN

        END
        SUBROUTINE RESCOD(TNUM,CCC,ANS,L)
C
C       ROUTINE TO STORE RESOLUTION CODE IN BASE6 WHEN REFER GROUP
C       CHANGE IS MADE.  RESOLUTION CODE IS RETURNED TO MAIN
C       PROGRAM TO BE INCLUDED IN AUTO STATUS
C
        INTEGER CCC,TNUM,IERT,I,J,K,RECORD,IERC,NUMBER
        INTEGER ANS,L,X

        DOUBLE PRECISION CODE,BASE
	COMMON /CODE/CODE(120)
	COMMON /BASE/BASE(20)

        CALL DBERR($10,IERT,IERC,0)
        GOTO 12

10      IF(IERT.NE.7) GOTO 999
        TYPE 11
11      FORMAT(/1X,'DATABASE BUSY.........WAITING 10 SECONDS')
        CALL WAIT(5.0)
12      CALL DBOPEN(BASE(1))
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(NUMBER)
        IF ((NUMBER.EQ.0).OR.(NUMBER.GT.1)) GOTO 900
        CALL DBGREC($999,1)
        CALL DBVAL(17,CCC)
        IF(CCC.EQ.0) CCC=1
        X=0
        IF(((ANS.EQ.'C').AND.(CCC.LT.10)).OR.(((ANS.EQ.'S').OR.
     1  (ANS.EQ.'L')).AND.((L.EQ.2).OR.(L.EQ.3)).AND.(CCC.LT.
     2  10))) X=1
13      IF(((ANS.EQ.'C').AND.(CCC.LT.10)).OR.(((ANS.EQ.'S').OR.
     1  (ANS.EQ.'L')).AND.((L.EQ.2).OR.(L.EQ.3)).AND.(CCC.LT.
     2  10))) CALL CLOUT(CCC,TNUM)
        IF((X.EQ.1).AND.(CCC.LT.10)) TYPE 14
14      FORMAT(/1X,'RESOLUTION CODE HAS NOT BEEN SET.  YOU MAY NOT ',
     1  'CLOSE A TICKET',/1X,'WITHOUT SETTING THE RESOLUTION/',
     2  'CLOSEOUT CODE TO SOMETHING',/1X,'OTHER THAN NONE!',/1X)
        IF((X.EQ.1).AND.(CCC.LT.10)) GOTO 13
        IF(X.EQ.1) GOTO 28
        TYPE 20,CCC,CODE(CCC)
20      FORMAT(/1X,'THE RESOLUTION CODE IS CURRENTLY SET TO ',I3,
     1  '  ',A10,/1X,'TYPE Y TO CHANGE, N OR C.R. FOR NO CHANGE, OR ',
     2  /1X,'1 TO SET NO RESOLUTION AT THIS TIME.',/1X,'DO YOU WISH ',
     3  'TO CHANGE THE RESOLUTION CODE? : ',$)
        ACCEPT 25,J
25      FORMAT(A5)
        CALL HISET(J)
        IF (J.EQ.'Y') CALL CLOUT(CCC,TNUM)
        IF (J.EQ.'1') CCC=1
28      CALL DBERR($26,IERT,IERC,0)
        GOTO 27

26      IF(IERT.NE.7) GOTO 999
        TYPE 11
        CALL WAIT(5.0)
27      CALL DBOPEN(BASE(1))
        CALL DBFIND(1,1,TNUM)
        CALL DBGREC($999,1)
        CALL DBUPD(-1)
        CALL DBCHNG(17,CCC,55,CODE(CCC))
        CALL DBUPD(0)
        CALL DBCLOS
        RETURN

C       IF((J.NE.'Y').AND.(J.NE.'1').AND.(CCC.EQ.1)) CCC=0
        CALL DBERR($30,IERT,IERC,0)
        GOTO 31

30      IF(IERT.NE.7) GOTO 999
        TYPE 11
        CALL WAIT(5.0)
31      CALL DBOPEN(BASE(6))
        CALL DBUPD(-1)
        CALL DBNREC(RECORD)
        IF(RECORD.EQ.0) GOTO 910
        CALL DBGREC($999,RECORD)
        CALL DBCHNG(13,CCC)
        CALL DBUPD(0)
        CALL DBCLOS
        IF(CCC.EQ.0) CCC=1
        RETURN

900     CALL DBCLOS
        TYPE 901,TNUM
901     FORMAT(/1X,'TICKET NUMBER ',I8,' WAS NOT FOUND')
        IF(CCC.EQ.0) CCC=1
        RETURN

910     CALL DBCLOS
        IF(CCC.EQ.0) CCC=1
        RETURN

999     TYPE 1000,IERT,IERC
1000    FORMAT(/1X,'ERROR TYPE = ',I3,4X,'ERROR CODE = ',I3,/)
        IF(CCC.EQ.0) CCC=1
        RETURN

        END
        SUBROUTINE BNDLD(IN,Z)

        INTEGER IN,Z

100     TYPE 105
105     FORMAT('+BUNDLED ...1=NO, 2=YES : ',$)
        ACCEPT 110,IN
110     FORMAT(I8)
        IF (IN.GT.0) Z=2
        RETURN

        END
54 jB