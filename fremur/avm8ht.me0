PROCEDURE HW.CRASH.SUMMARY
BEGIN

FIELDS

ANSWER                  AS "C",
DO.NOT.APPLICABLE       AS "C",
CURRENT.CODE            SAME AS CODE.ID,
OLD.STOP.TIME           SAME AS START.TIME,
CLASS.TO.REPORT         SAME AS ABBREV,
SITE.TO.REPORT          SAME AS ABBREV,
MONTY                   AS "NN",
YE.R                    AS "NN",
RANGE                   AS "C",
MONTYS                  AS "NN",
LIST.CLASS.SWITCH       AS "C" DEFAULT "N",
CODE.TOTAL              AS "4ZN",
LIST.SITE.SWITCH        AS "C",
CURRENT.DATE            SAME AS DATE.,
TOT                     AS "4N",
OTR.TOT                 AS "4N",
REMAINING.COLUMNS       AS "NN",
OTHER                   AS "C" DEFAULT "N",
DATE.SCHEME             AS "C",
NUMBER.OF.CODES         AS "NN" DEFAULT 0,
PREVIOUS.HW.ID          SAME AS HW.ID,
PREVIOUS.SYSTEM.ID      SAME AS SYSTEM.ID,
PREVIOUS.HW.DATE        SAME AS DATE.,
PREVIOUS.SCHEDULED.DATE SAME AS DATE.,
PREVIOUS.STOP.TIME      SAME AS STOP.TIME,
DAYS                    AS "6N.3N",
SYSTEM.DAYS             AS "6N.3N",
SCHEDULED.SYSTEM.DAYS   AS "7N.3N",
SITE.SYSTEM.DAYS        AS "7N.3N",
CLASS.SYSTEM.DAYS       AS "7N.3N",
SITE.DAYS               AS "7N.3N",
CLASS.DAYS              AS "7N.3N",
DATE.STRING             AS "8C",
STARTING.DATE           SAME AS DATE.,
ENDING.DATE             SAME AS DATE.,
SCHEDULED.UP.TIME       AS "6ZN.5N",
SITE.SCHEDULED.UP.TIME  AS "6ZN.5N",
SITE.SCHEDULED.TIME     AS "6ZN.5N",
CLASS.SCHEDULED.UP.TIME AS "6ZN.5N",
CLASS.SCHEDULED.TIME    AS "6ZN.5N",
SCHEDULED.CRASH.FLAG    AS "N",
ZERO                    AS "N" DEFAULT 0,
ONE                     AS "N" DEFAULT 1,
ELAPSED.TIME            AS "6ZN",
SCHEDULED.TIME          AS "6ZN",
SCHEDULED.CRASHES       AS "2ZN.NNN",
GROUP.CRASHES           AS "3ZN"

CONTROLS FOR RELATIONS CONCURRENT UPDATE

REPORT TO OUTPUT.FILE PAGE.SIZE 87

HEADING.SIZE 3
BOTTOM.MARGIN 1

REPORT.HEADING
PRINT @CR,@TAB TO 5,"CRASH SUMMARY FOR ",
      STARTING.DATE AS DATE "MMM ZD,YYYY"," TO ",
      ENDING.DATE AS DATE "MMM ZD,YYYY"," AS OF ",
      TODAY AS DATE "MMM ZD,YYYY ",
      (((TIME/60/60) AS "ZN.NNNNNN") AS "9C") AS "CC",":",
      ((TIME/60) MOD 60) AS "NN",@CR,@CR

PAGE.HEADING
IF PAGE.NUM>1 THEN
PRINT @CR,@TAB TO 20,"CRASH SUMMARY FOR ",
      STARTING.DATE AS DATE "MMM ZD,YYYY"," TO ",
      ENDING.DATE AS DATE "MMM ZD,YYYY",
      @TAB TO 74,"PAGE",PAGE.NUM AS "ZN",@CR

RELATION AVAILABILITY. IS
KEY     CLASS.ID,
        SITE.ID,
        HW.ID
DATA    SCHEDULED.TIME,
        SCHEDULED.UP.TIME

RELATION CRASHES.BY.CODE. IS
KEY     CLASS.ID,
        SITE.ID,
        HW.ID,
        CODE.ID
DATA    SCHEDULED.CRASHES

RELATION LIST.SWITCH. IS
KEY     CODE.ID

RELATION CRASHES.BY.CLASS. IS
KEY     CLASS.ID,
        CODE.ID
DATA    SCHEDULED.CRASHES

RELATION GROUP.CRASHES. IS
KEY     GROUP.ID
DATA    GROUP.CRASHES

RELATION SYSTEM.DAYS. IS
KEY     CLASS.ID,
        SITE.ID,
        DATE.
DATA    SCHEDULED.SYSTEM.DAYS

RELATION LATEST.DATE. IS
KEY     CLASS.ID,
        SITE.ID,
        HW.ID
DATA    DATE.

RELATION CONFLICT. IS
KEY     CLASS.ID,
        HW.ID

GET.RANGE:
BEGIN
TYPE "THIS MONTY (T),LAST MONTY (L),OR A DATE RANGE (R): " ACCEPT RANGE
IF RANGE="T" OR "L" OR "R" THEN NOTHING ELSE REPEAT GET.RANGE

IF RANGE="R" THEN
   BEGIN
   TYPE "START,END DATES: " ACCEPT STARTING.DATE,ENDING.DATE
   IF STARTING.DATE>TODAY THEN ABORT @CR,"STARTING DATE AFTER TODAY!",@CR
   END

IF RANGE="L" OR "T" THEN
   BEGIN
   LET MONTY=((TODAY AS DATE "MM") AS "CC") AS "NN"
   LET YE.R =((TODAY AS DATE "YY") AS "CC") AS "NN"

   IF RANGE="L" THEN
      BEGIN
      IF MONTY=1 THEN
         BEGIN
         LET MONTY=12
         SUBTRACT 1 FROM YE.R
         END
        ELSE SUBTRACT 1 FROM MONTY
      LET DATE.STRING=MONTY AS "CC"+"-01-" AS "4C"
      LET DATE.STRING=DATE.STRING AS "6C"+YE.R AS "CC"
      LET STARTING.DATE=DATE.STRING AS DATE "MM-DD-YY"
      LET DATE.STRING=MONTY AS "CC"+"-31-" AS "4C"
      LET DATE.STRING=DATE.STRING AS "6C"+YE.R AS "CC"
      IF DATE.STRING IS DATE. THEN NOTHING ELSE
         BEGIN
         LET DATE.STRING=MONTY AS "CC"+"-30-" AS "4C"
         LET DATE.STRING=DATE.STRING AS "6C"+YE.R AS "CC"
         IF DATE.STRING IS DATE. THEN NOTHING ELSE
            BEGIN
            LET DATE.STRING=MONTY AS "CC"+"-29-" AS "4C"
            LET DATE.STRING=DATE.STRING AS "6C"+YE.R AS "CC"
            IF DATE.STRING IS DATE. THEN NOTHING ELSE
               BEGIN
               LET DATE.STRING=MONTY AS "CC"+"-28-" AS "4C"
               LET DATE.STRING=DATE.STRING AS "6C"+YE.R AS "CC"
               IF DATE.STRING IS NOT DATE. THEN ABORT "****PROGRAM ERROR"
               END
            END
         END
      LET ENDING.DATE=DATE.STRING AS DATE "MM-DD-YY"
      END %IF RANGE="L"%

   IF RANGE="T" THEN
      BEGIN
      LET DATE.STRING=MONTY AS "CC"+"-01-" AS "4C"
      LET DATE.STRING=DATE.STRING AS "6C"+YE.R AS "CC"
      LET STARTING.DATE=DATE.STRING AS DATE "MM-DD-YY"
      LET ENDING.DATE=TODAY
      END
   END
END %OF GET.RANGE%

LET CURRENT.DATE=STARTING.DATE
LET MONTYS=1
CALCULATE.MONTYS:
BEGIN
IF CURRENT.DATE=ENDING.DATE THEN FINISH CALCULATE.MONTYS
ADD 1 TO CURRENT.DATE
IF (CURRENT.DATE AS DATE "MM") AS "CC" #
   ((CURRENT.DATE-1) AS DATE "MM") AS "CC"
   THEN ADD 1 TO MONTYS
REPEAT CALCULATE.MONTYS
END

GET.APPLICABLE:
BEGIN
TYPE "INCLUDE NON-APPLICABLE SYSTEMS? "
ACCEPT ANSWER
IF ANSWER="Y" OR "N" THEN NOTHING ELSE REPEAT GET.APPLICABLE
END %GET.APPLICABLE%
LET DO.NOT.APPLICABLE=ANSWER

CK.SITE:
BEGIN
TYPE "SITE: " ACCEPT SITE.TO.REPORT
IF SITE.TO.REPORT="ALL" THEN FINISH CK.SITE
FOR EACH SITE. WHERE SITE.TO.REPORT=ABBREV FINISH CK.SITE
TYPE @CR,"NO SUCH SITE",@CR
REPEAT CK.SITE
END %CK.SITE%
CK.CLASS:
BEGIN
TYPE "CLASS: " ACCEPT CLASS.TO.REPORT
IF CLASS.TO.REPORT="ALL" THEN FINISH CK.CLASS
FOR EACH CLASS. WHERE CLASS.TO.REPORT=ABBREV FINISH CK.CLASS
TYPE @CR,"NO SUCH CLASS",@CR
REPEAT CK.CLASS
END %CK.CLASS%

GET.OUTPUT.FILE.NAME:
BEGIN
TYPE "OUTPUT TO: " ACCEPT OUTPUT.FILE

IF OUTPUT.FILE="TER" OR "TERM" OR "TERMI" OR "TERMIN" OR "TERMINA"
   OR "TERMINAL" THEN FINISH GET.OUTPUT.FILE.NAME
IF USER.NAME NE "MURMAINT" THEN LET REPORT.DIRECTORY = "("+USER.NAME+")"
IF SUBSTR(OUTPUT.FILE,1,1)="(" AS "C" THEN
   BEGIN
   TYPE @CR,"REPORTS ARE FORCED INTO USER NAME ",REPORT.DIRECTORY
   TYPE @CR,"PLEASE TYPE IN A FILE NAME ONLY",@CR,@CR
   REPEAT GET.OUTPUT.FILE.NAME
   END
  ELSE IF SUBSTR(OUTPUT.FILE,1,1)>="0" AS "C" AND <="9" AS "C"
       THEN BEGIN
            TYPE @CR,"FIRST CHARACTER OF FILE NAME MUST BE AN ALPHA CHARACTER",@CR
            TYPE "PLEASE RE-ENTER THE FILE NAME STRING",@CR,@CR
            REPEAT GET.OUTPUT.FILE.NAME
            END
  ELSE
   BEGIN
   LET OUTPUT.FILE=REPORT.DIRECTORY+OUTPUT.FILE
   TYPE "REPORT WILL BE ON FILE ",OUTPUT.FILE,@CR
   END
END %GET.OUTPUT.FILE.NAME%


FOR EACH CODE. WHERE NOT (START.DATE>ENDING.DATE OR END.DATE<STARTING.DATE)
    AND TYPE.ABBREV="LST"
    BEGIN
    LET CODE.ID=ID
    LET SCHEDULED.CRASHES=0
    INSERT INTO CRASHES.BY.CLASS.
    END

WRITE REPORT BEGIN %OPEN UP OUTPUT FILE%


LET PREVIOUS.SCHEDULED.DATE=STARTING.DATE-1
LET PREVIOUS.SYSTEM.ID=0
LET PREVIOUS.HW.ID=""

 FOR EACH TIME. WHERE (DATE.>=STARTING.DATE AND <=ENDING.DATE)
  AND ((DO.NOT.APPLICABLE="N" AND APPLICABLE(SYSTEM. VIA ID=SYSTEM.ID)="Y")
        OR DO.NOT.APPLICABLE="Y")
  SORTED ON CLASS.ID,SITE.ID,HW.ID,DATE.,START.TIME
     THIS.TIME.RECORD:
     BEGIN

     IF SITE.TO.REPORT="ALL" THEN NOTHING
        ELSE IF SITE.TO.REPORT=ABBREV(SITE. VIA ID=SITE.ID) THEN NOTHING
        ELSE FINISH THIS.TIME.RECORD

     IF CLASS.TO.REPORT="ALL" THEN NOTHING
        ELSE IF CLASS.TO.REPORT=ABBREV(CLASS. VIA ID=CLASS.ID) THEN NOTHING
        ELSE FINISH THIS.TIME.RECORD

     %IF THE SOFTWWARE HAS CHANGED AND THIS IS A CRASH CODE WITH THE
      SCHEDULED FLAG ON, THEN GO BACK TO THE SOFTWARE SYSTEM AND
      SEE IF THAT HARDWARE SYSTEM WAS UP DURING SCHEDULED TIME AND
      THEREFORE IS DESERVING OF A CRASH%

     IF PREVIOUS.SYSTEM.ID#SYSTEM.ID
        THEN BEGIN
             LET SCHEDULED.CRASH.FLAG=0
             LET OLD.STOP.TIME=START.TIME
             IF SCHED.FLAG=1 AND TYPE.ABBREV(CODE. VIA ID=CODE.ID)="LST" THEN
                BEGIN
                LET CURRENT.CODE=CODE.ID
                FOR EACH TIME. VIA (SYSTEM.ID,DATE.),
                    WHERE STOP.TIME=OLD.STOP.TIME AND SCHED.FLAG=1 AND
                          TYPE.ABBREV(CODE. VIA ID=CODE.ID)="UP"
                            SELECT CRASHES.BY.CODE.
                             VIA (CLASS.ID,SITE.ID,HW.ID,CODE.ID=CURRENT.CODE)
                             THEN BEGIN
                                  ADD 1 TO SCHEDULED.CRASHES
                                  ALTER CRASHES.BY.CODE.
                                  END
                             ELSE INSERT INTO CRASHES.BY.CODE.
                                    USING (ONE FOR SCHEDULED.CRASHES,
                                           CURRENT.CODE FOR CODE.ID)
                END
             LET PREVIOUS.SYSTEM.ID=SYSTEM.ID
             END

     IF HW.ID#PREVIOUS.HW.ID THEN
        BEGIN
        LET PREVIOUS.HW.ID=HW.ID
        LET PREVIOUS.STOP.TIME=0
        LET SCHEDULED.CRASH.FLAG=0
        END

     IF PREVIOUS.HW.DATE#DATE.
        THEN BEGIN
             LET PREVIOUS.STOP.TIME=0
             LET PREVIOUS.HW.DATE=DATE.
             END

     IF START.TIME<PREVIOUS.STOP.TIME
        THEN SELECT CONFLICT. VIA KEY
             THEN NOTHING
             ELSE INSERT INTO CONFLICT.

     LET PREVIOUS.STOP.TIME=STOP.TIME

     IF SCHED.FLAG=1 AND PREVIOUS.SCHEDULED.DATE#DATE. THEN
        BEGIN
        SELECT SYSTEM.DAYS. VIA KEY THEN
               BEGIN
                ADD 1 TO SCHEDULED.SYSTEM.DAYS
                LET PREVIOUS.SCHEDULED.DATE=DATE.
             ALTER SYSTEM.DAYS.
             END
           ELSE
               BEGIN
               IF SCHED.FLAG=1 THEN
                  BEGIN
                  LET SCHEDULED.SYSTEM.DAYS=1
                  LET PREVIOUS.SCHEDULED.DATE=DATE.
                  END
               INSERT INTO SYSTEM.DAYS.
               END %IF NO SELECTION%
        END %IF SELECTION NECESSARY%

       SELECT LATEST.DATE. VIA KEY
              THEN ALTER LATEST.DATE. USING (DATE. OF TIME. FOR DATE.)
              ELSE INSERT INTO LATEST.DATE.

     LET ELAPSED.TIME=STOP.TIME-START.TIME

     SELECT.TOTALS:
        BEGIN
         SELECT AVAILABILITY. VIA KEY THEN
                    BEGIN
                    IF SCHED.FLAG=1 THEN ADD ELAPSED.TIME TO SCHEDULED.TIME
                    IF SCHED.FLAG=1 AND TYPE.ABBREV(CODE. VIA ID=CODE.ID)="UP"
                       THEN ADD ELAPSED.TIME TO SCHEDULED.UP.TIME
                    ALTER AVAILABILITY.
                    END
               ELSE
                   BEGIN
                   INSERT INTO AVAILABILITY. USING
                           (ZERO FOR SCHEDULED.TIME,
                            ZERO FOR SCHEDULED.UP.TIME)
                   REPEAT SELECT.TOTALS
                   END
        END %SELECT.TOTALS%
%TAKE CARE OF COUNTING SCHEDULED CRASHES%

     CONDITIONAL ON SCHED.FLAG
         BEGIN
         1: CONDITIONAL ON TYPE.ABBREV(CODE. VIA ID=CODE.ID)
                BEGIN
                 "UP": LET SCHEDULED.CRASH.FLAG=1
                "SDN": LET SCHEDULED.CRASH.FLAG=0
                "LST": BEGIN
                       IF SCHEDULED.CRASH.FLAG=1 THEN
                          SELECT CRASHES.BY.CODE. VIA KEY
                            THEN BEGIN
                                 ADD 1 TO SCHEDULED.CRASHES
                                 ALTER CRASHES.BY.CODE.
                                 END
                            ELSE INSERT INTO CRASHES.BY.CODE.
                                     USING (ONE FOR SCHEDULED.CRASHES)
                       LET SCHEDULED.CRASH.FLAG=0
                       END
                END
         2: LET SCHEDULED.CRASH.FLAG=0
         END %OF CONDITIONAL ON SCHED.FLAG%

     END %FOR EACH TIME%

%TALLY CRASHES BY CLASS%

FOR EACH CRASHES.BY.CODE.
    SELECT CRASHES.BY.CLASS. VIA KEY THEN
           BEGIN
           ADD SCHEDULED.CRASHES OF CRASHES.BY.CODE. TO SCHEDULED.CRASHES OF CRASHES.BY.CLASS.
           ALTER CRASHES.BY.CLASS.
           END

%TALLY GROUP CRASHES%

FOR EACH GROUP. WHERE TYPE.ABBREV="LST"
    INSERT INTO GROUP.CRASHES. USING (ID FOR GROUP.ID,
                                      ZERO FOR GROUP.CRASHES)

FOR EACH CRASHES.BY.CLASS.
    SELECT GROUP.CRASHES. VIA GROUP.ID=GROUP.ID(CODE. VIA ID=CODE.ID OF
           CRASHES.BY.CLASS.)
     THEN BEGIN
          ADD SCHEDULED.CRASHES TO GROUP.CRASHES
          ALTER GROUP.CRASHES.
          END
     ELSE ABORT "****PROGRAM ERROR****"

%OUTPUT CRASH SUMMARY REPORT%

FOR EACH CLASS.
    THIS.CLASS:
    BEGIN

    IF CLASS.TO.REPORT="ALL" THEN NOTHING ELSE
    IF CLASS.TO.REPORT=ABBREV OF CLASS. THEN NOTHING ELSE
    FINISH THIS.CLASS

    SYSTEM.TEST:
    BEGIN
    FOR EACH AVAILABILITY. VIA CLASS.ID=ID OF CLASS. FINISH SYSTEM.TEST
    IF CLASS.TO.REPORT="ALL" THEN FINISH THIS.CLASS ELSE
       BEGIN
       TYPE @CR,"NO TIME ENTERED FOR ANY ",ABBREV OF CLASS.,@CR
       FINISH THIS.CLASS
       END
    END %SYSTEM.TEST%

LET CLASS.SCHEDULED.UP.TIME,CLASS.SCHEDULED.TIME=0
LET CLASS.DAYS,CLASS.SYSTEM.DAYS=0
LET LIST.CLASS.SWITCH="N"
LET OTHER="N"
LET NUMBER.OF.CODES=0
FOR EACH CODE. WHERE CLASS.ID=ID OF CLASS. AND TYPE.ABBREV="LST"  AND
    NOT (START.DATE>ENDING.DATE OR END.DATE<STARTING.DATE)
    ADD 1 TO NUMBER.OF.CODES

IF NUMBER.OF.CODES>14 THEN
   BEGIN
   LET NUMBER.OF.CODES=0
   FOR EACH CRASHES.BY.CLASS. VIA CLASS.ID=ID OF CLASS. SORTED ON DESCENDING SCHEDULED.CRASHES
       BEGIN
       ADD 1 TO NUMBER.OF.CODES
       IF NUMBER.OF.CODES>13 THEN
          SELECT LIST.SWITCH. VIA KEY THEN NOTHING ELSE
                 INSERT INTO LIST.SWITCH.
       END
   END %NUMBER OF CODES TEST%


PRINT ABBREV OF CLASS.," SIT"
LET REMAINING.COLUMNS=56
FOR EACH GROUP. WHERE TYPE.ABBREV="LST" SORTED ON POS
FOR EACH CODE. WHERE CLASS.ID=ID OF CLASS. AND
                     NOT (START.DATE>ENDING.DATE OR END.DATE<STARTING.DATE) AND
                     GROUP.ID=ID OF GROUP. SORTED ON CODE
    SELECT LIST.SWITCH. VIA CODE.ID=ID OF CODE. THEN LET OTHER="Y" ELSE
           BEGIN
           SUBTRACT 4 FROM REMAINING.COLUMNS
           IF EXCEPTION.FLAG="N"
              THEN PRINT " "
              ELSE PRINT "*"
           PRINT ABBREV OF CODE.
           END
IF OTHER="Y" THEN PRINT " OTR"
IF OTHER="Y" THEN LET OTHER="N" ELSE PRINT @TAB REMAINING.COLUMNS
PRINT "  TOT AVAIL DATE",@CR

FOR EACH SITE.
    THIS.SITE:
    BEGIN

    IF SITE.TO.REPORT="ALL" THEN NOTHING ELSE
    IF SITE.TO.REPORT=ABBREV OF SITE. THEN NOTHING ELSE
    FINISH THIS.SITE

 SITE.SYSTEM.CHECK:
 BEGIN
 FOR EACH AVAILABILITY. VIA (CLASS.ID=ID OF CLASS.,
     SITE.ID=ID OF SITE.) FINISH SITE.SYSTEM.CHECK
 IF CLASS.TO.REPORT=ABBREV(CLASS. VIA ID=ID OF CLASS.) AND
    SITE.TO.REPORT=ABBREV(SITE. VIA ID=ID OF SITE.)
    THEN BEGIN
         TYPE @CR,"NO TIME ENTERED FOR ANY ",
              TRIM(TITLE(SITE. VIA ID=ID OF SITE.))," ",
              ABBREV(CLASS. VIA ID=CLASS.ID),@CR
          END
 FINISH THIS.SITE
 END %SITE.SYSTEM.CHECK%

    LET LIST.SITE.SWITCH="N"
    LET SITE.SCHEDULED.UP.TIME,SITE.SCHEDULED.TIME=0
    LET SITE.DAYS,SITE.SYSTEM.DAYS=0
FOR EACH AVAILABILITY. VIA (CLASS.ID=ID OF CLASS.,SITE.ID=ID OF SITE.)
    SORTED ON HW.ID
    THIS.SYSTEM:
    BEGIN


LET LIST.SITE.SWITCH="Y"
LET LIST.CLASS.SWITCH="Y"
LET OTHER="N"
LET OTR.TOT,TOT=0
PRINT HW.ID," ",ABBREV(SITE. VIA ID OF SITE.)
FOR EACH GROUP. WHERE TYPE.ABBREV="LST" SORTED ON POS
FOR EACH CODE. WHERE CLASS.ID=ID OF CLASS. AND GROUP.ID=ID OF GROUP. AND
                     NOT (START.DATE>ENDING.DATE OR END.DATE<STARTING.DATE)
                     SORTED ON CODE
    SELECT CRASHES.BY.CODE. VIA
           (CLASS.ID=ID OF CLASS.,SITE.ID=ID OF SITE.,HW.ID=HW.ID OF AVAILABILITY.,
            CODE.ID=ID OF CODE.)
           THEN
               BEGIN
               ADD SCHEDULED.CRASHES TO TOT
               SELECT LIST.SWITCH. VIA KEY
                      THEN
                          BEGIN
                          LET OTHER="Y"
                          ADD SCHEDULED.CRASHES TO OTR.TOT
                          END
                      ELSE PRINT SCHEDULED.CRASHES AS "3ZN"
               END %IF CRASH FOUND%
           ELSE %IF NO CRASHES%
               SELECT LIST.SWITCH. VIA CODE.ID=ID OF CODE.
                      THEN LET OTHER="Y"
                      ELSE PRINT "   0"

IF OTHER="Y"
   THEN PRINT OTR.TOT AS "3ZN",TOT AS "4ZN"
   ELSE PRINT @TAB REMAINING.COLUMNS,TOT AS "4ZN"
LET OTHER="N"
LET OTR.TOT,TOT=0

%OUTPUT ASTERISK IF THERE IS A CONFLICT BETWEEN TWO SYSTEMS%

SELECT CONFLICT. VIA (CLASS.ID=ID OF CLASS.,HW.ID)
       THEN PRINT "?" ELSE PRINT " "

%OUTPUT AVAILABILITY FOR THIS SYSTEM%

SELECT AVAILABILITY. VIA
       (CLASS.ID=ID OF CLASS.,SITE.ID=ID OF SITE.,HW.ID=HW.ID OF AVAILABILITY.)
       THEN BEGIN
            IF SCHEDULED.TIME=0 THEN PRINT @TAB 5 ELSE
               PRINT (SCHEDULED.UP.TIME/SCHEDULED.TIME*100) AS "3Z.N"
            ADD SCHEDULED.UP.TIME TO SITE.SCHEDULED.UP.TIME,CLASS.SCHEDULED.UP.TIME
            ADD SCHEDULED.TIME TO SITE.SCHEDULED.TIME,CLASS.SCHEDULED.TIME
            END

SELECT LATEST.DATE. VIA (CLASS.ID=ID OF CLASS.,SITE.ID=ID OF SITE.,HW.ID OF AVAILABILITY.)
       THEN PRINT DATE. AS DATE " MMDD"

PRINT @CR

END %THIS.SYSTEM%

PRINT @CR
END %THIS SITE%
PRINT @CR
END %THIS CLASS%

%PRINT OUT EXPLANATION OF QUESTION MARK IF A CONFLICT EXISTS ANYWHERE%

CONFLICT.CHECK:
BEGIN
FOR EACH CONFLICT.
 BEGIN
PRINT @CR,
 "? TWO HARDWARE ID'S ARE POINTING TO THE SAME SOFTWARE SYSTEM AT THE SAME TIME."
PRINT @CR,
 "  THE CRASH TOTAL FOR THIS HARDWARE SYSTEM MAY THEREFORE BE INCORRECT.",@FINISH CONFLICT.CHECK
 END %FOR EACH CONFLICT%
END %OF CONFLICT CHECK%

END %REPORT%

END
   +zKdn