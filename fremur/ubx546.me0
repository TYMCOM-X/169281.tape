PROCEDURE CRASH.SUMMARY
BEGIN

FIELDS

PRINT.ADJUSTED          AS "C",
DO.NON.APPLICABLE       AS "C",
ANSWER                  AS "C",
CLASS.TO.REPORT         SAME AS ABBREV,
SITE.TO.REPORT          SAME AS ABBREV,
MONTY                   AS "NN",
YE.R                    AS "NN",
RANGE                   AS "C",
MONTYS                  AS "NN",
LIST.CLASS.SWITCH       AS "C" DEFAULT "N",
CODE.TOTAL              AS "4ZN",
LIST.SITE.SWITCH        AS "C",
CURRENT.DATE            SAME AS DATE.,
TOT                     AS "4N",
OTR.TOT                 AS "4N",
REMAINING.COLUMNS       AS "NN",
OTHER                   AS "C" DEFAULT "N",
DATE.SCHEME             AS "C",
NUMBER.OF.CODES         AS "NN" DEFAULT 0,
PREVIOUS.SYSTEM.ID      SAME AS SYSTEM.ID,
PREVIOUS.SCHEDULED.DATE SAME AS DATE.,
DAYS                    AS "6N.3N",
SYSTEM.DAYS             AS "6N.3N",
SCHEDULED.SYSTEM.DAYS   AS "7N.3N",
SCHEDULED.SYSTEM.DAYS.ADJ SAME AS SCHEDULED.SYSTEM.DAYS,
SITE.SYSTEM.DAYS        AS "7N.3N",
SITE.SYSTEM.DAYS.ADJ    AS "7N.3N",
CLASS.SYSTEM.DAYS       AS "7N.3N",
CLASS.SYSTEM.DAYS.ADJ   AS "7N.3N",
SITE.DAYS               AS "7N.3N",
SITE.DAYS.ADJ           AS "7N.3N",
CLASS.DAYS              AS "7N.3N",
CLASS.DAYS.ADJ          AS "7N.3N",
DATE.STRING             AS "8C",
STARTING.DATE           SAME AS DATE.,
ENDING.DATE             SAME AS DATE.,
SCHEDULED.UP.TIME       AS "6ZN.5N",
SCHEDULED.UP.TIME.ADJ   SAME AS SCHEDULED.UP.TIME,
SITE.SCHEDULED.UP.TIME  AS "6ZN.5N",
SITE.SCHEDULED.UP.TIME.ADJ SAME AS SITE.SCHEDULED.UP.TIME,
SITE.SCHEDULED.TIME     AS "6ZN.5N",
SITE.SCHEDULED.TIME.ADJ SAME AS SITE.SCHEDULED.TIME,
CLASS.SCHEDULED.UP.TIME AS "6ZN.5N",
CLASS.SCHEDULED.UP.TIME.ADJ SAME AS CLASS.SCHEDULED.UP.TIME,
CLASS.SCHEDULED.TIME    AS "6ZN.5N",
CLASS.SCHEDULED.TIME.ADJ SAME AS CLASS.SCHEDULED.TIME,
SCHEDULED.CRASH.FLAG    AS "N",
ZERO                    AS "N" DEFAULT 0,
ONE                     AS "N" DEFAULT 1,
ELAPSED.TIME            AS "6ZN",
SCHEDULED.TIME          AS "6ZN",
SCHEDULED.TIME.ADJ      SAME AS SCHEDULED.TIME,
SCHEDULED.CRASHES       AS "2ZN.NNN",
SCHEDULED.CRASHES.ADJ   SAME AS SCHEDULED.CRASHES,
GROUP.CRASHES           AS "3ZN.NNN",
GROUP.CRASHES.ADJ       SAME AS GROUP.CRASHES

CONTROLS FOR RELATIONS CONCURRENT UPDATE

REPORT TO OUTPUT.FILE 
PAGE.SIZE 66
HEADING.SIZE 3
BOTTOM.MARGIN 2

REPORT.HEADING
PRINT @CR,@TAB TO 5,"CRASH SUMMARY FOR ",
      STARTING.DATE AS DATE "MMM ZD,YYYY"," TO ",
      ENDING.DATE AS DATE "MMM ZD,YYYY"," AS OF ",
      TODAY AS DATE "MMM ZD,YYYY ",
      (((TIME/60/60) AS "ZN.NNNNNN") AS "9C") AS "CC",":",
      ((TIME/60) MOD 60) AS "NN",@CR,@CR

PAGE.HEADING
IF PAGE.NUM>1 THEN
PRINT @CR,@TAB TO 20,"CRASH SUMMARY FOR ",
      STARTING.DATE AS DATE "MMM ZD,YYYY"," TO ",
      ENDING.DATE AS DATE "MMM ZD,YYYY",
      @TAB TO 74,"PAGE",PAGE.NUM AS "ZN",@CR,@CR

RELATION AVAILABILITY. IS
KEY     CLASS.ID,
        SITE.ID,
        SYSTEM.ID
DATA    SCHEDULED.TIME,
        SCHEDULED.TIME.ADJ,
        SCHEDULED.UP.TIME,
        SCHEDULED.UP.TIME.ADJ

RELATION CRASHES.BY.CODE. IS
KEY     CLASS.ID,
        SITE.ID,
        SYSTEM.ID,
        CODE.ID
DATA    SCHEDULED.CRASHES,
        SCHEDULED.CRASHES.ADJ

RELATION LIST.SWITCH. IS
KEY     CODE.ID

RELATION CRASHES.BY.CLASS. IS
KEY     CLASS.ID,
        CODE.ID
DATA    SCHEDULED.CRASHES,
        SCHEDULED.CRASHES.ADJ

RELATION GROUP.CRASHES. IS
KEY     GROUP.ID
DATA    GROUP.CRASHES,
        GROUP.CRASHES.ADJ

RELATION SYSTEM.DAYS. IS
KEY     CLASS.ID,
        SITE.ID,
        DATE.
DATA    SCHEDULED.SYSTEM.DAYS,
        SCHEDULED.SYSTEM.DAYS.ADJ

RELATION LATEST.DATE. IS
KEY     CLASS.ID,
        SITE.ID,
        SYSTEM.ID
DATA    DATE.

GET.RANGE:
BEGIN
TYPE "THIS MONTH (T),LAST MONTH (L),OR A DATE RANGE (R): " ACCEPT RANGE
IF RANGE="T" OR "L" OR "R" THEN NOTHING ELSE REPEAT GET.RANGE

IF RANGE="R" THEN
   BEGIN
   TYPE "START,END DATES: " ACCEPT STARTING.DATE,ENDING.DATE
   IF STARTING.DATE>TODAY THEN ABORT @CR,"STARTING DATE AFTER TODAY!",@CR
   END

IF RANGE="L" OR "T" THEN
   BEGIN
   LET MONTY=((TODAY AS DATE "MM") AS "CC") AS "NN"
   LET YE.R =((TODAY AS DATE "YY") AS "CC") AS "NN"

   IF RANGE="L" THEN
      BEGIN
      IF MONTY=1 THEN
         BEGIN
         LET MONTY=12
         SUBTRACT 1 FROM YE.R
         END
        ELSE SUBTRACT 1 FROM MONTY
      LET DATE.STRING=MONTY AS "CC"+"-01-" AS "4C"
      LET DATE.STRING=DATE.STRING AS "6C"+YE.R AS "CC"
      LET STARTING.DATE=DATE.STRING AS DATE "MM-DD-YY"
      LET DATE.STRING=MONTY AS "CC"+"-31-" AS "4C"
      LET DATE.STRING=DATE.STRING AS "6C"+YE.R AS "CC"
      IF DATE.STRING IS DATE. THEN NOTHING ELSE
         BEGIN
         LET DATE.STRING=MONTY AS "CC"+"-30-" AS "4C"
         LET DATE.STRING=DATE.STRING AS "6C"+YE.R AS "CC"
         IF DATE.STRING IS DATE. THEN NOTHING ELSE
            BEGIN
            LET DATE.STRING=MONTY AS "CC"+"-29-" AS "4C"
            LET DATE.STRING=DATE.STRING AS "6C"+YE.R AS "CC"
            IF DATE.STRING IS DATE. THEN NOTHING ELSE
               BEGIN
               LET DATE.STRING=MONTY AS "CC"+"-28-" AS "4C"
               LET DATE.STRING=DATE.STRING AS "6C"+YE.R AS "CC"
               IF DATE.STRING IS NOT DATE. THEN ABORT "****PROGRAM ERROR"
               END
            END
         END
      LET ENDING.DATE=DATE.STRING AS DATE "MM-DD-YY"
      END %IF RANGE="L"%

   IF RANGE="T" THEN
      BEGIN
      LET DATE.STRING=MONTY AS "CC"+"-01-" AS "4C"
      LET DATE.STRING=DATE.STRING AS "6C"+YE.R AS "CC"
      LET STARTING.DATE=DATE.STRING AS DATE "MM-DD-YY"
      LET ENDING.DATE=TODAY
      END
   END
END %OF GET.RANGE%

LET CURRENT.DATE=STARTING.DATE
LET MONTYS=1
CALCULATE.MONTYS:
BEGIN
IF CURRENT.DATE=ENDING.DATE THEN FINISH CALCULATE.MONTYS
ADD 1 TO CURRENT.DATE
IF (CURRENT.DATE AS DATE "MM") AS "CC" #
   ((CURRENT.DATE-1) AS DATE "MM") AS "CC"
   THEN ADD 1 TO MONTYS
REPEAT CALCULATE.MONTYS
END

GET.APPLICABLE:
BEGIN
TYPE "INCLUDE NON-APPLICABLE SYSTEMS? "
ACCEPT ANSWER
IF ANSWER="Y" OR "N" THEN NOTHING ELSE REPEAT GET.APPLICABLE
END %GET.APPLICABLE%
LET DO.NON.APPLICABLE=ANSWER

GET.ADJUSTED:
BEGIN
TYPE "PRINT OUT ADJUSTED FIGURES? "
ACCEPT ANSWER
IF ANSWER="Y" OR "N" THEN NOTHING ELSE REPEAT GET.ADJUSTED
END
LET PRINT.ADJUSTED=ANSWER

CK.SITE:
BEGIN
TYPE "SITE: " ACCEPT SITE.TO.REPORT
IF SITE.TO.REPORT="ALL" THEN FINISH CK.SITE
FOR EACH SITE. WHERE SITE.TO.REPORT=ABBREV FINISH CK.SITE
TYPE @CR,"NO SUCH SITE",@CR
REPEAT CK.SITE
END %CK.SITE%
CK.CLASS:
BEGIN
TYPE "CLASS: " ACCEPT CLASS.TO.REPORT
IF CLASS.TO.REPORT="ALL" THEN FINISH CK.CLASS
FOR EACH CLASS. WHERE CLASS.TO.REPORT=ABBREV FINISH CK.CLASS
TYPE @CR,"NO SUCH CLASS",@CR
REPEAT CK.CLASS
END %CK.CLASS%

GET.OUTPUT.FILE.NAME:
BEGIN
TYPE "OUTPUT TO: " ACCEPT OUTPUT.FILE

IF OUTPUT.FILE="TER" OR "TERM" OR "TERMI" OR "TERMIN" OR "TERMINA"
   OR "TERMINAL" THEN FINISH GET.OUTPUT.FILE.NAME
IF USER.NAME NE "MURMAINT" THEN LET REPORT.DIRECTORY = "("+USER.NAME+")"
IF SUBSTR(OUTPUT.FILE,1,1)="(" AS "C" THEN
   BEGIN
   TYPE @CR,"REPORTS ARE FORCED INTO USER NAME ",REPORT.DIRECTORY
   TYPE @CR,"PLEASE TYPE IN A FILE NAME ONLY",@CR,@CR
   REPEAT GET.OUTPUT.FILE.NAME
   END
  ELSE IF SUBSTR(OUTPUT.FILE,1,1)>="0" AS "C" AND <="9" AS "C"
       THEN BEGIN
            TYPE @CR,"FIRST CHARACTER OF FILE NAME MUST BE AN ALPHA CHARACTER",@CR
            TYPE "PLEASE RE-ENTER THE FILE NAME STRING",@CR,@CR
            REPEAT GET.OUTPUT.FILE.NAME
            END
  ELSE
   BEGIN
   LET OUTPUT.FILE=REPORT.DIRECTORY+OUTPUT.FILE
   TYPE "REPORT WILL BE ON FILE ",OUTPUT.FILE,@CR
   END
END %GET.OUTPUT.FILE.NAME%


FOR EACH CODE. WHERE NOT (START.DATE>ENDING.DATE OR END.DATE<STARTING.DATE)
    AND TYPE.ABBREV="LST"
    BEGIN
    LET CODE.ID=ID
    LET SCHEDULED.CRASHES=0
    LET SCHEDULED.CRASHES.ADJ=0
    INSERT INTO CRASHES.BY.CLASS.
    END

WRITE REPORT BEGIN %OPEN UP OUTPUT FILE%


LET PREVIOUS.SCHEDULED.DATE=STARTING.DATE-1
LET PREVIOUS.SYSTEM.ID=0

 FOR EACH SYSTEM. WHERE NOT (START.DATE>ENDING.DATE OR END.DATE<STARTING.DATE)
     AND ((DO.NON.APPLICABLE="N" AND APPLICABLE="Y") OR DO.NON.APPLICABLE="Y")
     THIS.SYSTEM.:
     BEGIN
 LET CURRENT.DATE=STARTING.DATE
 LET PREVIOUS.SCHEDULED.DATE=STARTING.DATE-1
 LET SCHEDULED.CRASH.FLAG=0
 WHILE CURRENT.DATE<=ENDING.DATE DO
  BEGIN
 FOR EACH TIME. VIA (SYSTEM.ID=ID OF SYSTEM.,DATE.=CURRENT.DATE)
     THIS.TIME.RECORD:
     BEGIN

IF SITE.TO.REPORT="ALL" THEN NOTHING ELSE
IF SITE.TO.REPORT=ABBREV(SITE. VIA ID=SITE.ID) THEN NOTHING ELSE
FINISH THIS.TIME.RECORD
IF CLASS.TO.REPORT="ALL" THEN NOTHING ELSE
IF CLASS.TO.REPORT=ABBREV(CLASS. VIA ID=CLASS.ID) THEN NOTHING ELSE
FINISH THIS.TIME.RECORD

     IF SCHED.FLAG=1 AND PREVIOUS.SCHEDULED.DATE#DATE. THEN
        BEGIN
        SELECT SYSTEM.DAYS. VIA KEY THEN
               BEGIN
             IF SCHED.FLAG=1 AND PREVIOUS.SCHEDULED.DATE#DATE. THEN
                BEGIN
                ADD 1 TO SCHEDULED.SYSTEM.DAYS
                IF APPLICABLE(SYSTEM. VIA ID=SYSTEM.ID)="Y" THEN
                   ADD 1 TO SCHEDULED.SYSTEM.DAYS.ADJ
                LET PREVIOUS.SCHEDULED.DATE=DATE.
                END
             ALTER SYSTEM.DAYS.
             END
           ELSE
               BEGIN
               IF SCHED.FLAG=1 THEN
                  BEGIN
                  LET SCHEDULED.SYSTEM.DAYS=1
                  IF APPLICABLE(SYSTEM. VIA ID=SYSTEM.ID)="Y"
                     THEN LET SCHEDULED.SYSTEM.DAYS.ADJ=1
                     ELSE LET SCHEDULED.SYSTEM.DAYS.ADJ=0
                  LET PREVIOUS.SCHEDULED.DATE=DATE.
                  END
               INSERT INTO SYSTEM.DAYS.
               END %IF NO SELECTION%
        END %IF SELECTION NECESSARY%

       SELECT LATEST.DATE. VIA KEY
              THEN ALTER LATEST.DATE. USING (DATE. OF TIME. FOR DATE.)
              ELSE INSERT INTO LATEST.DATE.

     LET ELAPSED.TIME=STOP.TIME-START.TIME

     SELECT.TOTALS:
        BEGIN
         SELECT AVAILABILITY. VIA KEY THEN
                    BEGIN
                    IF SCHED.FLAG=1 THEN
                       BEGIN
                       ADD ELAPSED.TIME TO SCHEDULED.TIME
                       ADD ELAPSED.TIME TO SCHEDULED.TIME.ADJ
                       END
                    IF SCHED.FLAG=1 AND TYPE.ABBREV(CODE. VIA ID=CODE.ID)="UP" THEN
                       BEGIN
                       ADD ELAPSED.TIME TO SCHEDULED.UP.TIME
                       ADD ELAPSED.TIME TO SCHEDULED.UP.TIME.ADJ
                       END
                    IF SCHED.FLAG=1 AND EXCEPTION.FLAG(CODE. VIA ID=CODE.ID)="Y"
                       THEN ADD ELAPSED.TIME TO SCHEDULED.UP.TIME.ADJ
                    ALTER AVAILABILITY.
                    END
               ELSE
                   BEGIN
                   INSERT INTO AVAILABILITY. USING
                           (ZERO FOR SCHEDULED.TIME,
                            ZERO FOR SCHEDULED.TIME.ADJ,
                            ZERO FOR SCHEDULED.UP.TIME,
                            ZERO FOR SCHEDULED.UP.TIME.ADJ)
                   REPEAT SELECT.TOTALS
                   END
        END %SELECT.TOTALS%

%TAKE CARE OF COUNTING SCHEDULED CRASHES%

      CONDITIONAL ON SCHED.FLAG
          BEGIN
          1: CONDITIONAL ON TYPE.ABBREV(CODE. VIA ID=CODE.ID)
                 BEGIN
                  "UP": LET SCHEDULED.CRASH.FLAG=1
                 "SDN": LET SCHEDULED.CRASH.FLAG=0
                 "LST": BEGIN
                        IF SCHEDULED.CRASH.FLAG=1 THEN
                           SELECT CRASHES.BY.CODE. VIA KEY
                             THEN BEGIN
                                   ADD 1 TO SCHEDULED.CRASHES
                                   IF APPLICABLE(SYSTEM. VIA ID=ID OF SYSTEM.)="Y" THEN
                                      ADD 1 TO SCHEDULED.CRASHES.ADJ
                                   ALTER CRASHES.BY.CODE.
                                   END
                             ELSE BEGIN
                                  LET SCHEDULED.CRASHES=1
                                  IF APPLICABLE(SYSTEM. VIA ID=SYSTEM.ID)="Y" THEN
                                     LET SCHEDULED.CRASHES.ADJ=1 ELSE
                                     LET SCHEDULED.CRASHES.ADJ=0
                                  INSERT INTO CRASHES.BY.CODE.
                                  END
                        LET SCHEDULED.CRASH.FLAG=0
                        END
                 END
          2: LET SCHEDULED.CRASH.FLAG=0

          END %OF CONDITIONAL ON SCHED.FLAG%
     END %FOR EACH TIME%
     ADD 1 TO CURRENT.DATE
     END %WHILE LOOP%
     END %FOR EACH SYSTEM%

%TALLY CRASHES BY CLASS%

FOR EACH CRASHES.BY.CODE.
    SELECT CRASHES.BY.CLASS. VIA KEY THEN
           BEGIN
           ADD SCHEDULED.CRASHES OF CRASHES.BY.CODE. TO SCHEDULED.CRASHES OF CRASHES.BY.CLASS.
           ADD SCHEDULED.CRASHES.ADJ OF CRASHES.BY.CODE. TO
               SCHEDULED.CRASHES.ADJ OF CRASHES.BY.CLASS.
           ALTER CRASHES.BY.CLASS.
           END

%TALLY GROUP CRASHES%

FOR EACH GROUP. WHERE TYPE.ABBREV="LST"
    INSERT INTO GROUP.CRASHES. USING (ID FOR GROUP.ID,
                                      ZERO FOR GROUP.CRASHES)

FOR EACH CRASHES.BY.CLASS.
    SELECT GROUP.CRASHES. VIA GROUP.ID=GROUP.ID(CODE. VIA ID=CODE.ID OF
           CRASHES.BY.CLASS.)
     THEN BEGIN
          ADD SCHEDULED.CRASHES TO GROUP.CRASHES
          ADD SCHEDULED.CRASHES.ADJ TO GROUP.CRASHES.ADJ
          ALTER GROUP.CRASHES.
          END
     ELSE ABORT "****PROGRAM ERROR****"

%OUTPUT CRASH SUMMARY REPORT%

FOR EACH CLASS.
    THIS.CLASS:
    BEGIN

    IF CLASS.TO.REPORT="ALL" THEN NOTHING ELSE
    IF CLASS.TO.REPORT=ABBREV OF CLASS. THEN NOTHING ELSE
    FINISH THIS.CLASS

    CLASS.TEST:
    BEGIN
    IF RANGE="T" THEN
       FOR EACH SYSTEM. WHERE CLASS.ID=ID OF CLASS.
           AND ((DO.NON.APPLICABLE="N" AND APPLICABLE="Y") OR
                 DO.NON.APPLICABLE="Y")
           AND NOT (START.DATE>ENDING.DATE OR END.DATE<STARTING.DATE)
           FINISH CLASS.TEST
    FOR EACH AVAILABILITY. VIA CLASS.ID=ID OF CLASS. FINISH CLASS.TEST
        IF CLASS.TO.REPORT=ABBREV OF CLASS. THEN
         TYPE @CR,"THIS CLASS HAS NO SYSTEMS VALIDATED FOR THE TIME TO BE REPORTED",@CR
         FINISH THIS.CLASS
     END %CLASS.TEST%

LET CLASS.SCHEDULED.UP.TIME,CLASS.SCHEDULED.TIME=0
LET CLASS.SCHEDULED.UP.TIME.ADJ,CLASS.SCHEDULED.TIME.ADJ=0
LET CLASS.DAYS,CLASS.SYSTEM.DAYS=0
LET CLASS.DAYS.ADJ,CLASS.SYSTEM.DAYS.ADJ=0
LET LIST.CLASS.SWITCH="N"
LET OTHER="N"
LET NUMBER.OF.CODES=0
FOR EACH CODE. WHERE CLASS.ID=ID OF CLASS. AND TYPE.ABBREV="LST"  AND
    NOT (START.DATE>ENDING.DATE OR END.DATE<STARTING.DATE)
    ADD 1 TO NUMBER.OF.CODES

IF (RANGE="T" AND NUMBER.OF.CODES>14) OR NUMBER.OF.CODES>15 THEN
   BEGIN
   LET NUMBER.OF.CODES=0
   FOR EACH CRASHES.BY.CLASS. VIA CLASS.ID=ID OF CLASS. SORTED ON DESCENDING SCHEDULED.CRASHES
       BEGIN
       ADD 1 TO NUMBER.OF.CODES
       IF (RANGE="T" AND NUMBER.OF.CODES>13) OR NUMBER.OF.CODES>14 THEN
          SELECT LIST.SWITCH. VIA KEY THEN NOTHING ELSE
                 INSERT INTO LIST.SWITCH.
       END
   END %NUMBER OF CODES TEST%


PRINT " ", ABBREV OF CLASS.
LET REMAINING.COLUMNS=60
IF RANGE="T" THEN
   BEGIN
   SUBTRACT 4 FROM REMAINING.COLUMNS
   PRINT " HW "
   END
FOR EACH GROUP. WHERE TYPE.ABBREV="LST" SORTED ON POS
FOR EACH CODE. WHERE CLASS.ID=ID OF CLASS. AND
                     NOT (START.DATE>ENDING.DATE OR END.DATE<STARTING.DATE) AND
                     GROUP.ID=ID OF GROUP. SORTED ON CODE
    SELECT LIST.SWITCH. VIA CODE.ID=ID OF CODE. THEN LET OTHER="Y" ELSE
           BEGIN
           SUBTRACT 4 FROM REMAINING.COLUMNS
           IF EXCEPTION.FLAG="N"
              THEN PRINT " "
              ELSE PRINT "*"
           PRINT ABBREV OF CODE.
           END
IF OTHER="Y" THEN PRINT " OTR"
IF OTHER="Y" THEN LET OTHER="N" ELSE PRINT @TAB REMAINING.COLUMNS
PRINT "  TOT AVAIL DATE",@CR

FOR EACH SITE.
    THIS.SITE:
    BEGIN

    IF SITE.TO.REPORT="ALL" THEN NOTHING ELSE
    IF SITE.TO.REPORT=ABBREV OF SITE. THEN NOTHING ELSE
    FINISH THIS.SITE

   SITE.CHECK:
   BEGIN
    IF RANGE="T" THEN
       FOR EACH SYSTEM. WHERE CLASS.ID=ID OF CLASS. AND
           SITE.ID=ID OF SITE. AND
           ((DO.NON.APPLICABLE="N" AND APPLICABLE="Y") OR DO.NON.APPLICABLE="Y")
           AND NOT (START.DATE>ENDING.DATE OR END.DATE<STARTING.DATE)
           FINISH SITE.CHECK
    FOR EACH AVAILABILITY. VIA (CLASS.ID=ID OF CLASS.,SITE.ID=ID OF SITE.)
     FINISH SITE.CHECK
    FINISH THIS.SITE
    END

    LET LIST.SITE.SWITCH="N"
    LET SITE.SCHEDULED.UP.TIME,SITE.SCHEDULED.TIME=0
    LET SITE.SCHEDULED.UP.TIME.ADJ,SITE.SCHEDULED.TIME.ADJ=0
    LET SITE.DAYS,SITE.SYSTEM.DAYS=0
    LET SITE.DAYS.ADJ,SITE.SYSTEM.DAYS.ADJ=0

FOR EACH SYSTEM. WHERE NOT (START.DATE>ENDING.DATE OR END.DATE<STARTING.DATE)
    AND ((DO.NON.APPLICABLE="N" AND APPLICABLE="Y") OR DO.NON.APPLICABLE="Y")
    SORTED ON SYSNO,START.DATE
    THIS.SYSTEM:
    BEGIN

    SYSTEM.TIME.CHECK:
    BEGIN
    IF RANGE="T" AND CLASS.ID=ID OF CLASS. AND SITE.ID=ID OF SITE. THEN
       FINISH SYSTEM.TIME.CHECK
    SELECT AVAILABILITY. VIA (CLASS.ID=ID OF CLASS.,SITE.ID=ID OF SITE.,SYSTEM.ID=ID OF SYSTEM.)
     THEN FINISH SYSTEM.TIME.CHECK
    FINISH THIS.SYSTEM
    END %SYSTEM.TIME.CHECK%

LET LIST.SITE.SWITCH="Y"
LET LIST.CLASS.SWITCH="Y"
LET OTHER="N"
LET OTR.TOT,TOT=0
PRINT SYSNO
IF RANGE="T" THEN
   BEGIN
   SELECT LATEST.DATE. VIA (CLASS.ID=ID OF CLASS.,
                            SITE.ID=ID OF SITE.,
                            SYSTEM.ID=ID OF SYSTEM.)
   THEN
   SELECT TIME. VIA (SYSTEM.ID=ID OF SYSTEM.,
                     DATE.=DATE.(LATEST.DATE. VIA (CLASS.ID=ID OF CLASS.,
                                                   SITE.ID=ID OF SITE.,
                                                   SYSTEM.ID=ID OF SYSTEM.))-1,
                     START.TIME=0)
    THEN
   IF HW.ID(TIME. VIA EM.ID=ID OF SYSTEM.,
                       DATE.=DATE.(LATEST.DATE. VIA (CLASS.ID=ID OF CLASS.,
                                                     SITE.ID=ID OF SITE.,
                                                     SYSTEM.ID=ID OF SYSTEM.))-1,
                       START.TIME=0))=
      HW.ID(TIME. VIA (SYSTEM.ID=ID OF SYSTEM.,
                       DATE.(LATEST.DATE. VIA (CLASS.ID=ID OF CLASS.,
                                               SITE.ID=ID OF SITE.,
                                               SYSTEM.ID=ID OF SYSTEM.)),
                       START.TIME=0))
      THEN PRINT " "
      ELSE PRINT "@"
    ELSE PRINT " "
    ELSE PRINT " "
   SELECT LATEST.DATE. VIA (CLASS.ID=ID OF CLASS.,
                            SITE.ID=ID OF SITE.,
                            SYSTEM.ID=ID OF SYSTEM.)
    THEN
    SELECT TIME. VIA (SYSTEM.ID=ID OF SYSTEM.,
                      DATE.=DATE. OF LATEST.DATE.,
                      START.TIME=0)
     THEN PRINT HW.ID
     ELSE PRINT HW.ID(SYSTEM. VIA ID OF SYSTEM.)
    ELSE PRINT HW.ID(SYSTEM. VIA ID OF SYSTEM.)
   END
FOR EACH GROUP. WHERE TYPE.ABBREV="LST" SORTED ON POS
FOR EACH CODE. WHERE CLASS.ID=ID OF CLASS. AND GROUP.ID=ID OF GROUP. AND
                     NOT (START.DATE>ENDING.DATE OR END.DATE<STARTING.DATE)
                     SORTED ON CODE
    SELECT CRASHES.BY.CODE. VIA
           (CLASS.ID=ID OF CLASS.,SITE.ID=ID OF SITE.,SYSTEM.ID=ID OF SYSTEM.,
            CODE.ID=ID OF CODE.)
           THEN
               BEGIN
               ADD SCHEDULED.CRASHES TO TOT
               SELECT LIST.SWITCH. VIA KEY
                      THEN
                          BEGIN
                          LET OTHER="Y"
                          ADD SCHEDULED.CRASHES TO OTR.TOT
                          END
                      ELSE PRINT SCHEDULED.CRASHES AS "3ZN"
               END %IF CRASH FOUND%
           ELSE %IF NO CRASHES%
               SELECT LIST.SWITCH. VIA CODE.ID=ID OF CODE.
                      THEN LET OTHER="Y"
                      ELSE PRINT "   0"

IF OTHER="Y"
   THEN PRINT OTR.TOT AS "3ZN",TOT AS "4ZN"
   ELSE PRINT @TAB REMAINING.COLUMNS,TOT AS "4ZN"
LET OTHER="N"
LET OTR.TOT,TOT=0

%OUTPUT AVAILABILITY FOR THIS SYSTEM%

SELECT AVAILABILITY. VIA
       (CLASS.ID=ID OF CLASS.,SITE.ID=ID OF SITE.,SYSTEM.ID=ID OF SYSTEM.)
       THEN BEGIN
            IF SCHEDULED.TIME=0 THEN PRINT @TAB 6 ELSE
               PRINT (SCHEDULED.UP.TIME/SCHEDULED.TIME*100) AS "4Z.N"
            ADD SCHEDULED.UP.TIME TO SITE.SCHEDULED.UP.TIME,CLASS.SCHEDULED.UP.TIME
            ADD SCHEDULED.TIME TO SITE.SCHEDULED.TIME,CLASS.SCHEDULED.TIME
            IF APPLICABLE="Y" THEN
               BEGIN
               ADD SCHEDULED.TIME TO SCHEDULED.TIME.ADJ
               ADD SCHEDULED.TIME TO SITE.SCHEDULED.TIME.ADJ
               ADD SCHEDULED.TIME TO CLASS.SCHEDULED.TIME.ADJ
               ADD SCHEDULED.UP.TIME.ADJ TO SITE.SCHEDULED.UP.TIME.ADJ
               ADD SCHEDULED.UP.TIME.ADJ TO CLASS.SCHEDULED.UP.TIME.ADJ
               END
            END

IF APPLICABLE="N" THEN PRINT "*" ELSE PRINT " "

SELECT LATEST.DATE. VIA (CLASS.ID=ID OF CLASS.,SITE.ID=ID OF SITE.,SYSTEM.ID=ID OF SYSTEM.)
       THEN PRINT DATE. AS DATE "MMDD"

PRINT @CR

END %THIS.SYSTEM%

%OUTPUT TOTALS FOR SITE FOR THIS CLASS%

IF LIST.SITE.SWITCH="Y" THEN
   BEGIN
   PRINT " ", ABBREV OF SITE.
   IF RANGE="T" THEN PRINT @TAB 4
   FOR EACH GROUP. WHERE TYPE.ABBREV="LST" SORTED ON POS
   FOR EACH CODE. WHERE CLASS.ID=ID OF CLASS. AND GROUP.ID=ID OF GROUP.
       AND NOT (START.DATE>ENDING.DATE OR END.DATE<STARTING.DATE)
       SORTED ON CODE
       BEGIN
       LET CODE.TOTAL=0
       FOR EACH CRASHES.BY.CODE. VIA
           (CLASS.ID=ID OF CLASS.,SITE.ID=ID OF SITE.), WHERE
            CODE.ID=ID OF CODE.
           ADD SCHEDULED.CRASHES TO CODE.TOTAL,TOT
       SELECT LIST.SWITCH. VIA CODE.ID=ID OF CODE.
              THEN BEGIN
                   LET OTHER="Y"
                   ADD CODE.TOTAL TO OTR.TOT
                   END
              ELSE PRINT CODE.TOTAL AS "3ZN"
       END %EACH CODE%
   IF OTHER="Y"
      THEN PRINT OTR.TOT AS "3ZN",TOT AS "4ZN"
      ELSE PRINT @TAB REMAINING.COLUMNS,TOT AS "4ZN"

%OUTPUT SITE AVAILABILITY FOR THIS CLASS%

   IF SITE.SCHEDULED.TIME=0 THEN PRINT @TAB 6 ELSE
      PRINT (SITE.SCHEDULED.UP.TIME/SITE.SCHEDULED.TIME*100) AS "4Z.N"

%OUTPUT NUMBER OF CRASHES PER SYSTEM PER MONTY%

   FOR EACH SYSTEM.DAYS. VIA (CLASS.ID=ID OF CLASS.,SITE.ID=ID OF SITE.)
       BEGIN
       ADD SCHEDULED.SYSTEM.DAYS TO SITE.SYSTEM.DAYS,CLASS.SYSTEM.DAYS
       ADD 1 TO SITE.DAYS
       END
   IF SITE.SYSTEM.DAYS=0 THEN NOTHING ELSE
      PRINT (TOT*SITE.DAYS/SITE.SYSTEM.DAYS/MONTYS) AS "3Z.N"

%OUTPUT SITE CRASH TOTALS THAT COUNT IN THE INCENTIVE PLAN%

IF PRINT.ADJUSTED="N" THEN PRINT @CR ELSE
BEGIN
PRINT @CR," *  ",@TAB TO 65

LET TOT=0
FOR EACH CRASHES.BY.CODE. VIA (CLASS.ID=ID OF CLASS.,
    SITE.ID=ID OF SITE.),WHERE
    NOT (START.DATE(CODE. VIA ID=CODE.ID)>ENDING.DATE OR
         END.DATE(CODE. VIA ID=CODE.ID)<STARTING.DATE) AND
    TYPE.ABBREV(CODE. VIA ID=CODE.ID)="LST" AND
    EXCEPTION.FLAG(CODE. VIA ID=CODE.ID)="N"
    ADD SCHEDULED.CRASHES.ADJ TO TOT

PRINT TOT AS "4ZN"

%OUTPUT INCENTIVE PLAN AVAILABILITY%

IF SITE.SCHEDULED.TIME.ADJ=0
   THEN PRINT "      "
   ELSE PRINT (SITE.SCHEDULED.UP.TIME.ADJ/SITE.SCHEDULED.TIME.ADJ*100) AS "4Z.N"

%OUTPUT CRASHES PER MACHINE FOR INCENTIVE PLAN%

FOR EACH SYSTEM.DAYS. VIA (CLASS.ID=ID OF CLASS.,SITE.ID=ID OF SITE.)
    BEGIN
    ADD SCHEDULED.SYSTEM.DAYS.ADJ TO SITE.SYSTEM.DAYS.ADJ,CLASS.SYSTEM.DAYS.ADJ
    IF SCHEDULED.SYSTEM.DAYS.ADJ>0 THEN ADD 1 TO SITE.DAYS.ADJ
    END
IF SITE.SYSTEM.DAYS.ADJ=0 THEN NOTHING ELSE
   PRINT (TOT*SITE.DAYS.ADJ/SITE.SYSTEM.DAYS.ADJ/MONTYS) AS "3Z.N"
END %IF PRINT.ADJUSTED="Y"%

   PRINT @CR
   LET OTR.TOT,TOT=0

   END %IF LIST.SITE.SWITCH="Y"%

END %THIS SITE%

%OUTPUT TOTALS FOR THIS CLASS%

IF LIST.CLASS.SWITCH="Y" THEN
   BEGIN
   LET OTHER="N"
   LET OTR.TOT,TOT=0
   PRINT " TOT"
   IF RANGE="T" THEN PRINT @TAB 4
   FOR EACH GROUP. WHERE TYPE.ABBREV="LST" SORTED ON POS
   FOR EACH CODE. WHERE CLASS.ID=ID OF CLASS. AND GROUP.ID=ID OF GROUP.
       AND NOT (START.DATE>ENDING.DATE OR END.DATE<STARTING.DATE)
       SORTED ON CODE
       SELECT CRASHES.BY.CLASS. VIA (CLASS.ID,CODE.ID=ID OF CODE.)
              THEN SELECT LIST.SWITCH. VIA KEY
                   THEN BEGIN
                        LET OTHER="Y"
                        ADD SCHEDULED.CRASHES TO OTR.TOT,TOT
                        END
                   ELSE BEGIN
                           ADD SCHEDULED.CRASHES TO TOT
                           PRINT SCHEDULED.CRASHES AS "3ZN"
                           END
              ELSE ABORT "******PROGRAM ERROR*****"
    IF OTHER="Y"
       THEN PRINT OTR.TOT AS "3ZN",TOT AS "4ZN"
       ELSE PRINT @TAB REMAINING.COLUMNS,TOT AS "4ZN"

%OUTPUT CLASS AVAILBILITY%

    IF CLASS.SCHEDULED.TIME=0 THEN PRINT @TAB 6 ELSE
       PRINT (CLASS.SCHEDULED.UP.TIME/CLASS.SCHEDULED.TIME*100) AS "4Z.N"

%GET NUMBER OF DAYS ANY SYSTEM WAS ON LINE FOR THIS CLASS%

    LET CURRENT.DATE=STARTING.DATE
    WHILE CURRENT.DATE<=ENDING.DATE DO
    BEGIN
    THIS.DAY:
    FOR EACH SYSTEM.DAYS. VIA CLASS.ID=ID OF CLASS.,
        WHERE DATE.=CURRENT.DATE
        BEGIN
        ADD 1 TO CLASS.DAYS
        FINISH THIS.DAY
        END
    ADD 1 TO CURRENT.DATE
    END %WHILE LOOP FOR THIS DAY%

    IF CLASS.SYSTEM.DAYS=0 THEN NOTHING ELSE
       PRINT (TOT*CLASS.DAYS/CLASS.SYSTEM.DAYS/MONTYS) AS "3Z.N"

%OUTPUT CLASS INCENTIVE PLAN INFORMATION%

IF PRINT.ADJUSTED="N" THEN PRINT @CR ELSE
BEGIN
PRINT @CR," *  ",@TAB TO 65

LET TOT=0
FOR EACH CRASHES.BY.CLASS. VIA CLASS.ID=ID OF CLASS., WHERE
    NOT (START.DATE(CODE. VIA ID=CODE.ID)>ENDING.DATE OR
         END.DATE(CODE. VIA ID=CODE.ID)<STARTING.DATE) AND
    TYPE.ABBREV(CODE. VIA ID=CODE.ID)="LST" AND
    EXCEPTION.FLAG(CODE. VIA ID=CODE.ID)="N"
    ADD SCHEDULED.CRASHES.ADJ TO TOT

PRINT TOT AS "4ZN"

%OUTPUT INCENTIVE PLAN AVAILABILITY%

IF CLASS.SCHEDULED.TIME.ADJ=0
   THEN PRINT "      "
   ELSE PRINT (CLASS.SCHEDULED.UP.TIME.ADJ/CLASS.SCHEDULED.TIME.ADJ*100) AS "4Z.N"

LET CURRENT.DATE=STARTING.DATE
WHILE CURRENT.DATE<=ENDING.DATE DO
BEGIN
THIS.DAY.ADJ:
 FOR EACH SYSTEM.DAYS. VIA CLASS.ID=ID OF CLASS.,
     WHERE DATE.=CURRENT.DATE AND SCHEDULED.SYSTEM.DAYS.ADJ#0
     BEGIN
     ADD 1 TO CLASS.DAYS.ADJ
     FINISH THIS.DAY.ADJ
     END
 ADD 1 TO CURRENT.DATE
END

IF CLASS.SYSTEM.DAYS.ADJ=0 THEN NOTHING ELSE
   PRINT (TOT*CLASS.DAYS.ADJ/CLASS.SYSTEM.DAYS.ADJ/MONTYS) AS "3Z.N"
END %IF PRINT.ADJUSTED="N"%

    PRINT @CR

    END %IF LIST.CLASS.SWITCH="Y"%

END %FOR EACH CLASS.%

%TYPE OUT GROUP CODE HEADING ABBREVIATIONS%

LET REMAINING.COLUMNS=60
PRINT " GRP"
FOR EACH GROUP. WHERE TYPE.ABBREV="LST" SORTED ON POS
    BEGIN
    PRINT " ",ABBREV
    SUBTRACT 4 FROM REMAINING.COLUMNS
    END
PRINT @TAB REMAINING.COLUMNS,"  TOT AVAIL  CPS",@CR
PRINT "   %"
SUBTRACT 4 FROM REMAINING.COLUMNS
FOR EACH GROUP. WHERE TYPE.ABBREV="LST" SORTED ON POS
    BEGIN
    PRINT " ",ABBREV
    SUBTRACT 4 FROM REMAINING.COLUMNS
    END

%PRINT OUT GROUP CRASH TOTALS%

LET REMAINING.COLUMNS=60
LET TOT=0
PRINT @CR," TOT"
FOR EACH GROUP. WHERE TYPE.ABBREV="LST" SORTED ON POS
    SELECT GROUP.CRASHES. VIA GROUP.ID=ID OF GROUP.
     THEN BEGIN
          PRINT GROUP.CRASHES AS "3ZN"
          ADD GROUP.CRASHES TO TOT
          SUBTRACT 4 FROM REMAINING.COLUMNS
          END
     ELSE ABORT "*****PROGRAM ERROR*****"

%PRINT OUT GROUP TOTAL PERCENTAGES%

PRINT @CR," TOT"
SUBTRACT 4 FROM REMAINING.COLUMNS
FOR EACH GROUP. WHERE TYPE.ABBREV="LST" SORTED ON POS
    SELECT GROUP.CRASHES. VIA GROUP.ID=ID OF GROUP.
     THEN BEGIN
          IF TOT=0 THEN PRINT "   0" ELSE
             PRINT ((GROUP.CRASHES AS "4N.4N"/TOT AS "4N.4N")*100) AS "3ZN"
          SUBTRACT 4 FROM REMAINING.COLUMNS
          END
      ELSE ABORT "**PROGRAM ERROR**"
PRINT @TAB TO 65 , TOT AS "4ZN"

%TALLY TOTAL AVAILABILITY%

LET CLASS.SCHEDULED.UP.TIME,CLASS.SCHEDULED.TIME=0
LET CLASS.SCHEDULED.UP.TIME.ADJ,CLASS.SCHEDULED.TIME.ADJ=0

FOR EACH AVAILABILITY.
    BEGIN
    ADD SCHEDULED.UP.TIME TO CLASS.SCHEDULED.UP.TIME
    ADD SCHEDULED.TIME TO CLASS.SCHEDULED.TIME
    IF APPLICABLE(SYSTEM. VIA ID=SYSTEM.ID)="Y" THEN
       BEGIN
       ADD SCHEDULED.UP.TIME.ADJ TO CLASS.SCHEDULED.UP.TIME.ADJ
       ADD SCHEDULED.TIME.ADJ TO CLASS.SCHEDULED.TIME.ADJ
       END
    END

IF CLASS.SCHEDULED.TIME = 0
  THEN PRINT "      "
  ELSE PRINT ((CLASS.SCHEDULED.UP.TIME / CLASS.SCHEDULED.TIME) * 100) AS "4Z.N"

%FIGURE OUT AND PRINT OUT CRASHES PER MACHINE, ALL MACHINES%

LET CLASS.DAYS=0
LET CURRENT.DATE=STARTING.DATE
WHILE CURRENT.DATE<=ENDING.DATE DO
 BEGIN
 THISDAY:
 FOR EACH SYSTEM.DAYS. WHERE DATE.=CURRENT.DATE
  BEGIN
  ADD 1 TO CLASS.DAYS
  FINISH THISDAY
  END
 ADD 1 TO CURRENT.DATE
 END %WHILE LOOP%

LET CLASS.SYSTEM.DAYS=0
FOR EACH SYSTEM.DAYS. WHERE DATE.>=STARTING.DATE AND DATE.<=ENDING.DATE
 ADD SCHEDULED.SYSTEM.DAYS TO CLASS.SYSTEM.DAYS

IF CLASS.SYSTEM.DAYS=0 THEN NOTHING ELSE
   PRINT (TOT*CLASS.DAYS/CLASS.SYSTEM.DAYS/MONTYS) AS "3Z.N"

%OUTPUT TOTALS FOR SYSTEMS THAT COUNT, BUT INCLUDE LOST TIME AND%
%CRASHES DUE TO CODES THAT DO NOT COUNT IN THE INCENTIVE PLAN%

IF PRINT.ADJUSTED="N" THEN PRINT @CR ELSE
BEGIN

PRINT @CR," *  ",@TAB TO 65

%TOTAL CRASHES%

LET TOT=0
FOR EACH CRASHES.BY.CLASS. WHERE
    NOT (START.DATE(CODE. VIA ID=CODE.ID)>ENDING.DATE OR
         END.DATE(CODE. VIA ID=CODE.ID)<STARTING.DATE) AND
    TYPE.ABBREV(CODE. VIA ID=CODE.ID)="LST"
    ADD SCHEDULED.CRASHES.ADJ TO TOT

PRINT TOT AS "4ZN"

%AVAILABILITY%

LET CLASS.SCHEDULED.UP.TIME,CLASS.SCHEDULED.TIME=0
FOR EACH AVAILABILITY. WHERE APPLICABLE(SYSTEM. VIA ID=SYSTEM.ID)="Y"
    BEGIN
    ADD SCHEDULED.UP.TIME TO CLASS.SCHEDULED.UP.TIME
    ADD SCHEDULED.TIME TO CLASS.SCHEDULED.TIME
    END

IF CLASS.SCHEDULED.TIME=0 THEN PRINT @TAB 6 ELSE
PRINT (CLASS.SCHEDULED.UP.TIME/CLASS.SCHEDULED.TIME*100) AS "4Z.N"

%CRASHES PER MACHINE%

LET CLASS.DAYS=0
LET CURRENT.DATE=STARTING.DATE
WHILE CURRENT.DATE<=ENDING.DATE DO
 BEGIN
 THISDAY.1:
 FOR EACH SYSTEM.DAYS. WHERE DATE.=CURRENT.DATE AND
  SCHEDULED.SYSTEM.DAYS.ADJ>0
  BEGIN
  ADD 1 TO CLASS.DAYS
  FINISH THISDAY.1
  END
 ADD 1 TO CURRENT.DATE
END

LET CLASS.SYSTEM.DAYS=0
FOR EACH SYSTEM.DAYS. WHERE DATE.>=STARTING.DATE AND DATE.<=ENDING.DATE
 ADD SCHEDULED.SYSTEM.DAYS.ADJ TO CLASS.SYSTEM.DAYS

IF CLASS.SYSTEM.DAYS=0
 THEN NOTHING
 ELSE PRINT (TOT*CLASS.DAYS/CLASS.SYSTEM.DAYS/MONTYS) AS "3Z.N"

%OUTPUT INCENTIVE PLAN ADJUSTED TOTALS%
%DO NOT COUNT SYSTEMS OR CODES THAT DO NOT COUNT IN INCENTIVE PLAN%

PRINT @CR," *  ",@TAB TO 65

%NUMBER OF CRASHES, TOTAL%

LET TOT=0
FOR EACH CRASHES.BY.CLASS. WHERE
    NOT (START.DATE(CODE. VIA ID=CODE.ID)>ENDING.DATE OR
         END.DATE(CODE. VIA ID=CODE.ID)<STARTING.DATE) AND
    TYPE.ABBREV(CODE. VIA ID=CODE.ID)="LST" AND
    EXCEPTION.FLAG(CODE. VIA ID=CODE.ID)="N"
    ADD SCHEDULED.CRASHES.ADJ TO TOT

PRINT TOT AS "4ZN"

%AVAILABILITY%

IF CLASS.SCHEDULED.TIME=0 THEN PRINT @TAB 6 ELSE
PRINT (CLASS.SCHEDULED.UP.TIME.ADJ/CLASS.SCHEDULED.TIME.ADJ*100) AS "4Z.N"

%CRASHES PER MACHINE%

LET CLASS.DAYS=0
LET CURRENT.DATE=STARTING.DATE
WHILE CURRENT.DATE<=ENDING.DATE DO
 BEGIN
 THISDAY.ADJ:
 FOR EACH SYSTEM.DAYS. WHERE DATE.=CURRENT.DATE AND
  SCHEDULED.SYSTEM.DAYS.ADJ>0
  BEGIN
  ADD 1 TO CLASS.DAYS
  FINISH THISDAY.ADJ
  END
 ADD 1 TO CURRENT.DATE
END %WHILE LOOP%

LET CLASS.SYSTEM.DAYS=0
FOR EACH SYSTEM.DAYS. WHERE DATE.>=STARTING.DATE AND DATE.<=
    ENDING.DATE
 ADD SCHEDULED.SYSTEM.DAYS.ADJ TO CLASS.SYSTEM.DAYS

IF CLASS.SYSTEM.DAYS=0
   THEN NOTHING
   ELSE PRINT (TOT*CLASS.DAYS/CLASS.SYSTEM.DAYS/MONTYS) AS "3Z.N"
END %IF PRINT.ADJUSTED="Y"%

PRINT @CR

END %REPORT%

END
 )@&