PROCEDURE COMP.SITE.MONTHLY
BEGIN

FIELDS

NUMBER.OF.MONTYS        AS "NN.3N",
PREVIOUS.SYSTEM.ID              SAME AS SYSTEM.ID,
PREVIOUS.DATE           SAME AS DATE.,
PREVIOUS.SCHEDULED.DATE SAME AS DATE.,
PREVIOUS.PRIME.DATE     SAME AS DATE.,
TOTAL.SYSTEM.DAYS       AS "6N",
DAYS                    AS "6N.3N",
SIX.MONTY.DAYS          AS "7N.3N",
SYSTEM.DAYS             AS "6N.3N",
SIX.MONTY.SYSTEM.DAYS   AS "7N.3N",
SCHEDULED.SYSTEM.DAYS   SAME AS TOTAL.SYSTEM.DAYS,
PRIME.SYSTEM.DAYS       SAME AS TOTAL.SYSTEM.DAYS,
MONTY.COUNT             AS "N",
DATE.STRING             AS "8C",
STARTING.DATE           SAME AS DATE.,
MONTY.NAME.AND.YE.R     AS DATE "MMM YY",
ENDING.DATE.INPUT       AS DATE "MM-YY",
ENDING.DATE             SAME AS DATE.,
MONTY                   AS "NN",
DAY.OF.MONTY            AS "NN",
YE.R                    AS "NN",
PERIODS                 AS "4N",
MULTIPLE.REPORTS        AS "C" DEFAULT "N",
SITE.INPUT              AS "3C",
CLASS.INPUT             AS "3C",
TOTAL.UP.TIME           AS "6ZN.5N",
TOTAL.SCHEDULED.UP.TIME AS "6ZN.5N",
TOTAL.PRIME.UP.TIME     AS "6ZN.5N",
TOTAL.ADJUSTED.UP.TIME  AS "6ZN.5N",
TOTAL.TIME              AS "6ZN.5N",
TOTAL.SCHEDULED.TIME    AS "6ZN.5N",
TOTAL.PRIME.TIME        AS "6ZN.5N",
SIX.MONTY.TOTAL         AS "6ZN",
SIX.MONTY.UP.TOTAL      AS "6ZN.5N",
DD                      AS DATE "   MMM YY",
PRIME.CRASH.FLAG        AS "N",
SCHEDULED.CRASH.FLAG    AS "N",
CRASH.FLAG              AS "N",
CURRENT.DATE            SAME AS DATE.,
ZERO                    AS "N",
ELAPSED.TIME            AS "6ZN",

UN.SCHEDULED.TIME       AS "6ZN",
SCHEDULED.TIME          AS "6ZN",
NON.PRIME.TIME          AS "6ZN",
PRIME.TIME              AS "6ZN",

ALL.CRASHES             AS "2ZN.NNN",
SCHEDULED.CRASHES       AS "2ZN.NNN",
PRIME.CRASHES           AS "2ZN.NNN",
ADJUSTED.CRASHES        AS "2ZN.NNN",
SIX.MONTY.CRASHES       AS "3ZN.NNN"

CONTROLS FOR RELATIONS CONCURRENT UPDATE

REPORT TO OUTPUT.FILE PAGE.SIZE 1

RELATION TOTALS. IS
KEY     MONTY,
        CODE.ID
DATA    UN.SCHEDULED.TIME,
        SCHEDULED.TIME,
        NON.PRIME.TIME,
        PRIME.TIME

RELATION GROUP.TOTALS. IS
KEY     MONTY,
        GROUP.ID
DATA    UN.SCHEDULED.TIME,
        SCHEDULED.TIME,
        NON.PRIME.TIME,
        PRIME.TIME

RELATION AVAILABILITY. IS
KEY     MONTY
DATA    TOTAL.UP.TIME,
        TOTAL.TIME,
        TOTAL.PRIME.TIME,
        TOTAL.PRIME.UP.TIME,
        TOTAL.SCHEDULED.TIME,
        TOTAL.SCHEDULED.UP.TIME

RELATION CRASH. IS
KEY     MONTY,
        CODE.ID
DATA    ALL.CRASHES,
        SCHEDULED.CRASHES,
        PRIME.CRASHES,
        ADJUSTED.CRASHES

RELATION CRASH.TOTALS. IS
KEY     MONTY
DATA    ALL.CRASHES,
        SCHEDULED.CRASHES,
        PRIME.CRASHES,
        ADJUSTED.CRASHES

RELATION PERIOD. IS
KEY     STARTING.DATE
DATA    ENDING.DATE

RELATION SYSTEM.DAYS. IS
KEY     MONTY,
        DAY.OF.MONTY
DATA    TOTAL.SYSTEM.DAYS,
        SCHEDULED.SYSTEM.DAYS,
        PRIME.SYSTEM.DAYS

TYPE "ENDING DATE OF REPORT AS MMM YY: " ACCEPT MONTY.NAME.AND.YE.R
LET ENDING.DATE.INPUT=MONTY.NAME.AND.YE.R

SET.END.DATE:
BEGIN
LET DATE.STRING=SUBSTR(ENDING.DATE.INPUT AS "5C",1,2)+"-31-" AS "4C"+
    SUBSTR(ENDING.DATE.INPUT AS "5C",-2)
IF DATE.STRING IS ENDING.DATE THEN
   BEGIN
   LET ENDING.DATE=DATE.STRING AS DATE "MM-DD-YY"
   FINISH SET.END.DATE
   END

LET DATE.STRING=SUBSTR(ENDING.DATE.INPUT AS "5C",1,2)+"-30-" AS "4C"+
    SUBSTR(ENDING.DATE.INPUT AS "5C",-2)
IF DATE.STRING IS ENDING.DATE THEN
   BEGIN
   LET ENDING.DATE=DATE.STRING AS DATE "MM-DD-YY"
   FINISH SET.END.DATE
   END

LET DATE.STRING=SUBSTR(ENDING.DATE.INPUT AS "5C",1,2)+"-29-" AS "4C"+
    SUBSTR(ENDING.DATE.INPUT AS "5C",-2)
IF DATE.STRING IS ENDING.DATE THEN
   BEGIN
   LET ENDING.DATE=DATE.STRING AS DATE "MM-DD-YY"
   FINISH SET.END.DATE
   END

LET DATE.STRING=SUBSTR(ENDING.DATE.INPUT AS "5C",1,2)+"-28-" AS "4C"+
    SUBSTR(ENDING.DATE.INPUT AS "5C",-2)
IF DATE.STRING IS ENDING.DATE THEN
   LET ENDING.DATE=DATE.STRING AS DATE "MM-DD-YY"

END %SET.END.DATE%

LET MONTY=SUBSTR(ENDING.DATE AS "8C",1,2) AS "NN"
LET YE.R =SUBSTR(ENDING.DATE AS "8C",7,2) AS "NN"

IF MONTY>=6 THEN SUBTRACT 5 FROM MONTY ELSE
   BEGIN
   SUBTRACT 1 FROM YE.R
   ADD 7 TO MONTY
   END

LET DATE.STRING=MONTY AS "CC"+"-01-" AS "4C"
LET DATE.STRING=SUBSTR(DATE.STRING,1,6)+YE.R AS "CC"
LET STARTING.DATE=DATE.STRING AS DATE "MM-DD-YY"

GET.PERIODS:
BEGIN
TYPE "PERIODS: " ACCEPT PERIODS
IF PERIODS<=0 THEN REPEAT GET.PERIODS
END %GET.PERIODS%

INSERT INTO PERIOD.

WHILE PERIODS>1 DO
      BEGIN
      SUBTRACT 1 FROM PERIODS
      LET ENDING.DATE=STARTING.DATE-1
      LET MONTY=SUBSTR(ENDING.DATE AS "8C",1,2) AS "NN"
      LET YE.R =SUBSTR(ENDING.DATE AS "8C",7,2) AS "NN"
      IF MONTY>=6 THEN SUBTRACT 5 FROM MONTY ELSE
         BEGIN
         SUBTRACT 1 FROM YE.R
         ADD 7 TO MONTY
         END
      LET DATE.STRING=MONTY AS "CC"+"-01-" AS "4C"
      LET DATE.STRING=SUBSTR(DATE.STRING,1,6)+YE.R AS "CC"
      LET STARTING.DATE=DATE.STRING AS DATE "MM-DD-YY"
      INSERT INTO PERIOD.
      END %WHILE%

   GET.SITE:
   BEGIN
   TYPE "SITE: " ACCEPT SITE.INPUT
   IF SITE.INPUT="ALL" THEN FINISH GET.SITE
   FOR EACH SITE. IF ABBREV=SITE.INPUT THEN FINISH GET.SITE
   TYPE "NO SUCH SITE",@CR
   REPEAT GET.SITE
 END %GET.SITE%

 GET.CLASS:
 BEGIN
 TYPE "CLASS: " ACCEPT CLASS.INPUT
 IF CLASS.INPUT="ALL" THEN FINISH GET.CLASS
 FOR EACH CLASS. IF ABBREV=CLASS.INPUT THEN FINISH GET.CLASS
 TYPE "NO SUCH CLASS",@CR
 REPEAT GET.CLASS
 END %GET.CLASS%

GET.OUTPUT.FILE.NAME:
BEGIN
TYPE "OUTPUT TO: " ACCEPT OUTPUT.FILE

IF OUTPUT.FILE="TER" OR "TERM" OR "TERMI" OR "TERMIN" OR "TERMINA"
   OR "TERMINAL" THEN FINISH GET.OUTPUT.FILE.NAME
IF USER.NAME NE "MURMAINT" THEN LET REPORT.DIRECTORY = "("+USER.NAME+")"
IF SUBSTR(OUTPUT.FILE,1,1)="(" AS "C" THEN
   BEGIN
   TYPE @CR,"REPORTS ARE FORCED INTO USER NAME ",REPORT.DIRECTORY
   TYPE @CR,"PLEASE TYPE IN A FILE NAME ONLY",@CR,@CR
   REPEAT GET.OUTPUT.FILE.NAME
   END
  ELSE
   BEGIN
   LET OUTPUT.FILE=REPORT.DIRECTORY+OUTPUT.FILE
   TYPE "REPORT WILL BE ON FILE ",OUTPUT.FILE,@CR
   END
END %GET.OUTPUT.FILE.NAME%


WRITE.REPORT:
WRITE REPORT BEGIN %OPEN UP OUTPUT FILE%

FOR EACH PERIOD.
      BEGIN

FOR EACH SITE.
    SITE.REPORT:
    BEGIN

       IF SITE.INPUT="ALL" THEN NOTHING ELSE
       IF SITE.INPUT=ABBREV OF SITE. THEN NOTHING ELSE
       FINISH SITE.REPORT

FOR EACH CLASS.
    CLASS.REPORT:
    BEGIN
      IF CLASS.INPUT="ALL" THEN NOTHING ELSE
      IF CLASS.INPUT=ABBREV OF CLASS. THEN NOTHING ELSE
      FINISH CLASS.REPORT

%IF THIS SITE/CLASS HAS NO TIME THEN SKIP IT%

    CHECK.FOR.TIME:
    BEGIN
     FOR EACH TIME. WHERE (DATE.>=STARTING.DATE AND <=ENDING.DATE) AND
         SITE.ID=ID OF SITE. AND CLASS.ID=ID OF CLASS. FINISH CHECK.FOR.TIME
    FINISH CLASS.REPORT
    END %CHECK.FOR.TIME%

%INITIALIZE RELATIONS%

DELETE FROM TOTALS. ALL
DELETE FROM GROUP.TOTALS. ALL
DELETE FROM AVAILABILITY. ALL
DELETE FROM CRASH. ALL
DELETE FROM CRASH.TOTALS. ALL
DELETE FROM SYSTEM.DAYS. ALL

LET DD=STARTING.DATE
LET PREVIOUS.DATE,PREVIOUS.SCHEDULED.DATE,PREVIOUS.PRIME.DATE=
    STARTING.DATE-1
LET PREVIOUS.SYSTEM.ID=0

 FOR EACH TIME. WHERE (DATE.>=STARTING.DATE AND <=ENDING.DATE) AND
     SITE.ID=ID OF SITE. AND CLASS.ID=ID OF CLASS.
     SORTED ON SYSTEM.ID,DATE.,START.TIME
     THIS.TIME.RECORD:
     BEGIN

     IF SYSTEM.ID#PREVIOUS.SYSTEM.ID THEN
        BEGIN
        LET PREVIOUS.SYSTEM.ID=SYSTEM.ID
        LET PREVIOUS.DATE,PREVIOUS.SCHEDULED.DATE,PREVIOUS.PRIME.DATE=
            STARTING.DATE-1
        LET CRASH.FLAG,SCHEDULED.CRASH.FLAG,PRIME.CRASH.FLAG=0
        END

     IF PREVIOUS.DATE#DATE. OR
     (SCHED.FLAG=1 AND PREVIOUS.SCHEDULED.DATE#DATE.) OR
     (PRIME.FLAG=1 AND PREVIOUS.PRIME.DATE#DATE.) THEN
        BEGIN
        SELECT SYSTEM.DAYS. VIA
               (MONTY=((DATE. AS DATE "MM") AS "CC") AS "NN",
                DAY.OF.MONTY=((DATE. AS DATE "DD") AS "CC") AS "NN")
           THEN
               BEGIN
              IF PREVIOUS.DATE#DATE. THEN
                 BEGIN
                 LET PREVIOUS.DATE=DATE.
                 ADD 1 TO TOTAL.SYSTEM.DAYS
                 END
             IF SCHED.FLAG=1 AND PREVIOUS.SCHEDULED.DATE#DATE. THEN
                BEGIN
                ADD 1 TO SCHEDULED.SYSTEM.DAYS
                LET PREVIOUS.SCHEDULED.DATE=DATE.
                END
             IF PRIME.FLAG=1 AND PREVIOUS.PRIME.DATE#DATE. THEN
                BEGIN
                ADD 1 TO PRIME.SYSTEM.DAYS
                LET PREVIOUS.PRIME.DATE=DATE.
                END
             ALTER SYSTEM.DAYS.
             END
           ELSE
               BEGIN
               LET MONTY=((DATE. AS DATE "MM") AS "CC")AS "NN"
               LET DAY.OF.MONTY=((DATE. AS DATE "DD") AS "CC") AS "NN"
               LET TOTAL.SYSTEM.DAYS=1
               LET SCHEDULED.SYSTEM.DAYS,PRIME.SYSTEM.DAYS=0
               LET PREVIOUS.DATE=DATE.
               IF SCHED.FLAG=1 THEN
                  BEGIN
                  LET SCHEDULED.SYSTEM.DAYS=1
                  LET PREVIOUS.SCHEDULED.DATE=DATE.
                  END
               IF PRIME.FLAG=1 THEN
                  BEGIN
                  LET PRIME.SYSTEM.DAYS=1
                  LET PREVIOUS.PRIME.DATE=DATE.
                  END
               INSERT INTO SYSTEM.DAYS.
               END %IF NO SELECTION%
             END %IF SELECTION NECESSARY%

     LET ELAPSED.TIME=STOP.TIME-START.TIME
     SELECT.TOTALS:
        BEGIN
         SELECT TOTALS. VIA (MONTY=((DATE. AS DATE "MM") AS "CC") AS "NN",CODE.ID)
                THEN
                    BEGIN
                    CONDITIONAL ON SCHED.FLAG
                                BEGIN
                                1: ADD ELAPSED.TIME TO SCHEDULED.TIME
                                2: ADD ELAPSED.TIME TO UN.SCHEDULED.TIME
                                END
                    CONDITIONAL ON PRIME.FLAG
                                BEGIN
                                1: ADD ELAPSED.TIME TO PRIME.TIME
                                2: ADD ELAPSED.TIME TO NON.PRIME.TIME
                                END
                    ALTER TOTALS.
                    END
               ELSE
                   BEGIN
                   LET MONTY=((DATE. AS DATE "MM") AS "CC") AS "NN"
                   INSERT INTO TOTALS. USING
                           (ZERO FOR UN.SCHEDULED.TIME,
                           ZERO FOR SCHEDULED.TIME,
                           ZERO FOR NON.PRIME.TIME,
                           ZERO FOR PRIME.TIME)
                   REPEAT SELECT.TOTALS
                   END
        END %SELECT.TOTALS%
     SELECT.CRASH:
        BEGIN
        SELECT CRASH. VIA (MONTY=((DATE. AS DATE "MM") AS "CC") AS "NN",CODE.ID)
               THEN
                   BEGIN
                   IF CRASH.FLAG=1 AND TYPE.ABBREV(CODE. VIA ID=CODE.ID)="LST"
                      THEN ADD 1 TO ALL.CRASHES
                   IF TYPE.ABBREV(CODE. VIA ID=CODE.ID)="UP"
                      THEN LET CRASH.FLAG=1
                      ELSE LET CRASH.FLAG=0
                   CONDITIONAL ON SCHED.FLAG
                       BEGIN
                       1: CONDITIONAL ON TYPE.ABBREV(CODE. VIA ID=CODE.ID)
                              BEGIN
                               "UP": LET SCHEDULED.CRASH.FLAG=1
                              "SDN": LET SCHEDULED.CRASH.FLAG=0
                              "LST": BEGIN
                                     IF SCHEDULED.CRASH.FLAG=1 THEN
                                        BEGIN
                                        ADD 1 TO SCHEDULED.CRASHES
                                        IF EXCEPTION.FLAG(CODE. VIA ID=CODE.ID)="N"
                                           THEN ADD 1 TO ADJUSTED.CRASHES
                                           END
                                     LET SCHEDULED.CRASH.FLAG=0
                                     END
                              END
                       2: LET SCHEDULED.CRASH.FLAG=0
                       END %OF CONDITIONAL ON SCHED.FLAG%
                   CONDITIONAL ON PRIME.FLAG
                       BEGIN
                       1: BEGIN
                          CONDITIONAL ON TYPE.ABBREV(CODE. VIA ID=CODE.ID)
                              BEGIN
                               "UP": LET PRIME.CRASH.FLAG=1
                              "SDN": LET PRIME.CRASH.FLAG=0
                              "LST": BEGIN
                                     IF PRIME.CRASH.FLAG=1 THEN ADD 1 TO PRIME.CRASHES
                                     LET PRIME.CRASH.FLAG=0
                                     END
                              END
                          END
                       2: LET PRIME.CRASH.FLAG=0
                       END
                    ALTER CRASH.
                    END
               ELSE
                   BEGIN
                   LET MONTY=((DATE. AS DATE "MM") AS "CC") AS "NN"
                   INSERT INTO CRASH. USING
                          (ZERO FOR ALL.CRASHES,
                          ZERO FOR SCHEDULED.CRASHES,
                           ZERO FOR PRIME.CRASHES,
                          ZERO FOR ADJUSTED.CRASHES)
                   REPEAT SELECT.CRASH
                   END
        END %SELECT.CRASH%
     END %FOR EACH TIME%

%PUT CODE TOTALS INTO GROUP TOTALS%

FOR EACH TOTALS.
 SELECT GROUP.TOTALS. VIA (MONTY,GROUP.ID=GROUP.ID(CODE. VIA ID=CODE.ID)) THEN
        BEGIN
        ADD UN.SCHEDULED.TIME OF TOTALS. TO UN.SCHEDULED.TIME OF GROUP.TOTALS.
        ADD SCHEDULED.TIME OF TOTALS. TO SCHEDULED.TIME OF GROUP.TOTALS.
        ADD NON.PRIME.TIME OF TOTALS. TO NON.PRIME.TIME OF GROUP.TOTALS.
        ADD PRIME.TIME OF TOTALS. TO PRIME.TIME OF GROUP.TOTALS.
        ALTER GROUP.TOTALS.
        END
     ELSE INSERT INTO GROUP.TOTALS. USING (GROUP.ID(CODE. VIA ID=CODE.ID) FOR GROUP.ID)

%OUTPUT REPORT HEADING%

IF MULTIPLE.REPORTS="Y" THEN PRINT @FF
LET MULTIPLE.REPORTS="Y"
PRINT @CR, @TAB 15, 'APPLICABLE AND NON-APPLICABLE ', TRIM(TITLE OF SITE.), ' ', TRIM(TITLE OF CLASS.), @SKIP 1
PRINT @TAB TO 17,DD,DD+31,DD+31*2,DD+31*3,DD+31*4,DD+31*5,"    TOTALS",@CR

%OUTPUT INDIVIDUAL CODE TOTALS%

 FOR EACH GROUP. WHERE TYPE.ABBREV="UP" OR "SDN" OR "LST" SORTED ON POS
 FOR EACH CODE. WHERE CLASS.ID=ID OF CLASS.
  AND GROUP.ID=ID OF GROUP.
  AND NOT (START.DATE>ENDING.DATE OR END.DATE<STARTING.DATE)
  SORTED ON CODE
  BEGIN
  IF EXCEPTION.FLAG="N" THEN PRINT " " ELSE PRINT "*"
  PRINT TITLE
  LET SIX.MONTY.TOTAL=0
LET MONTY.COUNT=0
WHILE MONTY.COUNT<6 DO
 BEGIN
 LET CURRENT.DATE=STARTING.DATE+(MONTY.COUNT*31)
 ADD 1 TO MONTY.COUNT
  SELECT TOTALS. VIA (MONTY=((CURRENT.DATE AS DATE "MM") AS "CC") AS "NN",
                      CODE.ID=ID OF CODE.) THEN
   BEGIN
   LET ELAPSED.TIME=UN.SCHEDULED.TIME+SCHEDULED.TIME
   ADD ELAPSED.TIME TO SIX.MONTY.TOTAL
   PRINT (ELAPSED.TIME/60) AS "5ZB",":",
         ((ELAPSED.TIME-(ELAPSED.TIME/60)*60)) AS "NN"
   END
   ELSE PRINT @TAB 9
  IF DAYS#0 THEN ADD 1 TO NUMBER.OF.MONTYS
  END
 IF SIX.MONTY.TOTAL=0 THEN PRINT @CR ELSE
    PRINT (SIX.MONTY.TOTAL/60) AS "6ZB",":",
          ((SIX.MONTY.TOTAL-(SIX.MONTY.TOTAL/60)*60)) AS "NN",@CR
  END %SINGLE CODE OUTPUT%

%OUTPUT MONTYLY TOTALS%

PRINT @TAB TO 2,"MONTYLY TOTALS" AS "15C"
LET SIX.MONTY.TOTAL=0

LET MONTY.COUNT=0
WHILE MONTY.COUNT<6 DO
 BEGIN
 LET CURRENT.DATE=STARTING.DATE+(MONTY.COUNT*31)
 ADD 1 TO MONTY.COUNT
 LET ELAPSED.TIME=0
 FOR EACH GROUP.TOTALS. VIA MONTY=((CURRENT.DATE AS DATE "MM") AS "CC") AS "NN"
            ADD UN.SCHEDULED.TIME+SCHEDULED.TIME TO ELAPSED.TIME
 IF ELAPSED.TIME=0 THEN PRINT @TAB 9 ELSE
    PRINT (ELAPSED.TIME/60) AS "5ZB",":",
          ((ELAPSED.TIME-(ELAPSED.TIME/60)*60)) AS "NN"
 ADD ELAPSED.TIME TO SIX.MONTY.TOTAL
 END %WHILE STATMENT FOR MONTYLY TOTALS OUTPUT%

 IF SIX.MONTY.TOTAL=0 THEN PRINT @CR ELSE
    PRINT (SIX.MONTY.TOTAL/60) AS "6ZB",":",
          ((SIX.MONTY.TOTAL-(SIX.MONTY.TOTAL/60)*60)) AS "NN",@CR

%END MONTYLY TOTALS OUTPUT%

%OUTPUT SCHEDULED TIME GROUP TOTALS%

PRINT @TAB TO 28,"SCHEDULED TIME GROUP TOTALS",@CR
FOR EACH GROUP. WHERE TYPE.ABBREV="UP" OR "SDN" OR "LST" SORTED ON POS
 LIST.GROUP:
 BEGIN
 LIST.GROUP.CHECK:
      BEGIN
      FOR EACH CODE. WHERE GROUP.ID=ID OF GROUP. AND
          CLASS.ID=ID OF CLASS. AND
          NOT (START.DATE>ENDING.DATE OR END.DATE<STARTING.DATE)
          FINISH LIST.GROUP.CHECK
      FINISH LIST.GROUP %DON'T LIST THIS GROUP%
 END %LIST.GROUP.CHECK%

 PRINT @TAB TO 2,TITLE
 LET SIX.MONTY.TOTAL=0
 LET MONTY.COUNT=0
 WHILE MONTY.COUNT<6 DO
  BEGIN
  LET CURRENT.DATE=STARTING.DATE+(MONTY.COUNT*31)
  ADD 1 TO MONTY.COUNT
  LET ELAPSED.TIME=0
   SELECT GROUP.TOTALS. VIA (MONTY=((CURRENT.DATE AS DATE "MM") AS "CC") AS "NN",
          GROUP.ID=ID OF GROUP.) THEN
 BEGIN
 IF SCHEDULED.TIME=0 THEN PRINT @TAB 9 ELSE
    BEGIN
    PRINT (SCHEDULED.TIME/60) AS "5ZB",":",
        ((SCHEDULED.TIME-(SCHEDULED.TIME/60)*60)) AS "NN"
    ADD SCHEDULED.TIME TO SIX.MONTY.TOTAL
    END
  SELECT AVAILABILITY. VIA MONTY=((CURRENT.DATE AS DATE "MM") AS "CC") AS "NN" THEN
           BEGIN
           ADD UN.SCHEDULED.TIME+SCHEDULED.TIME TO TOTAL.TIME
           ADD SCHEDULED.TIME TO TOTAL.SCHEDULED.TIME
           ADD PRIME.TIME TO TOTAL.PRIME.TIME
           IF TYPE.ABBREV="UP" THEN
              BEGIN
              ADD UN.SCHEDULED.TIME+SCHEDULED.TIME TO TOTAL.UP.TIME
              ADD SCHEDULED.TIME TO TOTAL.SCHEDULED.UP.TIME
              ADD PRIME.TIME TO TOTAL.PRIME.UP.TIME
              END
           ALTER AVAILABILITY.
           END
         ELSE
              BEGIN
              LET MONTY=((CURRENT.DATE AS DATE "MM") AS "CC") AS "NN"
              LET TOTAL.TIME=UN.SCHEDULED.TIME+SCHEDULED.TIME
              LET TOTAL.SCHEDULED.TIME=SCHEDULED.TIME
              LET TOTAL.PRIME.TIME=PRIME.TIME
              LET TOTAL.UP.TIME=0
         LET TOTAL.SCHEDULED.UP.TIME=0
              LET TOTAL.PRIME.UP.TIME=0
              IF TYPE.ABBREV="UP" THEN
                 BEGIN
                 LET TOTAL.UP.TIME=UN.SCHEDULED.TIME+SCHEDULED.TIME
                 LET TOTAL.SCHEDULED.UP.TIME=SCHEDULED.TIME
                 LET TOTAL.PRIME.UP.TIME=PRIME.TIME
                 END
              INSERT INTO AVAILABILITY.
              END
  END %GROUP SELECTION%
  ELSE %IF NO SELECTION% PRINT @TAB 9

  END %WHILE%
 IF SIX.MONTY.TOTAL=0 THEN PRINT @CR ELSE
    PRINT (SIX.MONTY.TOTAL/60) AS "6ZB",":",
          ((SIX.MONTY.TOTAL-(SIX.MONTY.TOTAL/60)*60)) AS "NN",@CR
 END %LIST GROUP%

%OUTPUT SCHEDULED TS TOTALS%

PRINT @TAB TO 2,"SCHEDULED TS" AS "15C"
LET SIX.MONTY.TOTAL=0
LET MONTY.COUNT=0
WHILE MONTY.COUNT<6 DO
 BEGIN
 LET CURRENT.DATE=STARTING.DATE+(MONTY.COUNT*31)
 ADD 1 TO MONTY.COUNT
 SELECT AVAILABILITY. VIA MONTY=((CURRENT.DATE AS DATE "MM") AS "CC") AS "NN" THEN
  BEGIN
  LET ELAPSED.TIME=TOTAL.SCHEDULED.TIME
  PRINT (ELAPSED.TIME/60) AS "5ZB",":",
        ((ELAPSED.TIME-(ELAPSED.TIME/60)*60)) AS "NN"
  ADD TOTAL.SCHEDULED.TIME TO SIX.MONTY.TOTAL
  END %OF SELECTION%
  ELSE PRINT @TAB 9
END %WHILE%
IF SIX.MONTY.TOTAL=0 THEN PRINT @CR ELSE
   PRINT (SIX.MONTY.TOTAL/60) AS "6ZB",":",
         ((SIX.MONTY.TOTAL-(SIX.MONTY.TOTAL/60)*60)) AS "NN",@CR

%OUTPUT AVAILABILITY FIGURES%

PRINT @TAB TO 2,"AVAIL: 24 HOUR" AS "16C"
LET SIX.MONTY.TOTAL=0
LET SIX.MONTY.UP.TOTAL=0
LET MONTY.COUNT=0
WHILE MONTY.COUNT<6 DO
      BEGIN
      LET CURRENT.DATE=STARTING.DATE+(MONTY.COUNT*31)
      ADD 1 TO MONTY.COUNT
      SELECT AVAILABILITY. VIA MONTY=((CURRENT.DATE AS DATE "MM") AS "CC") AS "NN"
             THEN
                 BEGIN
                 IF TOTAL.TIME=0 THEN PRINT @TAB 9 ELSE
                    PRINT (TOTAL.UP.TIME/TOTAL.TIME*100) AS "4ZB.NN","%"
                 ADD TOTAL.UP.TIME TO SIX.MONTY.UP.TOTAL
                 ADD TOTAL.TIME TO SIX.MONTY.TOTAL
                 END
             ELSE PRINT @TAB 9
     END %WHILE%

IF SIX.MONTY.TOTAL=0 THEN PRINT @CR ELSE
   PRINT (SIX.MONTY.UP.TOTAL/SIX.MONTY.TOTAL*100) AS "5ZB.NN","%",@CR

PRINT @TAB TO 2,"AVAIL: PRIME" AS "16C"
LET SIX.MONTY.TOTAL=0
LET SIX.MONTY.UP.TOTAL=0
LET MONTY.COUNT=0
WHILE MONTY.COUNT<6 DO
      BEGIN
      LET CURRENT.DATE=STARTING.DATE+(MONTY.COUNT*31)
      ADD 1 TO MONTY.COUNT
      SELECT AVAILABILITY. VIA MONTY=((CURRENT.DATE AS DATE "MM") AS "CC") AS "NN"
             THEN
                 BEGIN
                 IF TOTAL.PRIME.TIME=0 THEN PRINT @TAB 9 ELSE
                    PRINT (TOTAL.PRIME.UP.TIME/TOTAL.PRIME.TIME*100) AS "4ZB.NN","%"
                 ADD TOTAL.PRIME.UP.TIME TO SIX.MONTY.UP.TOTAL
                 ADD TOTAL.PRIME.TIME TO SIX.MONTY.TOTAL
                 END
             ELSE PRINT @TAB 9
     END %WHILE%

IF SIX.MONTY.TOTAL=0 THEN PRINT @CR ELSE
   PRINT (SIX.MONTY.UP.TOTAL/SIX.MONTY.TOTAL*100) AS "5ZB.NN","%",@CR

PRINT @TAB TO 2,"AVAIL: SCHED" AS "16C"
LET SIX.MONTY.TOTAL=0
LET SIX.MONTY.UP.TOTAL=0
LET MONTY.COUNT=0
WHILE MONTY.COUNT<6 DO
      BEGIN
      LET CURRENT.DATE=STARTING.DATE+(MONTY.COUNT*31)
      ADD 1 TO MONTY.COUNT
      SELECT AVAILABILITY. VIA MONTY=((CURRENT.DATE AS DATE "MM") AS "CC") AS "NN"
             THEN
                 BEGIN
                 IF TOTAL.SCHEDULED.TIME=0 THEN PRINT @TAB 9 ELSE
                    PRINT (TOTAL.SCHEDULED.UP.TIME/TOTAL.SCHEDULED.TIME*100) AS "4ZB.NN","%"
                 ADD TOTAL.SCHEDULED.UP.TIME TO SIX.MONTY.UP.TOTAL
                 ADD TOTAL.SCHEDULED.TIME TO SIX.MONTY.TOTAL
                 END
             ELSE PRINT @TAB 9
     END %WHILE%

IF SIX.MONTY.TOTAL=0 THEN PRINT @CR ELSE
   PRINT (SIX.MONTY.UP.TOTAL/SIX.MONTY.TOTAL*100) AS "5ZB.NN","%",@CR

PRINT "*","AVAIL: ADJ'D" AS "16C"
LET SIX.MONTY.TOTAL=0
LET SIX.MONTY.UP.TOTAL=0
LET MONTY.COUNT=0
WHILE MONTY.COUNT<6 DO
      BEGIN
      LET CURRENT.DATE=STARTING.DATE+(MONTY.COUNT*31)
      ADD 1 TO MONTY.COUNT
      SELECT AVAILABILITY. VIA MONTY=((CURRENT.DATE AS DATE "MM") AS "CC") AS "NN"
             THEN
                 BEGIN
                 FOR EACH TOTALS.
                     VIA MONTY=((CURRENT.DATE AS DATE "MM") AS "CC") AS "NN",
                     WHERE EXCEPTION.FLAG(CODE. VIA ID=CODE.ID)="Y"
                     ADD SCHEDULED.TIME TO TOTAL.SCHEDULED.UP.TIME
                 IF TOTAL.SCHEDULED.TIME=0 THEN PRINT @TAB 9 ELSE
                    PRINT (TOTAL.SCHEDULED.UP.TIME/TOTAL.SCHEDULED.TIME*100) AS "4ZB.NN","%"
                 ADD TOTAL.SCHEDULED.UP.TIME TO SIX.MONTY.UP.TOTAL
                 ADD TOTAL.SCHEDULED.TIME TO SIX.MONTY.TOTAL
                 END
             ELSE PRINT @TAB 9
     END %WHILE%

IF SIX.MONTY.TOTAL=0 THEN PRINT @CR ELSE
   PRINT (SIX.MONTY.UP.TOTAL/SIX.MONTY.TOTAL*100) AS "5ZB.NN","%",@CR

%OUTPUT SCHEDULED TIME CRASH SUMMARY%

PRINT @TAB TO 28,"SCHEDULED TIME CRASH SUMMARY",@CR

FOR EACH GROUP. WHERE TYPE.ABBREV="LST" SORTED ON POS
 FOR EACH CODE. WHERE (NOT (START.DATE>ENDING.DATE OR END.DATE<STARTING.DATE))
     AND CLASS.ID=ID OF CLASS.
     AND GROUP.ID=ID OF GROUP. SORTED ON CODE
  BEGIN
  PRINT @TAB TO 1
  IF EXCEPTION.FLAG="Y" THEN PRINT "*" ELSE PRINT " "
  PRINT TITLE OF CODE.
  LET SIX.MONTY.TOTAL=0
  LET MONTY.COUNT=0
  WHILE MONTY.COUNT<6 DO
   BEGIN
   LET CURRENT.DATE=STARTING.DATE+(MONTY.COUNT*31)
   ADD 1 TO MONTY.COUNT
   SELECT CRASH. VIA (MONTY=((CURRENT.DATE AS DATE "MM") AS "CC") AS "NN",
          CODE.ID=ID OF CODE.) THEN
    BEGIN
    ADD SCHEDULED.CRASHES TO SIX.MONTY.TOTAL
    PRINT SCHEDULED.CRASHES AS "8ZB"
    SELECT CRASH.TOTALS. VIA MONTY=((CURRENT.DATE AS DATE "MM") AS "CC") AS "NN"
           THEN
               BEGIN
               ADD ALL.CRASHES OF CRASH. TO ALL.CRASHES OF CRASH.TOTALS.
               ADD SCHEDULED.CRASHES OF CRASH. TO SCHEDULED.CRASHES OF CRASH.TOTALS.
               ADD PRIME.CRASHES OF CRASH. TO PRIME.CRASHES OF CRASH.TOTALS.
               ADD ADJUSTED.CRASHES OF CRASH. TO ADJUSTED.CRASHES OF CRASH.TOTALS.
               ALTER CRASH.TOTALS.
               END
           ELSE
               BEGIN
               LET MONTY=((CURRENT.DATE AS DATE "MM") AS "CC") AS "NN"
               INSERT INTO CRASH.TOTALS.
               END
    END
   ELSE PRINT @TAB 9
  END %WHILE%
 
IF SIX.MONTY.TOTAL=0 THEN PRINT @CR ELSE
   PRINT SIX.MONTY.TOTAL AS "10Z",@CR

END %EACH GROUP OF CRASH CODES%

%OUTPUT MONTYLY CRASH TOTALS%

PRINT @TAB TO 2,"CPS &TOT: 24 HR" AS "15C"
LET SIX.MONTY.CRASHES,SIX.MONTY.DAYS,SIX.MONTY.SYSTEM.DAYS=0
LET MONTY.COUNT,NUMBER.OF.MONTYS=0
WHILE MONTY.COUNT<6 DO
 BEGIN
 LET CURRENT.DATE=STARTING.DATE+(MONTY.COUNT*31)
 ADD 1 TO MONTY.COUNT
 LET MONTY=((CURRENT.DATE AS DATE "MM") AS "CC") AS "NN"
 LET DAYS,SYSTEM.DAYS=0
 FOR EACH SYSTEM.DAYS. VIA MONTY
     BEGIN
     IF TOTAL.SYSTEM.DAYS>0 THEN ADD 1 TO DAYS,SIX.MONTY.DAYS
     ADD TOTAL.SYSTEM.DAYS TO SYSTEM.DAYS,SIX.MONTY.SYSTEM.DAYS
     END
 IF DAYS#0 THEN ADD 1 TO NUMBER.OF.MONTYS
 SELECT CRASH.TOTALS. VIA MONTY THEN
        BEGIN
        ADD ALL.CRASHES TO SIX.MONTY.CRASHES
        IF SYSTEM.DAYS=0 THEN PRINT @TAB 5 ELSE
           PRINT (ALL.CRASHES*DAYS/SYSTEM.DAYS) AS "2ZB.B"
        PRINT ALL.CRASHES AS "3ZB"
        END
   ELSE PRINT @TAB 9
 END %WHILE%
PRINT (SIX.MONTY.CRASHES*SIX.MONTY.DAYS/SIX.MONTY.SYSTEM.DAYS/NUMBER.OF.MONTYS) AS "2ZN.N"
PRINT SIX.MONTY.CRASHES AS "4ZB",@CR

PRINT @TAB TO 2,"CPS &TOT: PRIME" AS "15C"
LET SIX.MONTY.CRASHES,SIX.MONTY.DAYS,SIX.MONTY.SYSTEM.DAYS=0
LET MONTY.COUNT,NUMBER.OF.MONTYS=0
WHILE MONTY.COUNT<6 DO
 BEGIN
 LET CURRENT.DATE=STARTING.DATE+(MONTY.COUNT*31)
 ADD 1 TO MONTY.COUNT
 LET MONTY=((CURRENT.DATE AS DATE "MM") AS "CC") AS "NN"
 LET DAYS,SYSTEM.DAYS=0
 FOR EACH SYSTEM.DAYS. VIA MONTY
     BEGIN
     IF PRIME.SYSTEM.DAYS>0 THEN ADD 1 TO DAYS,SIX.MONTY.DAYS
     ADD PRIME.SYSTEM.DAYS TO SYSTEM.DAYS,SIX.MONTY.SYSTEM.DAYS
     END
 IF DAYS#0 THEN ADD 1 TO NUMBER.OF.MONTYS
 SELECT CRASH.TOTALS. VIA MONTY THEN
        BEGIN
        ADD PRIME.CRASHES TO SIX.MONTY.CRASHES
        IF SYSTEM.DAYS=0 THEN PRINT @TAB 5 ELSE
           PRINT (PRIME.CRASHES*DAYS/SYSTEM.DAYS) AS "2ZB.B"
        PRINT PRIME.CRASHES AS "3ZB"
        END
   ELSE PRINT @TAB 9
 END %WHILE%
PRINT (SIX.MONTY.CRASHES*SIX.MONTY.DAYS/SIX.MONTY.SYSTEM.DAYS/NUMBER.OF.MONTYS) AS "2ZB.B"
PRINT SIX.MONTY.CRASHES AS "4ZB",@CR

PRINT @TAB TO 2,"CPS &TOT: SCHED" AS "15C"
LET SIX.MONTY.CRASHES,SIX.MONTY.DAYS,SIX.MONTY.SYSTEM.DAYS=0
LET MONTY.COUNT,NUMBER.OF.MONTYS=0
WHILE MONTY.COUNT<6 DO
 BEGIN
 LET CURRENT.DATE=STARTING.DATE+(MONTY.COUNT*31)
 ADD 1 TO MONTY.COUNT
 LET MONTY=((CURRENT.DATE AS DATE "MM") AS "CC") AS "NN"
 LET DAYS,SYSTEM.DAYS=0
 FOR EACH SYSTEM.DAYS. VIA MONTY
     BEGIN
     IF SCHEDULED.SYSTEM.DAYS>0 THEN ADD 1 TO DAYS,SIX.MONTY.DAYS
     ADD SCHEDULED.SYSTEM.DAYS TO SYSTEM.DAYS,SIX.MONTY.SYSTEM.DAYS
     END
 IF DAYS#0 THEN ADD 1 TO NUMBER.OF.MONTYS
 SELECT CRASH.TOTALS. VIA MONTY THEN
        BEGIN
        ADD SCHEDULED.CRASHES TO SIX.MONTY.CRASHES
        IF SYSTEM.DAYS=0 THEN PRINT @TAB 5 ELSE
           PRINT (SCHEDULED.CRASHES*DAYS/SYSTEM.DAYS) AS "2ZB.B"
        PRINT SCHEDULED.CRASHES AS "3ZB"
        END
   ELSE PRINT @TAB 9
 END %WHILE%
PRINT (SIX.MONTY.CRASHES*SIX.MONTY.DAYS/SIX.MONTY.SYSTEM.DAYS/NUMBER.OF.MONTYS) AS "2ZB.B"
PRINT SIX.MONTY.CRASHES AS "4ZB",@CR

PRINT "*","CPS &TOT: ADJ'D" AS "15C"
LET SIX.MONTY.CRASHES,SIX.MONTY.DAYS,SIX.MONTY.SYSTEM.DAYS=0
LET MONTY.COUNT,NUMBER.OF.MONTYS=0
WHILE MONTY.COUNT<6 DO
 BEGIN
 LET CURRENT.DATE=STARTING.DATE+(MONTY.COUNT*31)
 ADD 1 TO MONTY.COUNT
 LET MONTY=((CURRENT.DATE AS DATE "MM") AS "CC") AS "NN"
 LET DAYS,SYSTEM.DAYS=0
 FOR EACH SYSTEM.DAYS. VIA MONTY
     BEGIN
     IF SCHEDULED.SYSTEM.DAYS>0 THEN ADD 1 TO DAYS,SIX.MONTY.DAYS
     ADD SCHEDULED.SYSTEM.DAYS TO SYSTEM.DAYS,SIX.MONTY.SYSTEM.DAYS
     END
 IF DAYS#0 THEN ADD 1 TO NUMBER.OF.MONTYS
 SELECT CRASH.TOTALS. VIA MONTY THEN
        BEGIN
        ADD ADJUSTED.CRASHES TO SIX.MONTY.CRASHES
        IF SYSTEM.DAYS=0 THEN PRINT @TAB 5 ELSE
           PRINT (ADJUSTED.CRASHES*DAYS/SYSTEM.DAYS) AS "2ZB.B"
        PRINT ADJUSTED.CRASHES AS "3ZB"
        END
   ELSE PRINT @TAB 9
 END %WHILE%
PRINT (SIX.MONTY.CRASHES*SIX.MONTY.DAYS/SIX.MONTY.SYSTEM.DAYS/NUMBER.OF.MONTYS) AS "2ZB.B"
PRINT SIX.MONTY.CRASHES AS "4ZB",@CR

PRINT @TAB TO 2,"AVG. NO.SYS/DAY" AS "15C"
LET MONTY.COUNT=0
WHILE MONTY.COUNT<6 DO
      BEGIN
      LET CURRENT.DATE=STARTING.DATE+(MONTY.COUNT*31)
      ADD 1 TO MONTY.COUNT
      LET DAYS,SYSTEM.DAYS=0
      FOR EACH SYSTEM.DAYS. VIA MONTY=((CURRENT.DATE AS DATE "MM") AS "CC") AS "NN"
          BEGIN
          ADD SCHEDULED.SYSTEM.DAYS TO SYSTEM.DAYS
          IF SCHEDULED.SYSTEM.DAYS>0 THEN ADD 1 TO DAYS
          END
      IF DAYS=0 THEN PRINT @TAB 9 ELSE
         PRINT (SYSTEM.DAYS/DAYS) AS "5ZB.BB"
END %WHILE%

IF SIX.MONTY.DAYS=0 THEN PRINT @CR ELSE
   PRINT (SIX.MONTY.SYSTEM.DAYS/SIX.MONTY.DAYS) AS "6ZB.BB",@CR

END %CLASS.REPORT%
END %SITE.REPORT%

END %SIX MONTY PERIOD REPORT%

END %REPORT%
END
  c@_