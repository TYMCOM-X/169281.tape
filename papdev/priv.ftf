C
C************************
C
C       REPORT.FTF
C
C************************
C
C
C       THIS PROGRAM IS THE SOLE PROPERITY AND CONFIDENTIAL 
C       DO NOT DISCLOSE OR USE BY THIRD PARTY.
C
        REAL HOUR,PERCEN
        INTEGER SUP(4),IM,J,NLINE,ILIN,YMTOT
        INTEGER APSP(4),SC(3),SP(3),PT(3),PD(4),TODAY,NEWD
        INTEGER DT,TI,SHIFT,SORT,BB,NDUP,NTUP
        INTEGER INFO(64),K,NUMBER,I,COC(2),NNET(2),HELP
        INTEGER TNUM,DATE(1),TIM1,RNAM(4),RW(3),RFON(4),SCON(4)
        INTEGER IDATE(3),SPSP(4),TOT,SPEN,MONIT,TOTAL,SUBOPEN,SUBMONIT
        INTEGER DISC(169),SUBTOTAL,F1,DONE,TOGO,TEMP(2),F3(5)
        INTEGER USERD,PASS(2),SRT,SORT(4),TYPE,X,SYS,S1,DECIS
        INTEGER HOST,SITP(4),HINUM,SETNUM,NUMTYPE,FLAG,UNAM(6)
        INTEGER SM,SD,SY,EM,ED,EY,D,NT
        INTEGER BRANCH,L,M,P,NUMNET,NUMATTN,DDAT,CIRT(4),NUD
        INTEGER NET(2),FILE(5),FF,TTIM,BTIM,H2,H1
        INTEGER NO,SL,HO,ATTN,SDAT,SH,SM,EH,EM,PERCNT,X1,Y1,LREFER,HREFER
        INTEGER ST(3),NUM1,NUM2,ITEM1(19),ITEM2(19),ITEM(19),HIATTN
        INTEGER SITC(4),SCONP(4),NOD1,HST1,CIRCKT(4),TROUB1(4)
        INTEGER REPN(4),REPF(4),BAS1(3),BAS2(3),BAS4(3),CG,CGRP(3)
        INTEGER BAS5(3),BAS6(3),BAS7(3),BAS8(3),BAS9(3),HH,LOWATTN
        INTEGER VERS,RP(3),COL,TOTL,ROW(20),COR,DTYP,LOOP,TDAT
        INTEGER LIST(200),NEWVAL(4),M1,M2,M3,M4,M5,IERT,IERC,YY,AS
        INTEGER NN(3),TOT1,NTIM,TUS,TTL(21),IVER,SVER,FSTREC,RS
        INTEGER RECORD,DOIT,SUB(25),TYMTOT(4),ME,VALUE(4)
        INTEGER STAT,Y,B,C,TYMTYP(17),LIC,MIN,XX
        INTEGER TIC(3),TS(4),ODAT,OLDUP,RW1(3),RW2(3),RP1(3),RP2(3)
        INTEGER COMMT(12),DS1,A
        INTEGER CUST,OPT(30),ANS,NDAT,SEE,WELL,DVER(5),CHO,Z
        INTEGER IA1,IA2,IA3,IA4,IA5,IA6,V1,V2,V3,V4,V5,V6
        INTEGER OCKT(2),CKT(4),OTRB(3),TRB(4),DUP,ODUP(2),DF,REV
        INTEGER TUP,OTUP(2),OMAINT(2),MAINT,CLC(2),CBY,DSP,REGEN,REG
        INTEGER OSVR(2),DRP,JM,JD,JY,ODPT(3),ODDWN(3),COMMEN(12),TT
        INTEGER OFF,LEV,EVER(5),H3,H4,H5,Q,HN,BILL,ESC,INT,COMMNT(4)
        INTEGER OPRO(2),PRO,TECH(3),COV,CNAM(3),KHST,OKH,STH,EHR,PORT
        INTEGER TYP,CDAT,LOC(4),VER,T40,OSTH(2),OEHR(2),OLOC(2),OVER(2)
        INTEGER PTS,OCV(2),HRGN,SRGN,ONUM(2),HQCC,CCOD,ORDER,PNAM(3)
        INTEGER WHO,LNO(2),HNO(2),BAS10(3),LIN1(16),BAS11(3),SNAM(3)
        INTEGER TOTES,DIFES,NONES
        REAL HOUR,TET,ELM,NLH,TOT2,TELH(54),TYMELH(4)
        DATA ODPT/'DATE/TIME UP   '/
        DATA ODDWN/'DATE/TIME DOWN '/
        DATA TOTL/'TOTAL'/
        DATA DTYP/'TYPE'/
        DATA OSVR/'SEVERITY'/
        DATA OCKT/'CIRCUIT # '/
        DATA VALUE/'                    '/
        DATA NEWVAL/'                    '/
        DATA OTRB/'TELCO  NUMBER '/
        DATA ODUP/'DATE UP:'/
        DATA OTUP/'TIME UP:'/
        DATA RW/'               '/
        DATA RW1/'COMPANY NAME   '/
        DATA RW2/'REPORTED BY    '/
        DATA OMAINT/'REFER TO'/
        DATA APSP/'TICKET OPENED BY :'/
        DATA CGRP/'CONTROL GROUP'/
        DATA SPSP/'STATUS OPENED BY :'/
        DATA SC/'SITE CONTACT'/
        DATA DT/'DATE'/
        DATA TI/'TIME'/
        DATA SP/'SITE PHONE#'/
        DATA PT/'PRODUCT TYPE'/
        DATA PD/'PROBLEM DESCRIPTION'/
        DATA NO/'NODE'/
        DATA SL/'SLOT'/
        DATA HO/'HOST'/
        DATA ST/'TICKET STATUS'/
        DATA LNO/'LOW NODE'/
        DATA HNO/'HIGH NODE'/

        DATA VERS/' 6.12'/
        DATA REV/'   1 '/
        DIMENSION NOUT(3)
        DATA (NOUT(P),P=1,3)/'     ','HOST','LONOD'/
        DIMENSION YN(3)
        DATA (YN(P),P=1,3)/'NO','YES','DSC'/
        DIMENSION CAT(3)
        DATA (CAT(P),P=1,3)/'N','H','C'/
        DIMENSION CUST(2)
        DATA (CUST(K),K=1,2)/'NCS','NSSC'/
        DIMENSION STATUS(9)
        DATA (STATUS(L),L=1,9)/'OPEN ','MONIT','CLSD ','track',
     1  '   ','   ','   ','   ','TRACK'/
        DIMENSION REGEN(7)
        DATA (REGEN(J),J=1,7)/'EAST','CENT','WEST','TNSC','DISCO',
     1  'AGENT','     '/
        DOUBLE PRECISION VNET(60)
        DATA (VNET(K),K=1,60)/'TYMNET','DECNET','MCIRNET','NINNET',
     1  'IPLCNET','ITSNET ','BOFANET','ALASCOM','DUNET  ','FIRNNET',
     2  'HKBGNET','DOINET','TRWNET','FNBCNET','DIALNET','SWBNET',
     3  'WESTNET','AUTONET','MNSQANET','EXXNET','MGTBNET','UCCPAC',
     4  'DATAPAK','         ','XEROX ','SLIGOS','NISNET','UKNET ',
     5  'PHILIPS','ANZPAC','ITALNET','CWNET ','ITANET','TELERANET',
     6  'SCANDUTCH','NTSNET','BABYLONNET','       ','LENET ',
     7  'PAYMENT','FORDNET','MTSSNET','XADANET ','EUSKONET',
     8  'HELLERNET','PRIMEX  ','ANYLABNET','THNET  ','ARMYCORP',
     9  'EDINET','DIALCOM','KTNET ','AFNET ','VIDEONET','SFBNET',
     A  '      ','C&WBERMUDA','NETBILLING','PNBNET','CPRMNET'/
        DOUBLE PRECISION CODE(120)
        DATA (CODE(K),K=1,66)/'NONE     ','          ','          ',
     1  '          ','          ','          ','          ',
     2  '          ','         ','PWR SUPPLY','BOARD ','CABLE ',
     3  'PERIPHERAL','BPLN/CHASS','SETUP PROB','REPL/ENGN ',
     4  '          ','          ','          ','CONFIG CHG',
     5  'VRSN UPGRD','VRSN DNGRD','KNWN PTCH','NEW PTCH','UNSPPRTD',
     6  'PIR REQRD','NSR SBMTTD','MO.INF.REQ','VENDOR    ',
     7  'ASYC MODEM','SYNC MODEM','DGTL MODEM','BT PAD    ',
     8  'BRDG/RTR','SWARE CNFG','         ','         ','          ',
     9  '          ','OP/PCDR ER','SWARE/VNDR','HWARE/VNDR',
     A  'CHANGE','DOWNTIME','          ','          ','          ',
     B  '          ','          ','DIAL-UP','ANALOG','DIGITAL',
     C  'SS 800/950','T-1       ','          ','          ',
     D  '          ','          ','          ','CFG GL EXC',
     E  'DEADENDED','VALIDATION','IRC/PTT','          ',
     F  '          ','          '/
        DATA (CODE(K),K=67,120)/'        ','        ','        ',
     G  'SCHD OUT','UNSCHD OUT','CUST. SITE',
     H  '          ','          ','          ','          ',
     I  '          ','          ','          ','PROJECT   ',
     J  '          ','          ','          ','          ',
     K  '          ','          ','          ','          ',
     L  '          ','SLT RLOD','SDUMP&RLOD','NODE RLOD','NDUMP&RLOD',
     M  'DOCUMENTN ','NTF       ','SLOT H&E  ','REF-OTH-TK',
     N  'CWT       ','TRACKING  ','P/L RESET ','          ',
     O  '          ','          ','          ','          ',
     P  '          ','          ','          ','          ',
     Q  '          ','          ','          ','          ',
     R  '          ','          ','          ','          ',
     S  '          ','          ','          '/
        DIMENSION TVNET(60)
        DATA (TVNET(K),K=1,60)/'TYM','DEC','MCI','NIN',
     1  'IPL','ITS','BOA','ALA','DUN','FRN','HKB','DOI','TRW',
     2  '   ','DIA','SWB','WST','ATO','MNQ','EXX','MGT','UCC',
     3  'TVK','   ','XRX','SLG','NIS','UK','PHL','ANZ','ITL','CAN',
     4  'ITA','TEL','SCN','NTS','BAB','   ','LEN','PAY','FRD',
     5  'MTS','XAR','EUS','HLR','PRX','LAB','THN','ARM','EDI','DCM',
     6  'KTN','AFN','VID','SFB','   ','CWB','NBI','PNB','CPM'/
        DIMENSION HEX(15)
        DATA (HEX(I),I=1,15)/1H1,1H2,1H3,1H4,1H5,1H6,1H7,1H8,1H9,
     1  1HA,1HB,1HC,1HD,1HE,1HF/
        DIMENSION RVNET(60)
        DATA (RVNET(K),K=1,60)/'TYMN','DECN','MCIN','NINN',
     1  'IPLC','ITSN ','BOFA','ALAS','DUPN','FIRN','HKBGN','DOIN',
     2  'TRWN','     ','DIALN','SWBN','WESTN','AUTO','MNQN',
     3  'EXXN','MGTBN','UCCP','DPACK','     ','XRXN','SLIG','NISN',
     4  'UKNE','PHLP','ANZP','INTL','CWNE','ITAN','TELA','SCAN',
     5  'NTSN','BABY','    ','LENE','PAYM','FORD','MTSS','XAD',
     6  'EUSK','HLRN','PRMX','LABN','THNE','ARMY','EDIN','DCMN','KTNE',
     7  'AFNE','VIDNE','SFBNE','     ','CWBNE','NBILL','PNBN','CPRM'/
        DIMENSION SNET(60)
        DATA (SNET(K),K=1,60)/'TYMNE','DECNE','MCIRN','NINNE',
     1  'IPLCN','ITSNE','BOFAN','ALASC','DUNET','FIRNN',
     2  'HKBGN','DOINE','TRWNE','     ','DIALN','SWBNE',
     3  'WESTN','AUTON','MNSQN','EXXNE','MGTBN','UCCPA','DATAP',
     4  '     ','XEROX','SLIGO','NISNE','UKNET','PHILP','ANZPA',
     5  'INTAL','CWNET','ITANE','TELER','SCAND','NTSNE','BABYL',
     6  '     ','LENET','PAYMT','FORDN','MTSSN','XADAN','EUSKO',
     7  'HELLE','PRIMX','ANYLB','THNET','ARMYN','EDINE','DCMNE',
     8  'KTNET','AFNET','VIDEO','SFBNE','     ','CWBNE','NBILL',
     9  'PNBNE','CPRMN'/
        DIMENSION IVER(4)
        DATA (IVER(P),P=1,4)/1,2,3,4/
        DIMENSION NETOP(9)
        DATA (NETOP(I),I=1,9)/'NSSC','NETCN','VANCF','TCSUP','NETOP',
     1  'NSSC','NETCN','VANCF','TCSUP'/
        DIMENSION BLK(1)
        DATA BLK/'   '/
        DIMENSION AM(12)
        DATA (AM(IM),IM=1,12)/'JAN','FEB','MAR','APR','MAY','JUN','JUL',
     1  'AUG','SEP','OCT','NOV','DEC'/
        DIMENSION ATTN(170)
        DATA (ATTN(I),I=1,149)/'NFTEL','NFONE','NFOCN','NFONY','LNKOP',
     1  'UKOM ','BTDUB','NFOKP','NFOMX','SCRTY','NFOVA','TPPGL',
     2  'TSIS ','HKHW ','NFOCH','NFOPL','FMTOP','NFOSL','FIRST',
     3  'NFODA','FRSPT','NFOHO','NFOAT','NFOTA','CSSP ','TSOPS','NFTEC',
     4  'NFODE','CANDP','GTSPE','NFOEB','NFOSB','NFOLA','DESS ',
     5  'CRSUP','NTS','NSSC','ONTYM','NETCO','CS800','STS  ','CUSTM',
     6  'WTSSF','UKFR ','ATS  ','CANOP','     ','CTSDE','CTSSL','EIMGT',
     7  'ETSNJ','ETSBO','NSSCP','FTMSG','PORTS','MCI','DBVAL','ROTRY',
     8  'UKMSG','BTGER','PI','BTWCA','CFSS','CONFR','BTSWE','ATCOM',
     9  'CLOSE','TELCO','ETSG ','ORDIN','DSOS','NTD','SCA  ',
     A  'VIDSP','BTNL','HTSUK','BTFR','CPSS','STSUK','CS8CU','     ',
     B  'ORDCU','CWSRV','ELNUS','NIS','SIRTI','TRT','CAT  ','DLCOP',
     C  'SUNCA','BTJPN','HKSW ','PRMGR','EMSG','BTBEL','AFPUB','AFPRI',
     D  'ETSAT','BTKOR','CSGER','BTAP','BTUK','FSNL ','FSBEL','BTSZ',
     E  'UKCS ','BTITA','BTSP','TSBEL','TSNL ','     ','SNGTL','BTAUS',
     F  'NBILL','BTHK','FSFR','UK800','BTEVL','EDICN','MSGCN',
     G  'TIS  ','UKCUS','UKCLR','NTENG','TPVIE','NOVPS','FRCS ','CUSAF',
     F  'FLM2 ','IPLC ','ECSC ','ENMC ','FSGER','FSITA','FSSZ ',
     I  'FSSPA','FSSWE','BTSNG','ITSNY','GCSCL','FLM1 ','EDITS',
     J  '     ','     ','SDSKO','PHCOM','PADSP','SDSMA','MAYTL'/
        DATA (ATTN(I),I=150,170)/'BTALS','OTHER','TRAIN','ERIM',
     1  'DOHP ','NSCEA','LIVER','NCMON','GCSCA','GCSC1','ERNMC',
     2  '     ','     ','     ','     ','     ','     ','     ',
     3  '     ','     ','     '/
        DIMENSION MIN(5)
        DATA (MIN(I),I=1,5)/30,120,120,480,2880/
        DIMENSION LREFER(6)
        DATA (LREFER(K),K=1,6)/'EFO','CFO','WFO','ETS','CTS','WTS'/
        DIMENSION HREFER(6)
        DATA (HREFER(P),P=1,6)/'EFP','CFP','WFP','ETT','CTT','WTT'/
        DIMENSION TYPE(97)
        DATA (TYPE(P),P=1,97)/'DIALU','ATC','BPS','PAP','MCP','BDLC',
     1  'MSVO','ISCS ','SUN','SWTCH','XCOM','ISIS','PBH',
     2  'PBT','SNA','BBXS','X.75','X.PC','ACOM','4.8','9.6','14.4',
     3  '19.2','56KB','T1','HWOCL','SDB','XDIAL','OUTD','VALID',
     4  'PROJ','TLNET','PERIF','OEM','SUP','ONTY','PRB','UN2',
     5  'TII','EDI ','EMSGA','CMTI','UTS','TMCS','NEM','RAM','NVAL',
     6  'DG  ','CFRS','NALRT','PICO','CMS','ALC','INTDU','FRE',
     7  'CMH','    ','ELF','HSA','VIDEO','MUX','NTCN','     ','TDI',
     8  'TIIG','DIALC','F/SM','P/SM ','UTIL','SDLC','INTLS','TURBO',
     9  'PTI','PHR','CDM','CMF','CPC','CPPP','NADA','CPAS','BITS',
     A  'SVR  ','SVP  ','SVC ','PADS','PAPER','    ','FRAD','OTHER',
     B  'CRDU','ITS','MFX','EZTYM','LEM ','PXL  ','NODE ','CMTU '/
        DOUBLE PRECISION HWARE(5)
        DATA (HWARE(J),J=1,5)/'NONE    ','DISTRICT','REGIONAL',
     1  'DIRECTOR','VICE PRES.'/
        DOUBLE PRECISION SWARE(6)
        DATA (SWARE(K),K=1,6)/'NONE    ','DISTRICT','REGIONAL',
     1  'DIRECTOR','EXEC. DIR.','VICE PRES.'/
        DOUBLE PRECISION ITELC(5)
        DATA (ITELC(P),P=1,5)/'NONE    ','FIRST LEV.','SEC. LEVEL',
     1  'THIRD LEV.','FORTH LEV.'/
        DOUBLE PRECISION DISPL(3)
        DATA (DISPL(P),P=1,3)/'HARDWARE','SOFTWARE','TELCO. CO.'/
        DOUBLE PRECISION SYST(2)
        DATA (SYST(P),P=1,2)/'PUBLIC','PRIVATE'/
        DIMENSION YY(10)
        DATA (YY(P),P=1,10)/' ','*',' ',' ',' ','*','*','*','*',
     1  'NO'/
        DIMENSION AS(9)
        DATA (AS(P),P=1,9)/'YES',' ',' ','PVT','NO','YES','NO','YES',
     1  'PVT'/
        DATA TIC/'TICKET NUMBER'/
        DATA TS/'STATUS OF TICKET:'/
        DATA NN/'NETWORK NAME'/
        DATA RP/'               '/
        DATA RP1/'COMM SPECIALIST'/
        DATA RP2/'CALL BACK #'/
        DATA FF/"030/
        DATA OPRO/'PRODUCTION'/
        DATA OKH/'KHOST'/
        DATA OCV/'CONTRACT'/
        DATA PTS/'PORTS'/
        DATA OSTH/'START HOUR'/
        DATA OEHR/'END HOUR '/
        DATA OLOC/'LOCATION'/
        DATA OVER/'VERSION '/

20      CONTINUE
        NUMNET=60
        NUMATTN=160
        NUMTYPE=97
        NUMCODE=120
        DIMENSION SPEN(22)
        DIMENSION TOTAL(22)
        DIMENSION MONIT(22)
        DIMENSION ESCAL(6,6,6)
        DIMENSION NONES(6,4,3)
        DIMENSION DIFES(6,4,3)
        DIMENSION TOTES(6,4,3)
        FLAG=0
        CALL USERNA(UNAM)
        TYPE 55,VERS,REV
55      FORMAT(' TYMNET NETWORK OPERATIONS PROBLEM TRACKING ',
     1  'PROGRAM VERSION',A5,A5,/,/)
        CALL DBSTRT(-1,1,-4,0,1,0,5,0,-1,0,-4,1,1,1,5,1)
        CALL DBOPEN('(NSSC)NPAP')
        CALL DBFIND(1,1,UNAM(1))
        CALL DBNREC(NUMBER)
        IF (NUMBER.GT.0) GOTO 40
30      TYPE 35
35      FORMAT(/1X,'ACCESS TO PROGRAM DENIED')
        CALL BYE
40      CALL DBGREC($30,1)
        CALL DBVAL(2,FLAG,3,SRT,4,SYS,5,CG,6,DRP,7,XX,8,LOWATTN,
     1  9,HIATTN)
58      I=0
59      IF ((FLAG.EQ.-1).OR.(FLAG.EQ.1)) TYPE 60
120     FORMAT(I5)
60      FORMAT(1X,'ENTER COMMAND... OR A ',1H(,'CR',1H),' : ',$)
        ACCEPT 65,ANS
65      FORMAT(A5)
630     FORMAT('GO ONTYME',/,'TYMOPS.NSSC',/,2A5)
602     FORMAT(/,':S * ',A5,/)
1160    FORMAT(I2,1X,I2,1X,I4)
1150   FORMAT(/1X,'ENTER START DATE : MM/DD/YYYY ? = ',$)
252     FORMAT(4A5)
250     FORMAT(1H+,'ENTER SOMETHING : ',$)
        IF (((FLAG.EQ.-1).OR.(FLAG.EQ.1)).AND.(ANS.EQ.'J')) GOTO 4000
        IF (((FLAG.EQ.-1).OR.(FLAG.EQ.1)).AND.(ANS.EQ.'R')) GOTO 240
        IF (((FLAG.EQ.-1).OR.(FLAG.EQ.1)).AND.(ANS.EQ.'M')) GOTO 2550
        IF (((FLAG.EQ.-1).OR.(FLAG.EQ.1)).AND.(ANS.EQ.'A')) GOTO 3990
        IF (((FLAG.EQ.-1).OR.(FLAG.EQ.1)).AND.(ANS.EQ.'E')) GOTO 4300
        IF (((FLAG.EQ.-1).OR.(FLAG.EQ.1)).AND.(ANS.EQ.'C')) GOTO 4210
        IF (ANS.EQ.'Q') GOTO 99990
        IF (((FLAG.EQ.-1).OR.(FLAG.EQ.1)).AND.(ANS.EQ.'D')) GOTO 4340
        IF (((FLAG.EQ.-1).OR.(FLAG.EQ.1)).AND.(ANS.EQ.'S')) GOTO 4530
        IF (((FLAG.EQ.-1).OR.(FLAG.EQ.1)).AND.(ANS.EQ.'7')) GOTO 4505
        IF (((FLAG.EQ.-1).OR.(FLAG.EQ.1)).AND.(ANS.EQ.'U')) GOTO 4400
        IF (((FLAG.EQ.-1).OR.(FLAG.EQ.1)).AND.(ANS.EQ.'5')) GOTO 3200
        IF (((FLAG.EQ.-1).OR.(FLAG.EQ.1)).AND.(ANS.EQ.'8')) GOTO 3200
        IF (((FLAG.EQ.-1).OR.(FLAG.EQ.1)).AND.(ANS.EQ.'2')) GOTO 3400
        IF (((FLAG.EQ.-1).OR.(FLAG.EQ.1)).AND.(ANS.EQ.'3')) GOTO 3470
        IF (((FLAG.EQ.-1).OR.(FLAG.EQ.1)).AND.(ANS.EQ.'4')) GOTO 3550
        IF ((FLAG.LT.2).AND.(ANS.EQ.' ')) TYPE 80
        IF (((FLAG.EQ.-1).OR.(FLAG.EQ.1)).AND.(ANS.EQ.'6')) GOTO 5000
        IF (((FLAG.EQ.-1).OR.(FLAG.EQ.1)).AND.(ANS.EQ.'MX')) GOTO 5200
        IF (((FLAG.EQ.-1).OR.(FLAG.EQ.1)).AND.(ANS.EQ.'MX1')) GOTO 5270
        IF (((FLAG.EQ.-1).OR.(FLAG.EQ.1)).AND.(ANS.EQ.'GO')) GOTO 5165
        IF ((FLAG.LT.2).AND.(ANS.EQ.'9')) GOTO 5100
        IF ((SYS.EQ.1).AND.(ANS.EQ.'PAP')) CALL RUN('DSK','PAPER',
     1  'NETCON')
        IF ((SYS.EQ.2).AND.(ANS.EQ.'PAP')) CALL RUN('DSK','PAPER',
     1  'NSSC')
        IF (ANS.EQ.'1') CALL CDDWN
        I=I+1
        IF (I.NE.3) GOTO 59
68      TYPE 70
70      FORMAT(/,'+THINK ABOUT WHAT YOU ARE DOING !',/)
        GOTO 59
75      CONTINUE
        TYPE 80
80      FORMAT(1X,'YOUR OPTIONS ARE...',/10X,'7 = PUT ELM IN BASE7',
     1  /10X,'E = PUT ELM IN BASE4',/10X,'S = SET SDAT IN BASE7',/10X,
     2   'Q = QUIT',/10X,'J = UPDATES DATE UP IN BASE4',/10X,
     3  'C = FINDS DUPLICATE TICKETS IN BASE4',/10X,'D = DELETES ',
     4  'DUPLICATE TICKETS IN BASE4',/10X,'A = PERFORMS MTTR COMMANDS',
     5  /10X,'B = PUTS COC IN PROPER DATA BASE',/10X,'U = PUTS NDAT ',
     6  'IN BASE7',/10X,'8 = MTTR BY NETWORK',/10X,'2 = MTTR BY ',
     7  'REPAIR GROUP',/10X,'3 = MTTR BY PRODUCT CODE',/10X,'4 = ',
     8  'MTTR BY CLOSE OUT CODE',/10X,'R = END OF SHIFT REPORT',/10X,
     9  'M = MOVE OLD TICKETS TO ARCHIVE',/10X,
     A  '6 = CREATES ESCALATION MATIX CHART',/10X,'9 = CHART OPENING ',
     B  'TIMES',/10X,'1 = CONVERT DATE TO 1022 FORMAT',/9X,'MX = ',
     C  'MATRIX OF CLOSE OUT VS. SVER.',/8X,'MX1 = COC BY CONTROL ',
     D  'GROUP',/)
        GOTO 59
C
C       ROUTINE TO CREATE THE END OF MONTH MTTR STATS.
C
3200    TYPE 3205
3205    FORMAT(/2X,'THIS WILL CREATE MTTR STATS FOR A GIVEN PERIOD',/2X,
     1  'YOU DEFINE THE BEGINNING POINT, AND THE END POINT.'
     2  /2X,'DEPENDING ON THE PERIOD THIS OPTION MAY TAKE AWHILE',
     3  /2X,'TO COMPLETE.')
        TYPE 250
        CALL ECHO(0)
        ACCEPT 252,PASS
        CALL ECHO(1)
3204    TYPE 1150
        CALL DBOPEN('(TNT)BASE4')
        TOT=0
        TOT1=0
        BB=0
        TOT2=0
        ACCEPT 1160,SM,SD,SY
        TYPE 3210
3210    FORMAT('+ENTER END DATE   : MM/DD/YYYY ? = ',$)
        ACCEPT 1160,EM,ED,EY
        IF (EM.EQ.0) EY=2010
        CALL DBDATN(NDAT,SM,SD,SY)
        CALL DBDATN(NDUP,EM,ED,EY)
        SY=SY-1900
        EY=EY-1900
        CALL DBFIND(49,'GE',NDAT,1,49,'LE',NDUP)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 3204
        DO 3213 Y=1,4
        CALL DBFIND(49,'GE',NDAT,'AND',49,'LE',NDUP,1,52,1,Y,1,
     1  9,'NE',VNET(1),1,54,'GT',0,1,53,'LT',6)
        CALL DBNREC(DOIT)
        IF (DOIT.GT.0) GOTO 3212
        GOTO 3213
3211    FORMAT(/1X,'RECHECK YOUR DATES - NO INFORMATION WAS FOUND')
3212    CALL TOTELM(DOIT,ELM,HOUR,D)
        TYMTOT(Y)=DOIT
        TYMELH(Y)=HOUR
3213    CONTINUE    TOT=0
        GOTO 3208
        DO 3208 B=1,NUMTYPE
        CALL DBFIND(49,'GE',NDAT,'AND',49,'LE',NDUP,1,14,1,TYPE(B),
     1  1,'ELM','GT',0)
        CALL DBNREC(TYMTYP(B))
        TOT2=TOT2+TYMTYP(B)
        IF (TYMTYP(B).EQ.0) GOTO 3208
        DOIT=TYMTYP(B)
        CALL TOTELM(DOIT,ELM,HOUR,D)
        TELH(B)=HOUR
3208    CONTINUE
        ENCODE(25,3207,F3)HEX(SM),SY
3207    FORMAT('ALL',A1,I2,'.PRI',15X)
        OPEN(7,F3,OUTPUT)
        WRITE(7,3202)AM(SM),SD,SY,AM(EM),ED,EY
3202    FORMAT(/,/,/,/20X,'MEAN TIME TO RESOLVE SUMMARY',/,/,/3X,
     1  'THE FOLLOWING IS A LIST OF ALL MTTR TIMES FOR OUR PRIVATE NET',
     2  ' CUSTOMERS.',/,'THIS IS A SUMMARY OF ALL THE REPORTS THAT ',
     3  'ARE SENT OUT TO EACH CUSTOMER.',/,'THIS REPORT COVERS '
     4  'THE PERIOD BEGINNING ',A3,1H-,I2,1H-,I2,' AND ENDS ON ',A3,1H-,
     5  I2,1H-,I2,1H.,/,/,/,/1X,'NETWORK',T27,
     6  'CASES OF',/1X'NAME',T17,'SEVERITY',T27,'TROUBLE',
     7  T37,'ELAPSED TIME',/)
        I=1
        WRITE(7,3120)I,TYMTOT(1),TYMELH(1)
        DO 3130 I=2,4
        WRITE(7,3114)I,TYMTOT(I),TYMELH(I)
3120    FORMAT('AVG ALL NETS',T23,I1,T26,I4,T35,F8.1,' HOURS')
3130    CONTINUE
        PERCEN=(TOT2/TOT2)*100
        DT=TOT2
        WRITE(7,3242)DT,PERCEN
        DO 3300 I=1,1
C       IF (I.EQ.23) GOTO 3300
        IF ((FLAG.EQ.1).AND.(I.GT.1)) GOTO 3300
        ENCODE(25,3214,FILE)TVNET(I),HEX(SM),SY
3214    FORMAT(A3,A1,I2,'.PRI',15X)
        TYPE 3209,FILE(1),FILE(2)
        OPEN(8,FILE,OUTPUT)
        WRITE(8,3215)FF,TVNET(I)
3209    FORMAT(3X,A5,A5,' REPORT',$)
3215    FORMAT(/,A5,/10X,'TYMNET - MEAN TIME TO REPAIR - STATISTICS',
     1  /,/12X,'THIS IS THE MTTR COMPARISON FOR ',A3,'NET',/,/,/)
3220    DO 3240 J=1,4
        ELM=0
        HOUR=0
        CALL DBFIND(49,'GE',NDAT,'AND',49,'LE',NDUP,1,52,1,J,1,9,1,
     1  VNET(I),1,54,'GT',0)
        CALL DBNREC(DOIT)
        IF (DOIT.GT.0) CALL TOTELM(DOIT,ELM,HOUR,D)
        TOT=TOT+DOIT
        CALL DBSET(1)
        WRITE(8,3216)AM(SM),SD,SY,AM(EM),ED,EY,DOIT,J,HOUR,
     1  TYMTOT(J),TYMELH(J)
3216    FORMAT(/,/,/2X,'DURING THE PERIOD BEGINNING ',A3,1H-,I2,1H-,I2,
     1  1X,'AND ENDING ON ',A3,1H-,I2,1H-,I2,/2X,'TYMNET WORKED ON',
     2  1H ,I4,' CASES OF TROUBLE, WITH A SEVERITY LEVEL OF ',I1,1H.,
     3  /2X,'THE MEAN TIME TO REPAIR FOR THESE PRODUCTS ',
     4  'WAS ',F8.1,' HOURS.',
     5  /,/2X,'THIS COMPARES WITH THE OVERALL ',
     6  'STATISTICS OF TYMNET',/2X,'IN THIS MANNER: OVERALL TYMNET ',
     7  'WORKED ON ',I4,' CASES OF TROUBLE',/2X,'FOR THIS',
     8  ' SEVERITY LEVEL.  THE MEAN TIME TO REPAIR FOR ALL OF'/2X,
     9  'THESE PROBLEMS WAS ',F8.1,' HOURS.')
        BB=BB+DOIT
        IF (J.GT.1) GOTO 3115
        DECODE(10,3551,VNET(I))TEMP
        WRITE(7,3112)TEMP,J,DOIT,HOUR
3112    FORMAT(/,/1X,2A5,T23,I1,T26,I4,T35,F8.1,' HOURS')
        GOTO 3117
3115    WRITE(7,3114)J,DOIT,HOUR
3114    FORMAT(T23,I1,T26,I4,T35,F8.1,' HOURS')
        IF (ANS.EQ.'5') GOTO 3235
3117    IF (DOIT.EQ.0) GOTO 3235
        WRITE(8,3217)DOIT,J
3217    FORMAT(/1X'THE FOLLOWING IS THE BREAKDOWN OF THE ',I3,
     1  ' CASES OF SEVERITY ',I1,' PRODUCTS',/2X,'TICKET#   START ',
     2  'DATE/TIME  NODE    HOST  SEV.  TYPE     ELAPSED TIME'/)
        CALL DBFIND(49,'GE',NDAT,'AND',49,'LE',NDUP,1,52,1,J,1,9,1,
     1  VNET(I),1,54,'GT',0)
        CALL DBNREC(RECORD)
        IF (RECORD.EQ.0) GOTO 3235
        CALL DBSORT('ELM','ASCEN')
        DO 3235 K=1,RECORD
        CALL DBGREC($3235,K)
        CALL DBVAL(1,TNUM,5,SDAT,6,TIM1,40,NODE,42,HOST,54,ELM,14,PROD)
        HOUR=ELM/60
        CALL DBNDAT(SDAT,IM,ID,IY)
        IY=IY-1900
        WRITE(8,3219)TNUM,IM,ID,IY,TIM1,NODE,HOST,J,PROD,HOUR
3219    FORMAT(1X,I8,3X,I2,1H-,I2,1H-,I2,1X,A5,2X,I5,2X,I6,4X,I1,3X,
     1  A5,2X,F8.1,' HOURS')
3235    CONTINUE
3240    CONTINUE
        PERCEN=(BB/TOT2)*100
        WRITE(7,3242)BB,PERCEN
3242    FORMAT(T10,'TOTALS',T26,'-----',/T26,I4,3X,1H(,F6.1,3H %),/)
        BB=0
        WRITE(8,3245)FF
3245    FORMAT(A5,/)
        WRITE(8,3248)
3248    FORMAT(/3X,'THE FOLLOWING CHART SHOWS A BREAKDOWN OF PRODUCT',
     1  ' TYPE.',/,/5X,'EACH PRODUCT IS COMPARED TO THE TOTALS FOR ',
     2  'ALL NETWORKS',/6X'PLEASE NOTE THIS CHART ONLY CONTAINS THE',
     3  /6X,'CATAGORIES WHICH HAD PROBLEMS EACH MONTH.',/,/2X,'PRODUCT ',
     4  3X,'YOUR',32X,'ALL',/4X,'TYPE',4X,'TOTALS',30X,'TOTALS',/)
        TOT1=0
        GOTO 3260
        DO 3260 C=1,NUMTYPE
        CALL DBFIND(49,'GE',NDAT,1,49,'LE',NDUP,1,14,1,TYPE(C),1,
     1  9,1,VNET(I),1,54,'GT',0)
        CALL DBNREC(YMTOT)
        IF (YMTOT.EQ.0) GOTO 3254
        DOIT=YMTOT
        CALL TOTELM(DOIT,ELM,HOUR,D)
3254    IF ((YMTOT.GT.0).OR.(TYMTYP(C).GT.0)) WRITE(8,3255)TYPE(C),
     1  YMTOT,HOUR,TYMTYP(C),TELH(C)
3255    FORMAT(2X,A5,6X,I3,4X,F8.1,'HOURS',18X,I3,4X,F8.1,' HOURS')
        TOT1=TOT1+YMTOT
        ELM=0
        HOUR=0
3260    CONTINUE
        WRITE(8,3262)TOT1,DT
3262    FORMAT(/1X,'TOTALS     ',I4,34X,I4)
        WRITE(8,602)TVNET(I)
        CLOSE(8)
        TYPE 3265
3265    FORMAT('+',' WRITTEN')
3300    CONTINUE
        CLOSE(7)
        OPEN(8,'MTTR.TMP',OUTPUT)
        WRITE(8,630)PASS
        DO 3270 I=1,NUMNET
C       IF (I.EQ.23) GOTO 3270
        ENCODE(25,3214,FILE)TVNET(I),HEX(SM),SY
        WRITE(8,3269)FILE(1),FILE(2)
3269    FORMAT(A5,A5)
3270    CONTINUE
        WRITE(8,2371)
2371    FORMAT(/,'DEL MTTR.TMP')
        CLOSE (8)
        TYPE 3268
3268    FORMAT(/1X'JOB COMPLETE !',/)
        CALL DBCLOSE
        IF (ANS.EQ.'A') GOTO 3400
        GOTO 59
C
C***************************************************
3400    TYPE 3405
3405    FORMAT(/1X,'ROUTINE TO REPORT END OF MONTH MTTR BY REPAIR ',
     1  'GROUP.',/)
        CALL DBOPEN('BASE7')
3406    IF (ANS.EQ.'2') CALL PERIOD(NDAT,NDUP,SM,SD,SY,EM,ED,EY)
        CALL DBFIND(4,'GE',NDAT,'AND',4,'LE',NDUP)
        CALL DBNREC(NUMBER)
        IF (NUMBER.GT.0) GOTO 3415
        TYPE 3211
        GOTO 3406
C415    SY=SY-1900
C       EY=EY-1900
3415    IF (ED.LT.10) ENCODE(15,3420,FILE)EM,ED,EY
        IF (ED.GT.9) ENCODE(15,3422,FILE)EM,ED,EY
3420    FORMAT(I2,'0',I1,I2,'.MTR',5X)
3422    FORMAT(I2,I2,I2,'.MTR',5X)
        OPEN(8,FILE,OUTPUT)
        IF (FLAG.EQ.1) WRITE(8,3423)
        IF (FLAG.EQ.-1) WRITE(8,3424)
3423    FORMAT(/,/,/,/,T20,'MTTR REPAIR TIMES FOR TYMNET REPAIR GROUPS',
     1  /,/,T31,'PUBLIC NETWORK REPAIR',/,/,/)
3424    FORMAT(/,/,/,/,T20,'MTTR REPAIR TIMES FOR TYMNET REPAIR GROUPS',
     1  /,/,T31,'PRIVATE NETWORK REPAIR',/,/,/)
        WRITE(8,3425)AM(SM),SD,SY,AM(EM),ED,EY,NUMBER
3425    FORMAT(3X,'THE FOLLOWING REPORT PRESENTS THE MEAN TIME ',
     1  'TO REPAIR STATISTICS',/1X,'FOR ALL GROUPS SUPPORTING ',
     2  'TYMNET CUSTOMERS. THESE STATISTICS',/'ARE COMPILED FROM NETCON',
     3  ' AND NSSC TROUBLE TICKET DATA BASES.',/,'THE TIMES DISPLAYED ',
     4  'TAKE INTO ACCOUNT RESPONSE TIME AND REPAIR TIME.',/,/,
     5  'THE FOLLOWING FACTS ARE FOR THE PERIOD  ',A3,1H-,I2,1H-,
     6  I2,1H,' THROUGH ',A3,1H-,I2,1H-,I2,1H.,/,'  DURING THIS ',
     7  'PERIOD, TICKETS CHANGED HANDS ',I5,' TIMES.',/,/,
     8  'REPAIR',T12,'TICKETS',T26,'CURRENT',T55,'PRIOR 30 DAY',/,
     9  'GROUP',T12,'HANDLED',T26,'MONTH',T55,'PERIOD',/)
        ODAT=NDAT-30
        OLDUP=NDUP-30
        TOT=0
        NLH=0
        DO 3460 I=1,NUMATTN
        CALL DBFIND(8,1,ATTN(I),1,4,'GE',NDAT,'AND',4,'LE',NDUP,
     1  1,9,'GT',0,1,12,'NE','TRACK')
        CALL DBNREC(DOIT)
        IF (DOIT.GT.0) GOTO 3430
        HOUR=O
        ELM=0
        GOTO 3431
3430    CALL TOTELM(DOIT,ELM,HOUR,D)
3431    NLH=HOUR
        TOT=DOIT
3435    CALL DBFIND(8,1,ATTN(I),1,4,'GE',ODAT,'AND',4,'LE',OLDUP,
     1  1,9,'GT',0,1,12,'NE','TRACK')
        CALL DBNREC(DOIT)
        IF (DOIT.GT.0) GOTO 3440
        ELM=0
        HOUR=0
        GOTO 3445
3440    CALL TOTELM(DOIT,ELM,HOUR,D)
3445    TYPE 3451,ATTN(I)
        WRITE(8,3450)ATTN(I),TOT,NLH,DOIT,HOUR
3450    FORMAT(1X,A5,T12,I4,T23,F8.1,' HOURS',T50,
     1  I4,T55,F8.1,' HOURS',/)
        TOT1=0
        NLH=0
        HOUR=0
        ELM=0
        TOT=0
3460    CONTINUE
        WRITE(8,3465)
3465    FORMAT(/,/,':S CC ** MTTR')
        CLOSE(8)
        CALL DBCLOSE
        IF (ANS.EQ.'A') GOTO 3470
        GOTO 59
C
C
C       ROUTINE TO REPORT MTTR BY PRODUCT TYPE
C
C***************************************************
3470    TYPE 3475
3475    FORMAT(/1X,'ROUTINE TO REPORT END OF MONTH MTTR BY PRODUCT.'/)
        CALL DBOPEN('BASE4')
3480    IF (ANS.EQ.'3') CALL PERIOD(NDAT,NDUP,SM,SD,SY,EM,ED,EY)
        CALL DBFIND(49,'GE',NDAT,1,49,'LE',NDUP,1,54,'GT',0)
        CALL DBNREC(NUMBER)
        IF (NUMBER.GT.0) GOTO 3485
        TYPE 3211
        GOTO 3480
3485    IF (ED.LT.10) ENCODE(15,3490,FILE)EM,ED
        IF (ED.GT.9) ENCODE(15,3492,FILE)EM,ED
3490    FORMAT(I2,'0',I1,'PR.MTR',5X)
3492    FORMAT(I2,I2,'PR.MTR',5X)
        OPEN(8,FILE,OUTPUT)
        IF (FLAG.EQ.1) WRITE(8,3423)
        WRITE(8,3500)AM(SM),SD,SY,AM(EM),ED,EY
3500    FORMAT(3X,'THE FOLLOWING REPORT PRESENTS THE MEAN TIME '
     1  'TO REPAIR STATISTICS',/1X,'FOR ALL PROBLEM TYPES.',
     2  ' THESE STATISTICS ARE COMPILED FROM NETCON AND'/1X,'NSSC ',
     3  'TROUBLE TICKET DATA BASES. THE TIMES DISPLAYED ',
     4  'TAKE INTO',/1X,'ACCOUNT RESPONSE TIME AND REPAIR TIME.',//1X,
     5  'THE FOLLOWING FACTS ARE FOR THE PERIOD  ',A3,1H-,I2,1H-,
     6  I2,1H,' THROUGH ',A3,1H-,I2,1H-,I2,1H.,/1X,
     7  'PRODUCT',T12,'NUMBER',T26,'CURRENT',T55,'PRIOR 30 DAY',/1X,
     8  'TYPE',T12,'REPORTED',T26,'PERIOD',T55,'PERIOD',/)
        ODAT=NDAT-30
        OLDUP=NDUP-30
        NLH=0
        DO 3540 I=1,NUMTYPE
        CALL DBFIND(14,1,TYPE(I),1,49,'GE',NDAT,'AND',49,'LE',NDUP,1,
     1  54,'GT',0)
        CALL DBNREC(DOIT)
        IF (DOIT.GT.0) GOTO 3510
        HOUR=0
        ELM=0
        GOTO 3511
3510    CALL TOTELM(DOIT,ELM,HOUR,D)
3511    NLH=HOUR
        TOT=DOIT
3515    CALL DBFIND(14,1,TYPE(I),1,49,'GE',ODAT,'AND',49,'LE',OLDUP,1,
     1  54,'GT',0)
        CALL DBNREC(DOIT)
        IF (DOIT.GT.0) GOTO 3530
        HOUR=0
        ELM=0
        GOTO 3524
3530    CALL TOTELM(DOIT,ELM,HOUR,D)
3524    TYPE 3451,TYPE(I)
3451    FORMAT('+'5X,A5,$)
        WRITE(8,3450)TYPE(I),TOT,NLH,DOIT,HOUR
        TOT1=0
        NLH=0
        HOUR=0
        ELM=0
        TOT=0
3540    CONTINUE
        WRITE(8,3465)
        CLOSE(8)
        IF (ANS.EQ.'A') GOTO 3550
        GOTO 4960
C
C       ROUTINE TO REPORT MTTR BY CLOSE OUT CODE
C
C**************************************************
3550    TYPE 3555
3555    FORMAT(/1X,'ROUTINE TO REPORT END OF MONTH MTTR BY CLOSE OUT',
     1  ' CODE.',/)
        CALL DBOPEN('(TNT)BASE4')
3560    IF (ANS.EQ.'4') CALL PERIOD(NDAT,NDUP,SM,SD,SY,EM,ED,EY)
        CALL DBFIND(49,'GE',NDAT,1,49,'LE',NDUP,1,54,'GT',0)
        CALL DBNREC(NUMBER)
        IF (NUMBER.GT.0) GOTO 3565
        TYPE 3211
        GOTO 3560
3565    IF (ED.LT.10) ENCODE(15,3570,FILE)EM,ED
        IF (ED.GT.9) ENCODE(15,3575,FILE)EM,ED
3570    FORMAT(I2,'0',I1,'CC.PRI',5X)
3575    FORMAT(I2,I2,'CC.PRI',5X)
        OPEN(8,FILE,OUTPUT)
        IF (FLAG.EQ.1) WRITE(8,3423)
        IF (FLAG.LT.0) WRITE(8,3424)
        WRITE(8,3580)AM(SM),SD,SY,AM(EM),ED,EY,NUMBER
3580    FORMAT(3X,'THE FOLLOWING REPORT PRESENTS THE MEAN TIME ',
     1  'TO REPAIR STATISTICS',/1X,'FOR ALL CLOSE OUT CODES.',
     2  'THESE STATISTICS ARE COMPILED FROM NETCON'/1X,'AND NSSC TROU',
     3  'BLE TICKET DATA BASES. THE TIMES DISPLAYED TAKE INTO',/1X,
     4  ' ACCOUNT RESPONSE TIME AND REPAIR TIME.',/,/,'THE FOLLOWING',
     5  ' FACTS ARE FOR THE PERIOD  ',A3,1H-,I2,1H-,I2,1H,
     6  ' THROUGH ',A3,1H-,I2,1H-,I2,1H.,/1X'DURING THIS PERIOD ',
     7  'THERE WERE ',I4,' PROBLEMS EVALUATED.',/,/1X,
     8  'CLOSE OUT',T12,'NUMBER',T26,'CURRENT',T55,'PRIOR',/,
     9  'CODE',T12,'REPORTED',T26,'PERIOD',T55,'PERIOD',/)
        ODAT=NDAT-30
        OLDUP=NDUP-30
        NLH=0
3551    FORMAT(2A5)
        DO 3610 I=1,NUMCODE
        IF(CODE(I).EQ.'     ') GOTO 3610
        DECODE(10,3551,CODE(I))TEMP
        CALL DBFIND(55,1,CODE(I),1,49,'GE',NDAT,1,49,'LE',NDUP,1,54,
     1  'GT',0,1,9,'NE',VNET(1),1,53,'LT',6)
        CALL DBNREC(DOIT)
        IF (DOIT.GT.0) GOTO 3585
        ELM=0
        HOUR=0
        GOTO 3586
3585    CALL TOTELM(DOIT,ELM,HOUR,D)
3586    NLH=HOUR
        TOT=DOIT
3590    CALL DBFIND(55,1,CODE(I),1,49,'GE',ODAT,1,49,'LE',OLDUP,1,
     1  54,'GT',0,1,9,'NE',VNET(1),1,53,'LT',6)
        CALL DBNREC(DOIT)
        IF (DOIT.GT.0) GOTO 3592
        ELM=0
        HOUR=0
        GOTO 3593
3592    CALL TOTELM(DOIT,ELM,HOUR,D)
3593    TOT1=DOIT
3594    TYPE 3597,TEMP
3597    FORMAT(1X,2A5)
        WRITE(8,3496)TEMP,TOT,NLH,TOT1,HOUR
3496    FORMAT(1X,2A5,T12,I4,T23,F8.1,' HOURS',T50,
     1  I4,T55,F8.1,' HOURS',/)
        NLH=0
        TOT1=0
        HOUR=0
        ELM=0
        TOT=0
3610    CONTINUE
        WRITE(8,3465)
        CLOSE(8)
        CALL DBCLOSE
        IF (ANS.EQ.'A') GOTO 99990
        GOTO 59
C
C
C       ROUTINE TO CLEAR OUT BOOGUS ELM TIMES.
C
3990    CALL DBOPEN('BASE4')
        CALL DBFIND(54,'GT',86400.0)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 3998
        CALL DBCHNG(54,0)
3998    CALL DBCLOSE
        GOTO 4000
C
C       ROUTINE TO UPDATE THE DATE UP FIELD IN BASE4
C       BASE5.
C
4000    TYPE 4002
4002    FORMAT(/1X,'THIS WILL PUT DATE UP IN BASE4.',/)
        CALL DBOPEN('BASE4','BASE5')
        CALL DBSET(1)
        CALL DBUPD(-1)
        CALL DBFIND(49,1,0)
        CALL DBNREC(NUMBER)
        IF ((NUMBER.EQ.0).AND.(ANS.EQ.'A')) GOTO 4300
        IF (NUMBER.EQ.0) GOTO 4960
        Z=0
        J=0
        TYPE 4005,NUMBER
4005    FORMAT(/3X,'THERE ARE ',I8,' RECORDS TO UPDATE',/,
     1  /4X,'TNUM TIME',4X'PROC.',
     2  6X,'TO GO',3X,'J =',3X,'UPDATED',/)
        TOGO=10
        DO 4200 I=1,NUMBER
        CALL DBGREC($4951,I)
        CALL DBVAL(1,TNUM,49,DUP,50,TUP)
        IF (DUP.GT.0) GOTO 4195
        CALL DBSET(2)
        CALL DBFIND(1,1,TNUM)
        CALL DBSRCH('STAT',1,'MONIT')
        CALL DBNREC(L)
        IF (L.GT.0) GOTO 4020
        CALL DBFIND(1,1,TNUM)
        CALL DBSRCH('STAT',1,'CLSD')
        CALL DBNREC(L)
        IF (L.GT.0) GOTO 4015
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(L)
        IF (L.GT.0) GOTO 4015
C       TYPE 4016,TNUM
4016    FORMAT(1X,'NO UPDATES FOR TICKET # ',I8,/)
        GOTO 4195
4015    CALL DBGREC($4951,L)
        GOTO 4010
4020    CALL DBGREC($4951,1)
4010    CALL DBVAL('SDAT',DUP,'TIME',TUP)
        TYPE 4003,TNUM,TUP
4019    CALL DBSET(1)
        TYPE 4003,TNUM,TUP
        CALL DBFIND(1,1,TNUM)
        CALL DBCHNG(49,DUP,50,TUP)
        J=J+1
        Z=Z+1
        I=I-1
        NUMBER=NUMBER-1
4195    CALL DBSET(1)
        CALL DBFIND(49,1,0)
        MED=NUMBER-I
        IF (TOGO.EQ.I) TYPE 4197,I,MED,J,Z
4197    FORMAT('+',13X,I6,6X,I5,3X,I4,4X,I5)
        IF (TOGO.EQ.I) TOGO=TOGO+10
        IF (J.LT.50) GOTO 4200
        CALL DBUPD(0)
        CALL DBCLOSE
        CALL DBCLOSE
        CALL DBOPEN('BASE4','BASE5')
        CALL DBUPD(-1)
        CALL DBFIND(54,1,0)
        J=1
4200    CONTINUE
        CALL DBUPD(0)
        TYPE 4205
4205    FORMAT(/4X,'JOB IS COMPLETE !.'/)
        CALL DBCLOSE
        CALL DBCLOSE
        IF (ANS.EQ.'A') GOTO 4300
        GOTO 59
C
C       ROUTINE TO FIND DUPLICATE TICKETS
C
4210    TYPE 4215
4215    FORMAT(/1X,'THIS ROUTINE WILL CHECK TO SEE IF THERE'/1X,
     1  'ARE DUPLICATE TICKETS IN BASE 1 AND 4 , OR',/1X,
     2  'BASE 2 AND 5.'/1X,'  PICK THE GROUP TO CHECK 1 OR 2 :',$)
        ACCEPT 120,K
        IF (K.EQ.0) GOTO 58
        IF ((K.LT.0).OR.(K.GT.2)) GOTO 4210
        IF (K.EQ.1) CALL DBOPEN('BASE4','BASE1')
        IF (K.EQ.2) CALL DBOPEN('BASE2','BASE5')
        CALL DBSET(1)
        CALL DBFIND('ALL')
        CALL DBNREC(L)
        IF (L.EQ.0) GOTO 58
        TYPE 4220,L
4220    FORMAT(/1X,'THERE ARE ',I8,' RECORDS TO CHECK.'/)
        LNUM=0
        DONE=0
        Z=0
        J=0
        TOGO=10
        DO 4250 I=1,L
        CALL DBGREC($99990,L)
        CALL DBVAL(1,TNUM)
        IF (LNUM.EQ.TNUM) TYPE 4221,TNUM,NUMBER
        LNUM=TNUM
4221    FORMAT(1X'DUP FOUND ',I6,2X,I4)
        CALL DBSET(2)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(NUMBER)
        IF (NUMBER.GT.0) TYPE 4225,TNUM,NUMBER
4225    FORMAT(1X,'TICKET # ',I8,' IS IN BOTH DATA BASES, ',
     1  I3,' RECORDS FOUND')
        CALL DBSET(1)
        CALL DBFIND('ALL')
        DONE=DONE+1
        MED=L-DONE
        IF (TOGO.EQ.DONE) TYPE 4197,DONE,MED,J,Z
        IF (TOGO.EQ.DONE) TOGO=TOGO+10
4250    CONTINUE
        TYPE 4205
        CALL DBCLOSE
        CALL DBCLOSE
        GOTO 59
C
C       ROUTINE TO PUT ELM INTO THE DATA BASE
C
4300    TYPE 4305
4305    FORMAT(/2X,'THIS ROUTINE WILL PUT THE ELAPSED TIME INTO',
     1  /2X,'THE DATA BASE',/)
        CALL DBOPEN('BASE4')
        CALL DBSET(1)
        CALL DBUPD(-1)
        CALL DBFIND(54,1,0,1,49,'GT',0)
        CALL DBNREC(NUMBER)
        IF ((NUMBER.EQ.0).AND.(ANS.EQ.'A')) GOTO 4400
        IF (NUMBER.EQ.0) GOTO 59
        Z=0
        J=0
C       TYPE 4004
4004    FORMAT(/1X'DO YOU WANT TO MAKE CHANGES ? ',$)
C       ACCEPT 3888,W
3888    FORMAT(I1)
        TYPE 4005,NUMBER
        DONE=0
        Z=0
        J=0
        TOGO=10
        DO 4320 I=1,NUMBER
        CALL DBGREC($4951,I)
        CALL DBVAL(1,TNUM,5,SDAT,6,TIM1,49,DUP,50,TUP,54,ELM,
     1  35,V6,39,V4)
        TYPE 4003,TNUM,TUP
4003    FORMAT('+',1X,I6,2X,A5)
        CALL MTTR(SDAT,DUP,TIM1,TUP,ELM,HOUR)
        CALL VDIS(V4,V6,ELM)
        CALL DBCHNG(54,ELM)
        Z=Z+1
        J=J+1
C318    DONE=DONE+1
        MED=NUMBER-I
4318    IF (TOGO.EQ.I) TYPE 4197,I,MED,J,Z
        IF (TOGO.EQ.I) TOGO=TOGO+10
C       IF (J.EQ.50) CALL DBUPD(0)
C       IF (J.EQ.50) CALL DBCLOSE
C       IF (J.EQ.50) CALL DBOPEN('BASE4')
C       IF (J.EQ.50) CALL DBUPD(-1)
C       IF (J.EQ.50) J=1
4320    CONTINUE
        TYPE 4205
        CALL DBCLOSE
        IF (ANS.EQ.'A') GOTO 4400
        GOTO 59
4951    TYPE 4952,TNUM
4952    FORMAT(/,/5X,'PROBLEM WITH TICKET NUMBER : ',I8,/)
        CALL DBCLOSE
        CALL DBCLOSE
        GOTO 59
C
C       ROUTINE TO DELETE DUPLICATE TICKETS
C
4340    TYPE 4345
4345    FORMAT(/1X,'ROUTINE TO FIND DUPLICATE TICKET NUMBERS --',
     1  /2X,'AND DELETE THE DUPLICATES',/)
        J=0
        CALL DBOPEN('BASE4')
        CALL DBFIND('ALL')
        CALL DBNREC(NUMBER)
        RECORD=NUMBER-1250
        CALL DBFIND(1,'GT',RECORD)
        CALL DBNREC(L)
        IF (L.EQ.0) GOTO 58
        TYPE 4220,L
        DO 4360 I=1,L
        CALL DBGREC($4360,I)
        CALL DBVAL(1,TNUM)
        TYPE 4350,TNUM,I,D
        CALL DBFIND(1,1,TNUM)
4350    FORMAT('+',1X,I8,2X,I8,2X,I4)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.1) GOTO 4358
        IF (NUMBER.LT.1) TYPE 4352,TNUM
4352    FORMAT(/1X'NUMBER LES THAN ZERO FOR TNUM = ',I8,/)
        IF (NUMBER.LT.1) GOTO 4358
        CALL DBGREC($4358,1)
        J=J+1
        CALL DBDEL
        L=L-1
        D=D+1
4358    CALL DBFIND('ALL')
4360    CONTINUE
        TYPE 4205
        GOTO 58
C
C       ROUTINE TO UPDATE THE NDAT FIELD IN BASE7
C
4400    TYPE 4405
        DONE=0
        Z=0
        J=0
4405    FORMAT(/1X,'THIS ROUTINE WILL PUT THE DATE UP IN BASE7, IF ',
     1  'IT IS MISSING',/)
        CALL DBOPEN('BASE7','BASE4')
        CALL DBSET(1)
        CALL DBFIND(4,1,0)
        CALL DBNREC(NUMBER)
        IF (NUMBER.GT.0) GOTO 4506
        TYPE 4205
        CALL DBCLOSE
        IF (ANS.EQ.'A') GOTO 4530
        IF (NUMBER.EQ.0) GOTO 4360
4506    TYPE 4005,NUMBER
        TOGO=10
        DO 4500 I=1,NUMBER
        CALL DBGREC($4400,I)
        CALL DBVAL(1,TNUM,4,DUP)
        CALL DBSET(2)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(RECORD)
        IF (RECORD.GT.0) GOTO 4410
        TYPE 4016,TNUM
        CALL DBSET(1)
        GOTO 4416
4410    CALL DBGREC($4360,1)
        CALL DBVAL(49,DUP,50,TUP)
        IF (TUP.NE.'.....') GOTO 4414
        CALL DBSET(1)
        GOTO 4415
4414    CALL DBSET(1)
        CALL DBFIND(4,1,0,1,1,1,TNUM)
        CALL DBNREC(TOT)
        CALL DBCHNG(4,DUP,5,TUP)
4415    CALL DBFIND(4,1,0)
        TYPE 4003,TNUM,TUP
        I=I-TOT
        NUMBER=NUMBER-TOT
        IF (RECORD.GT.0) TYPE 4003,TNUM,TUP
4416    Z=Z+1
        J=J+1
        DONE=DONE+1
        MED=NUMBER-DONE
        IF (TOGO.EQ.DONE) TYPE 4197,DONE,MED,J,Z
        IF (TOGO.EQ.DONE) TOGO=TOGO+10
4500    CONTINUE
        TYPE 4205
        CALL DBCLOSE
        IF (ANS.EQ.'A') GOTO 4530
        GOTO 59
C
C       ROUTINE TO PUT ELM IN BASE7
C
4505    TYPE 4515
4515    FORMAT(/1X,'THIS ROUTINE WILL PUT THE ELM IN BASE7',/)
        DONE=0
        J=0
        Z=0
        CALL DBOPEN('BASE7')
        CALL DBUPD(-1)
        CALL DBFIND(2,'GT',0,1,4,'GT',0,1,9,1,0)
        CALL DBNREC(NUMBER)
        IF (NUMBER.GT.0) GOTO 4516
        TYPE 4205
        CALL DBCLOSE
        IF ((NUMBER.EQ.0).AND.(ANS.EQ.'A')) GOTO 3200
        GOTO 4360
4516    TYPE 4005,NUMBER
        TOGO=10
        DO 4525 I=1,NUMBER
        CALL DBGREC($4405,I)
        CALL DBVAL(1,TNUM,2,SDAT,3,TIM1,4,DUP,5,TUP,9,ELM)
        TYPE 4003,TNUM,TUP
        CALL MTTR(SDAT,DUP,TIM1,TUP,ELM,HOUR)
        CALL DBCHNG(9,ELM)
        Z=Z+1
        J=J+1
        DONE=DONE+1
        MED=NUMBER-DONE
        IF (TOGO.EQ.DONE)TYPE 4197,DONE,MED,J,Z
        IF (TOGO.EQ.DONE) TOGO=TOGO+10
4525    CONTINUE
        TYPE 4205
        CALL DBUPD(0)
        CALL DBCLOSE
        IF (ANS.EQ.'A') GOTO 3200
        GOTO 59
C
C       ROUTINE TO PUT THE SDAT IN BASE7
C
4530    TYPE 4535
4535    FORMAT(/1X,'ROUTINE TO PUT SDAT IN BASE7',/)
        CALL DBOPEN('BASE7','BASE4')
        CALL DBSET(1)
        CALL DBFIND(2,1,0)
        CALL DBNREC(NUMBER)
        IF (NUMBER.GT.0) GOTO 4536
        TYPE 4205
        CALL DBCLOSE
        IF (ANS.EQ.'A') GOTO 4505
        IF (NUMBER.EQ.0) GOTO 4360
4536    TYPE 4005,NUMBER
        TOGO=10
        DONE=0
        Z=0
        J=0
        DO 4545 I=1,NUMBER
        CALL DBGREC($4530,I)
        CALL DBVAL(1,TNUM)
        CALL DBSET(2)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(RECORD)
        IF (RECORD.GT.0) GOTO 4537
        TYPE 4016,TNUM
        CALL DBSET(1)
        GOTO 4540
4537    CALL DBGREC($4530,1)
        CALL DBVAL(5,SDAT,6,TIM1)
        CALL DBSET(1)
        CALL DBFIND(1,1,TNUM,1,2,1,0)
        CALL DBNREC(TOT)
        CALL DBCHNG(2,SDAT,3,TIM1)
4540    CALL DBFIND(2,1,0)
        TYPE 4003,TNUM,TIM1
        I=I-TOT
        NUMBER=NUMBER-TOT
        IF (RECORD.GT.0) TYPE 4003,TNUM,TUP
        Z=Z+1
        J=J+1
        DONE=DONE+1
        MED=NUMBER-DONE
        IF (TOGO.EQ.DONE) TYPE 4197,DONE,MED,J,Z
        IF (TOGO.EQ.DONE) TOGO=TOGO+10
4545    CONTINUE
        TYPE 4205
        CALL DBCLOSE
        IF (ANS.EQ.'A') GOTO 4505
        GOTO 59
        GOTO 4360
C
C
C       THIS ROUTINE TAKES CLOSED TICKETS OUT OF THE CURRENT DATA
C       BASE AND PUTS THEM IN THE ARCHIEVE DATA BASE. THEN IT WILL
C       DELETE THE INFO OUT OF THE CURRENT DATA BASE.
C
2550    TYPE 2554
        LOOP=48
2554    FORMAT(/'+WHAT WOULD YOU LIKE TO MOVE ...'/5X'1 = BASE1'/5X,
     1  '2 = BASE2'/5X'3 = BASE6'/10X'ENTER OPTION : ',$)
        ACCEPT 120,X
        IF (X.EQ.0) GOTO 59
        IF ((X.LT.1).OR.(X.GT.3)) GOTO 2550
        J=0
        TYPE 2551
2551    FORMAT(/1X'THIS ROUTINE WILL PUT ALL THE CLOSED TICKETS',
     1  /1X'IN THE HISTORICAL DATA BASE',/)
2559    CALL DBERR($2562,IERT,IERC,0)
        GOTO 2561
2562    IF (IERT.NE.7) GOTO 4955
        TYPE 1379
1379    FORMAT(1X,'DATA BASE BUSY... WAITING 10 SEC.')
        CALL WAIT(15.0)
2561    IF (X.EQ.1) CALL DBOPEN('BASE1','BASE4')
        IF (X.EQ.2) CALL DBOPEN('BASE2','BASE5')
        IF (X.EQ.3) CALL DBOPEN('BASE6','BASE7')
        IF (X.EQ.4) CALL DBOPEN('CALBAK','OCALBK')
        CALL DBSET(1)
        CALL DBUPD(-1)
        CALL DBSET(2)
        CALL DBUPD(-1)
        CALL DBALLO(LOOP)
        CALL DBSET(1)
        CALL DBFIND('RS','GE',8)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 2572
        IF ((ANS.EQ.'R').OR.(ANS.EQ.OPT(8))) goto 2556
        TYPE 2552,NUMBER
2552    FORMAT(/5X'THERE ARE ',I5,' TICKETS TO MOVE',/)
        IF (NUMBER.LE.LOOP) GOTO 2556
        IF (J.EQ.0) TYPE 2560,NUMBER
2560    FORMAT('+YOU MAY MOVE ALL ',I5,' TICKETS BY TYPING A'/,
     1  ' CARRIAGE RETURN OR INPUT A SMALLER NUMBER OF '/,
     2  ' TICKETS TO MOVE... HOW MANY WILL YOU MOVE ?: ',$)
        IF (J.EQ.0) ACCEPT 172,NEWN
172     FORMAT(I8)
        IF (NEWN.GT.0) NUMBER=NEWN
        IF (NUMBER.LE.LOOP) GOTO 2556
        TOT1=LOOP
        NEWN=NEWN-TOT1
        GOTO 2557
2556    TOT1=NUMBER
2557    IF (X.EQ.3) CALL MOTRAC(TOT1)
        IF (X.EQ.2) CALL MOSTAT(TOT1)
        IF (X.EQ.1) CALL MOOPEN(TOT1)
        IF (X.EQ.4) CALL MOCLBK(TOT1)
2571    CONTINUE
        CALL DBUPD(0)
        CALL DBCLOSE
        CALL DBCLOSE
        J=2
        CALL DBERR($4930,IERT,IERC,-1)
2572    LOOP=96
        IF (ANS.EQ.'M') GOTO 2573
        IF ((X.EQ.3).AND.(NUMBER.EQ.0)) GOTO 4945
        IF (X.EQ.4) GOTO 59
        X=X+1
        GOTO 2559
2573    IF (NUMBER.GT.LOOP) GOTO 2574
        IF (X.EQ.4) GOTO 59
        X=X+1
        GOTO 2559
2574    TYPE 2575
2575    FORMAT(1X,'WAIT 5.0 SEC TO GIVE OTHERS A CHANCE.')
        CALL WAIT (4.7)
        GOTO 2559
C       CREATE A FILE OF A LIST OF TICKETS REFERED TO A GROUP
C
C       REPORT ROUTINE FOR END OF PERIOD
C
240     TYPE 242
242     FORMAT(' ENTER SHIFT SUPERVISOR: ',$)
        ACCEPT 252,SUP
        TYPE 246
246     FORMAT(' ENTER SHIFT PERIOD: ',$)
        ACCEPT 248,SHIFT
248     FORMAT(A5)
        TYPE 250
        CALL ECHO(0)
        ACCEPT 252,PASS
        CALL ECHO(1)
        K=3
        GOTO 255
241     TYPE 4956,IERT,IERC,CUST(SYS)
        CALL WAIT(20.0)
255     CALL DBERR($253,IERT,IERC,0)
        GOTO 244
253     IF (IERT.NE.7) GOTO 241
        TYPE 1379
        CALL WAIT(12.0)
244     CALL DBOPEN('BASE1','BASE2')
        CALL DBSET(2)
        CALL DBUPD(-1)
        CALL DBSET(1)
        CALL DBUPD(-1)
        CALL DBSET(1)
        CALL FGMT(IA1,IA2,IA3,IA4,IA5,IA6)
        OPEN(8,RVNET(K),OUTPUT)
        IF (FLAG.EQ.1) WRITE(8,257)SHIFT,IA2,AM(IA1),IA3,SUP,TVNET(K)
257     FORMAT(/22X,' NETWORK CONTROL CENTER',/23X,'-------------',
     1  '---------',/,/,/17X,A5,' SHIFT REPORT FOR ',
     2  I2,'-',A3,'-',I2,/23X,'SUPERVISOR: ',4A5,/24X,A5,' NETWORK ',
     3  'ACTIVITY',/,/,/,'********************',/,'*NEW TICKET ',
     4  'SUMMARY*',/,'********************',/)
        IF (FLAG.EQ.-1) WRITE(8,256)SHIFT,IA2,AM(IA1),IA3,SUP,TVNET(K)
256     FORMAT(/18X,' NETWORK SYSTEMS SUPPORT CENTER',/18X,' ---',
     1  '--------------------------- ',/,/,/17X,A5,' SHIFT REPORT FOR ',
     2  I2,'-',A3,'-',I2,/23X,'SUPERVISOR: ',4A5,/24X,A5,' NETWORK AC',
     3  'TIVITY',/,/,/,'********************',/,'*NEW TICKET SUMMARY',
     4  '*',/,'********************',/)
260     CALL DBFIND(9,1,VNET(K),1,11,1,0)
        CALL DBNREC(RECORD)
        IF (RECORD.GT.0) GOTO 280
        WRITE(8,270)
270     FORMAT(/10X,'NO TICKETS WERE OPENED DURING THIS PERIOD',/,/)
        GOTO 330
280     CONTINUE
282     FORMAT(/3X,'*** THE FOLLOWING TICKET WAS OPENED FOR ',A10,
     1  ' ...',/,/)
        DO 320 I=1,RECORD
        CALL DBGREC($4930,I)
        CALL DBVAL(1,TNUM,2,PRO,3,T40,4,F2,5,SDAT,6,TIM1,7,RNAM,8,RFON,
     1  9,NET,10,WHO,11,RS,12,SITC,13,SITP,14,PROD,15,STAT,16,DISC,17,
     2  CCOD,18,HQCC,19,ONUM,20,SRGN,21,HRGN,22,
     3  LOC,23,KHST,24,COV,25,COMMNT,26,CDAT,27,TCLSD,28,STH,29,EHR,
     4  30,PORT,31,CNAM,32,TECH,33,VER,34,V5,35,V6,36,V1,37,V2,38,V3,
     5  39,V4,40,NODE,41,SLOT,42,HOST,43,CKT,44,TRB,45,BILL,46,ESC,47,
     6  F1,48,NT,49,DUP,50,TUP,51,MAINT,52,SVER,53,HN,54,ELM,55,COC,
     7  56,CBY)
        CALL DBSET(2)
        CALL DBFIND(1,1,TNUM,1,5,1,6)
        CALL DBNREC(NUMBER)
        IF (NUMBER.GT.0) GOTO 312
        WRITE(8,282)VNET(K)
        CALL DBNDAT(SDAT,IM,ID,IY)
        IY=IY-1900
        WRITE(8,2084)FF
2084    FORMAT(/,A5,/)
        IF (DUP.GT.0) GOTO 2090
        JM=0
        JD=0
        JY=0
        SM=0
        SY=0
        SD=0
        GOTO 2091
2090    IF (CDAT.EQ.0) GOTO 2093
2093    CALL DBNDAT(DUP,JM,JD,JY)
        CALL DBNDAT(CDAT,SM,SD,SY)
        SY=SY-1900
        JY=JY-1900
2091    IF (FLAG.GT.1) GOTO 2092
2092    CALL MTTR(SDAT,DUP,TIM1,TUP,ELM,HOUR)
        IF (NT.EQ.2) GOTO 290
        IF (NT.EQ.3) GOTO 2139
        WRITE(8,680)NET,SVER,CNAM,TNUM,STAT,SITC,NODE,
     1  NETOP(HH),SITP,KHST,MAINT,LOC,PROD,V1,V2,V3,RNAM,VER,YN(ESC),
     2  RFON,SRGN,HQCC,COV,HRGN,V4,V6,STH,EHR,YN(PRO),ID,
     3  AM(IM),IY,TIM1,TECH,INT,JD,AM(JM),JY,TUP,CKT,F1,SD,AM(SM),
     4  SY,TCLSD,TRB
        WRITE(8,688)HOUR,ONUM,COC,YN(BILL),YN(T40)
        GOTO 294
290     WRITE(8,689)NET,SVER,CNAM,TNUM,STAT,SITC,NODE,NETOP(HH),
     1  SITP,KHST,MAINT,LOC,HOST,V1,V2,V3,RNAM,SLOT,YN(ESC),RFON,
     2  PORT,HQCC,COV,PROD,V4,V6,STH,EHR,VER,ID,AM(IM),
     3  IY,TIM1,TECH,SRGN,JD,AM(JM),JY,TUP,CKT,HRGN,
     4  SD,AM(SM),SY,TCLSD,TRB
        WRITE(8,668)YN(PRO),HOUR,ONUM,INT,COC,YN(BILL),YN(T40),F1
        GOTO 294
2139     WRITE(8,669)NET,SVER,CNAM,TNUM,STAT,SITC,NODE,NETOP(HH),
     1  SITP,KHST,MAINT,LOC,HOST,V1,V2,V3,RNAM,VER,YN(ESC),RFON,
     2  PROD,HQCC,COV,HRGN,V4,V6,STH,EHR,YN(PRO),
     3  ID,AM(IM),IY,TIM1,CKT,INT,JD,AM(JM),JY,TUP,TRB,F1,SD,AM(SM),
     4  SY,TCLSD,ONUM
        WRITE(8,667)HOUR,TECH,COC,YN(BILL),YN(T40)
294     CALL WDISC(DISC)
680     FORMAT(/1X,'NETWORK',T11,2H: ,2A5,T24,'SEVERITY',T37,2H: ,
     1  I1,T50,'CUSTOMER: ',3A5,/1X,'NODE TKT#: ',I8,T24,'STATE',
     2  T37,2H: ,A5,T50,'CONTACT : ',4A5,/1X,'NODE #',T11,2H: ,
     3  I5,T24,'CONTROL GROUP: ',A5,T51,'CPHONE : ',4A5,/1X,
     4  'KERNAL',T11,2H: ,I5,T24,'REFERRED TO',T37,2H: ,A5,T50,
     5  'LOCALE',T58,2H: ,4A5,/1X,'PRODUCT',T11,2H: ,A5,T24,
     6  'MGMT ESCAL',T37,3H: H,I1,2H S,I1,2H T,I1,T50,'RPTD ',
     7  'BY : ',4A5,/1X,'S/W VERS : ',A5,T24,'TECH ESCAL',T37,
     8  2H: ,A3,T51,'RPHONE : ',4A5,/1X,'S/W DIST : ',A5,T24,
     9  'DE-ESCAL CODE: ',I3,T50,'PLAN #',T58,2H: ,A2,/1X,
     A  'H/W DIST : ',A5,T24,'DEFER :  ',I2,1H/,I3,T50,'SITE HR ',
     B  2H: ,A5,' TO ',A5,/1X,'PRIMARY  : ',A3,T24,'OPEN  : ',
     C  I2,1H-,A3,1H-,I2,1X,A5,1HZ,2X,'COM SPEC: ',3A5,/1X,
     D  'OPEN BY',T11,2H: ,A3,T24,'RESLV : ',I2,1H-,A3,1H-,I2,
     E  1X,A5,1HZ,T50,'CKT #',T58,2H: ,4A5,/1X,'ZONE',I1,T11,2H: ,T24,
     F  'CLOSE : ',I2,1H-,A3,1H-,I2,1X,A5,1HZ,T50,'TELCO # : ',4A5)
688     FORMAT(T24,'ELAPS :  ',F8.1,4H HR.,T50,'REF.TKT#: ',2A5,
     1  /,T24,'CLSCD : '2A5,T50,'BILL/T40: 'A3,1H/,A3,/)
689     FORMAT(/1X,'NETWORK',T11,2H: ,2A5,T24,'SEVERITY',T37,2H: ,
     1  I1,T50,'CUSTOMER: ',3A5,/1X,'HOST TKT#: ',I8,T24,'STATE',
     2  T37,2H: ,A5,T50,'CONTACT : ',4A5,/1X,'NODE #',T11,2H: ,
     3  I5,T24,'CONTROL GROUP: ',A5,T51,'CPHONE : ',4A5,/1X,
     4  'KERNAL',T11,2H: ,I5,T24,'REFERRED TO',T37,2H: ,A5,T50,
     5  'LOCALE',T58,2H: ,4A5,/1X,'HOST #',T11,2H: ,I6,T24,
     6  'MGMT ESCAL',T37,3H: H,I1,2H S,I1,2H T,I1,T50,'RPTD ',
     7  'BY : ',4A5,/1X,'SLOT     : ',A2,T24,'TECH ESCAL',T37,
     8  2H: ,A3,T51,'RPHONE : ',4A5,/1X,'# PORTS  : ',I3,T24,
     9  'DE-ESCAL CODE: ',I3,T50,'PLAN #',T58,2H: ,A2,/1X,
     A  'PRODUCT  : ',A5,T24,'DEFER :  ',I2,1H/,I3,T50,'SITE HR ',
     B  2H: ,A5,' TO ',A5,/1X,'S/W VERS : ',A5,T24,'OPEN  : ',
     C  I2,1H-,A3,1H-,I2,1X,A5,1HZ,2X,'COM SPEC: ',3A5,/1X,
     D  'S/W DIST',T11,2H: ,A3,T24,'RESLV : ',I2,1H-,A3,1H-,I2,
     E  1X,A5,1HZ,T50,'CKT #',T58,2H: ,4A5,/1X,'H/W DIST : ',A5,T24,
     F  'CLOSE : ',I2,1H-,A3,1H-,I2,1X,A5,1HZ,T50,'TELCO # : ',4A5)
668     FORMAT(1X,'PRIMARY  : ',A3,T24,'ELAPS : ',F8.1,4H HR.,T50,
     1  'REF.TKT#: ',2A5,/1X,'OPEN BY  : ',A3,T24,'CLSCD : '2A5,T50,
     2  'BILL/T40: ',A3,1H/,A3,/1X,'ZONE',T11,2H: ,I1)
669     FORMAT(/1X,'NETWORK',T11,2H: ,2A5,T24,'SEVERITY',T37,2H: ,
     1  I1,T50,'CUSTOMER: ',3A5,/1X,'LINE TKT#: ',I8,T24,'STATE',
     2  T37,2H: ,A5,T50,'CONTACT : ',4A5,/1X,'LONODE',T11,2H: ,
     3  I5,T24,'CONTROL GROUP: ',A5,T51,'CPHONE : ',4A5,/1X,
     4  'LO KHOST',T11,2H: ,I5,T24,'REFERRED TO',T37,2H: ,A5,T50,
     5  'LOCALE',T58,2H: ,4A5,/1X,'HI NODE',T11,2H: ,I5,T24,
     6  'MGMT ESCAL',T37,3H: H,I1,2H S,I1,2H T,I1,T50,'RPTD ',
     7  'BY : ',4A5,/1X,'HI KHOST : ',A5,T24,'TECH ESCAL',T37,
     8  2H: ,A3,T51,'RPHONE : ',4A5,/1X,'SPEED    : ',A5,T24,
     9  'DE-ESCAL CODE: ',I3,T50,'PLAN #',T58,2H: ,A2,/1X,
     A  'H/W DIST : ',A5,T24,'DEFER :  ',I2,1H/,I3,T50,'SITE HR ',
     B  2H: ,A5,' TO ',A5,/1X,'BACKBONE : ',A3,T24,'OPEN  : ',
     C  I2,1H-,A3,1H-,I2,1X,A5,1HZ,2X,'CIRCUIT : ',4A5,/1X,
     D  'OPEN BY',T11,2H: ,A3,T24,'RESLV : ',I2,1H-,A3,1H-,I2,
     E  1X,A5,1HZ,T50,'TELCO #',T58,2H: ,4A5,/1X,'ZONE',T11,2H: ,I1,T24,
     F  'CLOSE : ',I2,1H-,A3,1H-,I2,1X,A5,1HZ,T50,'REF TKT#: ',3A5)
667     FORMAT(T24,'ELAPS : ',F8.1,4H HR.,T50,'ANALYSIS: ',3A5,
     1  /,T24,'CLSCD : '2A5,T50,'BILL/T40: 'A3,1H/,A3,/)
295     FORMAT(1X,'ANOMALY CAUSED BY : ',2A5,8X'TICKET CLOSED BY : ',A3)
291     FORMAT(/,'**************************************')
C
C       LIST TICKETS THAT HAVE ADDITIONAL STATUS PUT IN BEFORE THE END
C       OF THE SHIFT THAT THE TICKET WAS OPENED IN.
C
        CALL DBSET(2)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 310
        WRITE(8,292)
292     FORMAT(/3X,'THE FOLLOWING IS THE CURRENT STATUS:',/)
        DO 310 J=1,NUMBER
        CALL DBGREC($4930,J)
        CALL DBCHNG(5,6)
        CALL DBVAL(2,SDAT,3,TIM1,4,INT,7,INFO,8,PNAM,9,ORDER)
        CALL DBNDAT(SDAT,IM,ID,IY)
        IY=IY-1900
        WRITE(8,380)J,PNAM,INT,ID,AM(IM),IY,TIM1
        CALL WINFO(INFO)
310     CONTINUE
312     CONTINUE
        CALL DBSET(1)
        CALL DBFIND(9,1,VNET(K),1,11,1,0)
320     CONTINUE
C
C       CHECK FOR STATUS OF TICKETS THAT HAD ALREADY BEEN PUBLISHED
C       ON ANOTHER SHIFT.
C
330     CONTINUE
        WRITE(8,329)
329     FORMAT(/,/,/,'************************',/,'*UPDATED TICKET S',
     1  'UMMARY*',/'************************',/)
        P=1
331     CALL DBSET(1)
        CALL DBFIND(9,1,VNET(K),1,'STAT','NE','CLSD',1,11,1,1)
        CALL DBNREC(RECORD)
        IF (RECORD.GT.0) GOTO 350
        WRITE(8,340)
340     FORMAT(/,/,/,/10X,'NO TICKETS ARE ACTIVE FROM PREVIOUS ',
     1  'REPORTS',/)
        GOTO 404
350     CONTINUE
        DO 400 I=1,RECORD
        CALL DBGREC($4930,I)
        ELM=0
        CALL DBVAL(1,TNUM,14,PROD,40,NODE,'SLOT',SLOT,
     1  42,HOST,5,SDAT,6,TIM1,43,CKT,44,TRB,49,DUP,51,
     2  MAINT,52,SVER,10,INT,'STAT',STAT,50,TUP,54,ELM)
        CALL DBSET(2)
        CALL DBFIND(1,1,TNUM,1,5,1,5)
        CALL DBNREC(NUMBER)
        IF ((NUMBER.GT.0).AND.(P.EQ.1)) GOTO 370
        IF ((NUMBER.EQ.0).AND.(P.EQ.2)) GOTO 395
        GOTO 395
359     CALL DBNDAT(SDAT,IM,ID,IY)
        IY=IY-1900
        WRITE(8,360)TNUM,NODE,IM,ID,IY
360     FORMAT(10X,'** NO NEW UPDATES FOR TICKET #: ',I6,2X,'NODE #: ',
     1  I5,1X,'DATE: ',I2,1H/,I2,1H/,I2)
        GOTO 395
370     CONTINUE
        CALL MTTR(SDAT,DUP,TIM1,TUP,ELM,HOUR)
        IF (DUP.GT.0) CALL DBNDAT(DUP,JM,JD,JY)
        IF (DUP.GT.0) JY=JY-1900
        CALL DBNDAT(SDAT,IM,ID,IY)
        IY=IY-1900
        WRITE(8,371)
371     FORMAT(/6X,'*** THE FOLLOWING TICKET WAS UPDATED...',/)
        WRITE(8,372)TIC,TNUM,OMAINT,MAINT,NO,NODE,HO,HOST,SL,SLOT,OCKT,
     1  CKT,OTRB,TRB,OSVR,SVER,APSP,INT,PT,PROD,ST,STAT,ODDWN,IM,ID,IY,
     2  TIM1,ODPT,JM,JD,JY,TUP,HOUR,CGRP,NETOP(HH)
372     FORMAT(1X,3A5,2H :,1X,I6,14X,2A5,7X,2H: ,A5,
     1  /1X,A5,11X,1H:,1X,I5,5X,A5,2H :,1X,I6,8X,A5,2H: ,A2,
     2  /1X,2A5,6X,2H: ,4A5,3A5,2X,2H: ,4A5,
     3  /1X,2A5,6X,2H: ,I3,17X,4A5,A3,
     4  /1X,3A5,2H :,1X,A5,15X,3A5,2X,2H: ,A5,/,
     5  1X,3A5,2H :,I2,1H/,I2,1H/,I2,2X,A5,4X,3A5,2X,2H: ,I2,1H/,I2,
     6  1H/,I2,2X,A5,/39X,'ELAPSED TIME',5X,F8.1,
     7  /1X,3A5,3H : ,A5,/)
        DO 395 J=1,NUMBER
        CALL DBGREC($4930,J)
        CALL DBVAL(2,SDAT,3,TIM1,4,INT,7,INFO,8,PNAM,9,ORDER)
        CALL DBNDAT(SDAT,IM,ID,IY)
        IY=IY-1900
        WRITE(8,380)J,PNAM,INT,ID,AM(IM),IY,TIM1
        CALL WINFO(INFO)
380     FORMAT(/1X,'--#',I3,' STATUS ENTERED FROM ',3A5,' BY ',A3,
     1  ' ON ',I2,1H-,A3,1H-,I2,2H @,A5,' ZULU.')
395     CONTINUE
        CALL DBSET(1)
        CALL DBFIND(9,1,VNET(K),1,'STAT','NE','CLSD',1,11,1,1)
400     CONTINUE
C
C       CHECK FOR SECOUND ITERATION OF UPDATES TO KEEP IT LOOKING 
C       NICE. WE PUT UPDATES FIRST AND NO UPDATES NEXT.
C
        IF (P.EQ.1) GOTO 402
        GOTO 404
402     P=2
        GOTO 331
C
C       NOW CHANGE RS OF UPDATES SENT THUS FAR
C
404     IF ((K.NE.NUMNET).AND.(FLAG.EQ.-1)) GOTO 405
        CALL DBSET(2)
        CALL DBFIND(5,1,5)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 405
        CALL DBCHNG(5,6)
C
C       NOW TO CHECK FOR TICKETS THAT ARE CLOSED DURING THIS SHIFT
C
405     CONTINUE
        WRITE (8,406)
406     FORMAT(/,/,/,'***********************',/,'*CLOSED TICKET SUM',
     1  'MARY*',/,'***********************',/)
        CALL DBSET(1)
        CALL DBFIND(9,1,VNET(K),1,11,1,7)
        CALL DBNREC(RECORD)
        IF (RECORD.GT.0)GOTO 420
        WRITE(8,415)
415     FORMAT(/,/,/,/10X,'NO TICKETS WERE CLOSED DURING THIS SHIFT')
        GOTO 550
420     CONTINUE
421     FORMAT(/,/,/,/10X,'THE FOLLOWING TICKET WAS CLOSED... ')
        DO 550 I=1,RECORD
        CALL DBGREC($4930,I)
        ELM=0
        CALL DBVAL(1,TNUM,14,PROD,40,NODE,'SLOT',SLOT,
     1  42,HOST,'STAT',STAT,43,CKT,44,TRB,49,DUP,51,MAINT,52,SVER,
     2  10,INT,'STAT',STAT,5,SDAT,6,TIM1,50,TUP,54,ELM,55,CLC,56,CBY)
        CALL MTTR(SDAT,DUP,TIM1,TUP,ELM,HOUR)
        IF (DUP.GT.0) CALL DBNDAT(DUP,JM,JD,JY)
        IF (DUP.GT.0) JY=JY-1900
        CALL DBNDAT(SDAT,IM,ID,IY)
        IY=IY-1900
        WRITE(8,421)
        WRITE(8,372)TIC,TNUM,OMAINT,MAINT,NO,NODE,HO,HOST,SL,SLOT,OCKT,
     1  CKT,OTRB,TRB,OSVR,SVER,APSP,INT,PT,PROD,ST,STAT,ODDWN,IM,ID,IY,
     2  TIM1,ODPT,JM,JD,JY,TUP,HOUR,CGRP,NETOP(HH)
        WRITE(8,295)CLC,CBY
        CALL DBSET(2)
        CALL DBFIND(1,1,TNUM,1,5,1,7)
        CALL DBNREC(NUMBER)
        IF (NUMBER.GT.0) GOTO 470
        WRITE(8,460)
460     FORMAT(/3X,'THIS TICKET WAS CLOSED.  THE LAST STATUS IS FOUND',
     1  ' ABOVE.',/,/)
        GOTO 500
470     DO 500 J=1,NUMBER
        CALL DBGREC($4930,J)
        CALL DBCHNG(5,8)
        CALL DBVAL(2,SDAT,3,TIM1,4,INT,7,INFO,8,PNAM,9,ORDER)
        CALL DBNDAT(SDAT,IM,ID,IY)
        IY=IY-1900
        WRITE(8,380)J,PNAM,INT,ID,AM(IM),IY,TIM1
        CALL WINFO(INFO)
480     FORMAT(/3X,A5,2H: ,I2,1H/,I2,1H/,I2,5X,A5,2H: ,A5,/3X,4A5,A5,
     1  /3X,3A5,2H :,/,4(16A5,/),/1X,'******',/)
500     CONTINUE
        CALL DBFIND(1,1,TNUM,1,5,1,4)
        CALL DBNREC(NUMBER)
        IF (NUMBER.GT.0) CALL DBCHNG(5,9)
        CALL DBSET(1)
        CALL DBFIND(9,1,VNET(K),1,11,1,7)
550     CONTINUE
        CALL DBFIND(9,1,VNET(K),1,11,1,7)
        CALL DBCHNG(11,8)
C
C       NOW CHECK FOR TICKETS THAT CURRENTLY ON WATCH
C
        WRITE(8,540)
540     FORMAT(/,/,/,'****************',/,'* WATCH SUM',
     1  'MARY*',/,'****************',/)
        CALL DBSET(1)
        CALL DBFIND(9,1,VNET(K),1,'STAT',1,'MONIT')
        CALL DBNREC(NUMBER)
        IF (NUMBER.GT.0) GOTO 542
        WRITE(8,541)
541     FORMAT(/,'NO TICKETS ARE CURRENTLY UNDER WATCH ',
     1  'FOR A RECURRING PROBLEM.')
        GOTO 600
542     WRITE(8,543)NUMBER
543     FORMAT(/,'THERE ARE ',I3,' TICKETS BEING WATCHED.',
     1  '..',/,/,1X,'TIC #',2X,'DATE OPEN',1X,'TYPE',2X,'NODE',1X,
     2  'CIRCUIT NUMBER',2X,'SEVERITY',1X,'HOST',1X,'NETWORK',2X,
     3  'STATUS',1X,'ATTN',/)
        DO 570 I=1,NUMBER
        CALL DBGREC($4800,I)
        CALL DBVAL(1,TNUM,5,SDAT,6,TIM1,9,NET,14,PROD,15,STAT,40,NODE,
     1  42,HOST,43,CKT,52,SVER,51,MAINT)
        CALL DBNDAT(SDAT,IM,ID,IY)
        WRITE(8,2380)TNUM,IM,ID,PROD,NODE,CKT,SVER,HOST,NET,STAT,
     1  MAINT
2380    FORMAT(1X,I6,1X,I2,1H/,I2,1X,A5,1X,I5,1X,4A5,1X,I1,
     1  1X,I6,1X,2A5,A5,1X,A5,1X,I1)
570     CONTINUE
600     CONTINUE
        WRITE(8,601)RVNET(K),SHIFT
601     FORMAT(/,':S * ',A5,/,A5,' SHIFT REPORT',/,':ERASE',/)
        TYPE 610,TVNET(K)
610     FORMAT(4X,A5,1X,'REPORT WRITTEN')
C
C       NOW CHANGE THE RS FIELD TO PREVENT IT FROM BEING SENT AGAIN
C       ON THE NEXT SHIFT...
C
        CALL DBSET(1)
        CALL DBFIND(9,1,VNET(K),1,11,1,0)
        CALL DBCHNG(11,1)
        CLOSE(8)
        CALL DBCLOSE
        CALL DBCLOSE
        IF ((K.EQ.NUMNET).OR.(FLAG.EQ.1)) GOTO 620
        IF (K.EQ.25) GOTO 620
        IF (K.EQ.19) K=25
        IF (K.EQ.13) K=19
        IF (K.EQ.9) K=13
        IF (K.EQ.3) K=9
        CALL WAIT(12.0)
        GOTO 255
C
C       WRITE TEMPORARY COMMAND FILE FOGO ONTYME TRANSFER
C
620     CONTINUE
        OPEN(8,'TRANS.TMP',OUTPUT)
        IF (FLAG.LT.0) WRITE(8,630)PASS
        IF (FLAG.EQ.1) WRITE(8,632)PASS
632     FORMAT('GO ONTYME',/,'TYMOPS.NETCON',/,2A5)
        WRITE(8,635)RVNET(3),RVNET(9),RVNET(13),RVNET(19),RVNET(25)
635     FORMAT(A5,/,A5,/,A5,/,A5,/,A5)
        WRITE(8,636)
636     FORMAT(/,'DEL TRANS.TMP')
        CLOSE(8)
        X=1
        GOTO 59
C
C       REMOVE THE TOP TWO LINES IF YOU DO NOT WANT THE J COMMAND
C       FOLLOWING THE R COMMAND
C
C
C       LIST WHAT OPTIONS HAVE BEEN PERFORMED
C
1145    CONTINUE
        TYPE 1150
        CALL DBOPEN('BASE3')
        ACCEPT 1160,IM,ID,IY
        CALL DBSET(1)
        CALL DBDATN(SDAT,IM,ID,IY)
        TYPE 1170
1170    FORMAT(/4X,'DATE',8X,'TIME',6X,'O',3X,'WHO',5X,'TIC#',4X,'NN',
     1  4X,'VERSION',/)
        CALL DBFIND(2,'GE',SDAT)
        CALL DBNREC(NUMBER)
        DO 1200 I=1,NUMBER
        CALL DBGREC($4800,I)
        CALL DBVAL(1,TNUM,2,SDAT,3,TIM1,4,INT,5,ANS,6,K,7,VERS)
        CALL DBNDAT(SDAT,IM,ID,IY)
        IY=IY-1900
        TYPE 1190,IM,ID,IY,TIM1,ANS,INT,TNUM,K,VERS
1190    FORMAT(3X,I2,1H/,I2,1H/,I2,3X,A5,5X,A1,3X,A5,3X,I5,3X,I2,3X,A5)
1200    CONTINUE
        CALL DBCLOSE
C
C       ROUTINE TO CREATE CHART FOR PRODUCT TYPES
C
3001    CALL DBOPEN('BASE1','BASE4')
        OPEN(8,'CHART.OUT',OUTPUT)
        COR=0
        WRITE(8,3025)DTYP,TVNET(1),TVNET(2),TVNET(3),TVNET(4),
     1  TVNET(5),TVNET(6),TVNET(7),TVNET(8),TVNET(9),TVNET(10),
     2  TVNET(11),TVNET(12),TVNET(13),TVNET(14),TVNET(15),TVNET(16),
     3  TVNET(17),TVNET(18),TVNET(19),TOTL
3025    FORMAT(/1X,A5,2X,A5,1X,A5,1X,A5,1X,A5,1X,A5,1X,A5,1X,A5,1X,
     1  A5,1X,A5,0X,A5,1X,A5,1X,A5,1X,A5,0X,A5,1X,A5,2X,A5,1X,A5,
     2  1X,A5,1X,A5,1X,A5)
        DO 3050 I=1,NUMTYPE
        ITEM(L)=0
        DO 3040 L=1,NUMNET
        CALL DBSET(1)
        CALL DBFIND(9,1,VNET(L),1,14,1,TYPE(I))
        CALL DBNREC(ITEM1(L))
        CALL DBSET(2)
        CALL DBFIND(9,1,VNET(L),1,14,1,TYPE(I))
        CALL DBNREC(ITEM2(L))
        ITEM(L)=ITEM1(L)+ITEM2(L)
        COL=COL+ITEM(L)
        ROW(L)=ROW(L)+ITEM(L)
3040    CONTINUE
        COR=COR+COL
        WRITE(8,3045)TYPE(I),ITEM(1),ITEM(2),ITEM(3),ITEM(4),ITEM(5),
     1  ITEM(6),ITEM(7),ITEM(8),ITEM(9),ITEM(10),ITEM(11),ITEM(12),
     2  ITEM(13),ITEM(14),ITEM(15),ITEM(16),ITEM(17),ITEM(18),ITEM(19),
     3  COL
3045    FORMAT(1X,A5,3X,I3,3X,I3,3X,I3,3X,I3,3X,I3,3X,I3,3X,I3,3X,I3,
     1  3X,I3,3X,I3,3X,I3,3X,I3,3X,I3,3X,I3,3X,I3,3X,I3,3X,I3,3X,I3,3X,
     2  I3,3X,I5)
        COL=0
3050    CONTINUE
        WRITE(8,3047)TOTL,ROW(1),ROW(2),ROW(3),ROW(4),ROW(5),
     1  ROW(6),ROW(7),ROW(8),ROW(9),ROW(10),ROW(11),ROW(12),ROW(13),
     2  ROW(14),ROW(15),ROW(16),ROW(17),ROW(18),ROW(19),COR
3047    FORMAT(/1X,A5,1X,I5,1X,I5,1X,I5,1X,I5,1X,I5,1X,I5,1X,I5,1X,I5,
     1  1X,I5,1X,I5,1X,I5,1X,I5,1X,I5,1X,I5,1X,I5,1X,I5,1X,I5,1X,
     2  I5,1X,I5,3X,I5)
        CLOSE(8)
        CALL DBCLOSE
        CALL DBCLOSE
        GOTO 59
        GOTO 4950
        TYPE 637
637     FORMAT(/,/1X,'NOW TYPE "R COM", AND "TRANS.TMP", AND TWO CR.S')
        GOTO 5000
        CALL RUN('DSK','COM','UPL')
C
C****************************************
C
C       ROUTINE TO CREATE A CHART OF THE ESCALATED TICKETS
C       FOR THE MONTH.
C
C****************************************
C
5000    TYPE 5005
5005    FORMAT(/3X,'ROUTINE TO CREATE A CHART OF THE ESCALATION',
     1  ' MATRIX.',/)
        CALL DBOPEN('BASE4')
        EVER(1)=240
        EVER(2)=720
        EVER(3)=1440
        EVER(4)=2880
        EVER(5)=3600
        IF (ANS.EQ.'6') CALL PERIOD(NDAT,NDUP,SM,SD,SY,EM,ED,EY)
        IF (ED.LT.10)ENCODE(15,5006,FILE)HEX(EM),ED,EY
        IF (ED.GT.9)ENCODE(15,5007,FILE)HEX(EM),ED,EY
5006    FORMAT(A1,'0',I1,I2,'.ESC')
5007    FORMAT(A1,I2,I2,'.ESC',6X)
        OPEN(8,FILE,OUTPUT)
        DO 5010 I=1,3
        DO 5009 K=1,6
        DO 5008 J=1,4
        ESCAL(K,J,I)=0
        NONES(K,J,I)=0
        DIFES(K,J,I)=0
        TOTES(K,J,I)=0
5008    CONTINUE
5009    CONTINUE
5010    CONTINUE
        CALL DBFIND(49,'GE',NDAT,1,49,'LE',NDUP)
        CALL DBNREC(RECORD)
        TYPE 5015,RECORD,AM(SM)
5015    FORMAT(/2X,'THERE WERE ',I4,' TICKETS HANDLED DURING THE ',
     1  'MONTH OF ',A3,1H.,/)
        DO 5050 I=1,4
        CALL DBFIND(49,'GE',NDAT,1,49,'LE',NDUP,1,'SVER',1,I)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 5050
        DO 5045 J=1,NUMBER
        CALL DBGREC($59,J)
        CALL DBVAL(35,V6,36,V1,37,V2,38,V3,39,V4,54,ELM)
        ESCAL(V1,I,1)=ESCAL(V1,I,1)+V1
        ESCAL(V2,I,2)=ESCAL(V2,I,2)+V2
        ESCAL(V3,I,3)=ESCAL(V3,I,3)+V3
        IF ((ELM.GE.0).AND.(ELM.LE.EVER(I)))NONES(1,I,1)=NONES(1,I,1)+1
        IF ((ELM.GT.EVER(I)).AND.(ELM.LE.2*EVER(I)))
     1  NONES(2,I,1)=NONES(2,I,1)+1
        IF ((ELM.GT.2*EVER(I)).AND.(ELM.LE.3*EVER(I)))
     1  NONES(3,I,1)=NONES(3,I,1)+1
        IF ((ELM.GT.3*EVER(I)).AND.(ELM.LE.4*EVER(I)))
     1  NONES(4,I,1)=NONES(4,I,1)+1
        IF (ELM.GT.4*EVER(I)) NONES(5,I,1)=NONES(5,I,1)+1
        TYPE 5016,I,J
5016    FORMAT('+',I1,I5)
5045    CONTINUE
        TYPE 5017
5017    FORMAT(/)
5050    CONTINUE
        EY=EY+1900
        SY=SY+1900
        B=1
        DO 5057 B=1,3
        DECODE(10,3551,DISPL(B))TEMP
        WRITE(8,5049)FF,SYST(SYS)
5049    FORMAT(A5,/1X,A10,'NETWORK STATISTICS',T54,'TROUBLE TICKET ',
     1  'DATA BASE')
        WRITE(8,5047)TEMP
5047    FORMAT(/,/,/,T30,'ESCALATION MATRIX',/,T30,'----------',
     1  '-------',/,/,T28,2A5,' DISCIPLINE',/,/,/4X,'THE ',
     2  'FOLLOWING CHART SHOWS ACTUAL ESCALATIONS THAT TOOK PLACE ',
     3  'DURING',/4X,'THE PERIOD. THE MATRIX SHOWS HOW MANY',
     4  ' ESCALATIONS WENT TO EACH',/4X,'LEVEL OF LEADERSHIP ',
     5  'WITHIN THE DISCIPLINE. THE NUMBERS ARE FURTHER',/4X,'BROKEN ',
     6  'DOWN BY SEVERITY LEVEL.',/,/)
        WRITE(8,5046)AM(SM),SD,SY,AM(EM),ED,EY,RECORD
5046    FORMAT(/4X,'DURING THE PERIOD BEGINNING ',A3,2H. ,I2,2H, ,
     1  I4,' AND ENDING ',A3,2H. ,I2,2H, ,I4,1H,,/3X,I5,' TROUBLE ',
     2  'TICKETS WERE HANDLED BY NETWORK OPERATIONS. THIS MATRIX',/4X,
     3  'SHOWS THE AMOUNT OF ESCALATIONS THAT ACTUALLY TOOK PLACE',
     4  ' WITHIN EACH',/4X,'LEVEL OF MANAGEMENT.',/,/,/,/,
     5  T19,'MANAGEMENT',6X,'SEVERITY',/,T19,'LEVEL',10X,'# 1',
     6  T41,'# 2',T48,'# 3',T55,'# 4',/)
        DO 5056 A=1,6
        IF (((B.EQ.1).OR.(B.EQ.3)).AND.(A.EQ.6)) GOTO 5056
        IF (B.EQ.1) DECODE(10,3551,HWARE(A))TEMP
        IF (B.EQ.2) DECODE(10,3551,SWARE(A))TEMP
        IF (B.EQ.3) DECODE(10,3551,ITELC(A))TEMP
        WRITE(8,5055)TEMP,ESCAL(A,1,B),ESCAL(A,2,B),ESCAL(A,3,B),
     1  ESCAL(A,4,B)
5055    FORMAT(18X,2A5,3X,I5,2X,I5,2X,I5,2X,I5,/)
5056    CONTINUE
        WRITE(8,5058)AM(EM),ED,EY,B
5058    FORMAT(///////////////////////,/2X,'MANAGEMENT ESCALATION ',
     1  'MATRIX',T54,A3,2H. ,I2,1H,,I4,3X,
     2  'PAGE ',I1,' OF 5')
5057    CONTINUE
        WRITE(8,5049)FF,SYST(SYS)
        WRITE(8,5081)AM(SM),SD,SY,AM(EM),ED,EY,RECORD
5081    FORMAT(/,/,/,T30,'ESCALATION MATRIX',/,T30,'----------',
     1  '-------',/,/,T28,'OBJECTIVE  OBSERVATION',/,/,/4X,
     2  'DURING THE PERIOD BEGINING ',A3,2H. ,I2,2H, ,I4,' AND ',
     3  'ENDIND ',A3,2H. ,I2,2H, ,I4,1H,,/1X,I5,' TROUBLE ',
     4  'TICKETS WERE HANDLED BY NETWORK OPERATIONS. THIS MATRIX',
     5  /4X,'SHOWS THE AMOUNT OF ESCALATIONS THAT WOULD HAVE BEEN',
     6  ' EXECUTED BY',/4X,'NETWORK OPERATIONS IF REPAIR TIMES ',
     7  'TIMES WERE OBJECTIVELY',/4X,'OBSERVED.',/,/,/,/,T19,
     8  'MANAGEMENT',6X,'SEVERITY',/,/T19,'LEVEL',10X,'# 1',T41,
     9  '# 2',T48,'# 3',T55,'# 4',/)
        DO 5065 A=1,5
        DECODE(10,3551,HWARE(A))TEMP
        WRITE(8,5055)TEMP,NONES(A,1,1),NONES(A,2,1),NONES(A,3,1),
     1  NONES(A,4,1)
5065    CONTINUE
        B=4
        WRITE(8,5058)AM(EM),ED,EY,B
        B=5
        DO 5075 A=1,6
        DO 5070 C=1,4
        TOTES(A,C,1)=TOTES(A,C,1)+ESCAL(A,C,1)+ESCAL(A,C,2)+ESCAL(A,C,3)
        DIFES(A,C,1)=TOTES(A,C,1)-NONES(A,C,1)
C       DIFES(A,C,2)=(TOTES(A,C,1)/NONES(A,C,1))*100
C       TYPE 5071,DIFES(A,C,2)
5071    FORMAT('+',1X,F9.2,1X,$)
5070    CONTINUE
5075    CONTINUE
        WRITE(8,5049)FF,SYST(SYS)
        WRITE(8,5076)AM(SM),SD,SY,AM(EM),ED,EY,RECORD
5076    FORMAT(/,/,/,T30,'ESCALATION MATRIX',/,T30,'----------',
     1  '-------',/,/,T28,'ACTUAL MINUS OBJECTIVE',/,/,/4X,'DURING ',
     2  'THE PERIOD BEGINNING 'A3,2H. ,I2,2H, ,I4,' AND ENDING ',
     3  A3,2H. ,I2,2H, ,I4,1H,,/1X,I5,' TROUBLE TICKETS WERE ',
     4  'HANDLED BY NETWORK OPERATIONS.'///4X'THIS GRAPH SHOWS TWO',
     5  ' NUMBERS FOR EACH QUADRANT OF THE MATRIX. THE',/4X,'FIRST ',
     6  'NUMBER SHOWS THE TOTAL NUMBER OF ESCALATIONS THAT',
     7  'OCCURED'/4X'AT EACH LEVEL OF MANAGEMENT (COMBINATION OF ',
     8  'THE THREE DISCIPLINES).',/4X,'THE SECOND NUMBER (IN ',
     9  'PARENTHESIS) SHOWS THE DIFFERENCE BETWEEN THE'/4X'ACTUAL',
     A  ' ESCALATIONS MINUS THE ESCALATIONS THAT SHOULD HAVE ',
     B  'OCCURRED.')
        WRITE(8,5077)
5077    FORMAT(4X,'IF THE PARENTHESIS CONTAIN A NEGATIVE NUMBER, IT',
     1  ' WILL SHOW HOW MANY',/4X,'MORE ESCALATIONS SHOULD HAVE BEEN ',
     2  'OBJECTIVELY PERFORMED. A POSITIVE'/4X,'NUMBER INDICATES HOW ',
     3  'MANY ESCALATIONS WERE PERFORMED AHEAD OF TIME.',
     4  ////3X,'MANAGEMENT    TOTAL/DIF.',/3X,'LEVEL',8X,
     5  'SEVERITY # 1',6X,'# 2',T49,'# 3',T63,'# 4',/)
        DO 5080 A=2,5
        DECODE(10,3551,HWARE(A))TEMP
        WRITE(8,5082)TEMP,TOTES(A,1,1),DIFES(A,1,1),TOTES(A,2,1),
     1  DIFES(A,2,1),TOTES(A,3,1),DIFES(A,3,1),TOTES(A,4,1),
     1  DIFES(A,4,1)
5082    FORMAT(3X,2A5,3X,I5,1H(,I5,1H),2X,I5,1H(,I5,1H),2X,I5,1H(,
     1  I5,1H),2X,I5,1H(,I5,1H),/)
5080    CONTINUE
        WRITE(8,5058)AM(EM),ED,EY,B
        WRITE(8,5059)FF
5059    FORMAT(A5,/)
        CALL DBCLOSE
        CLOSE(8)
        GOTO 59
C
C****************************************
C
C       ROUTINE TO CHECK OUT THE TIME SPREAD OF WHEN TICKETS
C       WERE OPENED DURING A TIME FRAME
C
C****************************************
C
5100    TYPE 5105
5105    FORMAT(1X,'ROUTINE TO LIST THE SPREAD OF TICKET OPENING ',
     1  'HOURS')
        NUMBER=0
        DO 5114 I=1,24
        SUB(I)=0
5114    CONTINUE
        NUMBER=0
        DOIT=0
        J=1
        I=1
        CALL PERIOD(NDAT,NDUP,SM,SD,SY,EM,ED,EY)
5107    TYPE 110
110     FORMAT(' ENTER THE NETWORK NUMBER OR A ZERO(0) FOR HELP : ',$)
        ACCEPT 120,K
        IF ((K.GE.1).AND.(K.LE.NUMNET)) GOTO 5110
        CALL HLPNET
        IF (I.EQ.3) GOTO 59
        I=I+1
        GOTO 5107
5110    IF (SYS.EQ.2) CALL DBOPEN('(TNT)BASE1','(TNT)BASE4')
        IF (SYS.EQ.1) CALL DBOPEN('(TNT)BASE1','(TNT)BASE4')
5111    IF (J.EQ.2) GOTO 5117
        CALL DBFIND(5,'GE',NDAT,1,5,'LE',NDUP,1,9,1,VNET(K))
        GOTO 5116
5117    SDAT=NDAT-10
        CALL DBFIND(49,'GE',SDAT,1,49,'LE',NDUP,1,9,1,VNET(K))
        CALL DBSRCH(5,'GE',NDAT,1,5,'LE',NDUP)
5116    CALL DBNREC(RECORD)
        IF (RECORD.EQ.0) GOTO 5132
5112    DO 5130 I=1,RECORD
        CALL DBGREC($4950,I)
        CALL DBVAL(1,TNUM,5,SDAT,6,TIM1,14,PROD,40,NODE,42,HOST,
     1  52,SVER,54,ELM,55,COC)
        DECODE(5,5113,TIM1)Y,B
5113    FORMAT(I2,1X,I2)
        TYPE 5115,TNUM,SDAT,TIM1,PROD,NODE,HOST,SVER,ELM,COC
5115    FORMAT(1X,I7,1X,I5,1X,A5,1X,A5,1X,I5,1X,I6,1X,I1,F8.0,1X,
     1  2A5)
        SUB(Y)=SUB(Y)+1
5130    CONTINUE
        NUMBER=NUMBER+RECORD
5132    IF (J.EQ.2)GOTO 5140
        J=2
        CALL DBSET(2)
        GOTO 5111
5140    TYPE 5145,FF,SD,AM(SM),ED,AM(EM),NUMBER
5145    FORMAT(A5,/,/,/3X,'BREAKDOWN OF TICKETS OPENED BETWEEN ',I2,
     1  1H-,A3,' AND ',I2,1H-,A3,3X,'TOTAL TICKETS = ',I4,/,/,/5X,
     2  'HOUR',2X,'NUMBER OPENED',/)
        DO 5160 I=0,23
        TYPE 5162,I,SUB(I)
5162    FORMAT(6X,I2,2X,I4)
5160    CONTINUE
        TYPE 5163
5163    FORMAT(1X,'-EOP-')
        GOTO 4950
C
C       ROUTINE TO PURGE DUPLICATE ENTRIES IN THE PROFILE
C       SECTION OF PAPER
C
5165    TYPE 5170
5170    FORMAT(1X,'ROUTINE TO RID US OF THE DUPLICATE ENTRIES')
        I=1
        TOTL=0
        CALL DBERR($5172,IERT,IERC,0)
        GOTO 5174
5172    IF (IERT.NE.7) GOTO 5000
        CALL WAIT(5.0)
5174    CALL DBOPEN('PROFIL')
        CALL DBUPD(-1)
        CALL DBFIND(3,1,VNET(I),1,17,1,'N')
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 5180
        CALL DBSORT('NODE','ASCEN')
        DO 5180 X=1,NUMBER
        CALL DBGREC($5180,X)
        CALL DBVAL(4,NODE)
        TYPE 5176,NODE
5176    FORMAT('+',I6,1X,$)
        IF (NODE.EQ.TOTL) CALL DBDEL
        TOTL=NODE
5180    CONTINUE
        CALL DBCLOSE
5190    IF (I.EQ.NUMNET) GOTO 5192
        I=I+1
        GOTO 5174
5192    CALL DBERR($5000,IERT,IERC,0)
        GOTO 59
C
C*************************************8
C
C       ROUTINE TO PRINT A MATRIX OF CLOSE OUT CODE
C       VS. THE SEVERITY LEVELS. THIS WILL BE DONE
C       FOR ONE NETWORK ONLY.
C
C**************************************
C
5200    TYPE 5205
5205    FORMAT(3X,'ROUTINE TO LIST A MATRIX OF CLOSEOUT CODE ',
     1  'VS. SEVERITY',/)
        CALL PERIOD(NDAT,NDUP,SM,SD,SY,EM,ED,EY)
5210    TYPE 110
        ACCEPT 120,K
        IF ((K.GE.1).AND.(K.LE.NUMNET)) GOTO 5215
        CALL HLPNET
        IF (I.EQ.3) GOTO 59
        I=I+1
        GOTO 5210
5215    IF (SYS.EQ.1) CALL DBOPEN('(TNT)BASE4')
        IF (SYS.EQ.2) CALL DBOPEN('(TNT)BASE4')
        CALL DBFIND('NET',1,VNET(K),1,'DUP','GE',NDAT,1,
     1  'DUP','LE',NDUP)
        CALL DBNREC(NUMBER)
        IF (NUMBER.GT.0) GOTO 5225
        TYPE 5220
5220    FORMAT(4X,'!!! NO RECORDS WERE FOUND FOR THAT DATE RANGE',
     1  /6X,'PLEASE RECHECK THE DATES AND TRY AGAIN.',/)
        CALL DBCLOSE
        GOTO 5200
5225    TYPE 5230
5230    FORMAT(3X,'TURN ON PRINTER AND HIT ENTER WHEN READY',
     1  /2X,'THIS ROUTINE WILL ONLY OUTPUT TO THE TERMINAL/PRINTER',$)
        ACCEPT 120,SEE
        TYPE 5235,VNET(K),SD,AM(SM),SY,ED,AM(EM),EY
5235    FORMAT(/,/,/,/,/23X,'CLOSE OUT CODE MATRIX FOR ',A10,/,/16X,
     1  'PERIOD BEGINNING ',I2,1H-,A3,1H-,I2,' AND ENDING ',I2,1H-,A3,
     2  1H-,I2,/,/,/)
        TYPE 5237
5237    FORMAT(3X,'CLOSE OUT CODE',3X,'SEV.1',11X,'SEV.2',10X,
     1  'SEV.3',11X,'SEV.4')
        DO 5260 X=1,NUMCODE
        TYPE 5240,CODE(X)
5240    FORMAT(/3X,A10,1X,$)
        DO 5255 J=1,4
        CALL DBFIND(55,1,CODE(X),1,'SVER',1,J,1,54,'GT',0,1,49,
     1  'GE',NDAT,1,49,'LE',NDUP,1,'NET',1,VNET(K))
        CALL DBNREC(DOIT)
        IF (DOIT.GT.0) GOTO 5232
        ELM=0
        HOUR=0
        GOTO 5241
5232    CALL TOTELM(DOIT,ELM,HOUR,D)
5241    TYPE 5242,DOIT,HOUR
5242    FORMAT('+',5XI4,1H/,F5.1,$)
        ELM=0
        HOUR=0
        DOIT=0
5255    CONTINUE
C       TYPE 5257
5257    FORMAT(/)
5260    CONTINUE
        TYPE 5265
5265    FORMAT(/,/3X,'END OF REPORT',/,/)
        CALL DBCLOSE
        GOTO 59
C
C       ROUTINE TO PRINT THE CLOSEOUT CODE VS. CONTROL GROUP
C
5270    TYPE 5275
5275    FORMAT(3X,'ROUTINE TO LIST A MATRIX OF CLOSEOUT CODE ',
     1  'VS. SEVERITY',/)
        CALL PERIOD(NDAT,NDUP,SM,SD,SY,EM,ED,EY)
5285    IF (SYS.EQ.1) CALL DBOPEN('(TNT)BASE4')
        IF (SYS.EQ.2) CALL DBOPEN('(TNT)BASE4')
        CALL DBFIND('DUP','GE',NDAT,1,'DUP','LE',NDUP)
        CALL DBNREC(NUMBER)
        IF (NUMBER.GT.0) GOTO 5295
        TYPE 5290
5290    FORMAT(4X,'!!! NO RECORDS WERE FOUND FOR THAT DATE RANGE',
     1  /6X,'PLEASE RECHECK THE DATES AND TRY AGAIN.',/)
        CALL DBCLOSE
        GOTO 5270
5295    TYPE 5300
5300    FORMAT(3X,'TURN ON PRINTER AND HIT ENTER WHEN READY',
     1  /2X,'THIS ROUTINE WILL ONLY OUTPUT TO THE TERMINAL/PRINTER',$)
        ACCEPT 120,SEE
        TYPE 5305,SD,AM(SM),SY,ED,AM(EM),EY
5305    FORMAT(/,/,/,/,/23X,'CLOSE OUT CODE MATRIX FOR CONTROL GROUPS',
     1  /,/16X,
     2  'PERIOD BEGINNING ',I2,1H-,A3,1H-,I2,' AND ENDING ',I2,1H-,A3,
     3  1H-,I2,/,/,/)
        TYPE 5307,NETOP(1),NETOP(2),NETOP(3),NETOP(4)
5307    FORMAT(3X,'CLOSE OUT CODE',3X,A5,11X,A5,10X,
     1  A5,11X,A5)
        DO 5330 X=1,NUMCODE
        TYPE 5310,CODE(X)
5310    FORMAT(/3X,A10,1X,$)
        DO 5325 J=1,4
        CALL DBFIND(55,1,CODE(X),1,'HN',1,J,1,54,'GT',0,1,49,
     1  'GE',NDAT,1,49,'LE',NDUP)
        CALL DBNREC(DOIT)
        IF (DOIT.GT.0) GOTO 5302
        ELM=0
        HOUR=0
        GOTO 5311
5302    CALL TOTELM(DOIT,ELM,HOUR,D)
5311    TYPE 5312,DOIT,HOUR
5312    FORMAT('+',5XI4,1H/,F5.1,$)
        ELM=0
        HOUR=0
        DOIT=0
5325    CONTINUE
C       TYPE 5257
5327    FORMAT(/)
5330    CONTINUE
        TYPE 5335
5335    FORMAT(/,/3X,'END OF REPORT',/,/)
        CALL DBCLOSE
        GOTO 59
CCCCC
C
C
4800    TYPE 4801
4801    FORMAT(3X,'DID NOT FIND VALUE ... ABORTING')
        GOTO 59
4930    CALL DBERR($4932,IERT,IERC,0)
        CALL DBNSET(NUMBER)
        IF (ME.EQ.0) CALL BYE
        IF (NUMBER.EQ.0) GOTO 59
        DO 4931 I=1,NUMBER
        CALL DBCLOSE
4931    CONTINUE
        GOTO 59
4945    CALL DBCLOSE
4950    CALL DBCLOSE
        GOTO 59
4932    IF ((IERT.NE.14).AND.(IERC.NE.11)) GOTO 4955
        GOTO 59
4955    TYPE 4956,IERT,IERC,CUST(SYS)
4956    FORMAT(/3X,'ERROR TYPE = 'I5,4X,'ERROR CODE ',I5,
     1  /,/2X,'PLEASE REPORT THIS TO ',A5)
4960    CALL DBCLOSE
99990    CALL DBEND
        STOP
        END
  \F