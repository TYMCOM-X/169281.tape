C SYMSOR.FOR
C
C PROGRAM TO DO SYMBOLIC SORTS OF LARGE OR SMALL SYMBOLIC FILES
C
        DIMENSION ISTO(20000),IFIL1(5),IFIL2(5),IFIL3(5),IFIL4(5)
        DIMENSION IALP(30),INUM(10),IVAL(30),IVALS(70),IB(70),IC(70)
        COMMON /RKS/IBS(70),IA(115),IAZ(35)
        DATA IALP/1HA,1HB,1HC,1HD,1HE,1HF,1HG,1HH,1HI,1HJ,
     1            1HK,1HL,1HM,1HN,1HO,1HP,1HQ,1HR,1HS,1HT,
     2            1HU,1HV,1HW,1HX,1HY,1HZ,1H.,1H(,1H),1H,/
        DATA INUM/1H0,1H1,1H2,1H3,1H4,1H5,1H6,1H7,1H8,1H9/
        DATA IBLK,IBLK5,IHLP/1H ,5H     ,5HHELP /
C
C SET SIGN TO 1S
C
        TYPE 1110
1110    FORMAT(' SYMBOLIC SORT - VER 1.0 - FEB/26/87',/)
        DO 2 I=1,60
        IVALS(I)=1
2       CONTINUE
        KMAX=0
        LMAX=0
        IEFL1=1
        IEFL2=1
        IPS1=1
        IPS2=20000+1
10      CONTINUE
        TYPE 3010
3010    FORMAT(' SOURCE FILE NAME:<or (userid)',
     1  'filename.ext>:',$)
        ACCEPT 1001,(IA(I),I=1,115)
1001    FORMAT(115A1,40A1)
        DO 12 I=1,115
        JJ1=116-I
        IF(IA(JJ1).NE.IBLK)GO TO 13
12      CONTINUE
C
C NULL LINE
C
        GO TO 10
13      CONTINUE
        IP1=0
        DO 14 I=1,JJ1
        IF(IA(I).EQ.IBLK)GO TO 14
        IP1=IP1+1
        IA(IP1)=IA(I)
14      CONTINUE
        IF(IP1.GT.25)TYPE 3014
        IF(IP1.GT.25)GO TO 10
3014    FORMAT(' FILE NAME WITH USER NAME IN PARENS CANNOT ',
     1  'EXCEED 25 CHARACTERS',/)
        IFIL1(2)=IBLK5
        IFIL1(3)=IBLK5
        IFIL1(4)=IBLK5
        IFIL1(5)=IBLK5
        CALL PACKUP(IA,IFIL1,IP1)
        OPEN(UNIT=25,ACCESS='SEQIN',FILE=IFIL1,ERR=18)
        GO TO 20
18      CONTINUE
        CLOSE(UNIT=25)
        IF(IFIL1(1).EQ.IHLP)TYPE 3118
        IF(IFIL1(1).EQ.IHLP)GO TO 10
3118  FORMAT(/,' SYMSORT WILL SORT A SYMBOLIC FILE OF UP TO 132 CHAR ',
     1  'IN WIDTH',/,' THE INPUT AND OUTPUT FILES ARE NORMAL PDP-10 ',
     1  'FILE NAMES',/,' THE SORT KEYS ARE NORMAL PAIRS OF NUMBERS ',
     3  'SEPERATED BY COMMAS OR BLANKS',/,' DEFAULT SORT IS IN THE ',
     4  'ASCENDING ORDER',/,' TO GET A DECENDING ORDER SPECIFY A ',
     5  'NEGATIVE NUMBER IN THE SORT KEY',/)
        TYPE 3018,IFIL1
3018    FORMAT(' CANNOT OPEN FILE:',5A5)
        GO TO 10
20      CONTINUE
C
C INPUT FILE EXISTS - NOW ASK FOR OUTPUT FILE
C
        TYPE 3020
3020    FORMAT(' OUTPUT FILE NAME:',$)
        ACCEPT 1001,(IA(I),I=1,115)
        DO 22 I=1,115
        JJ1=116-I
        IF(IA(JJ1).EQ.IBLK)GO TO 22
        GO TO 24
22      CONTINUE
C
C IF HERE NULL FILE
C
        GO TO 20
24      CONTINUE
        IP1=0
        DO 25 I=1,JJ1
        IF(IA(I).EQ.IBLK)GO TO 25
        IP1=IP1+1
        IA(IP1)=IA(I)
25      CONTINUE
        IF(IP1.GT.25)TYPE 3014
        IF(IP1.GT.25)GO TO 20
        CALL PACKUP(IA,IFIL2,IP1)
        CLOSE(UNIT=26)
        OPEN(UNIT=26,ACCESS='SEQIN',FILE=IFIL2,ERR=30)
        TYPE 3025,IFIL2
3025    FORMAT(' OUTPUT FILE:',5A5,/,
     1  ' ALREADY EXISTS - DO YOU WISH TO CONTINUE (Y/N)',$)
        ACCEPT 1001,(IA(I),I=1,115)
        CALL PACKUP(IA,IB,5)
        CALL UNPACK(IB,IA,5)
        IF(IA(1).EQ.IALP(25))GO TO 30
        IF(IA(1).EQ.IALP(14))CALL EXIT
        GO TO 20
30      CONTINUE
C
C NOW GET SORT FIELDS
C
        CLOSE(UNIT=26)
        IAMAX=115
        IVALM=20
31      CONTINUE
        TYPE 3031
3031    FORMAT(' PLEASE ENTER SORT FIELDS AS PAIRS OF NUMBERS',/,
     1  ' SEPERATED BY BLANKS AND/OR COMMAS ',/,' :',$)
        ACCEPT 1001,(IA(I),I=1,115)
        DO 35 I=1,115
        IAMAX=115-I
        IF(IA(IAMAX).NE.IBLK)GO TO 36
35      CONTINUE
C
C NULL LINE
C
        GO TO 31
36      CONTINUE
        IF(IAMAX.LT.2)GO TO 31
        DO 37 I=1,60
        IVALS(I)=1
37      CONTINUE
        CALL CVNUM(IA,IAMAX,IVAL,IVALM,IVALS,NUMB)
C
C CHECK FOR EVEN NUMBER OF ENTRIES
C
        IF(NUMB.EQ.0)GO TO 31
        I=MOD(NUMB,2)
        IF(I.EQ.0)GO TO 40
        TYPE 3035,NUMB
3035    FORMAT(' THERE MUST BE AN EVEN NUMBER OF PAIRS - THE VALUE IS',
     1  I5,/)
        GO TO 31
40      CONTINUE
C
C NOW CHECK TO SEE IF THE PAIRS ARE IN ORDER
C
        DO 42 I=2,NUMB,2
        IF(IVAL(I-1).LE.IVAL(I))GO TO 42
        J=I/2
        TYPE 3040,J
3040    FORMAT(' THE ',I2,' PAIR IS OUT OF ORDER')
        TYPE 3041,(IVAL(K),K=1,NUMB)
3041    FORMAT(10(I3,I3,2X),/)
        GO TO 31
42      CONTINUE
C
C NOW CHECK FOR OUT OF RANGE
C
        DO 51 I=1,NUMB
        IF(IVAL(I).LT.1)GO TO 52
        IF(IVAL(I).GT.132)GO TO 52
51      CONTINUE
        GO TO 55
52      CONTINUE
        TYPE 3052
3052    FORMAT(' VALUES ARE OUT OF 1 TO 132 POSITION RANGE',/)
        GO TO 31
55      CONTINUE
C
C NOW CHECK FOR OVERLAP
C
        IF(NUMB.LT.3)GO TO 90
        J2=NUMB-1
        DO 68 I=1,J2,2
        DO 68 J=1,J2,2
        IF(I.EQ.J)GO TO 68
        IF(IVAL(I).GE.IVAL(J).AND.IVAL(I).LE.IVAL(J+1))GO TO 65
        IF(IVAL(I+1).GE.IVAL(J).AND.IVAL(I+1).LE.IVAL(J+1))GO TO 65
        GO TO 68
65      CONTINUE
        I1=(I+1)/2
        J1=(J+1)/2
        TYPE 3065,I1,J1
3065    FORMAT(' THE ',I2,' PAIR AND THE ',I2,' PAIR OVERLAP',/)
        GO TO 31
68      CONTINUE
90      CONTINUE
C       TYPE 3041,(IVALS(K),IVAL(K),K=1,NUMB)
C
C HERE CONVERT THE IBS STUFF FOR COMPARISON LOOP
C
        DO 91 I=1,30
        IBS(I)=1
91      CONTINUE
        IB1=0
        DO 97 I=2,NUMB,2
        IVALS(I)=1
        J1=IVAL(I-1)
        J2=IVAL(I)
        KK=(J2-J1+5)/5
        DO 96 L=1,KK
        IB1=IB1+1
        IBS(IB1)=IVALS(I-1)
96      CONTINUE
97      CONTINUE
C       TYPE 3041,(IBS(K),K=1,IB1)
100     CONTINUE
C
C LETS BUILD THE EXTRA FILE NAMES
C
        CALL NUMPOR(IPOR)
C
C BUILD THE FILE NAME
C
C       TYPE 3100,IPOR
3100    FORMAT(10I5)
        I1=IPOR/100
        I2=(IPOR-I1*100)/10
        I3=IPOR-I1*100-I2*10
        IA(1)=IALP(19)
        IA(2)=IALP(25)
        IA(3)=IALP(13)
        IA(4)=INUM(I1+1)
        IA(5)=INUM(I2+1)
        IA(6)=INUM(I3+1)
        IA(7)=IALP(27)
        IA(8)=IALP(20)
        IA(9)=IALP(13)
        IA(10)=IALP(16)
        IFIL3(3)=IBLK5
        IFIL3(4)=IBLK5
        IFIL3(5)=IBLK5
        CALL PACK(IA,IFIL3,10)
        IA(3)=INUM(2)
        IFIL4(3)=IBLK5
        IFIL4(4)=IBLK5
        IFIL4(5)=IBLK5
        CALL PACK(IA,IFIL4,10)
C       TYPE 3110,IFIL3,IFIL4
3110    FORMAT(' FILES:',5A5,'  ',5A5)
C
C NOW WE ARE TO BEGIN
C
        IAMAX=0
        ICNT=0
150     CONTINUE
        READ(25,1001,END=200)(IA(I),I=1,115),(IAZ(L),L=1,35)
        ICNT=ICNT+1
        IF(KMAX.LT.ICNT)KMAX=ICNT
C
C FIND MAX
C
        DO 155 I=1,150
        JJ=151-I
        IF(IA(JJ).NE.IBLK)GO TO 157
155     CONTINUE
C
C IF HERE - NULL LINE - THROW IT AWAY
C
        GO TO 150
157     CONTINUE
        IF(JJ.GT.IAMAX)IAMAX=JJ
158     CONTINUE
C
C NOW BUILD SORT NUMBER
C
        IB1=1
        DO 160 I=2,NUMB,2
        J1=IVAL(I-1)
        J2=IVAL(I)-J1+1
        CALL PACK(IA(J1),IB(IB1),J2)
        IB1=IB1+(J2+4)/5
C       TYPE 3100,J1,J2,IB1
160     CONTINUE
        IB1=IB1-1
        CALL PACK(IA,IC,IAMAX)
        J3=(IAMAX+4)/5
2001    FORMAT(10I12)
2002    FORMAT(I3,40A5)
C
C IF EXCEED FLAG FOR BOTH SIDES OF ARRAY SET THEN SKIP
C
        CALL SPACK(IB,IB1)
C
C HERE IS WHERE WE PACK IT INTO THE ARRAY
C
C IF WE EXCEEDED THE ARRAY - DON'T BOTHER
C
        IPS2=IPS2-34
        ISTO(IPS1)=IPS2
        DO 181 I=1,IB1
        IPS1=IPS1+1
        ISTO(IPS1)=IB(I)
181     CONTINUE
        IPS1=IPS1+1
        J1=IPS2
        ISTO(J1)=J3
        J1=J1+1
        ISTO(J1)=JJ
        DO 184 I=1,J3
        J1=J1+1
        ISTO(J1)=IC(I)
184     CONTINUE
        KK=IPS2-100
        LL=IPS1+2+IB1
        IF(LL.GE.KK)GO TO 300
        GO TO 150
200     CONTINUE
        TYPE 3200,ICNT
3200    FORMAT(' DATA FIT IN MEMORY IN FIRST PASS -',I6,' RECORDS')
        KK=IB1+1
C       TYPE 3233,(ISTO(I),I=1,50)
3233    FORMAT(6I12)
        CALL OPSOR(ISTO,IPS1,IPS2,KK)
C       TYPE 3233,(ISTO(I),I=1,50)
        CLOSE(UNIT=27)
        OPEN(UNIT=27,ACCESS='SEQOUT',FILE=IFIL2)
        IPS1=IPS1-1
        DO 210 I=1,IPS1,KK
C       LL=I+KK-1
C       TYPE 3210,(ISTO(K),K=I,LL)
3210    FORMAT(7I12)
        IPO1=ISTO(I)
        L1=ISTO(IPO1+1)
        CALL UNPACK(ISTO(IPO1+2),IA,L1)
        WRITE(27,1001)(IA(K),K=1,L1)
3211    FORMAT(I12,120A5)
210     CONTINUE
        CALL EXIT
300     CONTINUE
        J300=0
C
C FIRST PASS WAS INSUFFICIENT TO HOLD MEMORY
C
        OPEN(UNIT=27,ACCESS='SEQOUT',FILE=IFIL2)
        TYPE 3201
3201    FORMAT(' TOO MUCH DATA FOR SINGLE PASS ')
302     CONTINUE
        KK=IB1+1
        CALL OPSOR(ISTO,IPS1,IPS2,KK)
        IPS1=IPS1-1
        OPEN(UNIT=28,ACCESS='SEQOUT',FILE=IFIL3)
C       TYPE 4350
4350    FORMAT(' PRE-SORT COMPLETE',/,' LOADING REMAINING DATA')
        KK=IB1+1
350     CONTINUE
        IF(J300.NE.0)GO TO 356
        READ(25,1001,END=400)(IA(I),I=1,115),(IAZ(L),L=1,35)
        ICNT=ICNT+1
        IF(KMAX.LT.ICNT)KMAX=ICNT
C
C FIND MAX
C
        DO 355 I=1,150
        JJ=151-I
        IF(IA(JJ).NE.IBLK)GO TO 357
355     CONTINUE
C
C NULL LINE -- THROW IT AWAY -- SORRY
C
        GO TO 350
356     CONTINUE
        READ(25,2001,END=400)(IB(I),I=1,IB1)
        READ(25,2002,END=400)(IC(I),I=1,J4)
        ICNT=ICNT+1
        IF(KMAX.LT.ICNT)KMAX=ICNT
        JJ=IC(1)
        CALL UNPACK(IC(2),IA,JJ)
        GO TO 361
357     CONTINUE
        IF(JJ.GT.IAMAX)IAMAX=JJ
358     CONTINUE
C
C NOW BUILD SORT NUMBER
C
        IB1=1
        DO 360 I=2,NUMB,2
        J1=IVAL(I-1)
        J2=IVAL(I)-J1+1
        CALL PACK(IA(J1),IB(IB1),J2)
        IB1=IB1+(J2+4)/5
360     CONTINUE
        IB1=IB1-1
        J3=(IAMAX+4)/5
C
C       
        CALL SPACK(IB,IB1)
C
C
C
C NEED TO FIND LOCATION OF IB STUFF
C
361     CONTINUE
        KK=IB1+1
        II3=IPS1-KK+1
        I3=II3
        K2=I3-1
        DO 701 I4=1,KK
        IC(I4)=ISTO(K2+I4)
701     CONTINUE
        DO 705 I5=2,KK
        IF((IB(I5-1)-IC(I5))*IBS(I5-1))706,705,391
705     CONTINUE
        GO TO 391
706     CONTINUE
C
C POSITION IS SOMEWHERE BEFORE THE LAST POINT
C
        KK2=II3/KK
C
C KK2 SHOULD BE ABOUT THE NUMBER OF ENTRIES IN THE TABLE
C
        KK2=(KK2/10)*KK
C
C THIS GIVES 10 STEPS TO TOP
C
        II31=1
        I3=1-KK2
        DO 790 KK3=1,10
        I3=I3+KK2
        K2=(I3-1)
        DO 715 I4=1,KK
        IC(I4)=ISTO(K2+I4)
715     CONTINUE
C
C IC ARRAY LOADED
C
        DO 720 I5=2,KK
        IF((IB(I5-1)-IC(I5))*IBS(I5-1))370,720,789
720     CONTINUE
C
C EXACT MATCH GO ON
C
789     CONTINUE
        II31=I3
790     CONTINUE
C
C IT IS BETWEEN HERE AND THE END
C
370     CONTINUE
        DO 390 I3=II31,II3,KK
        K2=(I3-1)
        DO 375 I4=1,KK
        IC(I4)=ISTO(K2+I4)
375     CONTINUE
        DO 380 I5=2,KK
        IF((IB(I5-1)-IC(I5))*IBS(I5-1))385,380,390
380     CONTINUE
C
C MATCH GO ON
C
        GO TO 390
385     CONTINUE
        LL3=ISTO(II3)
C       TYPE 4391,I3
4391    FORMAT(' AT DO 390 - I3=',I5)
C
C PARK OLD RECORD
C
        J1=IPS1-KK+1
        J2=J1+KK-1
        KJ1=J1+1
        WRITE(28,2001)(ISTO(K),K=KJ1,J2)
        LL=ISTO(J1)
        KK4=ISTO(LL)+1
4385    FORMAT(10I12)
        WRITE(28,2002)(ISTO(K+LL),K=1,KK4)
C
C NOW MOVE EVERYTHING DOWN
C
C I3 HAS POSITION
C
        J1=IPS1-KK
        IF(J1.LE.I3)GO TO 3861
        DO 386 L1=I3,J1
        L2=IPS1-L1+I3
        L3=L2-KK
        ISTO(L2)=ISTO(L3)
386     CONTINUE
C       TYPE 4386
4386    FORMAT(' AFTER 4386')
3861    CONTINUE
        LB1=KK-1
        DO 387 L1=1,LB1
        L2=I3-1+L1
        ISTO(L2+1)=IB(L1)
387     CONTINUE
C       TYPE 4387
4387    FORMAT(' AFTER 387')
C       TYPE 2001,(IB(K),K=1,IB1)
C       TYPE 2001,(IC(K),K=1,IB1)
        ISTO(I3)=IC(1)
        ISTO(I3)=LL3
        LL=LL3
        ISTO(LL)=J3
        ISTO(LL+1)=JJ
C       TYPE 2001,LL,J3,JJ
        CALL PACK(IA,ISTO(LL+2),JJ)
        GO TO 350
390     CONTINUE
391     CONTINUE
C       TYPE 4390
4390    FORMAT(' ATFER 390')
C
C IS THE BOTTOM RECORD -
C
C       TYPE 4385,KK
        WRITE(28,2001)(IB(K-1),K=2,KK)
        CALL PACK(IA,IA,JJ)
        JJ3=(JJ+4)/5
        WRITE(28,2002)JJ,(IA(K),K=1,JJ3)
        GO TO 350
400     CONTINUE
C
C SET RE- READ FLAG
C
        J300=1
C
C FINALLY OUT OF DATA - CLOSE UP FILES
C
        CLOSE(UNIT=25)
        CLOSE(UNIT=28)
C
C RAN OUT OF DATA
C FOR FIRST PASS - NEED TO WRITE OUT EXISTING AND RELOAD TABLES
C
        KK2=(II3+1)/KK+1
        LMAX=LMAX+KK2
        TYPE 4409,LMAX,KMAX
4409    FORMAT(I6,' RECORDS PROCESSED OF ',I6,' TOTAL RECORDS')
        DO 410 I=1,II3,KK
        LL=ISTO(I)
        JJ=ISTO(LL+1)
4559    FORMAT(' WITHIN 410',10I12)
        CALL UNPACK(ISTO(LL+2),IA,JJ)
        WRITE(27,1001)(IA(K),K=1,JJ)
410     CONTINUE
C       TYPE 4410
4410    FORMAT(' FINISHED WRITING PARTIAL DATA')
        ICNT=0
        OPEN(UNIT=25,ACCESS='SEQIN',FILE=IFIL3)
C
C SWAP NAMES SO THAT WE CAN DO THIS AGAIN SOMETIME
C
        DO 415 I=1,5
        IFIL1(I)=IFIL3(I)
        IFIL3(I)=IFIL4(I)
        IFIL4(I)=IFIL1(I)
415     CONTINUE
C
C NOW RELOAD DATA
C
        IPS1=0
        J3=(IAMAX+4)/5
        J4=J3+1
C -     KK = LENGTH OF TEST RECORD
C
        IPS2=20000+1
430     CONTINUE
        READ (25,2001,END=450)(IB(K),K=1,IB1)
        READ (25,2002,END=450)(IA(K),K=1,J4)
        ICNT=ICNT+1
        IF(KMAX.LT.ICNT)KMAX=ICNT
        IPS1=IPS1+1
        IPS2=IPS2-J4-1
        ISTO(IPS1)=IPS2
        DO 432 I=1,IB1
        IPS1=IPS1+1
        ISTO(IPS1)=IB(I)
432     CONTINUE
        ISTO(IPS2)=J3
        DO 434 I=1,J4
        ISTO(IPS2+I)=IA(I)
434     CONTINUE
        J1=IPS1+KK
        J2=IPS2-J4-J4
        IF(J1.LT.J2)GO TO 430
        GO TO 500
450     CONTINUE
C
C DATA FIT IN MEMORY - SORT IT AND WRITE IT
C
        KK=IB1+1
        IPS1=IPS1+1
4450    FORMAT(' REMAINING DATA FIT INTO MEMORY - BEGINNING SORT',/,
     1  I6,' RECORDS PROCESSED')
        CALL OPSOR(ISTO,IPS1,IPS2,KK)
        LMAX=LMAX+ICNT
        TYPE 4409,LMAX,KMAX
C       TYPE 4451
4451    FORMAT(' SORT COMPLETE - WRITING DATA')
        IPS1=IPS1-1
        DO 460 I=1,IPS1,KK
        LL=ISTO(I)
        L1=ISTO(LL+1)
        CALL UNPACK(ISTO(LL+2),IA,L1)
        WRITE(27,1001)(IA(K),K=1,L1)
460     CONTINUE
        CLOSE(UNIT=27)
        CALL EXIT
500     CONTINUE
C       TYPE 4500,(ISTO(K),K=1,50)
4500    FORMAT(6I12)
C
C IF HERE WE HAVE AGAIN RUN OUT OF DATA AND MUST PROCEDE SLOWLY
C
C       TYPE 3500,ICNT
3500    FORMAT(' NEEDED AN ADDITIONAL PASS',I6,' RECORDS LOADED')
        IPS1=IPS1+1
        GO TO 302
        CALL EXIT
        END
