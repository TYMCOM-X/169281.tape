;DEFINE VERSION NUMBER

	TYMSPC==1		;TYMSHARE SPECIFICATION
	TYMREL==0		;TYMSHARE RELEASE NUMBER

DEFINE TITL(TS,TR)<
TITLE	MSGN01 -- VERSION TS' TR
SUBTTL	MSGN01.MAC MACRO SUBROUTINES 
VCOMSUB==BYTE(9)0,TS,0,TR>

	TITL(\TYMSPC,\TYMREL)


;ACCUMULATOR DEFINITIONS
	;FUNCTION	;SUBROUTINE	;GENERAL
	;USE		;USE		;USE
R0==0	;DESTROY+RESULT	;DESTROY	;GENERAL BLT REGISTER
R1==1	;DESTROY	;DESTROY	;GENERAL SCRATCH
R2==2	;SAVE+ARGUMENT	;SAVE+ARGUMENT	;GENERAL SCRATCH
R3==3	;"		;"		;"
R4==4	;"		;"		;"
R5==5	;"		;"		;"
R6==6	;"		;"		;"
R7==7	;"		;"		;"
R10==10	;"		;"		;"
R11==11	;"		;"		;"
R12==12	;"		;"		;"
R13==13	;"		;"		;"
R14==14	;"		;"		;"
R15==15	;"		;"		;"
R16==16	;SAVED		;SAVED		;JSA-JRA REGISTER
R17==17	;SAVED		;SAVED		;GENERAL PURPOSE PDL
;SOME CONSTANTS FOR US
SPACE==40
PDL:    IOWD    <20*4>,PDLBLK
PDLBLK: BLOCK   <20*4>

;COMMON BLOCK DEFINITIONS

OPDEF TRUE [SETOM]
OPDEF FALSE [SETZM]
OPDEF .PSH [PUSH R17,]
OPDEF .PUL [POP R17,]

DEFINE .ARG(X)<@X-1(R16)>	;AS ARG(1) GETS FOOTRAN ARGUMENT
DEFINE ARGS(X)<IRP X<JUMP X>>	;SETS UP FOOTRAN ARGUMENT BLOCK
DEFINE PSH(X)<IRP X<.PSH X>>	;MULTI-ELEMENT PUSH ON STACK
DEFINE PUL(X)<IRP X<.PUL X>>	;MULTI-ELEMENT PULL FROM STACK
DEFINE MSG(X)<OUTSTR [ASCIZ/
X
/]>				;TYPE MESSAGE TO TELETYPE

;CALSUB <NAME> - CALLS A FOOTRAN-CALLABLE SUBROUTINE
DEFINE CALSUB(X)<
	MOVEM	R17,PDL		;PUT PDL POINTER BACK
	JSA	R16,X		;AND CALL SUBROUTINE
>

;RETSUB - RETURNS FROM FOOTRAN FUNCTION/SUBROUTINE
OPDEF RETSUB [JRA R16,(R16)]


;SUBF <NAME> - DEFINES ENTRY INTO FOOTRAN FUNCTION/SUBROUTINE IN THIS
;PACKAGE. PLACES ZERO CELL PROPERLY AND GENERATES LABEL AND
;ENTRY STATEMENT PROPERLY
DEFINE SUBF(ROUTINE)<
;**** FOOTRAN-CALLABLE FUNCTION/SUBROUTINE ROUTINE

	ENTRY	ROUTINE

ROUTINE:CAIA			;FOOTRAN JRA-JSA OR PUSHJ
	PUSH	R17,[JRA 16,(16)]
	EXCH	R17,PDL		;GET OUR PDL WORKING
	PSH	PDL		;SAVE THE LAST R17
	PSH	R16		;SAVE REGISTER 16
	CALSUB	SAVREG		;SAVE THE REGISTERS
>

;RETF - RETURNS FROM FOOTRAN SUBROUTINE
DEFINE RETF<
	JRST	[CALSUB RESREG	;RESTORE REGISTERS
		PUL R16		;RESTORE R16
		PUL PDL		;GET R17
		EXCH R17,PDL	;AND R17 IS BACK
		POPJ R17,0]	;RETURN [I HOPE!]
>


;SUBROUTINES USED BY COMSUB

;SAVREG -- SAVES FOOTRAN VOLITILE REGISTERS
; (FOR THIS IMPLEMENTATION, SAVES 2-15)
SAVREG:	Z			;CALLED VIA JSA
	PSH	<R2,R3,R4,R5,R6,R7,R10,R11,R12,R13,R14,R15>
	RETSUB			;RETURN

;RESREG --- RESTORES REGISTERS SAVED BY SAVREG
; (FOR THIS IMPLEMENTATION, RESTORES 2-15)
RESREG:	Z			;CALLED VIA JSA
	PUL	<R15,R14,R13,R12,R11,R10,R7,R6,R5,R4,R3,R2>
	RETSUB			;RETURN

;EXIT POOINT EXFOO
;SAYS LAST FOOTRAN I-O AND EXITS
; * * * CAUTION * * *
;BECAUSE FORSE DOES NOT MAKE THE ROUTINE 'USRLOC'
;GLOBAL TO ALL OF US, THE NEAREST GLOBAL TO IT WE
;CAN ACCESS IS 'ILUUO.'.
;BECAUSE OF THIS, THE 'ILUUO.+' REFERENCE BELOW IS USED
;TO TYPE 'LAST FOOTRAN I-O AT USER LOC XXX'
;IF ERROR.MAC IN LIB40 IS CHANGED, THIS MUST BE ALSO

EXFOO:	 EXIT

;SUBROUTINE NUMPOR - RETURNS NUMBER OF PORT
;
SUBF NUMPOR
        MOVE R1,[-26]
        GETTAB R1,
        SETZ R1,
        MOVEI R4,.ARG 1
        MOVEM R1,@R4
        RETF
;SUBROUTINE ISYSNO(J)
;ARG1:(J) --> IS RETURN OF SYSTEM NUMBER
;
SUBF ISYSNO
        MOVEI   R4,.ARG 1
        MOVSI   R1,-1
LSYS1:  MOVEI   R2,11
        HRLI    R2,0(R1)
        GETTAB  R2,
        SETZ    R2,
        LSH     R2,-13
        HRRZ    R2,2
        LSH     R2,-4
        SUBI    R2,14060
        MOVE    R3,2
        LSH     R3,-7
        ANDI    R2,17 ; WILL PICK UP BIT IF DIGIT AN 8 OR 9
        MOVEM   R2,@R4
        JUMPG   R3,.+2
        RETF                    ;ALL DONE
LSYS2:  ADDI    R2,12
        SOJG    R3,.-1
        MOVEM   R2,@R4
        RETF
;SUBROUTINE GETUSR
;                                INPUT - NULL
SUBF GETUSR
        MOVNI R1,20             ;          RETURN - COMMON /RK9/
        GETTAB R1,              ;          POS1 - A5 OF USER NAME
         SETZ R1,               ;          POS2 - A5 OF USER NAME
        MOVEM R1,I3NAME
        HRROI R1,-22            ;          POS3 - A5 OF USER
        GETTAB R1,              ;          POS4 - NO CHANGE
         SETZ R1,               ;          ELSE NO CHANGE
        MOVEM R1,I1NAME
        HRROI R1,-21
        GETTAB R1,
         SETZ R1,
        MOVEM R1,I2NAME
        MOVE R1,[POINT 6,I1NAME]
        MOVE R2,[POINT 7,INAM1]
        MOVEI R3,17
GULOP:  ILDB R4,R1
        ADDI R4,40
        IDPB R4,R2
        SOJG R3,GULOP
        MOVEI   R4,.ARG 1
        MOVE    R3,INAM1
        MOVEM   R3,@R4
        ADDI    R4,1
        MOVE    R3,INAM2
        MOVEM   R3,@R4
        ADDI    R4,1
        MOVE    R3,INAM3
        MOVEM   R3,@R4
        RETF

SUBF ALPNUM
        MOVE    R3,.ARG 3       ;SIZE
        MOVEI   R4,.ARG 1
        MOVEI   R5,.ARG 2
LOAP:   MOVE    R1,@R4
        ADDI    R4,1
        LSH     R1,-1
        MOVEM   R1,@R5
        ADDI    R5,1
        SOJG    R3,LOAP
        RETF

SUBF NUMALP
        MOVE    R3,.ARG 3       ;SIZE
        MOVEI   R4,.ARG 1
        MOVEI   R5,.ARG 2
LOBP:   MOVE    R1,@R4
        ADDI    R4,1
        LSH     R1,1
        MOVEM   R1,@R5
        ADDI    R5,1
        SOJG    R3,LOBP
        RETF

SUBF PACK

        MOVE    R3,.ARG 3     ;SIZE
        MOVE    R5,R3
        IDIVI   R5,^D5          ;REMAINDER IN R6
        MOVE    R2,[POINT 7,I2NAME]      ;DESTINATION
        HRRI    R2,.ARG 2
        MOVEI   R4,.ARG 1

LOPP:   MOVE    R1,@R4
        ADDI    R4,1
        LSH     R1,-^D29
        IDPB    R1,R2
        SOJG    R3,LOPP
        MOVEI   R7,40
        JUMPG   R6,LOPP1
        RETF
LOPP1:  SUBI    R6,5
LOPP2:  IDPB    R7,R2           ;DEPOSIT BLANK
        AOJL    R6,LOPP2
        RETF

SUBF PACKU

        MOVE    R3,.ARG 3     ;SIZE
        MOVE    R5,R3
        IDIVI   R5,^D5          ;REMAINDER IN R6
        MOVE    R2,[POINT 7,I2NAME]      ;DESTINATION
        HRRI    R2,.ARG 2
        MOVEI   R4,.ARG 1

LOOP:   MOVE    R1,@R4
        ADDI    R4,1
        LSH     R1,-^D29
        CAIL    R1,141
        CAIL    R1,173
        CAIA    0,
        SUBI    R1,40
        IDPB    R1,R2
        SOJG    R3,LOOP
        MOVEI   R7,40
        JUMPG   R6,LOOP1
        RETF
LOOP1:  SUBI    R6,5
LOOP2:  IDPB    R7,R2           ;DEPOSIT BLANK
        AOJL    R6,LOOP2
        RETF

SUBF UNPACK

        MOVE    R3,.ARG 3
        MOVE    R2,[POINT 7,I2NAME]
        HRRI    R2,.ARG 1
        MOVEI   R4,.ARG 2

LUPK:   ILDB    R1,R2
        LSH     R1,^D18
        HRRI    R1,201004
        LSH     R1,^D11
        HRRI    R1,20100
        MOVEM   R1,@R4
        ADDI    R4,1
        SOJG    R3,LUPK
        RETF

SUBF SFTNUR

        MOVE    R4,.ARG 1
        ROT     R4,^D35
        MOVEM   R4,.ARG 1
        MOVE    R4,.ARG 2
        ROT     R4,^D35
        MOVEM   R4,.ARG 2
        RETF

SUBF SFTNUL

        MOVE    R4,.ARG 1
        ROT     R4,^D1
        MOVEM   R4,.ARG 1
        MOVE    R4,.ARG 2
        ROT     R4,^D1
        MOVEM   R4,.ARG 2
        RETF

SUBF    FGMT
        MOVEI   R4,.ARG 1
        MOVEI   R5,.ARG 2
        MOVEI   R6,.ARG 3
        MOVEI   R7,.ARG 4
        MOVEI   R10,.ARG 5
        MOVEI   R11,.ARG 6
        MOVEI   R2,11
        HRLI    R2,10
        GETTAB  R2,
        SETZ    R2,
        MOVE    R12,2
        IDIVI   R12,^D216
        MOVE    R14,12
        IDIVI   R12,^D1000
        MOVEM   R12,@R7
        IMULI   R12,^D1000
        SUB     R14,12
        IMULI   R14,^D60
        MOVE    R2,14
        IDIVI   R14,^D1000
        MOVEM   R14,@R10
        IMULI   R15,^D6
        MOVE    R15,@R11
        MOVEI   R2,11
        HRLI    R2,11
        GETTAB  R2,
        SETZ    R2,
        MOVEI   R12,^D86
        SUBI    R2,^D8035       ;GET NUMBER DOWN TO DAYS FROM 31-DEC-85
        CAILE   R2,^D365
        ADDI    R12,1
        MOVEM   R12,@R6         ;PUT YEAR INTO THIRD POSITION
        CAILE   R2,^D365        ;GET NUMBER DOWN TO DAYS FROM 31-DEC-86
        SUBI    R2,^D365
        MOVNI   R12,1
LDAT1:  ADDI    R12,1
        CAIL    R12,^D12
        JRST    0,LDAT2
        MOVE    R13,IJAN(R12)
        CAMG    R2,R13
        JRST    0,LDAT2
        SUB     R2,R13
        JRST    0,LDAT1
LDAT2:  ADDI    R12,1
        MOVEM   R12,@R4         ;PUT MONTH INTO FIRST POSITION
        MOVEM   R2,@R5          ;PUT DAY INTO SECOND POSITION
        RETF
IJAN:   ^D31
IFEB:   ^D28
IMAR:   ^D31
IAPR:   ^D30
IMAY:   ^D31
IJUN:   ^D30
IJUL:   ^D31
IAUG:   ^D31
ISEP:   ^D30
IOCT:   ^D31
INOV:   ^D30
IDEC:   ^D31
INAM1:  0
INAM2:  0
INAM3:  0
I1NAME: 0
I2NAME: 0
I3NAME: 0
        END
  