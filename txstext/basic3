
CHAPTER 5
TOP-DOWN - Describes well-structured modular programs. Has 3 parts; planning coding & testing. Can save much time and effort.
STRUCTURED PROGRAMMING - Define proper flow of control and coding standards(such as indentation). Statements are executed one
	after another in sequence.
COHESION - refers to the internal strength of a module.
COUPLING - refers to the connections, or interfaces, between modules.
SWITCHES & FLAGS - are nothing more than variables that are allowed to have 1 of 2 values.

CHAPTER 6 - REPORT DESIGN AND SUBTOTALS
PLANNING OUTPUT - 6 lines/in. Allow 1 in. @ top of the paper above the title, and 1 in. @ the bottom. Leaves 48 lines for detail 
	lines. Counter only counts detail lines. You REALLY only have 45-6 detail lines left.
CONTROL BREAKS - When the contents of the field change and subtotals are printed.
CONTROL VARIABLE - used to keep track of counts for subtotals; controls the page break
MULTIPLE PAGE OUTPUT - needs line counters & page counters
FORM FEED - Uses CHR$(12)
SAVE FIELD - is required to compare the control variable for the current record to that of the previous record. When the current
	control variable is different fro the previous one, subtotals are printed.

CHAPTER 7
CLS - Clears the screen.
LOCATE - This stmnt is used to place the cursor at any spot on the screen. Generally executed prior to a PRINT or INPUT stmnt. Uses
	row & cloumn positions. (LOCATE row, col., 0 or 1 (cursor vis. or invis.)). Executing LOCATE and PRINT will not clear the
	screen prior to execution. (screens have 24 rows & 80 columns)
CONCATENATION - USE THE PLUS SIGN (+) TO CONCATENATE STRINGS EX: LET C$ = A$+","+B$
FUNCTION - can be thought of as a prewritten subroutine which accomplishes one operation, such as INT, TAB & SPC. Functions do not 
	have line #s and are used within other BASIC statements which do have line #s.
SPACE$ - is similar to the SPC function, since both produce a series of spaces. But SPACE$ does not always have to be included in
	a PRINT or LPRINT stmnt. May also be used to assign blank spaces to a string variable. SPACE$ (# OF SPACES)
	10 print space$(15) "this is it"/40 let empty$ = space$(40)
STRING$ - Tjis function produces a series of identical charactrs of the desired length. STRING$ (LENGTH, CHARACTER) The length
	specified in the STRING$ function can be a constant, a numeric variable, or an arithmetic expression. The character to
	duplicate may be given as a string literal, a string variable, or as the number indicating the position in the ASCII
	coding sequence
LEN$ - Counts the # of characters in a string. EX: LEN (string) It returns a numerica value. Any spaces embedded within a string
	are counted in the length of the string.
LEFT$ - The function LEFT$ is used to extract characters from the left end of a string EX: LEFT$ (string, number of characters)
	The LEFT$ function returns a string of the specified length. Same for RIGHT$.
MID$ - The MID$ function extracts characters from anywehere withi a string. The starting ocation is given, and a count of the #
	of characters wanted. EX: MID$ (string, starting location [# of characters])
INSTR - (Instring) function searches a string for the occurrence of a second string. The value returned is the position within
	the first string where the second string begins. EX: "THE" - function will pick up every word with "THE", like THEME,
	MOTHER, FATHER. So use " THE "
CHR$ - This function returns 1 character specified by its number in the ASCII coding sequence. Used when a required character is
	not on the keyboard.
ASC - This function does the opposite operation of CHR$. For any character, it will return the ASCII code number.

CHAPTER 9
MENU - Best way to present the options available when a choice needs to be made.
ON...GOSUB - [line number ON numeric expression GOSUB list of line numbers] - This variable will execute one of several different
	subroutines, depending upon the value of the variable named. The numeric expression should be from 0-255.
INSTR - Can be used with ON...GOSUB when you are using the first letter of the chosen item.

