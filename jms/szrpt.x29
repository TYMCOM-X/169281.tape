;(SRATECH:29)SZRPT.MAC  12  9-MAY-79 10:40  5513
TITLE SZRPT - PRINT SORTED LIST OF USERS STRAGE

;DEVICES
MFD==1
UFD==2
LPT==3
DUL==4
LUD==5

FIL==6
;ACS
NAM=1
EXT=2
SIZ=3
DAT=4
PTR=5		;ALL PIECES OF UFD ENTRY

LNK2=4
T4=51
MFDBF=12
UFDBF=13
T1=6
T2=7
L1=10
L2=11
LS=12
T3=13
TOT=14

LST=15	;FOR STORING INTO LIST STRUCTURE
LNK=16	;FOR JSP IN UFD READR
P=17

LICTAB==-20	;GETTAB FOR LICENSE
PRVTAB==6
UNMTAB==-22
UN1TAB==-21

SETLIC==-10	;CALLI FOR SET LICENSE

DULHSH==^D101	;HASH FOR READING DUL
LUDHSH==^D887
LHUN==4
LPPN==0
LLINK==2
LPRV==3
LDST==1		;DISTRICT NUMBER
LPPN==0
TYMPRO==40000
ACTSUP==20000

OPRLIC==100000	;OPERATOR LICENSE
RDFLIC==12

ARRAY UFDBF,MFDBF,LPTBUF[3],PDL[40],BUF[200],ITOT,OTOT[3],CMPTB[20]
ARRAY PATCH[100]


EXTERNAL JOBFF,JOBREL

INTERNAL JOBVER

	JOBVER==137
	LOC JOBVER
        7,,5
	RELOC
MLON

STPT:	CALLI
        SETZM   PAG1FL#
	INIT LUD,16
	SIXBIT /SYS/
	0
	JRST NODSK
	LOOKUP LUD,LUDNAM
	 JRST NOSYS
	MOVE P,[IOWD 40,PDL]
	SETZM DSTFLG#
	SETZM ACSFLG#
	SETZM FILSW#
	SETZM USRFLG#
	HRROI T1,LICTAB
	GETTAB T1,
	 MOVEI T1,0	;SAY NO LICENSE
	MOVEM T1,SVLIC#
; THE NEXT LINE MODIFIED FROM TRNE TO ACCEPT FILE LICENSE.
	TLNE T1,OPRLIC!RDFLIC	;DOES HE HAVE OPER LIC??
	JRST LICOK
	HRROI T2,PRVTAB
	GETTAB T2,0
	 MOVEI T2,0
	TRNE T2,ACTSUP
	JRST SETACS
NOLIC:	MOVE T1,SVLIC
	HRLS T1		;DO NOT USE THE LICENSE WE HAVE
	CALLI T1,SETLIC
LICOK:	INIT UFD,17
	SIXBIT /DSK/
	UFDBF
	JRST NODSK
	INIT MFD,17
	SIXBIT /DSK/
	MFDBF
	JRST NODSK
	INIT DUL,16
	SIXBIT /SYS/
	0
	JRST NODSK
	INBUF UFD,2
	INBUF MFD,2
	INIT LPT,0	;NOW FOR OUTPUT
	SIXBIT /TTY/	;MAKE IT TTY FOR NOW
	XWD LPTBUF,0
	JRST NOOUT
	OUTBUF LPT,2
	ENTER LPT,ONAM
	 JRST NOOUT	;LOSE BIG
	LOOKUP DUL,DULNAM
	 JRST NOSYS	;CAN NOT GET SYSTEM FILES
	LOOKUP MFD,MFDNM
	 JRST NOSYS
TTGNC:  SETZM   SEPFLG#         ;ZERO SEPARATION FLAG
	SETZM ZRLFLG#
	SKIPGE ACSFLG
	JRST GETSRT
        OUTSTR  [ASCIZ /
ONE PAGE OUTPUT ? /]
        INCHWL  L1
        CAIE    L1,"Y"
         SETOM  PAG1FL
INA:    INCHRS  L1
         JRST   GOA
        CAIE    L1,12
         JRST   INA
GOA:	OUTSTR [ASCIZ /
INHOUSE SEPERATED? /]
	INCHWL L1
	CAIE L1,"y"
	CAIN L1,"Y"
	SETOM SEPFLG
	CAIE L1,"o"
	CAIN L1,"O"
	PUSHJ P,FLGOUT
	CAIE L1,"i"
	CAIN L1,"I"
	PUSHJ P,FLGIN
        CAIE    L1,156          ;LOWER CASE N
        CAIN    L1,"N"          ;NO SEPARATION
        JRST    GETSRT          ;START SORT
        PUSHJ   P,CHRCHK        ;NO FOUL CHARACTERS ALLOW
        PUSHJ   P,WTLN
GETSRT:	OUTSTR [ASCIZ /
SORT BY? /]
	MOVSI LST,-17	;POINTER TO COMPARE TABLE
	SETZM NEDDST#
	INCHWL L1
	MOVEI T1,CPOPJ
	MOVEM T1,ACGFLG#
	MOVEM T1,DSGFLG#
	MOVEM T1,USGFLG#
SORTSC:	PUSHJ P,SCANNM
	JRST ENDNM
	MOVSI T1,-NAMLN
NMLP:	CAME T2,NMTB(T1)
	AOBJN T1,NMLP
	JUMPGE T1,NONAM
	XCT SRTTB(T1)
	MOVEM T1,CMPTB(LST)
	AOBJN LST,SORTSC
	PUSHJ P,WTLN
	OUTSTR [ASCIZ /
TOO MANY SORT OPTIONS/]
	JRST GETSRT

NMTB:	<SIXBIT /SIZE/>
	<SIXBIT /FILES/>
	<SIXBIT /DISTRICT/>
	<SIXBIT /ACCOUNT/>
	<SIXBIT /USER/>
	<SIXBIT /NUMDISTRICT/>
	<SIXBIT /NUMACCOUNT/>
	<SIXBIT /NAMEACCOUNT/>
	<SIXBIT /NAMEUSER/>
NAMLN==.-NMTB

SRTTB:	MOVEI T1,BYSIZ
	MOVEI T1,BYFILE
	PUSHJ P,SETDST
	MOVEI T1,BYACNT
	MOVEI T1,BYUSR
	JRST NUMDST
	JRST NUMACC
	JRST NAMACC
	JRST NAMUSR

NONAM:	PUSHJ P,WTLN
        SKIPGE  ACSFLG          ;LICENSE?
        JRST    NONNAM          ;PRINT WHAT NO LIC CAN HAVE
	OUTSTR [ASCIZ /
UNRECOGNIZABLE SORT OPTION.
OPTIONS ARE:
 NUMDISTRICT
 NUMACCOUNT
 NAMEACCOUNT
 NAMEUSER
 SIZE
 FILES
 DISTRICT
 ACCOUNT
 USER/]
	JRST GETSRT


NONNAM: OUTSTR  [ASCIZ/
UNRECOGNIZABLE SORT OPTION.
OPTIONS ARE:
SIZE
FILES
DISTRICT
ACCOUNT
USER/]
        JRST    GETSRT          ;TRY AGAIN
SCANNM:	MOVEI T2,0
	MOVE T1,[POINT 6,T2]
SCNSTR:	CAIGE L1,40
	POPJ P,
	PUSHJ P,CKLET
	JRST ISLET
	INCHWL L1
	JRST SCNSTR
ISLET:	SUBI L1,40
	TLNE T1,770000
	IDPB L1,T1
	INCHWL L1
	PUSHJ P,CKLET
	JRST ISLET
	AOS (P)
	POPJ P,
NUMDST:	SKIPGE ACSFLG
	JRST NONAM
	SETOM NEDDST
	MOVEI T1,GETDNU
	MOVEM T1,DSGFLG
	JRST SORTSC

NUMACC:	SKIPGE ACSFLG
	JRST NONAM
	MOVEI T1,GETANU
	MOVEM T1,ACGFLG
	JRST SORTSC

NAMACC:	SKIPGE ACSFLG
	JRST NONAM
	MOVEI T1,GETANM
	MOVEM T1,ACGFLG
	JRST SORTSC

SETFLG:	HRRZ EXT,JOBFF
	POPJ P,

DEPFLG:	PUSH P,L1
	HRRZ L1,JOBFF
	CAMG L1,JOBREL
	JRST DEPFL1
	IORI L1,1777
	CORE L1,
	 JRST NOCR
DEPFL1:	POP P,L1
	MOVEM T1,@JOBFF
	AOS JOBFF
	ADD EXT,[XWD -1,0]
	POPJ P,

SKIPSP:	CAIE L1," "
	POPJ P,
SKPSP1:	PUSHJ P,GETCHR
	JRST SKIPSP

GETCHR:	SKIPE FILSW
	JRST GETFIL
	INCHRW L1
	CAIN L1,15
	JRST .-2
	POPJ P,
GETFIL:
        SOSGE   DIBUF+2
         JRST   GETFL1
        ILDB    L1,DIBUF+1
        CAIN    L1,15
         JRST   GETFIL
        SKIPN   L1
         JRST   GETFIL
        POPJ    P,

GETFL1: IN      FIL,
         SKIPA
        JRST    [SETOM  L1
                 POPJ   P,]
        JRST    GETFIL

LOKFIL:	PUSHJ P,SKPSP1
	CAIE L1,"@"
	POPJ P,
LOKFL1:	SETZM FNAM+1
	SETZM FNAM+2
	SETZM FNAM+3
	PUSHJ P,SKPSP1
	CAIE L1,"("
	JRST NOUSR
	PUSHJ P,SKPSP1
	MOVEI L2,^D12
	PUSHJ P,RDNAM
	MOVEM N,USR
	MOVEM N1,USR+1
	MOVEI L2,USR
	MOVEM L2,FNAM+1
	CAIE L1,")"
	PUSHJ P,SKIPSP
	CAIE L1,")"
	JRST REFNM
	PUSHJ P,SKPSP1
NOUSR:	MOVEI L2,^D6
	PUSHJ P,RDNAM
	MOVEM N,FNAM+2
	CAIN L1,12
	JRST NMDON
	CAIE L1,"."
	PUSHJ P,SKIPSP
	CAIE L1,"."
	JRST NMDON
	PUSHJ P,SKPSP1
	MOVEI L2,3
	PUSHJ P,RDNAM
	MOVEM N,FNAM+3
NMDON:	PUSHJ P,WTLN
	INIT FIL,0
	SIXBIT /DSK/
	DIBUF
	JRST NODSK
	LOOKUP FIL,FNAM
	 JRST NOFIL
	INBUF FIL,1
	SETOM FILSW
	SETZM SAVCHR#
	PUSHJ P,GETCHR
	POP P,T1
	PUSHJ P,(T1)
	SETZM FILSW
	POPJ P,

FNAM:	EXP 3,0,0,0
ARRAY DIBUF[3],USR[2]

REFNM:	OUTSTR [ASCIZ /
BAD FILE NAME/]
	SKIPA
NOFIL:	OUTSTR [ASCIZ /
CAN NOT FIND FILE/]
	RELEASE FIL,0
	OUTSTR [ASCIZ /
FILE NAME /]
	JRST LOKFL1
RDNAM:	SETZB N,N1
	MOVE NAM,[POINT 6,N]
	SKIPA
RDNM1:	PUSHJ P,GETCHR
	CAIN L1,")"
	 POPJ	P,
	CAIE L1,"."
	CAIGE L1,40
	POPJ P,
	CAILE L1,137
	SUBI L1,40
	SOJL L2,RDNM1
	SUBI L1,40
	IDPB L1,NAM
	JRST RDNM1

RDNUM:	TDZA T1,T1
RDNUM1:	PUSHJ P,GETCHR
	CAIGE L1,"0"(L2)
	CAIGE L1,"0"
	POPJ P,
	IMULI T1,(L2)
	ADDI T1,-"0"(L1)
	JRST RDNUM1

GETANU:	OUTSTR [ASCIZ /
ACCOUNT NUMBER? /]
	PUSHJ P,LOKFIL
	PUSHJ P,SETFLG
	PUSHJ P,SKIPSP
	SKIPA
GTANU1:	PUSHJ P,GETCHR
	MOVEI L2,10
	PUSHJ P,RDNUM
	PUSHJ P,DEPFLG
	PUSHJ P,SKIPSP
	CAIN L1,";"
	JRST GTANU1
	MOVEM EXT,ACSFLG
	JRST WTLN

GETDNU:	OUTSTR [ASCIZ /
DISTRICT NUMBER? /]
	PUSHJ P,LOKFIL
	PUSHJ P,SETFLG
	PUSHJ P,SKIPSP
	SKIPA
GTDNU1:	PUSHJ P,GETCHR
	MOVEI L2,^D10
	PUSHJ P,RDNUM
	PUSHJ P,DEPFLG
	PUSHJ P,SKIPSP
	CAIN L1,";"
	JRST GTDNU1
	MOVEM EXT,DSTFLG
	JRST WTLN
GETANM:	OUTSTR [ASCIZ /
NAME OF USER IN ACCOUNT? /]
	PUSHJ P,LOKFIL
	PUSHJ P,SETFLG
	PUSHJ P,SKIPSP
	SKIPA
GTANM1:	PUSHJ P,GETCHR
	MOVEI L2,^D12
	PUSHJ P,RDNAM
	PUSHJ P,CHKLUD
	 JRST GTANLD
	PUSH P,BUF+LPPN(WD)
	MOVSI BP,SVAC
	BLT BP,BP
	POP P,T1
	HLRZS T1
	PUSHJ P,DEPFLG
GTANM2:	PUSHJ P,SKIPSP
	CAIN L1,";"
	JRST GTANM1
	MOVEM EXT,ACSFLG
	JUMPL EXT,WTLN
	SKIPN FILSW
	JRST GETANM
	SETZM FILSW
	RELEASE FIL,0
	POP P,T1
	JRST GETANM

GTANLD:	PUSHJ P,NOLUD
	JRST GTANM2

NOLUD:	OUTSTR [ASCIZ /
USER /]
	MOVSI BP,SVAC
	BLT BP,BP
	MOVE NAM,[POINT 6,N]
	MOVEI L2,^D12
NOLUD2:	TRNE N1,77
	JRST NOLUD1
	LSHC N,-6
	IBP NAM
	SOJGE L2,NOLUD2
NOLUD1:	ILDB T3,NAM
	ADDI T3," "
	OUTCHR T3
	SOJG L2,NOLUD1
	OUTSTR [ASCIZ / NOT VALID
/]
	POPJ P,
NAMUSR:	MOVEI T1,GETUSN
	MOVEM T1,USGFLG
	JRST SORTSC

GETUSN:	OUTSTR [ASCIZ /
USER NAME? /]
	PUSHJ P,LOKFIL
	PUSHJ P,SETFLG
	PUSHJ P,SKIPSP
	SKIPA
GTUNM1:	PUSHJ P,GETCHR
	MOVEI L2,^D12
	PUSHJ P,RDNAM
	PUSHJ P,CHKLUD
	 JRST GTUSLD
	PUSH P,BUF+LPPN(WD)
	MOVSI BP,SVAC
	BLT BP,BP
	POP P,T1
	PUSHJ P,DEPFLG
GTUNM2:	PUSHJ P,SKIPSP
	CAIN L1,";"
	JRST GTUNM1
	MOVEM EXT,USRFLG
	JUMPL EXT,WTLN
	SKIPN FILSW
	JRST GETUSN
	SETZM FILSW
	RELEASE FIL,0
	POP P,T1
	JRST GETUSN

GTUSLD:	PUSHJ P,NOLUD
	JRST GTUNM2
CKLET:	CAILE L1,137
	SUBI L1,40
	CAIL L1,"A"
	CAILE L1,"Z"
	SKIPA
	POPJ P,
	CAIL L1,"0"
	CAILE L1,"9"
	AOS (P)
	POPJ P,

WTLN:	CAIN L1,12
	POPJ P,
	PUSHJ P,GETCHR
	JRST WTLN

SETDST:	SETOM NEDDST
	MOVEI T1,BYDIST
	POPJ P,


SETACS:	HRROI N,UNMTAB
	GETTAB N,
	 MOVEI N,0
	HRROI N1,UN1TAB
	GETTAB N1,
	 MOVEI N1,0
	PUSHJ P,CHKLUD
	 JRST NOLIC
	HLRZ T1,BUF+LPPN(WD)
	PUSHJ P,SETFLG
	PUSHJ P,DEPFLG
	MOVEM EXT,ACSFLG
	JRST LICOK
ENDNM:	PUSHJ P,WTLN
	MOVEI T1,BYSIZ
	MOVEM T1,CMPTB(LST)
	SETZM CMPTB+1(LST)
	PUSHJ P,@DSGFLG
	PUSHJ P,@ACGFLG
	PUSHJ P,@USGFLG
	SETZM ILIST#
	SETZM OLIST#
	SETZM ITOT
	SETZM OTOT
	SETZM ITOT+2
	SETZM OTOT+2		;NUMBER OF FILES
	PUSHJ P,PRDATE
	PUSHJ P,CRLF
MFLP:   MOVEI LNK2,GETMFD       ;SET UP TO USE GETMFD SUBROUTINE.
MFLP1:  PUSHJ P,GETNAM          ;GET A NAME FROM MFD.
         JRST DONE              ;REACHED EOF ON MFD - ALL DONE.
        CAME EXT,[SIXBIT /UFD/] ;IS THIS A UFD NAME?
        JRST MFLP1              ;NOT A UFD - TRY AGAIN.
        MOVEM NAM,UFDLC         ;SAVE UFD NAME FOR LOOKUP.
        LOOKUP UFD,UFDNM       ;OPEN THE UFD.
         JRST MFLP1             ;NOT SUCCESSFUL - TRY AGAIN.
        PUSHJ P,SETLST          ;SET UP LIST STRUCTURE FOR THIS USER
        JRST MFLP1
UFLP:   MOVEI LNK2,GETUFD       ;SET UP TO USE GETUFD SUBROUTINE.
        SETZM   STRTNM          ;RESET STARTING NAME
        SETZM   STRTEX          ;EXTENSION FOR UFD SEARCH.
        SETZM   MONWD           ;RESET MONITOR WORD.
UFLP1:  PUSHJ P,GETNAM          ;READ A NAME.
         JRST MFLP              ;REACHED EOF - READ NEXT MFD ENTRY.
        MOVE    T1,SIZ          ;GET FILE SIZE
        IDIVI   T1,4    ; MAKE PAGES.
        ADDM    T1,1(LST)       ;INCREASE SAVED SIZE FOR USER
        AOS     6(LST)
        ADDM    T1,(TOT)        ;AND FOR ALL USERS
        AOS     2(TOT)
        JRST UFLP1
;  THE GETNAM SUBROUTINE READS A FILE NAME AND EXTENSION FROM
;  THE MFD OR A UFD.  BEFORE CALLING GETNAM, THE ADDRESS OF EITHER
;  THE ROUTINE GETMFD OR GETUFD IS PUT INTO LNK2.

GETNAM: JSP LNK,(LNK2)
        MOVE NAM,SIZ
        MOVEM NAM,INNAM#
        JSP LNK,(LNK2)
        HLLZM SIZ,EXT
        JSP     LNK,(LNK2)
        AOS (P)
        POPJ P,

GETMFD: SOSLE   MFDCNT          ;BUFFER EMPTY?
        JRST    GTMFD1          ;NO - GET NEXT WORD.
        MOVE    T1,[33,,MFD]    ;SET UP AND
        CHANIO  T1,MFDARG       ;READ MFD ENTRIES.
        JRST    ERRMFD          ;ERROR RETURN.
        SETZ    MFDBF,          ;RESET ARRAY POINTER.
        MOVE    T2,MFDCNT       ;GET # OF ENTRIES
        IMULI   T2,3
        MOVEM   T2,MFDCNT       ;SAVE IT.
GTMFD1: MOVE    SIZ,MFDBLK(MFDBF)       ;GET NEXT WORD,
        AOJ     MFDBF,          ;INCREMENT POINTER,
        JRST    (LNK)           ;AND RETURN.

GETUFD: SOSLE   UFDCNT          ;BUFFER EMPTY?
        JRST    GTUFD1          ;NO - GET NEXT WORD.
        MOVE    T1,[33,,UFD]    ;SET UP AND
        CHANIO  T1,UFDARG       ;READ UFD ENTRIES.
        JRST    ERRUFD          ;ERROR RETURN.
        SETZ    UFDBF,          ;RESET ARRAY POINTER.
        MOVE    T2,UFDCNT       ;GET # OF ENTRIES
        IMULI   T2,3            ;AND CONVERT TO WORDS.
        MOVEM   T2,UFDCNT       ;SAVE IT.
GTUFD1: MOVE    SIZ,UFDBLK(UFDBF)       ;GET NEXT WORD,
        AOJ     UFDBF,          ;INCREMENT POINTER,
        JRST    (LNK)           ;AND RETURN.

;ERROR MESSAGES AND LOOKUP INFORMATION

NODSK:	TTCALL 3,[ASCIZ /
CAN NOT INIT DEVICE DSK/]
	CALLI 12

NOOUT:	TTCALL 3,[ASCIZ /
CAN NOT SET UP OUTPUT/]
	CALLI 12

NOSYS:	TTCALL 3,[ASCIZ /
CAN NOT READ SYSTEM FILES/]
	CALLI 12

ONAM:	3
	0
	SIXBIT /LICRPT/
	SIXBIT /LST/

MFDNM:	3
        XWD 1,1
        XWD 1,1
	SIXBIT /UFD/
MFDARG: -400,,MFDBLK
        SIXBIT /*/
        SIXBIT /*/
        40000,,0
MONWRD: 0
        0
        0
MFDCNT: 0
MFDBLK: BLOCK   400

UFDNM:	3
        XWD 1,1
UFDLC:	0
	SIXBIT /UFD/
UFDARG: -500,,UFDBLK
        SIXBIT /*/
        SIXBIT /*/
        200000,,0
MONWD:  0
STRTNM: 0
STRTEX: 0
UFDCNT: 0
UFDBLK: BLOCK 500

DULNAM:	3
	0
	SIXBIT /DUL/
	SIXBIT /SYS/

COM:	IOWD 200,BUF
	0

LUDNAM:	3
	0
	SIXBIT /LUD/
	SIXBIT /SYS/
ERRUFD: STATZ   UFD,20000       ;END OF FILE?
        POPJ    P,              ;YES - GET OUT
        TTCALL  3,[ASCIZ /ERROR READING UFD/]
        JRST DONE

ERRMFD: STATZ   MFD,20000       ;END OF FILE?
        POPJ    P,              ;YES - GET OUT
        TTCALL  3,[ASCIZ /ERROR READING MFD/]
        JRST DONE

CPOPJ1: AOS     (P)     ;SKIP RETURN IF GOT ENTRY
        POPJ    P,
FLGIN:	SETOM ZRLFLG
	SETOM SEPFLG
	POPJ P,

FLGOUT:	SETOM SEPFLG
	AOS ZRLFLG
	POPJ P,

FLGDO:	SKIPN ZRLFLG
	POPJ P,
	SETZM SEPFLG
	SKIPL ZRLFLG
	JRST OUTDO
	SETZM OLIST
	SETZM OTOT
	SETZM OTOT+2
	POPJ P,

OUTDO:	MOVE T1,OLIST
	MOVEM T1,ILIST
	SETZM OLIST
	MOVE T1,OTOT
	MOVEM T1,ITOT
	SETZM OTOT
	MOVE T1,OTOT+2
	MOVEM T1,ITOT+2
	SETZM OTOT+2
	POPJ P,

;CHECK FOR CORRECT RESPONSE TO QUESTION

CHRCHK: SKIPE   SEPFLG          ;IF FLAG IS SET WE HAVE AN ANSWER
        POPJ    P,
        SKIPE   ZRLFLG          ;IS THIS FLAG SET??
        POPJ    P,
        CAIE    L1,161          ;LOWER CASE Q?
        CAIN    L1,"Q"          ;MUST HAVE SOME WAY OUT OF SZRPT
        JRST    PNTIT+4         ;FAST EXIT
        CAIN    L1,15           ;C.R WILL GET YOUR QUESTION BACK
        INCHRW  L1              ;PICK UP   THAT LF BEFORE RETRUNING
        CLRBFI                  ;BEFORE ASKING FOR MORE INPUT
        OUTSTR  [ASCIZ/
OPTIONS: Y(ES),N(O),I(NHOUSE),O(UTHOUSE),Q(UIT)/]
        POP     P,L1            ;DECREMENT PUSH DOWN COUNTER
        JRST    TTGNC           ;RESET FLAGS AND RETRY
;LIST STRUCTURE FOR INFORMATION (MAKES SORTING POSSIBLE)

;WORD 0  LINK TO NEXT
;WORD 1  SIZE
;WORD 2  UFD
;WORDS 3-4 NAME FROM DUL (0 MEANS NO DUL ENTRY)

SETLST:	MOVE LST,JOBFF
	MOVEI T1,7
	ADDB T1,JOBFF
	CAMG T1,JOBREL
	JRST NOCR
	IORI T1,1777
	CALLI T1,11
	JRST [TTCALL 3,[ASCIZ /NO CORE/]
		CALLI 12]
NOCR:	SETZM 1(LST)
	SETZM 3(LST)
	SETZM 4(LST)
	SETOM 5(LST)
	SETZM 6(LST)
	MOVE T1,UFDLC
	MOVEM T1,2(LST)
	IDIVI T1,DULHSH
	USETI DUL,1(T2)
DULIN:	INPUT DUL,COM
	MOVEI T2,BUF
DULP:	SKIPG T1,(T2)
	JRST DULCK
	CAMN T1,UFDLC
	JRST FDUL
	ADDI T2,3
	JRST DULP	;GET NEXT ENTRY

DULCK:	JUMPE T1,INHOUS	;NOT OVERFLOW, NO DUL ENTRY
	USETI DUL,(T1)
	JRST DULIN	;GO TO OVERFLOW BLOCK

FDUL:	MOVE T1,1(T2)
	MOVEM T1,3(LST)
	MOVE T1,2(T2)
	MOVEM T1,4(LST)
	SKIPN SEPFLG
	SKIPE NEDDST
	SKIPA
	JRST INHOUS
	MOVE N,3(LST)
	MOVE N1,4(LST)
	PUSHJ P,CHKLUD
	 JRST INHOUP
	JRST FNDLUD
;NOW LOOK AT LUD ENTRY

A==1
B==2
C==3
D==4
E==5
N==6
N1==7
WD==10
BP==11

ARRAY SVAC[BP+1]

CHKLUD:	MOVEM BP,SVAC+BP
	MOVEI BP,SVAC
	BLT BP,SVAC+WD
	MOVE A,[555555555555]
	MOVE B,[361275431652]
	MOVE C,[612754316523]
	MOVEI WD,0
	PUSHJ P,RND
	PUSHJ P,RND
	PUSHJ P,RND
	PUSHJ P,RND
	XOR C,B
	MOVE N,C
	TLZ N,400000
	IDIVI N,LUDHSH
	XOR A,C
	USETI LUD,1(N1)
	INPUT LUD,COM
SRUS0:	MOVEI WD,0
SRUSR:	CAMN A,BUF+LHUN(WD)
        JRST    [MOVEM A,SAVKA#         ;SAVE A
                MOVEM   BP,SAVKBP#              ;SAV BP
                MOVE    BP,BUF+LLINK(WD)        ;GET LUD WORD 2 BIT 27
                MOVEI   A,7                     ;ASSUME NO INIT FILE
                TRNE    BP,400                  ;IS THERE AN INIT FILE?
                MOVEI   A,^D10                  ;YES USE WD 10 NOT 7
                ADD     A,WD                    ;0 +OFFSET INIT OR NO
                MOVE   A,BUF(A)                ;GET QUOTA A HAS RIGHT Q WD
                IDIVI   A,4     ; MAKE PAGES.
                MOVEM   A,LASLOQ#               ;SAVE IT
                MOVE    A,SAVKA                 ;GIVE BACK ORIG A
                MOVE    BP,SAVKBP               ;GIVE BACK BP
                JRST    CPOPJ1]                 ;AND GO AWAY LITTLE GIRL...
	SKIPG B,BUF+LPPN(WD)
	JRST BLKLNK
	MOVE B,BUF+LLINK(WD)
	ANDI B,177
	ADD WD,B
	JRST SRUSR

BLKLNK:	JUMPE B,CPOPJ
	USETI LUD,(B)
	INPUT LUD,COM
	JRST SRUS0
FNDLUD:	MOVE N,BUF+LDST(WD)
	ANDI N,377
	MOVEM N,5(LST)
	SKIPN SEPFLG
	JRST INHOUS
	MOVE N,BUF+LPRV(WD)
	TRNN N,TYMPRO
	JRST OUTHP
INHOUP:	MOVSI BP,SVAC
	BLT BP,BP
INHOUS:	SKIPL T1,DSTFLG
	JRST INHOU1
	MOVE T2,5(LST)
	CAME T2,(T1)
	AOBJN T1,.-1
	JUMPGE T1,IGNORE
INHOU1:	MOVEI TOT,ITOT
	MOVE T1,ILIST
	MOVEM T1,(LST)
	MOVEM LST,ILIST
	JRST CPOPJ1

OUTHP:	MOVSI BP,SVAC
	BLT BP,BP
	SKIPL T1,DSTFLG
	JRST OUTH1
	MOVE T2,5(LST)
	CAME T2,(T1)
	AOBJN T1,.-1
	JUMPGE T1,IGNORE
OUTH1:	MOVEI TOT,OTOT
	MOVE T1,OLIST
	MOVEM T1,(LST)
	MOVEM LST,OLIST
	JRST CPOPJ1

RND:	ADD B,N
	ROTC N,-22
	MOVEI BP,5
RND1:	MOVE D,B(WD)
	MUL D,[5*5*5*5*5*5*5*5*5*5*5*5*5*5*5]	;5^15
	ADDM E,C(WD)
	AOJE WD,RND2
	MOVNI WD,1
	TRNE B,1
	SKIPL C
	MOVEI WD,0
	EXCH A,C
RND2:	SOJG BP,RND1
	POPJ P,

IGNORE:	MOVEM LST,JOBFF	;PUT JOBFF BACK
CPOPJ:	POPJ P,
;THE ACTUAL SORT ROUTINES

COMPR:	MOVEI LNK,0
COMPR1:	SKIPN CMPTB(LNK)
	POPJ P,		;ALL DONE
	JRST @CMPTB(LNK)

	JRST HEDSIZ
BYSIZ:	MOVE 0,1(T1)
	CAMN 0,1(T2)
	AOJA LNK,COMPR1		;SAME, TRY NEXT SORT ROUTINE
	CAML 0,1(T2)
COMCHG:	SKIPA L1,L2
	POPJ P,
	MOVE T2,(L1)
	POPJ P,

	JRST HEDACT
BYACNT:	HLRZ 0,2(T1)
	HLRZ T3,2(T2)
	CAMN 0,T3
	AOJA LNK,COMPR1
	CAML T3,0
	JRST COMCHG
	POPJ P,

	JRST HEDDST
BYDIST:	MOVE 0,5(T1)
	CAMN 0,5(T2)
	AOJA LNK,COMPR1
	CAMG 0,5(T2)
	JRST COMCHG
	POPJ P,

	JRST HEDFIL
BYFILE:	MOVE 0,6(T1)
	CAMN 0,6(T2)
	AOJA LNK,COMPR1
	CAML 0,6(T2)
	JRST COMCHG
	POPJ P,

	JRST HEDUSR
BYUSR:	MOVE 0,3(T1)
	CAMN 0,3(T2)
	JRST USCK2		;FIRST PART SAME, CHECK SECOND
	CAMG 0,3(T2)
	JRST COMCHG
	POPJ P,

USCK2:	MOVE 0,4(T1)
	CAMN 0,4(T2)
	AOJA LNK,COMPR1
	CAMG 0,4(T2)
	JRST COMCHG
	POPJ P,
;SORT ROUTINE. LS HAS ADRS OF COMPARE ROUTINE
;T1 POINTS TO CURRENT BLOCK, T2 TO BIGGEST
;L1 POINTS TO PRED OF BIGGEST, L2 TO PRES OF CURRENT

SORT:
ST0:	SKIPN T2,(LS)	;ANY MORE
	POPJ P,		;NO, OUT OF LIST
	MOVE L1,LS	;L1 IS PRED. OF BIGGEST
	MOVE 	;L2 IS NEXT
ST2:	SKIPN T1,(L2)
	JRST DST0	;OUT OF LIST, DONE THIS PASS
	PUSHJ P,COMPR
	MOVE L2,(L2)	;NEXT LINK
	JRST ST2

DST0:	MOVE T1,(L1)	;RELINK LIST
	MOVE T2,(T1)
	MOVEM T2,(L1)
	MOVE T2,(LS)
	MOVEM T2,(T1)
	MOVEM T1,(LS)
	MOVE LS,(LS)	;ADVANCE PAST THIS ONE
	JRST ST0

DONE:	PUSHJ P,FLGDO
	MOVEI LS,ILIST
	PUSHJ P,SORT	;SORT BY SIZE
	MOVEI LS,OLIST
	PUSHJ P,SORT
	MOVEI T2,[ASCIZ /TOTAL PAGES /]
	PUSHJ P,OUTASC
	MOVE T1,ITOT
	ADD T1,OTOT
	PUSHJ P,DECPR1
	MOVEI T2,[ASCIZ /  FILES /]
	PUSHJ P,OUTASC
	MOVE T1,ITOT+2
	ADD T1,OTOT+2
	PUSHJ P,DECPR1
	PUSHJ P,CRLF
	PUSHJ P,CRLF
	SKIPN SEPFLG
	JRST PNTIT
	MOVEI T2,[ASCIZ /  INHOUSE      QUOTA             OVER          OUTHOUSE/]
	PUSHJ P,OUTASC
	PUSHJ P,CRLF
	PUSHJ P,CRLF
	PUSHJ P,SEPTOT
PNTIT:	PUSHJ P,HEADR
	SKIPN ILIST
	SKIPE OLIST
	JRST PNTIT
	EXIT
HEADR:	MOVEI L2,0
HEADR1:	SETZM ITOT+1
	SETZM OTOT+1		;SO THESE WILL BE FOR SMALLEST PIECE
	SKIPN T1,CMPTB(L2)
	POPJ P,
	JRST -1(T1)

HEDSIZ:	SETOM ACUMPC#
	JRST LSTPR

HEDFIL:
HEDUSR:	SETZM ACUMPC#
	JRST LSTPR

HEDACT:	SKIPN T1,ILIST
	JRST ACTNOI		;MUST USER OLIST
	HLRZ 0,2(T1)
	SKIPN T1,OLIST
	JRST ACTCOM
	HLRZ T3,2(T1)
	CAMLE 0,T3
	MOVE 0,T3
ACTCOM:	PUSH P,ITOT
	SETZM ITOT
	PUSH P,ITOT+2
	SETZM ITOT+2
	PUSH P,OTOT
	SETZM OTOT
	PUSH P,OTOT+2
	SETZM OTOT+2
	MOVEI TOT,ITOT
	MOVEI LST,ILIST
	JSP LNK,ACTSR
	MOVEI TOT,OTOT
	MOVEI LST,OLIST
	JSP LNK,ACTSR
	PUSHJ P,CRLF
	MOVEI T2,[ASCIZ /GLOBAL ACCOUNT /]
	PUSHJ P,OUTASC
	MOVE T1,0
	PUSHJ P,OUTOCT
	PUSHJ P,SPC2
	MOVE T1,ITOT
	ADD T1,OTOT
	PUSHJ P,DECPR1
	PUSHJ P,SPC1
	MOVE T1,ITOT+2
	ADD T1,OTOT+2
	PUSHJ P,DECPR1
	PUSHJ P,SPC1
	MOVE T1,ITOT
	ADD T1,OTOT
	IMULI T1,^D100
	MOVE T2,-5(P)
	ADD T2,-3(P)
	IDIV T1,T2
	PUSHJ P,DECPR1
	MOVEI T1,"%"
	PUSHJ P,OUT1
	PUSHJ P,CRLF
	PUSHJ P,CRLF
	SKIPE SEPFLG
	PUSHJ P,SEPTOT
	ADDI L2,1
HEDAC1:	PUSH P,L2
	PUSHJ P,HEADR1
	POP P,L2
	SKIPN OLIST
	SKIPE ILIST
	JRST HEDAC1
	POP P,OLIST
	POP P,ILIST
	POP P,OTOT+2
	POP P,OTOT
	POP P,ITOT+2
	POP P,ITOT
	POPJ P,
ACTNOI:	SKIPN T1,OLIST
	POPJ P,
	HLRZ 0,2(T1)
	JRST ACTCOM

ACTSR:	SKIPN T2,(LST)
	JRST ACTEOL
	HLRZ T3,2(T2)
	CAME T3,0
	JRST ACTEOL
	MOVE T1,1(T2)
	ADDM T1,(TOT)
	MOVE T1,6(T2)
	ADDM T1,2(TOT)
	MOVE LST,T2
	JRST ACTSR

ACTEOL:	PUSH P,(LST)
	SETZM (LST)
	JRST (LNK)
HEDDST:	SKIPN T1,ILIST
	JRST DSTNOI
	MOVE 0,5(T1)
	SKIPN T1,OLIST
	JRST DSTCOM
	CAMLE 0,5(T1)
	MOVE 0,5(T1)
DSTCOM:	PUSH P,ITOT
	SETZM ITOT
	PUSH P,ITOT+2
	SETZM ITOT+2
	PUSH P,OTOT
	SETZM OTOT+2
	PUSH P,OTOT+2
	SETZM OTOT
	MOVEI TOT,ITOT
	MOVEI LST,ILIST
	JSP LNK,DSTSR
	MOVEI TOT,OTOT
	MOVEI LST,OLIST
	JSP LNK,DSTSR
	PUSHJ P,CRLF
	MOVEI T2,[ASCIZ /DISTRICT /]
	PUSHJ P,OUTASC
	MOVE T1,0
	PUSHJ P,DECPR1
	PUSHJ P,SPC2
	MOVE T1,ITOT
	ADD T1,OTOT
	PUSHJ P,DECPR1
	PUSHJ P,SPC1
	MOVE T1,ITOT+2
	ADD T1,OTOT+2
	PUSHJ P,DECPR1
	PUSHJ P,SPC1
	MOVE T1,ITOT
	ADD T1,OTOT
	IMULI T1,^D100
	MOVE T2,-5(P)
	ADD T2,-3(P)
	IDIV T1,T2
	PUSHJ P,DECPR1
	MOVEI T1,"%"
	PUSHJ P,OUT1
	PUSHJ P,CRLF
	PUSHJ P,CRLF
	SKIPE SEPFLG
	PUSHJ P,SEPTOT
	AOJA L2,HEDAC1
DSTNOI:	SKIPN T1,OLIST
	POPJ P,
	MOVE 0,5(T1)
	JRST DSTCOM

DSTSR:	SKIPN T2,(LST)
	JRST ACTEOL
	CAME 0,5(T2)
	JRST ACTEOL
	MOVE T1,1(T2)
	ADDM T1,(TOT)
	MOVE T1,6(T2)
	ADDM T1,2(TOT)
	MOVE LST,T2
	JRST DSTSR
SEPTOT:	MOVE T1,ITOT
	PUSHJ P,DECPR1
	MOVEI T2,[ASCIZ /   /]
	PUSHJ P,OUTASC
	MOVE T1,ITOT+2
	PUSHJ P,DECPR1
	PUSHJ P,GOSP
	MOVE T1,OTOT
	PUSHJ P,DECPR1
	MOVEI T2,[ASCIZ /   /]
	PUSHJ P,OUTASC
	MOVE T1,OTOT+2
	PUSHJ P,DECPR1
	PUSHJ P,CRLF
	JRST CRLF
LSTPR:	MOVEI TOT,ITOT
	SKIPE LST,ILIST
	PUSHJ P,PRLP
	SKIPN LST,OLIST
	JRST NOOLST
	PUSHJ P,GOSP
	MOVEI TOT,OTOT
	PUSHJ P,PRLP
NOOLST:	PUSHJ P,CRLF
	SKIPE T1,ILIST
	HRRZ T1,(T1)
	MOVEM T1,ILIST
	SKIPE T2,OLIST
	HRRZ T2,(T2)
	MOVEM T2,OLIST
	JUMPN T2,LSTPR
	JUMPN T1,LSTPR
	POPJ P,

PRLP:	MOVE T1,1(LST)
	SKIPE ACUMPC		;DON'T ACCUMULATE FOR FILES, USER
	ADDB T1,1(TOT)
	IMULI T1,^D100
	IDIV T1,(TOT)
	MOVEI L1,3
	PUSHJ P,DECPR
	PUSHJ P,SPC1
	MOVE T1,1(LST)
	MOVEI L1,5
	PUSHJ P,DECPR
	MOVE T1,6(LST)
	MOVEI L1,4
	PUSHJ P,DECPR
	PUSHJ P,SPC1
	SKIPN 3(LST)	;IS THERE A DUL ENTRY??
	JRST NODUL
QT:     MOVEM   0,SAVBLK                ;MOVE ZERO FIRST
        MOVE    0,[1,,SAVBLK+1]         ;SET MOVE ADR
        BLT     0,SAVBLK+17     ;BLT TO MEM
        MOVE    N,1(LST)        ;BLOCKS USED
        MOVEM   N,LASBOP#       ;SAVE BLOCKS USED
        MOVE    N,3(LST)
        MOVE    N1,4(LST)       ;NAME
        PUSHJ   P,CHKLUD
        SETZM   LASBOP          ;NO ENTRY NO USED BLKS
        MOVE    N,LASLOQ#       ;LAST LOGOUT QUOTA
        MOVEI   L1,6            ; 6 FOR SPACING
        PUSHJ   P,DECPR         ;GO PUT OUT QUOTA
        PUSHJ   P,FLAGIT        ;GO MARK SPACE WITH #
        PUSHJ   P,SPC1        ;PRINT IT
        MOVEI   T2,3(LST)       ;SET UP NAME
        PUSHJ   P,SIXPR         ;PRINT NAME
        MOVE    N,LASBOP        ;GET FROM MEM
        CAMLE   N,LASLOQ        ;SKIP IF LESS THAN LOGOUT QUOTA
        PUSHJ   P,SHARP         ;ELSE PRINT ###
QT1:    MOVE    0,[SAVBLK+1,,1];RESTORE REGS
        BLT     0,17            ;GET FROM CORE
        MOVE    0,SAVBLK        ;GET REG ZERO
	POPJ P,
SHARP:  MOVEM   D,DSAV#         ;SAVE D REG
        MOVEM   T1,T1SAV#       ;PRECAUTION
        PUSHJ   P,SPC1          ;ONE SPACE
        MOVE    T1,POSIT        ;KEEP TRACK OF WHERE WE ARE
        CAIGE   T1,^D33         ;33RDOSITION
        JRST    SHARP+2         ;GO-AROUND UNTIL WE GET TO 36
        MOVE    T1,LASBOP       ;NUMBER OF BLOCKS USED BY WHOMEVER
        MOVE    D,LASLOQ        ;LAST LOGGED OUT QUOTA
        SUB     T1,D            ;SUB LOGGED OUT BLKS FROM CURRENT BLKS
        PUSHJ   P,OUTDEC        ;PRINT VALUE
        MOVE    T1,T1SAV        ;GIVE BACK ORIGINAL CONTENTS
        MOVE    D,DSAV          ;RESTORE D
        POPJ    P,              ;RET

OUTDEC: IDIVI   T1,^D10         ;DIVIDE BY RADIX
        PUSH    P,T2            ;SAVE REMAINDER IN PDL
        SKIPE   T1              ;ANYTHING LEFT TO DIVIDE?
        PUSHJ   P,OUTDEC        ;YES, DO IT AGAIN

OUTDE1: POP     P,T1            ;GET LAST DIGIT BACK
        ADDI    T1,60           ;COVERT TO ASCII #
        PUSHJ   P,OUT1          ;AND PRINT
        POPJ    P,              ;RETURN TO SHARP 10
FLAGIT: MOVEM   T1,T1SAV        ;SAVE REG
        MOVE    N,LASBOP        ;LAST BLOCKS
        CAMLE   N,LASLOQ        ;IS IT LESS THAN QUOTA?
        JRST    .+2
        POPJ    P,              ;RETURN AND PRINT BLANK
        MOVEI   T1,">"         ;LOAD REG
        PUSHJ   P,OUT1          ;PRINT #
        MOVE    T1,T1SAV
        AOS     (P)             ;THIS TO NOT PRINT EXTRA BLANK
        POPJ    P,

NODUL:	MOVEI T2,[ASCIZ /NO DUL ENTRY FOR [/]
	PUSHJ P,OUTASC
	HLRZ T1,2(LST)
	PUSHJ P,OUTOCT
	MOVEI T1,","
	PUSHJ P,OUT1
	HRRZ T1,2(LST)
	PUSHJ P,OUTOCT
	MOVEI T1,"]"
	PUSHJ P,OUT1
	POPJ P,

TAB:	MOVEI T1,7
	ADD T1,POSIT
	TRZ T1,7
	MOVEM T1,POSIT
	MOVEI T1,11
OUT1:	SOSG LPTBUF+2
	OUTPUT LPT,0
	IDPB T1,LPTBUF+1
	CAIE	T1,14
	CAIN T1,15
	POPJ P,
	AOS POSIT
	CAIN T1,12
	SETZM POSIT#
	POPJ P,

SIXPR:	MOVEI L1,^D12
	HRLI T2,(POINT 6,0)
	MOVEI L2,0
SXLP:	ILDB T1,T2
	JUMPE T1,SPACE
	JUMPN L2,OSPACE
SXLP2:	ADDI T1," "
	PUSHJ P,OUT1
SXLP1:	SOJG L1,SXLP
	POPJ P,

SPACE:	AOJA L2,SXLP1

OSPACE:	PUSHJ P,SPC1
	SOJG L2,OSPACE
	LDB T1,T2
	JRST SXLP2

SPC2:	PUSHJ P,SPC1
SPC1:	MOVEI T1," "
	JRST OUT1

CRLF:   SKIPGE  PAG1FL
         JRST   GO2
        AOS     PAG1FL
        MOVEM   T2,T2S#
        MOVE    T2,PAG1FL
        CAIL    T2,^D60
         EXIT
        MOVE    T2,T2S
GO2:    MOVEI T2,[ASCIZ /
/]
OUTASC:	HRLI T2,(POINT 7,0)
OA1:	ILDB T1,T2
	JUMPE T1,CPOPJ
	PUSHJ P,OUT1
	JRST OA1

DECPR1:	MOVEI L1,0
DECPR:	MOVEI PTR,^D10
ANRAD:	IDIV T1,PTR
	HRLM T2,(P)
	SUBI L1,1
	SKIPE T1
	PUSHJ P,ANRAD
	JUMPLE L1,ANRAD1
	PUSHJ P,SPC1
	SOJG L1,.-1
ANRAD1:	HLRZ T1,(P)
	ADDI T1,"0"
	JRST OUT1

OUTOCT:	MOVEI PTR,10
	MOVEI L1,0
	JRST ANRAD


GOSP:	PUSHJ P,SPC1
	MOVE T1,POSIT
	CAIGE T1,^D41          ;NUMBER OF SPACES TO OUTHOUSE
	JRST GOSP
	POPJ P,
PRDATE: MOVEI	T1,14
        PUSHJ	P,OUT1
	DATE T1,
	IDIVI T1,^D31
	PUSH P,T1
	MOVEI T1,1(T2)
	PUSHJ P,DECPR1
	POP P,T1
	IDIVI T1,^D12
	PUSH P,T1
	MOVE T2,MONTAB(T2)
	PUSHJ P,OUTASCC
	POP P,T1
	ADDI T1,^D1964         ;PLUS 1900 TO PRINT FULL YEAR
	PUSHJ P,DECPR1
	PUSHJ P,TAB
	MSTIME T1,
	IDIVI T1,^D60000
	IDIVI T1,^D60
	PUSH P,T2
	PUSHJ P,DECPR1
	MOVEI T1,":"
	PUSHJ P,OUT1
	POP P,T1
	PUSHJ P,ODEC1
        MOVEI   T2,[ASCIZ /  ** /]
        PUSHJ   P,OUTASC
        MOVEI   T2,11
        GETTAB  T2,
         HALT
        AND     T2,[777777,,700000]
        MOVEM   T2,SYSNUM#
        MOVEI   T2,SYSNUM
        PUSHJ   P,OUTASC
	JRST CRLF

ODEC1:	CAIL T1,^D10
	JRST DECPR1
	PUSH P,T1
	MOVEI T1,"0"
	PUSHJ P,OUT1
	POP P,T1
	JRST DECPR1

	DEFINE DATES(A)
<IRP A <[ASCIZ /-A-/]>>
MONTAB:	DATES <JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC>


SAVBLK: BLOCK 20                ;FOR SAVING REGS
	END STPT
 $1