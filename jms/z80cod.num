Comparison of some Z80 mnemonics        SORT/KEY:37:6/RECORD:90
PALZ80      ZILOG        CROSS       Hex        Description (*=conflict)
------      ------       ------     -----       ------------------------
NOP         NOP          NOP        00          No operation
LXI rp,mm   LD rp,mm     LXI rp,mm  01-31       Load RP immediate 16-bit
STAXBC      LD (BC),A    STAX B     02          Store accumulator in mem (BC)
INCL rp     INC rp       INX rp     03-33       Increment 16-bit register
INC r       INC r        INR r      04-4C       Increment register
DEC r       DEC r        DCR r      05-4D       Decrement register
MVI r,i     LD r,i       MVI r,i    06-3B       Move immediate 8-bit into R
RLCA        RLCA         RLC        07         * Rotate accum    left thru carry
EX          EX AF,AF'    EXAF       08          Exchange A+Flags with alternate
ADDHL rp    ADD HL,rp    DAD rp     09-39       Double add RP to HL
LDAXBC      LD A,(BC)    LDAX B     0A          Load A from mem (BC)
DECL rp     DEC rp       DCX rp     0B-3B       Decrement 16-bit reg
RRCA        RRCA         RRC        0F         * Rotate accum right thru carry
DJNZ ra     DJNZ ra      DJNZ ra    10          Decrement B, jump rel nonzero
STAXDE      LD (DC),A    STAX D     12          Store accumulator in mem (DE)
RLA         RLA          RAL        17          Rotate accum    left
BR ra       JR ra        JMPR ra    18          Branch always
LDAXDE      LD A,(DE)    LDAX D     1A          Load A from mem (DE)
RRA         RRA          RAR        1F          Rotate accum right
BNE ra      JR NZ,ra     JRNZ ra    20          Branch if not equal (zero)
DAA         DAA          DAA        27          Decimal adjust A
BEQ ra      JR Z,ra      JRZ ra     28          Branch if equal (zero)
LHLD        LD HL,(mm)   LHLD       2A          Load HL double
SHLD mm     LD (mm),HL   SHLD mm    2A          Store HL double in memory
CPL         CPL          CMA        2F          Complement A
BCC ra      JR NC,ra     JRNC ra    30          Branch if carry clear (no C)
STA mm      LD (mm),A    STA mm     32          Store accumulator in memory
INC M       INC (HL)     INR M      34          Increment mem (HL)
DEC M       DEC (HL)     DCR M      35          Decrement mem (HL)
MVI M,i     LD (HL),i    MVI M,i    36          Move immediate 8-bit to mem (HL)
SCF         SCF          STC        37          Set carry flag
BCS ra      JR C,ra      JRC ra     38          Branch if carry set
LDA mm      LD A,(mm)    LDA mm     3A          Load Accumulator
CCF         CCF          CMC        3F          Complement carry flag
MOV r1,r2   LD r1,r2     MOV r1,r2  40-7F       Move into R1 from R2
MOV M,r     LD (HL),r    MOV M,R    46-7E       Move to mem (HL) from R
HALT        HALT         HLT        76          Halt until interrupt
MOV r,M     LD r,(HL)    MOV r,M    77-7F       Move into R from mem (HL)
ADD r       ADD A,r      ADD r      80-87       Add register to A
ADC M       ADC A,(HL)   ADC M      86          Add mem (HL) to A with carry
ADD M       ADD A,(HL)   ADD M      86          Add mem (HL) to A
ADC r       ADC A,r      ADC r      88-8F       Add R to A with carry
SUB r       SUB A,r      SUB r      90-97       Subtract register from accum
SUB M       SUB A,(HL)   SUB M      96          Subtract mem (HL) from accum
SBC r       SBC A,r      SBB r      98-9F       Subtract R from A with carry
SBC M       SBC A,(HL)   SBB M      9E          Subtract mem (HL) & A with carry
AND r       AND A,r      ANA r      A0-A7       AND R with A
AND M       AND A,(HL)   ANA M      A6          AND mem (HL) with A
XOR r       XOR A,r      XRA r      A8-AF       Exclusive OR A with register
XOR M       XOR A,(HL)   XRA M      AE          Exclusive OR A with mem (HL)
OR r        OR A,r       ORA r      B0-B7       Inclusive OR accum with register
ORI M       OR A,(HL)    ORI M      B6          Inclusive OR accum with mem (HL)
CMP r       CP r         CMP r      B8-BF       Compare A with register
CMP M       CP (HL)      CMP M      BE          Compare A with mem (HL)
RETNZ       RET NZ       RNZ        C0          Return if not zero (not equal)
POP rp      POP rp       POP rp     C1-F1       Pop register pair from stack
JNZ mm      JP NZ,mm     JNZ mm     C2          Jump if zero
JMP mm      JP mm        JMP mm     C3          Jump
CNZ mm      CALL NZ,mm   CNZ mm     C4          Call if not zero
PUSH        PUSH rp      PUSH rp    C5-F5       Push register pair on the stack
ADDI i      ADD A,i      ADI i      C6          Add immediate to A
RST0        RST 0        RST 0      C7          Reset 0, CALL 0000
RETZ        RET Z        RZ         C8          Return if zero (equal)
RET         RET          RET        C9          Return from subroutine
JZ mm       JP Z,mm      JZ mm      CA          Jump if zero
RLC r       RLC r        RLCR r     CB00-CB07  * Rotate register left thru carry
RLC M       RLC (HL)     RLCR M     CB06       * Rotate mem (HL) left thru carry
RRC r       RRC r        RRCR r     CB08-CB0F  * Rotate reg right thru carry
RRC M       RRC (HL)     RRCR M     CB08-CB0F  * Rotate reg right thru carry
RL r        RL r         RALR r     CB10-CB17   Rotate register left
RL M        RL (HL)      RALR M     CB16        Rotate mem (HL) left
RR r        RR r         RARR r     CB18-CB1F   Rotate register right
RR M        RR (HL)      RARR M     CB1E        Rotate register right
SLA r       SLA r        SLAR r     CB20-CB27   Shift register left arithmetic
SLA M       SLA (HL)     SLAR M     CB26        Shift mem (HL) left arithmetic
SRA r       SRA r        SRAR r     CB28-CB2F   Shift register right arithmetic
SRA M       SRA (HL)     SRAR M     CB2E        Shift mem (HL) right arithmetic
SRL r       SRL r        SRLR r     CB38-CB3F   Shift register right logical
SRL M       SRL (HL)     SRLR M     CB3E        Shift mem (HL) right logical
BIT t,r     BIT t,r      BIT t,r    CB40-CB7F   Test bit in reg
BIT t,M     BIT t,(HL)   BIT t,M    CB46-CB7E   Test bit in mem (HL)
RES t,r     RES t,r      RES t,r    CB80-CBBF   Reset bit T in reg
RES t,M     RES t,(HL)   RES t,M    CB86-CBBE   Reset bit T in mem (HL)
SET t,r     SET t,r      SET t,r    CBC0-CBFF   Set bit in register
SET t,M     SET t,(HL)   SET t,M    CBC6-CBFE   Set bit in mem (HL)
CZ mm       CALL Z,mm    CZ mm      CC          Call if zero
CALL mm     CALL mm      CALL mm    CD          Call subroutine
ADCI i      ADC A,i      ACI i      CE          Add immediate to A with carry
RST1        RST 1        RST 1      CF          Reset 1, CALL 0008
RETNC       RET NC       RNC        D0          Return if no carry
JNC mm      JP NC,mm     JNC mm     D2          Jump if no carry
OUT i       OUT (i),A    OUT i      D3          Output from A to port i
CNC mm      CALL NC,mm   CNC mm     D4          Call if no carry
SBCI i      SBC A,i      SBI i      D6          Subtract immediate from A carry
SUBI i      SUB A,i      SUI r      D6          Subtract immediate from accum
RST2        RST 2        RST 2      D7          Reset 2, CALL 0010
RETC        RET C        RC         D8          Return if carry set
EXX         EXX          EXX        D9          Exchange alternate registers
JC mm       JP C,mm      JC mm      DA          Jump if carry set
IN i        IN A,(i)     IN i       DB          Input to A
CC mm       CALL C,mm    CC mm      DC          Call if carry
LDXI mm     LD IX,mm     LXI X,mm   DD21        Load IX immediate 16-bit
DSDX mm     LD (mm),IX   SIXD mm    DD22        Store IX double
INCX        INC IX       INX X      DD23        Increment 16-bit X
DLDX mm     LD IX,(mm)   LIXD mm    DD2A        Load IX double
DECX        DEC IX       DCX X      DD2B        Decrement 16-bit X reg
INCIX o     INC (IX+o)   INR o(X)   DD34        Increment mem (IX)
MVIX o,i    LD (IX+o),i  MVI o(X),i DD36        Move immediate 8-bit to mem (IX)
JPIX        JP (IX)      PCIX       DD39        Set PC to contents of IX (jump)
DECIX o     DEC (IX+o)   DCR o(X)   DD3D        Decrement mem (IX)
MOVIX r,o   LD r,(IX+o)  MOV r,o(X) DD45-DD7D   Move into R from mem (IX)
ADDX rp     ADD IX,rp    DADX rp    DD49-DD79   Double add RP to X
MVMIX r,o   LD (IX+o),r  MOV o(X),r DD70-DD77   Move to mem (IX) from R
ADDIX o     ADD A,(IX+o) ADD o(X)   DD86        Add mem (IX) to A
ADCIX o     ADC A,(IX+o) ADC o(X)   DD8E        Add mem (IX) to A with carry
SBCIX o     SBC A,(IX+o) SBB o(X)   DD9Eoo      Subtract mem (IX) & A with carry
ANDIX o     AND A,(IX+o) AND o(X)   DDA6        AND mem (IX) with A
ORIX o      OR A,(IX+o)  ORA o(X)   DDB6        Inclusive OR accum with mem (IX)
CMPIX o     CP (IX+o)    CMP o(X)   DDBE        Compare A with mem (IX)
RLCIX o     RLC (IX+o)   RLCR o(X)  DDCBoo06    Rotate mem (IX) left thru carry
RLIX o      RL (IX+o)    RALR o(X)  DDCBoo06    Rotate mem (IX) left
RRCIX o     RRC (IX+o)   RRCR o(X)  DDCBoo0E    Rotate mem (IX) right thru carry
RRIX o      RR (IX+o)    RARR o(X)  DDCBoo1E    Rotate mem (IX) right
SLAIX o     SLA (IX+o)   SLAR o(X)  DDCBoo26    Shift mem (IX) left arithmetic
SRAIX o     SRA (IX+o)   SRAR o(X)  DDCBoo2E    Shift mem (IX) right arithmetic
SRLIX o     SRL (IX+o)   SRLR o(X)  DDCBoo3E    Shift mem (IX) right logical
BITIX t,o   BIT t,(IX+o) BIT t,o(X) DDCBoo46-DDCBoo7E   Test bit in mem (IX)
RESIX t,o   RES t,(IX+o) RES t,o(X) DDCBoo86-DDCBooBE   Reset bit in mem (IX)
SETIX t,o   SET t,(IX+o) SET t,o(X) DDCBooC6-DDCBooFE   Set bit in mem (IX)
SUBIX o     SUB A,(IX+o) SUB o(X)   DDD6        Subtract mem (IX) from accum
POPIX       POP IX       POP X      DDE1        Pop IX from stack
EXSPIX      EX (SP),IX   XTIX       DDE3        Exchange top-of-stack and IX
PUSHIX      PUSH IX      PUSH X     DDE5        Push IX on stack
XORIX o     XOR A,(IX+o) XRA d(X)   DDEE        Exclusive OR A with mem (IX)
TIXSP       LD SP,IX     SPIX       DDF9        Transfer IX to SP
RST3        RST 3        RST 3      DF          Reset 3, CALL 0018
RETPO       RET PO       RPO        E0          Return of parity odd
JPO mm      JP PO,mm     JPO mm     E2          Jump if parity odd
EXSPHL      EX (SP),HL   XTHL       E3          Exchange top-of-stack and HL
CPO mm      CALL PO,mm   CPO mm     E4          Call if parity odd
ANDI i      AND A,i      ANI i      E6          AND immediate with A
RST4        RST 4        RST 4      E7          Reset 4, CALL 0020
RETPE       RET PE       RPE        E8          Return if parity even
JPM         JP (HL)      PCHL       E9          Set PC to contents of HL (jump)
JPE mm      JP PE,mm     JPE mm     EA          Jump if parity even
INIR        INIR         INIR       EAB2        Input from (C), incr HL, repeat
EXDEHL      EX DE,HL     XCHG       EB          Exchange DE and HL
XCHG        EX DE,HL     XCHG       EB          Exchange DE and HL pair
CPE mm      CALL PE,mm   CPE mm     EC          Call if parity even
INFC r      IN r,(C)     INP r      ED40-ED74   Input to R using port (C)
OUTFC r     OUT (C),r    OUTP r     ED41-ED79   Output from R to (C)
SBCHL rp    SBC HL,rp    DSBC rp    ED42-ED72   Subtract RP from HL with carry
DSD BC,mm   LD (mm),BC   SBCD mm    ED43        Store BC double
NEG         NEG          NEG        ED44        Negate the accumulator
RETN        RETN         RETN       ED45        Return from Non mask interrupt
IM0         IM 0         IM0        ED46        Set interrupt mode 0
TAI         LD I,A       STAI       ED47        Transfer A to interrupt reg
ADCHL rp    ADC HL,rp    DADC rp    ED4A-ED7A   Dadd RP to HL with carry
DLD BC,mm   LD BC,(mm)   LBCD mm    ED4B        Load BC double
RETI        RETI         RETI       ED4D        Return from Interrupt
TAR         LD R,A       STAR       ED4F        Transfer A to refresh reg
DSD DE,mm   LD (mm),DE   SDED mm    ED53        Store DE double
IM1         IM 1         IM1        ED56        Set interrupt mode 1
TIA         LD A,I       LDAI       ED57        Transfer interrupt reg to A
DLD DE,mm   LD DE,(mm)   LDED mm    ED5B        Load DE double
IM2         IM 2         IM2        ED5E        Set interrupt mode 2
TRA         LD A,R       LDAR       ED5F        Transfer refersh reg to A
DSD HL,mm   LD (mm),HL   SHLD mm    ED63        Store HL double
RLD         RLD          RLD        ED67        Rotate left decimal A and (HL)
RRD         RRD          RRD        ED67        Rotate right decimal A and (HL)
DLD HL,mm   LD HL,(mm)   LHLD mm    ED6B        Load HL double
INFC M      IN (HL),(C)  INP M      ED70        Set Z bit from port (C)
DSD SP,mm   LD (mm),SP   SSPD mm    ED73        Store SP double
DLD SP,mm   LD SP,(mm)   LSPD mm    ED7B        Load SP double
LDI         LDI          LDI        EDA0        Load (DE) from (HL), incr DE HL
CPI         CPI          CCI        EDA1       * Compare character, increment
INI         INI          INI        EDA2        Input from (C), increment HL
OUTI        OUTI         OUTI       EDA3        Output from HL to (C), incr HL
LDD         LDD          LDD        EDA8        Load (DE) from (HL), decr DE HL
CPD         CPD          CCD        EDA9        Compare character, decrement
IND         IND          IND        EDAA        Input from (C), decrement HL
OUTD        OUTD         OUTD       EDAB        Output from HL to (C), decr HL
LDIR        LDIR         LDIR       EDB0        Load, incr, repeat until BC=0
CPIR        CPIR         CCIR       EDB1        Compare char, increment, repeat
OTIR        OTIR         OUTIR      EDB3        Output from HL, incr HL, repeat
LDDR        LDDR         LDDR       EDB8        Load, decr, repeat until BC=0
CPDR        CPDR         CCDR       EDB9        Compare char, decrement, repeat
INDR        INDR         INDR       EDBA        Input from (C), decr HL, repeat
OTDR        OTDR         OUTDR      EDBB        Output from HL, decr HL, repeat
XORI i      XOR A,i      XRI i      EE          Exclusive OR A immediate
RST5        RST 5        RST 5      EF          Reset 5, CALL 0028
RETPL       RET P        RP         F0          Return if positive (or zero)
JPL mm      JP P,mm      JP mm      F2          Jump if positive or zero
DI          DI           DI         F3          Disable interrupts
CP mm       CALL P,mm    CP mm      F4          Call if positive or zero
ORI i       OR A,i       ORI i      F6          Inclusive OR accum immediate
RST6        RST 6        RST 6      F7          Reset 6, CALL 0030
RETMI       RET M        RM         F8          Return if minus
THLSP       LD SP,HL     SPHL       F9          Transfer HL to SP
JMI mm      JP M,mm      JM mm      FA          Jump if minus
EI          EI           EI         FB          Enable interrupts
CM mm       CALL M,mm    CM mm      FC          Call if minus
ADDY rp     ADD IY,rp    DADY rp    FD09-FD39   Double add RP to Y
LDYI mm     LD IY,mm     LXI Y,mm   FD21        Load IY immediate 16-bit
DSDY mm     LD (mm),IY   SIYD mm    FD22        Store IY double
INCY        INC IY       INX Y      FD23        Increment 16-bit Y
DLDY mm     LD IY,(mm)   LIYD mm    FD2A        Load IY double
DECY        DEC IY       DCX Y      FD2B        Decrement 16-bit Y reg
INCIY o     INC (IY+o)   INR o(Y)   FD34        Increment mem (IY)
MVIY o,i    LD (IY+o),i  MVI o(Y),i FD36        Move immediate 8-bit to mem (IY)
DECIY o     DEC (IY+o)   DCR o(Y)   FD3D        Decrement mem (IY)
MOVIY r,o   LD r,(IY+o)  MOV r,o(Y) FD45-FD7D   Move into R from mem (IY)
MVMIY r,o   LD (IY+o),r  MOV o(Y),r FD70-FD77   Move to mem (IY) from R
ADDIY o     ADD A,(IY+o) ADD o(X)   FD86        Add mem (IY) to A
ADCIY o     ADC A,(IY+o) ADC o(Y)   FD8E        Add mem (IY) to A with carry
SBCIY o     SBC A,(IY+o) SBB o(Y)   FD9Eoo      Subtract mem (IY) & A with carry
ANDIY o     AND A,(IY+o) AND o(Y)   FDA6        AND mem (IY) with A
ORIY o      OR A,(IY+o)  ORA o(Y)   FDB6        Inclusive OR accum with mem (IY)
CMPIY o     CP (IY+o)    CMP o(Y)   FDBE        Compare A with mem (IY)
RLCIY o     RLC (IY+o)   RLCR o(Y)  FDCBoo06    Rotate mem (IY) left thru carry
RLIY o      RL (IY+o)    RALR o(Y)  FDCBoo06    Rotate mem (IY) left
RRCIY o     RRC (IY+o)   RRCR o(Y)  FDCBoo0E    Rotate mem (IY) right thru carry
RRIY o      RR (IY+o)    RARR o(Y)  FDCBoo1E    Rotate mem (IY) right
SLAIY o     SLA (IY+o)   SLAR o(Y)  FDCBoo26    Shift mem (IY) left arithmetic
SRAIY o     SRA (IY+o)   SRAR o(Y)  FDCBoo2E    Shift mem (IY) right arithmetic
SRLIY o     SRL (IY+o)   SRLR o(Y)  FDCBoo3E    Shift mem (IY) right logical
BITIY t,o   BIT t,(IY+o) BIT t,o(Y) FDCBoo46-FDCBoo7E   Test bit in mem (IY)
RESIY t,o   RES t,(IY+o) RES t,o(Y) FDCBoo86-DDCBooBE   Reset bit in mem (IY)
SETIY t,o   SET t,(IY+o) SET t,o(Y) FDCBooC6-FDCBooFE   Set bit in mem (IY)
SUBIY o     SUB A,(IY+o) SUB o(Y)   FDD6        Subtract mem (IY) from accum
POPIY       POP IY       POP Y      FDE1        Pop IY from stack
EXSPIY      EX (SP),IY   XTIY       FDE3        Exchange top-of-stack and IY
PUSHIY      PUSH IY      PUSH Y     FDE5        Push IY on stack
JPIY        JP (IY)      PCIY       FDE9        Set PC to contents of IY (jump)
XORIY o     XOR A,(IY+o) XRA d(Y)   FDEE        Exclusive OR A with mem (IY)
TIYSP       LD SP,IY     SPIY       FDF9        Transfer IX to SP
CMPI i      CP i         CPI i      FE         * Compare A immediate
RST7        RST 7        RST 7      FF          Reset 7, CALL 0038
 