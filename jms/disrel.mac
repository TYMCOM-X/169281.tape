;EXTERNAL PROBLEMS
;flag (or whatever) is not checked to see if location field is
;	an external pointer - in which case it should be zero
;	question: IS there a flag?

TITLE	DISREL - .REL FILE DISASSEMBLER
SUBTTL	A CHRISTOPHER HALL FECIT

EXTERN	.JBFF,.JBTPC,.JBAPR,.JBREL,.JBSA

;ASSEMBLY INSTRUCTIONS: 	.LOA DISREL+DISCOM
;				.SAVE DISREL

FTREL==-1		;TELL DISCOM TO DO THE RIGHT THING
DEBUG==0		;SET TO ASSEMBLE CHECKSUMS

;ACS

A=1
B=2
C=3
D=4
F=5			;FLAGS
SP=6			;SYMBOL TABLE LABEL POINTER
EX=7			;CHARACTERS FOR OUTPUT
LN=10			;ADDRESS OF THIS FILE WORD
WD=11			;WORD FROM FILE
SY=12			;POINTER TO SYMBOL TABLE
CT=13			;COUNT OF CHARACTERS OUTPUT PER LINE
CR=14			;COUNTER OF WORDS THIS BLOCK
CH=15			;CHARACTERS FOR OUTPUT
RE=16			;RELOCATION WORD
P=17			;STACK

;IO CHANNELS

IN==7			;INPUT
OUT==5			;OUTPUT (CHANEL #5. YUK, YUK.)

;FLAGS IN RH OF F

FND==1			;FOUND A NUMBER (STRIN & VALIN)
CMT==2			;COMMENT HAS BEEN SET UP (ICODE)
DGT==4			;OUTPUT A DIGIT YET (PUTOCT)
ABS==10 		;OUTPUTTING ABSOLUTE CODE (HDLABS)
HSG==20			;WORKING ON HISEG CODE (ICODE)
TTL==40			;ALREADY OUTPUT TITLE LINE
OAS==100		;OUTPUTTING AN ASCIZ STRING
OUF==200		;ALREADY GOT AN OUTPUT FILE (GETFIL)
IER==400		;NEED TO RELOCATE TO LOWSEG (IEND)

;OP-CODE FLAGS - IN LH OF F

LOC==1			;LOCATION IS A LOCATION
IMD==2			;IMMEDIATE INST - MAY TAKE LOCATION
NOP==20 		;CODE IS A NOOP - DON'T OUTPUT

OPDEF	PJRST[JRST]

START:	MOVE	P,[IOWD 10,STACK]
	PUSHJ	P,SETUP 	;DO GENERAL SETTING UP
	MOVE	A,.JBFF 	;GET FIRST FREE LOCATION
	AOJ	A,
	TRZ	A,1		;PUT AT AN EVEN ADDRESS
	MOVEM	A,SYMBAS	;SAVE AS START OF SYMBOL TABLE
	MOVEM	A,SYMPTR	;ALSO AS STARTING VALUE OF PASS 2 PTR
	MOVEI	CH,100
	PUSHJ	P,GETSYM	;SET UP THE SYMBOL TABLE
	PUSHJ	P,COLAPS	;COLLAPSE THE TABLE AND SET UP SEARCH HOOKS

;NOW GO BACK TO START OF FILE AND DISASSEMBLE IT (THIS IS PASS 2, I GUESS)
;EXIT FROM PROGRAM IS IN END ITEM ROUTINE

	USETI	IN,1		;GET BACK TO BEGINNING OF FILE
	SETZB	LN,EX		;CLEAR LINE COUNTER AND EXTERNAL POINTER
	SETZB	F,INBUF1+2	;CLEAR FLAGS AND BUFFER WORDCOUNT
	MOVE	SP,SYMBAS	;SET UP SEQUENTIAL SYMBOL TABLE PTR
ITMLUP: PUSHJ	P,GETWD 	;GET ITEM WORD FROM FILE
	JUMPE	WD,ITMLUP	;IGNORE ZERO ITEM
	HLRZ	D,WD		;GET ITEM CODE FOR TABLE
	HRRZ	CR,WD		;SET UP COUNTER
	CAILE	D,11		;LEGAL ITEM CODE?
	AOJA	CR,FNYITM	;NO - MIGHT BE A FUNNY ONE
ITMLP1: MOVEM	CR,COUNT	;SAVE COUNTER
	CAILE	CR,22		;IS COUNT 18 OR LESS?
	MOVEI	CR,22		;YES - ROUND OFF TO 18
	PUSHJ	P,GETWD 	;GET RELOCATION WORD
	MOVE	RE,WD		;SET IT UP
	PUSHJ	P,@ITMTBL(D)	;GO DO ITEM-DEPENDENT STUFF
	MOVE	CR,COUNT	;GET WORD COUNT
	SUBI	CR,22		;MINUS MAXIMUM VALUE
	JUMPG	CR,ITMLP1	;LOOP IF NOT COUNTED OUT
	JRST	ITMLUP		;GET ANOTHER ITEM

;HERE TO SKIP FUNNY ITEM, OR COMPLAIN ABOUT ILLEGAL ONE
;NOTE: FUNNY ITEMS ARE ASSUMED TO BE LESS THAN 22 WORDS LONG

FNYITM:	CAIN	D,1060		;1060 ITEM?
	SOJA	CR,FNYIT1	;YES - HANDLE SPECIALLY
	CAILE	D,100		;COULD IT BE LEGAL?
	JRST	FILERR		;NO - FRAG USER
	PUSHJ	P,ISKIP 	;SKIP OVER IT
	JRST	ITMLUP

;KLUGE TO HANDLE ITEM 1060 UNTIL I FIND WHAT IT IS
;JUST DECREMENTS WORD COUNT AND SKIPS

FNYIT1: PUSHJ	P,ISKIP		;SKIP 1060 ITEM
	JRST	ITMLUP

;SUBROUTINE TO SET UP SYMBOL TABLE. EXIT ON ITEM 7 IN STRADR

GETSYM:	SETZB	F,SYSIZ2	;CLEAR TOP OF TABLE AND EXTERNAL POINTER
GETSY1: MOVE	CR,COUNT	;GET WORD COUNT
	SUBI	CR,22		;MINUS MAXIMUM VALUE
	JUMPG	CR,GETSY2	;LOOP IF NOT COUNTED OUT
	PUSHJ	P,GETWD 	;GET AN ITEM WORD
	JUMPE	WD,GETSY1	;SKIP ZERO ITEMS
	HLRZ	D,WD		;GET ITEM NUMBER
	HRRZ	CR,WD		;AND WORD COUNT
GETSY2: MOVEM	CR,COUNT	;SAVE COUNTER
	CAILE	CR,22		;IS COUNT 18 OR LESS
	MOVEI	CR,22		;YES - ROUND OFF TO 18
	PUSHJ	P,GETWD 	;GET RELOCATION WORD
	MOVE	RE,WD		;SET IT UP
	CAIN	D,5		;END ITEM?
	POPJ	P,		;YES - RETURN
	CAIN	D,7		;START ADDRESS?
	JRST	STRADR		;YES - SAVE IT FOR PASS 2
	CAIE	D,2		;IS THIS A SYMBOLS ITEM?
	JRST	SKPITM		;NO - SKIP IT

SYMLUP: PUSHJ	P,GRAD50	;GET A SYMBOL NAME AND CODE
	MOVE	CT,WD		;SAVE FOR LATER
	PUSHJ	P,GETWD 	;GET VALUE OF SYMBOL
	TLNE	WD,777777	;SOMETHING IN LEFT HALF?
	JRST	SAVDEF		;YES - SAVE IF CALLI
	CAILE	B,2		;IS THIS A CODE 1 OR 2?
	JRST	SAVEXT		;NO - MIGHT BE AN EXTERNAL

	CAIN	B,1		;INTERNAL SYMBOL (ENTRY OR INTERN)?
	PUSHJ	P,SAVINT	;YES - SAVE IT
	TLNE	RE,40000	;RELOCATABLE LOCATION?
	SOJA	CR,SYMLP0	;YES - IT GOES IN SYMBOL TABLE
	CAIG	WD,17		;NO - WITHIN AC RANGE?
	MOVEM	CT,ACTAB(WD)	;YES - SAVE AS AC NAME
	SOJA	CR,SYMLP1	;BACK TO FLOW

SYMLP0: SKIPN	SY,WD		;GET VALUE - IS IT ZERO?
	SETO	WD,		;YES - MAKE IT -1 FOR NOW
	CAIL	SY,400000	;IS IT HISEG?
	SUBI	SY,350000	;YES - MAKE IT SMALLER
	LSH	SY,-2		;  DIVIDE BY 2
	LSH	SY,1
	ADD	SY,SYMBAS	;  AND MAKE INTO TABLE ADDRESS
	PUSHJ	P,SAVSYM	;SAVE IT IN TABLE
	CAMLE	SY,SYSIZ2	;EXTENDED THE TABLE?
	MOVEM	SY,SYSIZ2	;YES - SAVE AS NEW TOP

SYMLP1:	LSH	RE,4		;SHIFT IN NEW RELOCATION BITS
	SOJG	CR,SYMLUP	;AND LOOP IF MORE LEFT
	JRST	GETSY1		;GET ANOTHER SYMBOL ITEM

;HERE TO SKIP OVER AN ITEM

SKPITM: JUMPE	CR,GETSY1	;RETURN IF NONE LEFT
	PUSHJ	P,GETWD		;GET A WORD
	SOJA	CR,SKPITM	;THROW IT AWAY, UNTIL COUNTED OUT

;HERE TO SAVE AN EXTERNAL, IF THAT IS WHAT IT IS

SAVEXT: CAIE	B,14	 	;IS IT REALLY AN EXTERNAL?
	SOJA	CR,SYMLP1	;NO - IGNORE IT
	JUMPLE	CH,EXTERR	;JUMP IF NO MORE ROOM
	SETZ	A,	 	;CLEAR POINTER INTO EXTERNAL TABLE
SAVEX1: SKIPN	EXNAM(A) 	;IS THERE AN ENTRY HERE?
	SOJA	A,SAVEX4	;NO - SAVE HERE
	MOVE	B,EXVAL(A)	;YES - GET LOCATION OF THAT EXTERNAL
	CAMLE	WD,B	 	;IS IT BIGGER THAN THE NEW ONE?
	AOJA	A,SAVEX1	;NO - LOOP

SAVEX2:	EXCH	WD,EXVAL(A)	;SWAP PREVIOUS ONE WITH THIS ONE
	EXCH	CT,EXNAM(A)	;..
	SKIPE	EXNAM+1(A)	;ANY MORE EXTERNALS?
	AOJA	A,SAVEX2	;YES - SWAP SOME MORE
				;NO - SAVE LAST ONE HERE

SAVEX4: MOVEM	WD,EXVAL+1(A)	;FOUND OPEN SPOT
	MOVEM	CT,EXNAM+1(A)	;SAVE HERE
	SOJ	CR,		;SKIP OVER ONE OF HEADER WORDS
	SOJA	CH,SYMLP1	;DE-BUMP COUNT AND CONTINUE

EXTERR: SKIPL	EXTERS		;OUTPUT MESSAGE ONLY ONCE
	OUTSTR	[ASCIZ /%TOO MANY EXTERNALS - SOME WILL BE IGNORED
/]
	SETOM	EXTERS		;SET IGNORE FLAG
	SOJA	CR,SYMLP1	;AND IGNORE THIS ONE

;SUBROUTINE TO SAVE AN ENTRY OR INTERN IN THE INTERNAL TABLE
;ENTRY'S WILL GET PURGED LATER, AND INTERNS OUTPUT

SAVINT:	SOSG	A,INPTR 	;BUMP AND GET INTERNAL POINTER
	JRST	INTERR		;ERROR IF TABLE FULL
	MOVEM	CT,INNAME-1(A)	;SAVE NAME OF INTERNAL
	POPJ	P,		;AND RETURN

INTERR: JUMPL	A,CPOPJ		;OUTPUT MESSAGE ONLY ONCE
	OUTSTR	[ASCIZ /%TOO MANY INTERNALS - SOME WILL BE IGNORED
/]
	POPJ	P,		;AND IGNORE THIS ONE

;HERE TO SAVE CALLI OPDEF

SAVDEF: LDB	A,[POINT 9,WD,8];GET OP-CODE
	CAIE	A,47		;IS IT A CALLI
	SOJA	CR,SYMLP1	;NO - IGNORE IT
	MOVEM	CT,CALNAM(F)	;SAVE CALLI NAME
	HRRM	WD,CALVAL(F)	;AND VALUE
	SOJ	CR,
	AOJA	F,SYMLP1	;GET ANOTHER ONE

;SUBROUTINE TO PUT SYMBOL ON TABLE
;ENTER WITH TABLE ADR IN SY, SYMBOL ADR IN WD, NAME IN RE

SAVSYM:
IFN DEBUG,<
	AOS	$SYSUR		;SYMBOLS FOUND
>
	SKIPN	D,(SY)		;IS SLOT OPEN?
	JRST	SAVSY2		;YES - SAVE HERE
	CAML	D,WD		;IS ENTRY SMALLER THAN NEW ONE?
	JRST	SAVSYB		;YES - GO ELSEWHERE
SAVSYA: ADDI	SY,2		;POINT TO NEXT ENTRY
	SKIPN	D,(SY)		;IS IT OPEN?
	JRST	SAVSY2		;YES - SAVE HERE
	CAMG	D,WD		;ENTRY STILL LARGER?
	JRST	SAVSYA		;YES - LOOK AT NEXT ONE DOWN

SAVSA1:	EXCH	WD,(SY)		;SWAP SYMBOL VALUES
	EXCH	CT,1(SY)	;  AND NAMES
IFN DEBUG,<
	AOS	$SYSUM		;SYMBOLS SHUFFLED
>
	ADDI	SY,2		;POINT TWO UP
	JUMPN	WD,SAVSA1	;LOOP IF STILL HAVE AN ENTRY
	POPJ	P,		;OTHERWISE, DONE

SAVSYB:	SUBI	SY,2		;DROP BACK TWO
	CAMGE	SY,SYMBAS	;PAST START OF TABLE?
	AOJA	SY,SAVSB1	;YES - MAKE HOLE HERE
	SKIPN	D,(SY)		;IS IT OPEN?
	JRST	SAVSY2		;YES - SAVE HERE
	CAML	D,WD		;ENTRY STILL LARGER?
	JRST	SAVSYB		;YES - LOOK AT NEXT ONE DOWN
	AOJ	SY,		;NO - MAKE HOLE AT NEXT ENTRY UP
SAVSB1:	AOJA	SY,SAVSA1	;AND SHUFFLE

SAVSY2: MOVEM	WD,(SY)		;SAVE VALUE
	MOVEM	CT,1(SY)	;AND NAME
	POPJ	P,		;AND RETURN

;SUBROUTINE TO COLLAPSE SYMBOL TABLE AND SET UP FOR SEARCHER

COLAPS: MOVE	A,SYMBAS	;GET START OF TABLE
	MOVE	B,A		;HERE, TOO
COLPS1: SKIPN	C,(B)		;GET NEXT WORD - ZERO?
	JRST	COLPS2		;YES - IGNORE IT
	JUMPG	C,.+2		;ADDRESS ZERO?
	SETZ	C,		;YES - TAKE AWAY ITS DISGUISE
	MOVE	D,1(B)		;GET SYMBOL NAME
	DMOVEM	C,(A)		;SAVE THEM BOTH
	ADDI	A,2		;POINT TO NEXT FREE AREA
COLPS2: ADDI	B,2		;POINT TO NEXT ONE
	CAMG	B,SYSIZ2	;OR IS IT DONE?
	JRST	COLPS1		;OF COURSE NOT - LOOP
	HRLZI	B,200000	;DONE - GET A BIG NUMBER
	MOVEM	B,(A)		;SAVE IT AT END OF TABLE
	SUBI	A,2		;POINT BACK WITHIN TABLE
	MOVEM	A,SYMTOP	;SAVE AS TOP OF TABLE
	SUB	A,SYMBAS	;MAKE RELATIVE
	JUMPLE	A,.+2		;SKIP IF NO SYMBOLS
	JFFO	A,.+2		;SEE HOW BIG TABLE IS
	TRZA	B,-1		;EMPTY - SET POWER TO ONE
	MOVNI	B,-43(B)	;SUBTRACT FROM 36
	MOVEI	A,1		;SET FOR SHIFT
	LSH	A,(B)		;GET POWER OF TWO LESS THAN SIZE
	MOVEM	A,SYSIZ2	;SAVE FOR SEARCHER
	MOVE	A,SYMTOP	;GET TOP OF TABLE
	ADDI	A,100		;ADD 100 WORDS PADDING
	CORE	A,		;GIVE BACK UNUSED CORE
	  JRST	.-1		;IT'S GOTTA WORK
	POPJ	P,		;THAT'S ALL

;SUBROUTINE TO POINT TO SYMBOL AT ADDRESS GREATER THAN (LN)
;USED BY RELOC AND UN-RELOC ROUTINES TO MAKE SURE ALL SYMBOLS COME OUT

FUDSYM: MOVE	SP,SYMBAS	;POINT TO START OF SYMBOLS
FUDSY1: CAMGE	LN,(SP) 	;THIS LINE AFTER LATEST SYMBOL?
	POPJ	P,		;NO - DONE
	AOJ	SP,		;YES - BUMP POINTER
	AOJA	SP,FUDSY1	;  TWICE, AND LOOP

;HERE TO SAVE STARTING ADDRESS

STRADR: PUSHJ	P,GETWD 	;GET STARTING ADDRESS
	MOVEM	WD,STADR	;SAVE IT
	POPJ	P,		;DONE WITH SYMBOL SETUP

;SUBROUTINE TO HANDLE PROGRAM NAME ITEM - OUTPUTS TITLE AND ACS

INAME:	JSA	B,PUTASK	;OUTPUT TITLE LINE
	ASCIZ	/
TITLE	/
	PUSHJ	P,GRAD50	;GET AND CONVERT PROGRAM NAME
	MOVE	B,[POINT 6,WD]	;POINT TO SIXBIT IN WD
	PUSHJ	P,PUTSIX	;OUTPUT NAME
	CAIGE	CR,2		;GOT A SECOND WORD?
	JRST	INAMEA		;NO - END OF LINE
	PUSHJ	P,GETWD		;YES - GET WORD FOR TRANSLATOR TYPE
	LDB	WD,[POINT 12,WD,17] ;GET TYPE
	JSA	B,PUTASK	;ELSE OUTPUT TYPE OF TRANSLATOR
	ASCIZ	/ - TRANSLATED BY /
	MOVE	B,TRNTAB(WD)	;ELSE POINT TO TYPE
	PUSHJ	P,PUTASC	;AND OUTPUT IT
INAMEA:	PUSHJ	P,CRLF
	SKIPN	EXNAM		;GOT ANY EXTERNALS?
	JRST	INAME0		;NOPE

	SETZ	WD,		;SET TO MOVE THROUGH EXTERNAL TABLE
	MOVE	A,EXNAM		;GET FIRST SYMBOL NAME
INAMX0:	JSA	B,PUTASK	;OUTPUT EXTERNAL HEADER
	ASCIZ	/
EXTERN	/
	TLOA	WD,-6		;SET UP -6 IN LH, AND SKIP
INAMEX:	PUSHJ	P,COMMA		;SEPARATE WITH A COMMA
	PUSHJ	P,PUTSXA	;OUTPUT NEXT EXTERNAL
	SKIPN	A,EXNAM+1(WD)	;IS THERE ANOTHER ONE?
	JRST	INMINT		;NO - DONE
	AOBJN	WD,INAMEX	;YES - CONTINUE UNTIL SIX ON THIS LINE
	JRST	INAMX0		;THEN START A NEW LINE

INMINT:	SKIPGE	INPTR		;IS INTERNAL PTR OUT OF RANGE?
	SETZM	INPTR		;YES - GET IT BACK, THEN
	HRLZ	WD,INPTR	;GET VALUE OF INPTR
	SUB	WD,[101,,0]	;MINUS STARTING VALUE
	JUMPGE	WD,INAME0	;JUMP IF NO INTERNALS IN TABLE
	HRR	WD,INPTR	;FINISH MAKING THE AOBJP POINTER
	PUSHJ	P,CRLF

INMIN1:	JSA	B,PUTASK	;SET THEM UP
	ASCIZ	/
INTERN	/
	SKIPA	EX,[6]		;DO SIX PER LINE
INMIN2:	SOJLE	EX,INMIN1	;START NEW LINE IF SIX ON THIS ONE
INMIN3:	SKIPN	A,INNAME-1(WD)	;GET SYMBOL NAME - DELETED ENTRY?
	JRST	[AOBJN WD,INMIN3;YES - SKIP IT - DONE?
		 JRST  INAME0]	;YES - ENOUGH, ALREADY
	CAIE	EX,6		;START OF A NEW LINE?
	PUSHJ	P,COMMA 	;NO - SEPARATE THIS ONE FROM LAST ONE
	PUSHJ	P,PUTSXA	;OUTPUT THE NAME OF THE LIVE ENTRY
	AOBJN	WD,INMIN2	;LOOP THROUGH INTERNALS

INAME0:	JSA	B,PUTASK	;OUTPUT TITLE LINE
	ASCIZ	/

;ACS

/
	MOVEI	D,17		;SET TO LOOP THROUGH ACS
INAME1: MOVNI	SY,-17(D)	;SET UP FOR OUTPUT
	HRRZ	A,ACTAB(SY)	;GET RH OF AC NAME
	CAIN	A,1		;HAS THIS AC BEEN DEFINED?
	JRST	INAME2		;NO - DON'T OUTPUT IT
	MOVE	B,[POINT 6,ACTAB(SY)] ;POINT TO THIS AC NAME
	PUSHJ	P,PUTSIX	;OUTPUT IT
	PUSHJ	P,EQUALS	;GIVE EQUALS
	PUSHJ	P,PUTOCT	;OUTPUT RH AS OCTAL
	PUSHJ	P,CRLF		;NEW LINE
INAME2:	SOJGE	D,INAME1	;GET ANOTHER AC

	SETZ	EX,		;CLEAR EXTERNAL POINTER
	SKIPN	EXVAL(EX)	;SKIP ZERO-VALUED EXTERNALS
	AOJA	EX,.-1		;  (WHICH ARE DECLARED BUT NOT USED)

	SETZM	INNAME		;CLEAR INTERNAL TABLE TO HOLD STRING ADDRESSES
	MOVE	A,[INNAME,,INNAME+1]
	BLT	A,INNAME+77
	PJRST	CRLF		;THAT'S THE INAME OF THE IGAME

;HERE IF WORKING IN LOWSEG, TO SEE IF HOOKS NEED RESTORING

ICODE0: TRZN	F,HSG		;ALREADY IN LOWSEG?
	JRST	ICODE1		;YES - BACK TO FLOW
	MOVEM	LN,SAVLNH	;NO - SAVE HISEG COUNTER
	EXCH	SP,SAVSP	;RESTORE SYMBOL POINTER
	MOVE	LN,SAVLN1	;AND PROGRAM LINE COUNTER
	PUSHJ	P,RELOUT	;OUTPUT A RELOC
	JRST	ICODE1		;BACK TO FLOW

ICODE2:	HRRZ	LN,WD		;SET UP LINE NUMBER
	PUSHJ	P,RELOUT	;RELOCATE
	PUSHJ	P,FUDSYM	;MAKE THE SYMBOL POINTER RIGHT
	JRST	HDLLBL		;THEN BACK TO FLOW

RELOUT:	JSA	B,PUTASK	;GET BACK TO LOW SEGMENT
	ASCIZ	/
	RELOC	/
	HRRZ	SY,WD		;GET START OF THIS BLOCK
	PUSHJ	P,PUTOCT	;OUTPUT AS RELOC ADDRESS
	PUSHJ	P,CRLF		;END WITH A COUPLE OF LINES
	PJRST	CRLF

;SUBROUTINE TO HANDLE CODE ITEMS (THE MEAT OF THE THING)
;ENTER WITH RE AND CR SET UP.

ICODE:	PUSHJ	P,GETWD		;GET STARTING ADDRESS FOR THIS BLOCK
	SETZ	CT,		;CLEAR CHARACTER COUNT
	TLNN	RE,200000	;IS ADDRESS RELOCATABLE?
	JRST	HDLABS		;NO - SET UP ABSOLUTE-TYPE RELOC (RTN TO HDLOP)
	TRZE	F,ABS		;YES - WAS ADDRESS OF PREVIOUS BLOCK?
	PUSHJ	P,HDLRLC	;YES - OUTPUT A RELOC, THEN
	LSH	RE,2		;SHIFT OUT RELOCATION BITS FOR ADR WORD
	SOJ	CR,		;DRESS UP WORDCOUNT FOR SAME
	CAIGE	WD,400000	;GOT HISEG CODE?
	JRST	ICODE0		;NO - LOOK ELSEWHERE
	TRON	F,HSG		;YES - ALREADY WORKING IN HISEG?
	PUSHJ	P,SETHI 	;NO - SAVE LOWSEG HOOKS
ICODE1:	CAMGE	WD,LN		;THIS BLOCK EARLIER THAN PREVIOUS ONE?
	JRST	ICODE2		;YES - RELOCATE TO IT (RETURN TO HDLLBL)
	CAME	WD,LN		;CONTINUING IN SEQUENCE?
	PUSHJ	P,HDLBLK	;NO - GOT A BLOCK TO SET UP
HDLLBL: PUSHJ	P,GETWD 	;GET A WORD FROM THE FILE
	TRNE	F,ABS		;IS CODE ABSOLUTE?
	JRST	HDLOP		;YES - NO LABELS HERE
	CAMN	LN,(SP) 	;WANT A LABEL ON THIS LINE?
	PUSHJ	P,HDLLAB	;YES - DO IT
HDLOP:	TRNE	F,OAS		;OUTPUTTING AN ASCII STRING?
	JRST	HDLAS1		;YES - CONTINUE OUTPUTTING, THEN

	PUSHJ	P,TAB		;TAB OVER
	TLNE	RE,400000	;IS THE LEFT HALF RELOCATABLE?
	JRST	HDLDTA		;YES - MUST BE DATA

	SETZ	A,		;CLEAR POINTER INTO STRING ADDRESSES
	SKIPN	B,INNAME(A)	;LAST ENTRY IN TABLE?
	JRST	HDLOP1		;YES - OUT OF LOOP
	CAMN	LN,B		;IS THIS START OF A STRING?
	JRST	HDLASC		;YES - OUTPUT AS ASCII, THEN
	AOJA	A,.-4		;NO CHECK NEXT ONE

HDLOP1: LDB	B,[POINT 9,WD,8];GET OP-CODE
	HRRZ	SY,WD		;AND STORE LOCATION FIELD IN SY
	CAIN	B,51		;IS IT TTCALL?
	JRST	TTCHDL		;YES - GET TTCALL MNEMONIC
	CAIN	B,47		;IS IT CALLI?
	JRST	HDLCAL		;YES - WORK AT IT
HDLOPO: CAIL	B,40		;TOO SMALL,
	CAIL	B,700		;  OR TOO BIG FOR OP-CODE?
	JRST	HDLDTA		;YES - DO AS DATA
	LSH	B,1		;NO - MAKE ADDRESS OUT OF IT
	HRL	F,OPTABL-77(B)	;SET UP OP-CODE FLAGS
	TLNE	F,NOP		;IS THIS A NOOP CODE?
	JRST	HDLDTA		;YES - DO AS DATA
	ADDI	B,OPTABL-100	;POINT TO OP-CODE MNEMONIC ITSELF
	PUSHJ	P,PUTASC	;OUTPUT IT

HDLAC:	PUSHJ	P,TAB		;AND A TAB
	LDB	A,[POINT 4,WD,12];GET AC FIELD
	JUMPE	A,HDLIND	;NO OUTPUT IF ZERO
	MOVE	A,ACTAB(A)	;GET REAL NAME
	PUSHJ	P,PUTSXA	;OUTPUT AC
	PUSHJ	P,COMMA 	;AND SEPARATOR
HDLIND: TLNE	WD,20		;IS THE INDIRECT BIT ON?
	PUSHJ	P,AT		;YES - GIVE WITH AN @
	CAMN	LN,EXVAL(EX)	;DOES THIS LINE GET AN EXTERNAL?
	JRST	HDLEXT		;YES - PUT IT IN
	TLNN	RE,200000	;RELOCATE RIGHT HALF?
	JRST	HDLLOD		;NO - OUTPUT AS DATA OR AC
	PUSHJ	P,SYSRC		;LOOK IT UP
	JUMPL	B,HDLRLX	;OUTPUT RELATIVE IF NOT THERE - DOUBLE SKIP
	MOVE	A,1(A)		;GET SYMBOL NAME
	PUSHJ	P,PUTSXA	;OUTPUT IT

HDLINX:	LDB	C,[POINT 4,WD,17];GET INDEX FIELD
	JUMPE	C,HDLCMT	;SKIP IF NO INDEX FIELD
	PUSHJ	P,LPAREN	;OPEN PAREN
	MOVE	A,ACTAB(C)	;GET AC NAME
	PUSHJ	P,PUTSXA	;OUTPUT IT
	PUSHJ	P,RPAREN	;CLOSE PAREN
HDLCMT: SKIPE	COMENT		;WANT COMMENTS AT ALL?
	AOJA	LN,HDLLUP	;NO - SKIP ALL THIS STUFF
	PUSHJ	P,HDLLNM	;START COMMENT WITH LINE NUMBER

;HERE TO OUTPUT FILE WORD IN XWD FORMAT

HDLDTA:	HLRZ	SY,WD		;GET LEFT HALF
	JUMPE	SY,HDLDT1	;IF NO LH, JUST OUTPUT RH
	TRNE	F,CMT		;IS THIS PART OF THE COMMENT?
	JRST	HDLDT0
	JSA	B,PUTASK	;NO - OUTPUT XWD
	ASCIZ	/XWD/
	PUSHJ	P,TAB		;TAB OVER
HDLDT0:	TLNE	RE,400000	;RELOCATE LH,
	PUSHJ	P,PUTLBL	;YES - GIVE AS LABEL (SKIP RETURN)
	PUSHJ	P,PUTOCT	;OUTPUT AS VALUE OR MAYBE LABEL
	PUSHJ	P,COMMA 	;SPLIT THE WORD WITH A COMMA
HDLDT1:	HRRZ	SY,WD		;GET RIGHT HALF OF WORD
	TLNE	RE,200000	;RELOCATE RH?
	PUSHJ	P,PUTLBL	;YES - GIVE AS LABEL (SKIP RETURN)
	PUSHJ	P,PUTOCT	;NO - OUTPUT IT
	SKIPN	COMENT		;WANT COMMENTS AT ALL?
	PUSHJ	P,VERASC	;YES - OUTPUT IN ASCII OR SIXBIT
	AOJ	LN,		;BUMP ADDRESS COUNT

HDLLUP:	TRZ	F,CMT		;CLEAR COMMENT FLAG
	TRNN	F,OAS		;OUTPUTTING ASCII STRING?
	PUSHJ	P,CRLF		;NO - NEW LINE
HDLLP1: LSH	RE,2		;SHIFT IN NEW RELOCATION BITS
	SOJG	CR,HDLLBL	;LOOP IF MORE CODE WORDS TO WORK ON
	POPJ	P,		;AND RETURN

;HERE TO RELOCATE AT THE END OF A LOC BLOCK

HDLRLC:	MOVE	LN,SAVLN	;RESTORE COUNTER
	JSA	B,PUTASK	;RELOCATE
	ASCIZ	/	RELOC
/
	PJRST	CRLF		;GET A NEW LINE AND RETURN

;HERE TO OUTPUT LOCATION AS AN EXTERNAL

HDLEXT: MOVE	A,EXNAM(EX)	;GET EXTERNAL NAME
	PUSHJ	P,PUTSXA	;OUTPUT IT
	AOJA	EX,HDLINX	;BUMP POINTER AND BACK TO FLOW

;HERE TO OUTPUT LOCATION AS RELATIVE TO LAST LABEL LOOKED AT

HDLRLM: PUSH	P,[IEND1]	;FUDGE RETURN TO IEND1
	JRST	HDLREL
HDLRLX: PUSH	P,[HDLINX]	;FUDGE RETURN TO HDLINX
HDLREL:	
	CAMG	SY,(A)		;IS THIS SYMBOL LARGER THAN LAST PROBE?
	JRST	[CAMG A,SYMBAS	;NO - AT START OF SYMBOLS?
		 JRST HDLRL2	;YES - OUTPUT THIS ONE NEG-REL
		 SUBI A,2	;NO - POINT TO PREVIOUS SYMBOL
		 JRST .+1]	;AND CONTINUE
	MOVE	B,(A)		;GET ADDRESS OF SYMBOL
	CAIGE	SY,400000	;IS THIS A HISEG SYMBOL?
	JRST	HDLRL1		;NO - DO THIS FOR LOWSEG
	CAIL	B,400000	;IS SYMBOL IN THE HISEG?
	JRST	HDLRL3		;YES - CONTINUE
	ADDI	A,2		;NO - USE NEXT SYMBOL
	JRST	HDLRL2		;CONTINUE
	
HDLRL1:	CAIG	B,400000	;IS SYMBOL IN THE LOWSEG?
	JRST	HDLRL3		;YES - CONTINUE
	SUBI	A,2		;NO - USE PREVIOUS SYMBOL
HDLRL2:	SKIPA	D,["-"]		;GET A MINUS SIGN
HDLRL3:	MOVEI	D,"+"		;GET A PLUS SIGN
	SUB	SY,(A)		;FIND OFFSET FROM SYMBOL
	MOVE	A,1(A)		;GET NAME OF CLOSEST LABEL
	PUSHJ	P,PUTSXA	;OUTPUT IT
	MOVE	CH,D		;GET THE SIGN OF YOUR CHOICE BACK
	PUSHJ	P,PUTCHR	;OUTPUT IT
	MOVMS	SY		;GET MAGNITUDE OF OFFSET
	PJRST	PUTOCT		;OUTPUT IT AND RETURN

;SUBROUTINE TO OUTPUT RH OF SY AS MAYBE RELATIVE SYMBOL

PUTLBL: TRNE	F,CMT		;IN A COMMENT?
	POPJ	P,		;YES - DO AS DATA AFTER ALL
	AOS	(P)		 SKIP RETURN
	PUSHJ	P,SYSRC 	;LOOK SYMBOL UP
	JUMPL	B,HDLREL	;OUTPUT AS REATIVE ADDRESS IF NOT THERE
	MOVE	A,1(A)		;GET SYMBOL NAME
	PJRST	PUTSXA		;OUTPUT IT

;HERE IF LOCATION FIELD IS NON-RELOCATABLE - MAY BE AC OR DATA

HDLLOD: JUMPE	SY,HDLINX	;DON'T OUTPUT ZERO LOCATION VALUE
	TLNE	F,LOC		;DOES INSTRUCTION TAKE A LOCATION
	CAILE	SY,17		;AND IS LOCATION WITHIN AC RANGE?
	JRST	HDLLD1		;NO - DO AS DATA, THEN
	MOVE	A,ACTAB(SY)	;BOTH - GET AC NAME
	PUSHJ	P,PUTSXA	;OUTPUT IT
	JRST	HDLINX		;DO INDEX FIELD AND LOOP

HDLLD1: CAIGE	SY,770000	;IS NUMBER VERY BIG?
	JRST	HDLLD2		;NO - DO IT AS IS
	PUSHJ	P,DASH		;YES - FLAG AS NEGATIVE
	MOVNS	SY		;AND KICK OUT THE REVERSE
HDLLD2: PUSHJ	P,PUTOCT	;OUTPUT RIGHT HALF AS DATA
	JRST	HDLINX		;DO INDEX FIELD AND LOOP

;HERE TO HANDLE TTCALL OP-CODES

TTCHDL: LDB	A,[POINT 4,WD,12];GET AC FIELD
	CAIN	A,3		;IS IT AN OUTSTR?
	PUSHJ	P,TTCSTG	;YES - SAVE ADDRESS OF STRING
	MOVE	A,TTTABL(A)	;GET TTCALL MNEMONIC
	PUSHJ	P,PUTSXA	;OUTPUT OP-CODE
	PUSHJ	P,TAB		;TAB OVER
	HRLI	F,11		;FUDGE IN OP-CODE FLAGS
	JRST	HDLIND		;PICK UP THE FLOW AGAIN

;SUBROUTINE TO STORE ADDRESS OF AN ASCII STRING (IN INTERNAL TABLE)
;WILL IGNORE IF DUPLICATE, STORE IN USED SLOT IF POSSIBLE

TTCSTG: SETZ	CH,		;CLEAR POINTER
TTCSG1: CAMN	SY,INNAME(CH)	;IS THIS THE SYMBOL?
	POPJ	P,		;YES - SKIP IT
	SKIPLE	INNAME(CH)	;NO - IS SLOT FREE
	AOJA	CH,TTCSG1	;NO - LOOK AT NEXT SLOT
	MOVEM	SY,INNAME(CH)	;YES - SAVE HERE
	POPJ	P,

;HERE TO OUTPUT A CALLI AS WHATEVER ITS NAME IS

HDLCAL: SETZ	A,		;POINT TO START OF TABLE
HDLCA1:	SKIPN	CALNAM(A)	;END OF TABLE, AND NOT FOUND?
	JRST	HDLOPO		;YES - OUTPUT AS CALLI
	CAME	SY,CALVAL(A)	;IS THIS THE CALLI?
	AOJA	A,HDLCA1	;NO - LOOP
HDLCA2: MOVE	A,CALNAM(A)	;YES - GET NAME
	SETZ	SY,		;DON'T DO LOCATION FIELD
	PUSHJ	P,PUTSXA	;OUTPUT NAME IN SIXBIT
	JRST	HDLAC		;OUTPUT PSUEDO-OP AND CONTINUE

;SUBROUTINE TO OUTPUT A LABEL AND POINT TO NEXT ONE

HDLLAB:	MOVE	A,1(SP) 	;GET LABEL NAME
	ADDI	SP,2		;POINT TO NEXT LABEL ADDRESS
	PUSHJ	P,PUTSXA	;OUTPUT IT
	PUSHJ	P,COLON 	;AND DELIMITER
	CAME	LN,(SP) 	;(ANOTHER) LABEL ON THIS LINE?
	POPJ	P,		;NO - RETURN
	PUSHJ	P,CRLF		;YES - PUT IT ON A NEW LINE
	JRST	HDLLAB		;WORK ON THE NEXT ONE

;HERE TO SET UP A BLOCK

HDLBLK: CAMN	LN,(SP) 	;WANT TO START WITH A LABEL?
	PUSHJ	P,HDLLAB	;YES - OUTPUT IT
HDLBK0: CAMG	WD,(SP) 	;IS THERE A SYMBOL INSIDE THE BLOCK?
	JRST	HDLBK1		;NO - OUTPUT LAST BLOCK
	MOVE	SY,(SP) 	;YES - GET LABEL LOCATION
	SUB	SY,LN		;MINUS PRESENT ADDRESS
	PUSHJ	P,HDLBKO	;OUTPUT THIS BLOCK
	PUSHJ	P,HDLLAB	;OUTPUT LABEL
	JRST	HDLBK0		;CHECK NEXT LABEL

HDLBK1:	MOVE	SY,WD		;START OF (LAST) BLOCK
	SUB	SY,LN		;MINUS PRESENT LOCATION

HDLBKO:	JSA	B,PUTASK	;OUTPUT PSUEDO-OP
	ASCIZ	/	BLOCK	/
	PUSHJ	P,PUTOCT	;TELL HOW BIG THE BLOCK IS
	ADD	LN,SY		;BUMP PRESENT LOCATION
	PJRST	CRLF		;NEW LINE AND RETURN

;SUBROUTINE TO SET UP CODE AT AN ABSOLUTE LOCATION (LIKE 137)

HDLABS:	CAMN	LN,WD		;DOES THIS BLOCK OF CODE FOLLOW LAST ONE?
	JRST	HDLLP1		;YES - JUST CONTINUE OUTPUTTING, THEN
	JSA	B,PUTASK	;ELSE RELOCATE ABSOLUTELY
	ASCIZ	/
	LOC	/
	MOVE	SY,WD		;GET STARTING ADDRESS
	PUSHJ	P,PUTOCT	;OUTPUT IT
	TRO	F,ABS		;SET FLAG FOR ABSOLUTE CODE
	MOVEM	LN,SAVLN	;SAVE WORD POINTER FOR LATER
	MOVE	LN,SY		;SET UP ADDRESS OF ABSOLUTE BLOCK
	JRST	HDLLUP		;GET NEXT WORD

;SUBROUTINE TO SHUT IT OFF WHEN HIT AN END ITEM

IEND:	PUSHJ	P,GETWD 	;GET ADDRESS OF SEGMENT BREAK
	CAIL	WD,400000	;IS THIS HISEG BREAK?
	JRST	IENDHI		;YES - HANDLE SEPARATELY
	TRZN	F,IER		;NEED TO RELOC TO LOWSEG?
	JRST	IENDA		;NO
	JSA	B,PUTASK	;YES - RELOCATE
	ASCIZ	/
	RELOC

/
IENDA:	CAME	WD,LN		;NO - IS THERE A BLOCK YET TO BE HANDLED?
	PUSHJ	P,HDLBLK	;YES - OUTPUT IT (OR THEM)
IEND0:	JSA	B,PUTASK
	ASCIZ	/
	END	/
	SKIPGE	SY,STADR	;GET STARTING ADDRESS - ANY?
	JRST	IEND1		;NO - SKIP THIS
	PUSHJ	P,SYSRC 	;LOOK UP ITS LABEL
	JUMPL	B,HDLRLM	;NOT FOUND - DO RELATIVE (RETURNS TO IEND1)
	MOVE	A,1(A)		;GET NAME
	PUSHJ	P,PUTSXA	;OUTPUT IT
IEND1:	PUSHJ	P,CRLF		;LAST LINE
	CLOSE	OUT,		;SHUT IT OFF
	JRST	REENT		;SEE IF HE WANTS ANOTHER FILE

;HERE TO CHECK HISEG BREAK

;HISEG CAN END WITH A BLOCK OF ZEROS (WHY, I DON'T KNOW)
;HOWEVER, AT THIS POINT, IF IN LOWSEG, WILL NEED TO DO
;A RELOC TO GET BACK TO HIGH, OUTPUT THE BLOCK, AND THEN ANOTHER
;RELOC TO GET BACK TO LOW. THE HISEG BLOCK WILL BE HORRIBLY
;OUT OF PLACE. A TEMPORARY SOLUTION IS TO IGNORE IT.

IENDHI:	CAIL	LN,400000	;WORKING IN HISEG NOW?
	JRST	IENHI1		;YES - ALREADY SET UP
;	EXCH	LN,SAVLNH	;NO - GET OLD HISEG ADDRESS
;	EXCH	SP,SAVSP
;	CAME	LN,WD		;ANY UN-DISASSEMBLED SPACE IN HISEG?
;	PUSHJ	P,HDLBLK	;YES - BLOCK IT OUT
;	MOVE	LN,SAVLNH	;RESTORE LOWSEG POINTER
;	MOVE	SP,SAVSP
	JRST	IEND		;AND GO CHECK LOWSEG

IENHI1:	
;	CAME	LN,WD		;ANY UN-DISASSEMBLED SPACE IN HISEG?
;	PUSHJ	P,HDLBLK	;YES - BLOCK IT OUT
	MOVE	LN,SAVLN1	;RESTORE LOWSEG POINTER
	MOVE	SP,SAVSP	;SAME WITH LOWSEG SYMBOL POINTER
	TRO	F,IER		;SET FLAG FOR NEEDING RELOC
	JRST	IEND		;AND GO CHECK LOWSEG

;SUBROUTINE TO SET UP HISEG STUFF

SETHI:	MOVEM	SP,SAVSP	;SAVE SYMBOL TABLE POINTER
	MOVEM	LN,SAVLN1	;AND PROGRAM COUNTER
	MOVE	LN,SAVLNH	;GET HISEG STARTING ADDRESS
	PUSHJ	P,RELOUT	;OUTPUT THE RELOC

SETHI1: MOVE	A,(SP)		;GET SYMBOL ADDRESS
	CAML	A,LN		;IS IT IN LOWSEG?
	POPJ	P,		;NO - ALL SET
	ADDI	SP,2		;POINT TO NEXT ONE
	JRST	SETHI1		;AND LOOK AT IT

;SUBROUTINE TO SET UP ENTRY POINTS

IENTRY: JUMPE	CR,CPOPJ	;RETURN IF NOTHING TO DO
	JSA	B,PUTASK	;START ASSEMBLER OP
	ASCIZ	/ENTRY	/
	CAIGE	CR,6		;ARE THERE FEWER THAN 6 LEFT?
	SKIPA	EX,CR		;YES - DO ONLY THAT MANY, THEN
	MOVEI	EX,6		;ELSE DO SIX PER LINE
	SUB	CR,EX		;SUBTRACT OFF NUMBER TO BE DONE
	CAIA			;SKIP COMMA FIRST TIME
IENTR1: PUSHJ	P,COMMA 	;SEPARATE ENTRY POINTS
	PUSHJ	P,GRAD50	;GET AN ENTRY POINT

	MOVEI	A,100		;SET TO LOOK THROUGH INTERNAL TABLE
	CAME	WD,INNAME(A)	;IS THIS THE ONE?
	SOJGE	A,.-1		;NO - KEEP LOOKING
	JUMPL	A,.+2		;FOUND IT?
	SETZM	INNAME(A)	;YES - ERASE IT

	MOVE	A,WD		;SET UP FOR
	PUSHJ	P,PUTSXA	;  OUTPUT
	SOJG	EX,IENTR1	;LOOP ON ENTRY POINTS
	MOVEI	D,4		;RESTORE D - BASHED IN GRAD50
	PUSHJ	P,CRLF		;GET A NEW LINE
	JRST	IENTRY		;LOOP UNTIL DONE

;SUBROUTINE TO SET UP FOR HISEG CODE

IHIGH:	JSA	B,PUTASK	;SWITCH SEGMENTS AND FALL INTO BELOW
	ASCIZ	/
	TWOSEG

/
	PUSHJ	P,GETWD 	;GET HISEG STARTING ADDRESS
	HRRM	WD,SAVLNH	;SAVE IT
	SOJG	CR,ISKIP1	;DECREMENT COUNT, AND FALL BELOW

;SUBROUTINE TO SKIP AN EXPENDABLE ENTRY (SYMBOL, START ADDRESS)

ISKIP:	JUMPE	CR,CPOPJ	;RETURN IF COUNTED OUT
ISKIP1: PUSHJ	P,GETWD 	;GET A WORD
	SOJG	CR,ISKIP1	;LOOP UNTIL DONE
	POPJ	P,		;THEN RETURN

;SUBROUTINE TO CONVERT RADIX 50 INTO SIXBIT (GRAD50 GETS THE WORD FIRST)
;INPUT IN WD; USES B C D; RETURNS SYMBOL IN A, CODE IN B

GRAD50: PUSHJ	P,GETWD 	;GET A WORD IN WD

RAD50:	SETZB	D,LN		;ZERO TO GET CODE BITS AND SIXBIT
	MOVE	A,WD		;SET UP FOR BASHING
	TLZ	A,740000	;CLEAN OUT CODE BITS
	ROTC	LN,4		;PUT CODE BITS INTO AC LN (NEXT TO WD)
CONV50: IDIVI	A,50		;UNPACK CHAR. INTO AC B
	SETZ	C,		;ZERO TO GET CHAR. NO.
	LSHC	B,-2		;CHAR. MOD 4
	ROT	C,2		;IN PROPER PLACE
	EXCH	B,C		;SO FINAL SHIFT WORKS
	MOVE	C,TAB650(C)	;GET RIGHT WORD
	AOJ	B,		;ADD ONE TO INDEX OF CHAR.
	IMULI	B,6		;CALCULATE AMOUNT OF SHIFT
	ROT	C,(B)		;ROTATE SIXBIT CHAR. INTO POSITION
	LSHC	C,-6		;APPEND CHAR. TO SIXBIT SYMBOL
	JUMPN	A,CONV50	;LOOP FOR MORE OF SYMBOL
	MOVE	WD,D		;GET SIXBIT SYMBOL INTO WD
	MOVE	B,LN		;SET UP CODE BITS
	POPJ	P,		;RETURN

TAB650: BYTE (6) 00,20,21,22	;BLANK,0-2
	BYTE (6) 23,24,25,26	;3-6
	BYTE (6) 27,30,31,41	;7-9,A
	BYTE (6) 42,43,44,45	;B-E
	BYTE (6) 46,47,50,51	;F-I
	BYTE (6) 52,53,54,55	;J-M
	BYTE (6) 56,57,60,61	;N-Q
	BYTE (6) 62,63,64,65	;R-U
	BYTE (6) 66,67,70,71	;V-Y
	BYTE (6) 72,16,04,05	;Z,.,$,%

;SUBROUTINE TO READ A WORD FROM THE FILE; GET INPUT IF NEED BE

GETWD:	SOSGE	INBUF1+2	;BUFFER EMPTY?
	JRST	GETIT1		;YES - GET A NEW ONE
	ILDB	WD,INBUF1+1	;GET A WORD
	POPJ	P,
GETIT1:	IN	IN,		;GET A BUFFERFUL
	  JRST GETWD		;NOW GET THE WORD
	POP	P,A		;DO A DOUBLE RETURN
	POPJ	P,

;SUBROUTINE TO OUTPUT AN EQUAL SIGN (FOR OTHERS, SEE DISCOM)

EQUALS:	MOVEI	CH,"="
	PJRST	PUTCHR

;HERE IF ITEM NUMBER IS FLAKY

FILERR: OUTSTR	[ASCIZ /ARE YOU SURE THIS IS A .REL FILE?
/]
	EXIT

;DISPATCH TABLE FOR ITEM NUMBERS

ITMTBL: Z
	ICODE			;CODE AND DATA
	ISKIP			;SYMBOL TABLE - IGNORED
	IHIGH			;HISEG ENTRY
	IENTRY			;ENTRY POINTS
	IEND			;END ITEM - SIGNAL TO QUIT
	INAME			;PROGRAM TITLE
	ISKIP			;START ADDRESS - DONE IN PASS 1
	ISKIP			;?
	ISKIP			;?

;CALLI, EXTERNAL, AND INTERNAL TABLES - FILLED IN FROM SYMBOL ITEMS

CALNAM: BLOCK	100
CALVAL: BLOCK	100
EXNAM:	BLOCK	400
EXVAL:	BLOCK	400
INPTR:	101
INNAME:	BLOCK	400
TABEND==.-1			;END OF THESE TABLES, FOR BLT

;DATA

ACTAB:	XWD	200000,1	;SET UP DEFAULT AC NAMES
	XWD	210000,1	;RH TELLS IF DEFINITION HAS BEEN SET UP
	XWD	220000,1
	XWD	230000,1
	XWD	240000,1
	XWD	250000,1
	XWD	260000,1
	XWD	270000,1
	XWD	212000,1
	XWD	212100,1
	XWD	212200,1
	XWD	212300,1
	XWD	212400,1
	XWD	212500,1
	XWD	212600,1
	XWD	212700,1

ACREST:	XWD	200000,1	;FOR RESTORING DEFAULT AC NAMES
	XWD	210000,1	;ON RESTART OF PROGRAM
	XWD	220000,1
	XWD	230000,1
	XWD	240000,1
	XWD	250000,1
	XWD	260000,1
	XWD	270000,1
	XWD	212000,1
	XWD	212100,1
	XWD	212200,1
	XWD	212300,1
	XWD	212400,1
	XWD	212500,1
	XWD	212600,1
	XWD	212700,1

;TABLE OF TRANSLATOR NAMES, FROM 2ND WORD OF NAME BLOCK

TRNTAB:	[ASCIZ	/(UNKNOWN)/]
	[ASCIZ	/F40/]
	[ASCIZ	/COBOL/]
	[ASCIZ	/ALGOL-60/]
	[ASCIZ	/NELIAC/]
	[ASCIZ	.PL/1.]
	[ASCIZ	/BLISS-10/]
	[ASCIZ	/SAIL/]
	[ASCIZ	/FORTRAN-10/]
	[ASCIZ	/MACRO/]
	[ASCIZ	/FAIL/]
	[ASCIZ	/BCPL/]
	[ASCIZ	/MIDAS/]
	[ASCIZ	/SIMULA/]

;DATA

SYMBAS: Z
SYMTOP: Z			;TOP OF SYMBOL TABLE
SYMPTR: Z			;PASS 2 POINTER INTO SYMBOL TABLE
SYSIZ2:	Z			;POINTER TO CENTER OF SYMBOL TABLE
STADR:	-1			;STARTING ADDRESS OF PROGRAM
SAVLN:	Z			;SAVED PROGRAM COUNTER (USED DURING HDLABS)
SAVLN1: Z			;SAME, FOR HISEG HANDLING
SAVLNH: Z			;SAVED HISEG COUNTER
SAVSP:	Z			;SAVED INDEX TO SYMBOL TABLE
COUNT:	Z			;NUMBER OF WORDS FOR ITEM

;THIS IS THE END OF DISREL
     c
wj$