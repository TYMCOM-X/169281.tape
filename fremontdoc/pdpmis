^^
.FLAG CAPIT
.PAPER SIZE 60,79
.NOFILL.NOJUST
.LEFT MARGIN 7
  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 $$$$                        $$$$
$$$$                          $$$$
$$$$                          $$$$
$$$$$                        $$$$$  TYMCOM-X MISCELLANEOUS DOCUMENTS
$$$$$$                      $$$$$$
$$$$$$                      $$$$$$  OPERATIONS MINI-MANUAL _#00
$$$$$$                      $$$$$$
$$$$$$$                    $$$$$$$
$$$$$$$                    $$$$$$$
$$$$$$$$                  $$$$$$$$
$$$$$$$$                  $$$$$$$$
$$$$$$$$$                $$$$$$$$$
$$$$$$$$$                $$$$$$$$$
$$$$$$$$$$::::::::::::::$$$$$$$$$$
$$$$$$$$$$::::::::::::::$$$$$$$$$$
$$$$$$$$$$$::::::::::::$$$$$$$$$$$
$$$$$$$$$$$::::::::::::$$$$$$$$$$$
$$$$$$$$$$$$::::::::::$$$$$$$$$$$$
$$$$$$$$$$$$::::::::::$$$$$$$$$$$$
$$$$$$$$$$$$$::::::::$$$$$$$$$$$$$
$$$$$$$$$$$$$::::::::$$$$$$$$$$$$$
$$$$$$$$$$$$$$::::::$$$$$$$$$$$$$$
$$$$$$$$$$$$$$::::::$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$::::$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$::::$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$::$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$::$$$$$$$$$$$$$$$$  WESTERN COMPUTER OPERATIONS
$$$$$$$$$$$$$$$ :: $$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$ :: $$$$$$$$$$$$$$$  COMPUTER MANAGEMENT SERVICES
$$$$$$$$$$$$$$  ::  $$$$$$$$$$$$$$
$$$$$$$$$$$$$$  ::  $$$$$$$$$$$$$$  NOVEMBER 1981
$$$$$$$$$$$$$   ::   $$$$$$$$$$$$$
$$$$$$$$$$$$$   ::   $$$$$$$$$$$$$
$$$$$$$$$$$$    ::    $$$$$$$$$$$$
$$$$$$$$$$$$    ::    $$$$$$$$$$$$
$$$$$$$$$$$     ::     $$$$$$$$$$$              
$$$$$$$$$$$     ::     $$$$$$$$$$$              
$$$$$$$$$$      ::      $$$$$$$$$$
$$$$$$$$$$      ::      $$$$$$$$$$
$$$$$$$$$       ::       $$$$$$$$$
$$$$$$$$$      ::::      $$$$$$$$$
$$$$$$$$      ::::::      $$$$$$$$
$$$$$$$$     ::::::::     $$$$$$$$      
$$$$$$$     ::::::::::     $$$$$$$
$$$$$$$    ::::::::::::    $$$$$$$  
$$$$$$    ::::::::::::::    $$$$$$
$$$$$$   ::::::::::::::::   $$$$$$  
$$$$$   ::::::::::::::::::   $$$$$
$$$$$  ::::::::::::::::::::  $$$$$
$$$$  ::::::::::::::::::::::  $$$$
 $$$$::::::::::::::::::::::::$$$$
  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
.SUBTITLE <TABLE <OF <CONTENTS
.PAGE!END OF HEADER
^^
.INDEX <TABLE <OF <CONTENTS
.CENTER;<TABLE <OF <CONTENTS
.CENTER;-----------------
.SKIP 1
        TITLE                                   PAGE
.SKIP 1
        BACKUP
                INTRODUCTION                     4
                COMMAND SUMMARY                  4
                EXAMPLES                         6
.SKIP 1
        FAILSAFE
                INTRODUCTION                     8
                DESCRIPTION                      8
                SAMPLE RUNS                     10
                RUNNING FAILSAFE                10
                GETTING DIRECTORY               10
                RESTORING A FILE                11
                ERRORS AND RECOVERIES           12
.SKIP 1
        MTCOPY
                INTRODUCTION                    13
                SUMMARY                         13
                DENSITY SWITCHES, ETC           13
                DESCRIPTION                     14
                SAMPLE RUNS                     14
                ERRORS AND RECOVERIES           14
.SKIP 1
        VARIAN AND VARREC
                INTRODUCTION                    15
                SUMMARY                         15
                DESCRIPTION                     15
                SAMPLE RUNS                     16
                ERRORS AND RECOVERIES           17
.SKIP 1
        TAPER
                INTRODUCTION                    18
                SAMPLE BATCH REQUEST            19
                SAMPLE RUN                      20
.SKIP 1
        AUXMAP
                INTRODUCTION                    22
                PROCEDURES                      22
                RUNNING PROGRAM                 23
                SAMPLE RUN                      24
.SKIP 1
        CLRMAI
                INTRODUCTION                    25
                PROCEDURE                       25
                SAMPLE RUN                      26
.PAGE
        COM (COMMAND FILES)
                INTRODUCTION                    27
                PROCEDURE                       27
                CREATING COM FILES              28
                SAMPLE RUN                      30
.SKIP 1
        INDIRECT OR COMMAND FILES               32
.SKIP 1
        TELHLP
                PURPOSE                         37
                SAMPLE RUN                      38
.SKIP 1
        XFORM
                INTRODUCTION                    39
                PROCEDURES                      39
.SKIP 1
        INDEX                                   40
.SUBTITLE <BACKUP <PROGRAM
.PAGE!END OF TABLE OF CONTENTS
\\
.INDEX <BACKUP <PROGRAM
.CENTER;<PDP-10 <BACKUP <PROGRAM
.CENTER;---------------------
.SKIP 1
((<INTRODUCTION))
.FILL.JUST
.PARA
<BACKUP IS THE ^STANDARD <DEC ^PROGRAM FOR DOING TAPE WORK.
<BACKUP REPLACED <FAILSAFE. ^THE <BACKUP PROGRAM ON
^TYMSHARE'S <PDP-10S HAS BEEN MODIFIED TO WORK WITH
^TYMSHARE'S ^OPERATING ^SYSTEMS. ^COMPLETE ^DOCUMENTATION
FOR <BACKUP IS IN (<SYSNEWS)BACKUP.DOC ON ANY <PDP-10. ^SOME
OF THE FEATURES DESCRIBED IN THAT DOCUMENT WORK AND
SOME DO NOT. ^THIS DOCUMENT DESCRIBES THE FEATURES
THAT ARE CURRENTLY WORKING AND IS FOLLOWED BY EXAMPLES
OF HOW TO USE THE PROGRAM.
.PARA
<BACKUP STORES FILES IN ^SAVE ^SET GROUPINGS. ^THE ^SAVE ^SETS DO
NOT HAVE NUMBERS. ^SAVE ^SETS MAY BE GIVEN NAMES FOR REFERENCE
PURPOSES. ^THE WILD CARDS * AND _# WORK WHEN REFERENCING FILE
NAMES. <BACKUP FORMATTED TAPES DO NOT HAVE TAPE POSITION NUMBERS.
^FILES ARE REFERENCED BY SAVESETS AND FILE NAMES.
^^
.INDEX <COMMAND <SUMMARY
.SKIP 1
((<COMMAND <SUMMARY))
.SKIP 1
.NOFILL.NOJUST
.INDEX <BACKUP <TAPE <POSITIONING <COMMANDS
TAPE POSITIONING COMMANDS
-------------------------
.SKIP 1
.NOFILL.NOJUST
    EOT                      SKIP TO LOGICAL END OF TAPE
.SKIP 1
    REWIND                   REWIND TAPE
.SKIP 1
    UNLOAD                   UNLOAD TAPE
.SKIP 1
    SKIP N                   SKIP N SAVE SETS
.SKIP 1
    SKIP -N                  BACKSPACE N SAVE SETS
.SKIP 1
.INDEX <BACKUP <DENSITY
DENSITY
-------
\\
.FILL.JUST
.PARA
^CURRENTLY THE DENSITY COMMAND DOESN'T WORK IN <BACKUP. ^THE
DEFAULT FOR WRITTING TO TAPE IS THE LOWEST DENSITY. <BACKUP
WILL READ ANY DENSITY.
.SKIP 1
^^
.NOFILL.NOJUST
.INDEX <BACKUP <ACTION <COMMANDS
ACTION COMMANDS
---------------
.SKIP 1
    SAVE [PPN]FN.EXT         STORE DISC FILES TO TAPE. ONLY WORKS
                             WITH PPN NUMBERS, NOT USERNAMES.
.SKIP 1
    RESTORE [PPN]FN.EXT      RESTORE FILES FROM TAPE TO DISC.
.SKIP 1
    TAPE FTAN:               INITIALIZES TAPE DRIVE WHERE N=DRIVE
                             NUMBER.
.PAGE
          LPT:               OUTPUTS A TAPE DIRECTORY TO DEVICE
    PRINT DSK:FILENAME       INDICATED. IF OUTPUT IS TO DSK: AND
          TTY:               FILE NAME IS OMITTED THE FILE NAME 
                             WILL DEFAULT TO BACKUP.LOG.
.SKIP 1
    SSNAME XXXX              NAMES THE SAVESET WHICH WILL NEXT BE
                             READ OR WRITTEN. XXXX MAY BE UP TO
                             30 CHARACTERS. XXXX = ALL INDICATES
                             ALL SAVESETS ON TAPE BEING READ.
.SKIP 1
    CHECK                    COMPARES FILES ON DISC TO SAME FILE
                             NAMES ON TAPE. WILL REPORT AN
                             ERROR MESSAGE IF FILES ARE DIFFERENT.
.SKIP 1
.NOFILL.NOJUST
.INDEX <BACKUP <OTHER <COMMANDS
OTHER COMMANDS
--------------
.SKIP 1
    EXIT                     EXITS FROM BACKUP PROGRAM.
.SKIP 1
    OLD/NEW FILE CONFIRMATION - CURRENTLY THE SUPERSEDE COMMAND
                             WHICH IS SUPPOSED TO REPORT WHEN A
                             DISC FILE ALREADY EXISTS AND ALLOW
                             A CHOICE AS TO OVERWRITTING EXISTING FILES
                             DOES NOT WORK. PROGRAM WILL OVERWRITE OLD
                             FILES WITHOUT REPORTING THAT IT DID SO.
.PAGE
((<EXAMPLES))
.SKIP 1
.INDEX <BACKUP <STORING <FILES
STORING FILES
-------------
.SKIP 1
    R BACKUP                 CALL PROGRAM.
.SKIP 1
    /TAPE FTA1:              / IS THE PROGRAM PROMPT. THIS COMMAND
                             INITIALIZES THE TAPE DRIVE.
.SKIP 1
    /SSNAME DUMMY            NAMES THE NEXT SAVESET TO BE STORED
                             AS "DUMMY". IF THIS COMMAND IS OMITTED
                             THE SAVESET WILL NOT BE NAMED.
.SKIP 1
    /SAVE [1,21]*.*          STORE ALL FILES FROM USERNAME OPER. PPN
                             IS NOT NECESSARY IF STORING FROM DIRECTORY
                             YOU'RE LOGGED INTO. PROGRAM ACCEPTS INDI-
                             VIDUAL FILENAMES AS WELL AS WILD CARD
                             REFERENCES.
.SKIP 1
    !1,21      DSKB          MESSAGE OUTPUT BY PROGRAM WHILE STORING.
                             ! INDICATES PROGRAM IS DOING AN OPERATION.
.SKIP 1
    /REWIND                  REWIND THE TAPE.
.SKIP 1
.INDEX <BACKUP <TAPE <DIRECTORY
TAPE DIRECTORY
--------------
.SKIP 1
    R BACKUP
.SKIP 1
    /TAPE FTA1:
.SKIP 1
    /INTERCHANGE             RUNS IN INTERCHANGE MODE
.SKIP 1
    /PRINT LPT:              PRINT A DIRECTORY OF TAPE TO
                             LINE PRINTER.
.SKIP 1
    !                        INDICATES DIRECTORY IS RUNNING.
.SKIP 1
    /UNLOAD                  UNLOAD TAPE.
.SKIP 1
    /EXIT                    EXIT FROM PROGRAM.
.PAGE
.INDEX <BACKUP <RESTORING <FILES
RESTORING FILES
---------------
.SKIP 1
    R BACKUP
.SKIP 1
    /TAPE FTA2:
.SKIP 1
    /INTERCHANGE             RUNS IN INTERCHANGE MODE
.SKIP 1
    /SSNAME ALL              SETS SWITCH TO READ ANY SAVESET NAME.
.SKIP 1
    /SKIP 1                  SKIP OVER FIRST SAVESET.
.SKIP 1
    /RESTORE [1,21]FILE.EXT  RESTORE FILE NAMED FILE.EXT TO USER
                             OPER. PPN NOT NECESSARY IF RESTORING
                             TO DIRECTORY YOU'RE LOGGED INTO.
.SKIP 1
    !
.SKIP 1
    /REWIND
.SKIP 1
.INDEX <BACKUP <APPENDING/CHECKING
APPENDING AND CHECKING
----------------------
.SKIP 1
    R BACKUP
.SKIP 1
    /TAPE FTA1:
.SKIP 1
    /EOT                     SKIPS TO LOGICAL END OF TAPE.
.SKIP 1
    /SAVE *.*
.SKIP 1
    !1,21      DSKB
.SKIP 1
    /SKIP -1                 BACKSPACE ONE SAVESET.
.SKIP 1
    /CHECK                   COMPARES FILES STORED WITH FILES ON DISC.
                             IF ANY DIFFERENCES PROGRAM WILL
                             REPORT THEM.
.SKIP 1
    !
.SKIP 1
    /UNLOAD
.SKIP 1
    /EXIT
.SUBTITLE <FAILSA
.PAGE!END OF PDP-10 BACKUP PROGRAM
\\
.CENTER
<FAILSAFE
.CENTER
--------
.SKIP 1
.INDEX <FAILSA <INTRODUCTION
((<INTRODUCTION))
.FILL.JUST
.PARA
<FAILSAFE (ABBREVIATED TO <FAILSA WHEN RUN) IS A UTILITY PROGRAM WRITTEN BY
<DEC AND IS THE ORIGINAL TAPE PROGRAM USED ON THE <TYMCOM-X'S.  ^NOW THAT
<TITO HAS BEEN DEVELOPED, <FAILSA IS USED PRIMARILY TO RESTORE FILES FROM
OLD CUSTOMER TAPES WRITTEN BY <DIAL-DATA SOURCES ON 7 TRACK TAPES.
.PARA
^THIS PROGRAM HAS A HARDWARE REQUIREMENT OF AN ASSIGNED CHANNEL WHICH SHOULD
BE SET BEFORE THE PROGRAM IS RUN.
^WHEN THE PROGRAM HAS BEEN LOADED IT PROMPTS IT'S COMMAND MODE WITH AN
ASTERISK (*) AND THE GENERAL COMMAND FORMAT (SOMETIMES CALLED
SWITCHES) ARE IN THE FORM /<STR WHERE <STR IS SOME ALPHANUMERIC CHARACTER
PLUS ARGUMENT STRING.
.PARA
<FAILSAFE OPERATES ON ^P^P^N'S (PROJECT-PROGRAMMER NUMBERS) RATHER THAN
USERNAMES.
^THESE <PPN'S ARE IN THE FORM [<N,N1] WHERE <N AND <N1 ARE NUMBERS THAT CAN BE
OBTAINED USING THE <EXEC COMMAND <PPN <USERNAME (CR).
.PARA
^ALL <FAILSAFE FILES ARE STORED IN <SAVESETS - SEPARATE SECTIONS OF THE
TAPE WHICH CORRESPOND TO THE PARTICULAR SESSIONS WHEN THE FILES WERE
STORED ON TO THE TAPE.
^YOU MUST BE POSITIONED ON THE GIVEN SAVESET CONTAINING THE FILE(S) YOU
TO RESTORE.
^USE THE /^J(<UMP_) COMMAND TO SKIP OVER THE EARLIER SAVESETS ON THE TAPE.
.PARA
^TO <EXIT THE PROGRAM AND RETURN TO <EXEC, TYPE _^<C (^CONTROL ^C).
.NOFILL.NOJUST
.SKIP 1
.INDEX <FAILSA <COMMAND <DESCRIPTION
((<COMMAND <DESCRIPTION))
.SKIP 1
/^H THIS IS THE <HELP COMMAND AND YIELDS THE LIST OF SWITCHES
     BELOW.
.SKIP 1
/^Z SETS THE BEGINNING <PPN FOR THE NEXT /^S.
.SKIP 1
/^Y SETS THE BEGINNING FILE NAME, AND /^T SETS THE TAPE REEL
     NUMBER.
.SKIP 1
/^W REWINDS THE TAPE.
.SKIP 1
/^J JUMPS OVER THE CURRENT SAVESET. 
.SKIP 1
/^U SAVES THE ENTIRE DISK AREA THE USER IS LOGGED IN UNDER.
.SKIP 1
<NAME1.^E^X^T,^N^A^M^E2.^E^X^T,*.^E^X^T ETC.  RESTORES PARTICULAR FILES FOR
     ANY USER.
.SKIP 1
/^P LISTS DIRECTORY OF ENTIRE TAPE ON DEVICE "^L^S^T".
     ^FILENAME "<FAILSA.^D^I^R" IS USED IF <LST=^D^S^K.  ^YOU MUST PREAS-
     SIGN <LPT TO <LST TO DIVERT DIRECTORY LISTING TO PRINTER.
.PAGE
/^L LISTS DIRECTORY OF ALL THE USER'S FILES ON THE DEVICE <TTY.
.SKIP 1
/<GMMM,^N^N^N_<CR_> SETS THE PROJECT-PROGRAMMER AREA NUMBER SO THAT
     THE USER MAY RUN /^U, /^L, AND SELECTIVE RESTORE COMMANDS ON
     AN AREA OTHER THAN HIS OWN.
.SKIP 1
/<OMMM,^N^N^N_<CR_> CHANGES THE OUTPUT <PPN SO THAT A TRANSLATION CAN
     OCCUR WHEN FILES ARE RESTORED; USED WITH THE /^GMMM,NNN_<CR_>
     COMMAND.
.SKIP 1
/^N/^R OR /^N (SELECTIVE RESTORE STRING) CAUSES ALL FILES ON THE
     TAPE TO BE RESTORED REGARDLESS OF THE CREATION DATES OF
     EXISTING DISK FILES.
.SKIP 1
/^I,/2,/5,/8 SET MAGTAPE DENSITY TO <INSTALLATION <STANDARD, 200<BPI,
     556 <BPI, AND 800 <BPI RESPECTIVELY.  ^DENSITY REMAINS SET
     UNTIL RESET BY ANOTHER SWITCH.
.FILL.JUST
.PARA
^YOU ARE REFERRED TO THE <DEC <LIBRARY WRITEUP '<FAILSAFE - <DISK <SAVE <AND
<RESTORE <PROGRAM' (<DEC 1-_<YPDA_-^D).
^A COPY OF THIS DOCUMENT IS AVAILABLE FROM THE ^TRAINING ^OFFICE.
.PAGE
.INDEX <FAILSA <SAMPLE <RUNS
((<SAMPLE <RUNS))
.PARA
^TO RUN THE <FAILSAFE PROGRAM TO STORE A PARTICULAR USERS FILES TO TAPE, DO THE FOLLOWING:
.NOFILL.NOJUST
.SKIP 1
     1.  ^SET <OPER STATUS.
.SKIP 1
     2.  ^ASSIGN THE PHYSICAL MAG TAPE UNIT TO THE LOGICAL NAME 
         <FAILSAFE BY TYPING:
.SKIP 1
         '.'<AS ^F^T^AN <FAILSA_<CR_>  (^WHERE N  IS THE DEVICE NUMBER)
.SKIP 1
     3.  ^TYPE:
.SKIP 1
         '.'^R <FAILSA_<CR^>  
.SKIP 1
         '*'/8        ^SETS THE TAPE DENSITY TO 800 <BPI
.SKIP 1
         '*'/^G <PP,^N^N  ^WHERE <PP,^N^N=USERS PROJECT-PROGRAMMER NUMBER
.SKIP 1
         '*'/^U        ^STORES THE USERS FILES ON TAPE
.SKIP 1
         '*'/^W        ^REWINDS THE TAPE
.SKIP 1
         '.'^D^E^A^S      ^DEASSIGNS DEVICES
.SKIP 1
     4.  ^IF TAPE IS COMPLETELY FULL, THE OPERATOR WILL BE RE-
         QUESTED TO MOUNT NEW TAPE AND TYPE /^C WHEN READY.
.PARA
^TO GET A DIRECTORY OF A <FAILSA TAPE, DO THE FOLLOWING:
.SKIP 1
.NOFILL.NOJUST
     1.  ^SET <OPER STATUS.
.SKIP 1
     2.  ^ASSIGN THE PHYSICAL MAG TAPE DRIVE THE LOGICAL NAME
         <FAILSAFE AS IN STEP 2 ABOVE.
.SKIP 1
     3.  ^ASSIGN ^LINE ^PRINTER TO LOGICAL NAME <LST BY TYPING:
.SKIP 1
         '.'<ASSIGN <LPT <LST_<CR_>  (<LPT IS <LINE <PRINTER)
.SKIP 1
     4.  ^TYPE:
                '.'^R <FAILSA_<CR>
                '*'/8
                '*'/^P  (^TELLS <FAILSAFE TO PRINT A DIRECTORY)
.SKIP 1
         ^IF THERE IS MORE THEN ONE SAVESET ON THE TAPE, YOU
         MUST TYPE /^P FOR EACH SAVESET.
.SKIP 1
                '*'/^W  (^REWINDS THE TAPE)   
                '.'^D^E^A^S  (^DEASSIGN DEVICES)
.PAGE
.PARA
.FILL.JUST
^TO RESTORE A FILE FROM AN OLD <FAILSAFE TAPE DO THE FOLLOWING:
.SKIP 1
.NOFILL.NOJUST
     1.  ^SET STATUS.
.SKIP 1
     2.  ^ASSIGN THE MAGTAPE TO <FAILSAFE.
.SKIP 1
     3.  ^AT THIS POINT YOU MAY NEED TO USE THE <PPN USERNAME_<CR>
         COMMAND.
.SKIP 1
     4.  ^TYPE:
.SKIP 1
                '.'^R <FAILSA_<CR>
.SKIP 1
                '*'/^J        (^IT MAY BE NECESSARY TO 'JUMP' OVER
                             SAVESETS UNTIL YOU ARE AT THE SAVE-
                             SET CONTAINING THE DESIRED FILE(S)).
.SKIP 1
                '*'/^G <PP,^N^N  (^THE <PPN FROM THE TAPE:  THIS SETS
                             UP A '<GET')
.SKIP 1
                '*'/<O <PP,^N^N  (^SETS UP OUTPUT TO <PPN SPECIFIED ON
                             <DISK)
.SKIP 1
                '*'<NAME1.^E^X^T,^N^A^M^E2.^E^X^T  (^NOW TYPE THE FILENAMES
                                        TO BE RESTORED FROM THE
                                        CURRENT SAVESET)
.SKIP 1
                '*'/^W     (^REWINDS THE TAPE)
.SKIP 1
                '*'_^^C_^^C   (^EXITS THE PROGRAM)
.SKIP 1
                '.'^D^E^A^S   (^DEASSIGNS DEVICES)
.PAGE
.INDEX <FAILSA <ERRORS <AND <RECOVERIES
((<ERRORS <AND <RECOVERIES))
.FILL.JUST
.PARA
^AFTER ANY ^I/^O ERROR WHICH RETURNS TO <MONITOR <LEVEL, TYPE '<REENTER'
TO CONTINUE.
.PARA
^BELOW ARE SOME OF THE MORE COMMON ERRORS THAT CAN BE ENCOUNTERED WHILE RUNNING <FAILSA:
.SKIP 1
.NOFILL.NOJUST
.TS 8,40
	<ERROR <MESSAGE	<MEANING/^R^E^C^O^V^E^R^Y^
	----- -------	----------------
.SKIP 1
	<CANNOT <FIND <PROJ,^P^R^O^G	<FAILSA CANNOT FIND THAT USER'S
		AREA IN THE GIVEN SAVESET; YOU
		MAY NOT BE POSITIONED ON THE
		CORRECT SAVESET OR PERHAPS THE
		USER IS NOT ON THE TAPE.
.SKIP 1
	<CANNOT <FIND <FILE ^X.^Y	^TAPE HAS GONE TO LOGICAL <EOT
		WITHOUT FINDING THE FILE;
		PERHAPS THE NAME WAS TYPED
		IN WRONG.  ^CHECK THE TAPE DIR..
.SKIP 1
	<CANNOT <WRITE <UFD <PPN	^MOST LIKELY A PROTECTION
		PROBLEM.  <FAILSA SKIPS TO THE
		NEXT JOB.
.SKIP 1
	<ERROR <WHILE <READING <FILE	^A TAPE ERROR HAS OCCURRED.
		^THERE MAY BE AN INCOMPLETE 
		PARTIAL COPY THAT SHOULD BE
		DELETED FROM THE DISK.
.SKIP 1
	<MAGTAPE <PHYSICAL <DEV. <ERR	<FAILSA HAS TRIED 3 TIMES AND
		FAILED.  ^TRY CLEANING THE DRIVE
		OR TRY ANOTHER DEVICE.
.SKIP 1
	<ILL <FORMAT <ON <TAPE	^YOU ARE READING A TAPE THAT IS
		NOT IN <FAILSAFE FORMAT.  ^USE
		<XET OR <TITO INSTEAD.
.SUBTITLE <MTCOPY
.PAGE!END OF FAILSA.DOC
^^
.CENTER;MTCOPY (TAPE COPY PROGRAM)
.CENTER;--------------------------
.SKIP 1
.INDEX <MTCOPY <INTRODUCTION
(ODUCTION))
\\
.FILL.JUST
.PARA
^THE PURPOSE OF <MTCOPY IS TO COPY ONE OR MORE FILES FROM TAPE TO TAPE.
^IT IS USED WHENEVER A COPY OF A TAPE IS NEEDED (EG. FROM A 7 TRACK TO A 9 
TRACK) OR IF A TAPE REBUILD MUST BE DONE. <MTCOPY CAN BE USED FOR MOST TAPE
FORMATS INCLUDING 940 <1STORE FORMAT. ^IT DEFAULTS TO COPY AND VERIFY ONE
ENTIRE TAPE TO ANOTHER AND TO USE THE HIGHEST DENSITY FOR THE TAPE DRIVE WHERE
IT IS BEING RUN. ^HOWEVER, THERE ARE SWITCHES THAT CAN BE USED TO SPECIFY
OTHER OPTIONS. <MTCOPY CANNOT BE USED FOR <TITO TAPES WHERE THE DRIVES 
USED HAVE DIFFERENT DENSITIES.
.SKIP 1
^^
.INDEX <MTCOPY <COMMAND <SUMMARY
((COMMAND SUMMARY))
\\
.PARA
<MTCOPY USES THE TRADITIONAL <DECSYSTEM-10 COMMAND STRING FORMAT: THAT IS,
DESTINATION (OR OUTPUT TO) NAME, A BACKARROW (__)OR EQUAL (_=) SIGN
AND THE SOURCE (OR INPUT FROM) NAME. 
^^
.NOFILL.NOJUST
.SKIP 1
            OUTTAPE:/OUTSWITCH = INTAPE:/INSWITCH
.SKIP 1
	DENSITY SWITCHES	MEANING
	----------------	-------
	/2			SET DENSITY TO 200 BPI
	/5			SET DENSITY TO 556 BPI
	/8			SET DENSITY TO 800 BPI
	/1			SET DENSITY TO 1600 BPI
	/6			SET DENSITY TO 6250 BPI
.SKIP 1
	POSITION SWITCH		EFFECT
	---------------		------
	/A			ADVANCE TAPE 1 FILE BEFORE OPERATION
	/A:N			ADVANCE TAPE N FILES BEFORE OPERATION
	/B			BACKSPACE TAPE 1 FILE BEFORE
                                   OPERATION
	/B:N			BACKSPACE TAPE N FILES BEFORE
                                   OPERATION
	/R			REWIND BEFORE AND AFTER OPERATION
                                   (DEFAULT)
	/U			UNLOAD TAPE AFTER OPERATION
.SKIP 1
	MODE SWITCH		MEANING
	-----------		-------
	/E			EVEN PARITY (USED FOR BCD TAPES) 
.SKIP 1
	GENERAL SWITCH		EFFECT
	--------------		------
	/C:N			COPY N FILES
	/C			(DEFAULT)COPY ALL FILES TO DOUBLE EOF
                                   (EOT)
	/G			PROCEED ON ERRORS
	/H			LIST SWITCHES (HELP)
	/N			SUPRESS AUTOMATIC REWINDS
	/V:N			VERIFY N FILES
	/V			VERIFY ALL FILES TO EOT.
.PAGE
.INDEX <MTCOPY <COMMAND <DESCRIPTION
((COMMAND DESCRIPTION))
\\
.FILL.JUST
.PARA
^SPACES AND ^TABS ARE IGNORED IN <MTCOPY COMMAND STRINGS AND MAY
BE USED TO MAKE COMMANDS EASIER TO READ. ^IF MORE THAN 1 SWITCH IS USED THEY
CAN BE INCLUDED IN PARENTHESES.
.PARA
^TO COPY AND VERIFY BOTH, YOU MUST USE BOTH /<C AND /<V.  ^IF BOTH /<C AND
/<V ARE USED FOR A SPECIFIC NUMBER OF FILES, THE NUMBER NEED ONLY BE INCLUDED
ON ONE OF THE SWITCHES.
.PARA
^DENSITY SETTING SWITCHES WILL APPLY UNTIL A TAPE IS EITHER REWOUND
OR UNLOADED. ^REWINDS WILL OCCUR AUTOMATICALLY EXCEPT WHERE POSITION SWITCHES
ARE USED AS SEPARATE COMMANDS, OR WHEN THE /<N SWITCH SURPRESSES IT.
.SKIP 1
^^
.INDEX <MTCOPY <SAMPLE <RUNS
((SAMPLE RUNS))
^^
.NOFILL.NOJUST
.SKIP 1
"_."R (UTIL)MTCOPY (CR)
"*"FTA_#:/6__FTA_#:/6 (CR)
"DENSITY OUT AT 6250 BPI, IN AT 6250 BPI"
"5_* FILES, 5152 BLOCKS COPIED"
"5_* FILES, 5152 BLOCKS VERIFIED"
"*" (WAITING FOR NEXT COMMAND)
.SKIP 1
.INDEX <MTCOPY <ERRORS <AND <RECOVERIES
((ERRORS AND RECOVERIES))
\\
.FILL.JUST
.PARA
<TITO (AND <TEX) USE END OF FILE MARKS DIFFERENTLY THAN OTHER FORMATS:
FOR CUSTOMER TAPES AN END OF FILE MARK IS USED AT THE END OF EACH SAVE SET;
FOR BACKUP AND ALL FILES TAPES AN END OF FILE MARK IS USED AT THE END OF
EACH USER'S FILES. ^THUS IF YOU USE THE <MTCOPY COMMAND TO ADVANCE OR
BACKSPACE A FILE ON <TITO OR <TEX TAPES THE PROGRAM WILL SKIP EITHER A
SAVE SET OR A USERNAME INSTEAD. ^BE AWARE OF THIS PROBLEM AND PAY ATTENTION
TO WHAT YOU ARE SKIPPING.
.SUBTITLE <VARIAN <AND <VARREC <SPECIAL <TAPE <PROGRAMS
.PAGE!END OF MTCOPY (TAPE COPY PROGRAM)
\\
.NOFILL.NOJUST
.INDEX <VARIAN <SPECIAL <TAPE <PROGRAMS
.INDEX <VARREC <SPECIAL <TAPE <PROGRAMS
.SUBTITLE <VARIAN <SPECIAL <TAPE <PROGRAMS
.CENTER;<VARIAN <AND <VARREC - <SPECIAL <TAPE <PROGRAMS
.CENTER;-----------------------------------------
.SKIP 1
((<INTRODUCTION))
.FILL.JUST
.PARA
^VARIAN ASSOCIATES HAS A VERY LARGE APPLICATION WHICH REQUIRES
FAIRLY PROMPT DELIVERY OF FILE UPDATES FROM <TYMCOM-IX TO 9-TRACK
TAPES WITH SPECIAL FORMATS THAT CAN BE READ ON TAPE DRIVES ON COMPUTERS AT
THE CUSTOMER'S SITE. ^BECAUSE PROBLEMS AROSE WHEN <MAGCON WAS USED, THE
<VARREC AND <VARIAN PROGRAMS WERE DEVELOPED. ^THESE TWO PROGRAMS ARE LOCATED
ON THE <TYMCOM-X'S UNDER DIRECTORY (<UTIL) AND THEY ESSENTIALLY
COPY FROM 7-TRACK <1STORE FORMAT TAPES TO 9-TRACK <EBCDIC FORMAT
TAPES. <VARIAN WRITES IN 80 CHARACTER RECORDS WITH NO BLOCKING, LABELS OR
CARRIAGE-RETURN/LINEFEEDS; <VARREC IS MUCH THE SAME EXCEPT VARIABLE RECORD
LENGTHS ARE ACCEPTED. ^A BATCH REQUEST MUST SPECIFY EXPLICITLY WHICH OF THESE
PROGRAMS IS TO BE USED. ^THE CUSTOMER SUPPLIES THE TAPES THAT ARE WRITTEN
WITH THESE TWO PROGRAMS. ^WHEN THE JOB HAS BEEN COMPLETED, BATCH TYPES
5 (FILES DISK TO TAPE) AND 7 (TAPE CONVERSION) ARE ENTERED INTO
THE BATCH ACCOUNTING.
^^
.INDEX <VARIAN <COMMAND <SUMMARY
.INDEX <VARREC <COMMAND <SUMMARY
.SUBTITLE <VARIAN <COMMAND <SUMMARY
.NOFILL.NOJUST
.SKIP 1
((<COMMAND <SUMMARY))
.SKIP 1
             (SEE DESCRIPTION AND SAMPLE RUNS BELOW)
.SKIP 1
.INDEX <VARIAN <COMMAND <DESCRIPTION
.INDEX <VARREC <COMMAND <DESCRIPTION
((<COMMAND <DESCRIPTION))
\\
.FILL.JUST
.PARA
^THE FIRST STEP FOR RUNNING EITHER PROGRAM IS TO USE <1STORE ON THE
<TYMCOM-IX TO PREPARE A SCRATCH TAPE CONTAINING THE FILES TO BE COPIED.
.PARA
^THIS TAPE IS TAKEN TO A <TYMCOM-X 7-TRACK DRIVE AND A CUSTOMER-SUPPLIED
TAPE IS MADE READY ON A 9-TRACK DRIVE. ^BOTH PROGRAMS DEFAULT  TO <FTAN.
^ASSIGN THE  <FTAN AND THEN  WHICHEVER PROGRAM IS  REQUESTED IS  RUN.
^YOU WILL BE PROMPTED FOR A SINGLE DIGIT INPUT AND OUTPUT UNIT AND SHOULD USE A
DIGIT <'N' WHERE <N IS THE DEVICE YOU ARE USING; THE PROGRAM PROMPTS FOR TAPE
DENSITY (NORMALLY 800 <BPI - FOLLOW THE INSTRUCTIONS ON THE REQUEST). ^INPUT A
POSITION ON THE INPUT TAPE AND THE FILE WILL BE COPIED ONTO THE OUTPUT TAPE.
^FOR THE <VARIAN PROGRAM, AFTER EACH POSITION IS COPIED THE PROGRAM EXITS TO
THE <EXEC; FOR THE <VARREC PROGRAM, YOU ARE PROMPTED FOR THE NEXT TAPE
POSITION AND MUST TYPE '<E(CR)' TO EXIT.
.PAGE
.INDEX <VARIAN <SAMPLE <RUNS
.INDEX <VARREC <SAMPLE <RUNS
.SUBTITLE <VARIAN <SAMPLE <RUNS
^^
((SAMPLE RUNS)
.SKIP 1
          (IT IS ASSUMED THE TAPES ARE MOUNTED ON THE CORRECT DRIVES)
.SKIP 1
.NOFILL.NOJUST
	VARIAN
	------
.SKIP 1
	'.'ATT FTA0 <(CR)
	'FTA0 ATTACHED'			THIS IS THE 7 TRACK DRIVE WHERE THE
					TAPE IS IN <1STORE FORMAT.
.SKIP 1
	'.'AS FTA2 <(CR)
	'FTA2 ASSIGNED'			THIS IS THE 9-TRACK DRIVE WITH THE
					VARIAN TAPE MOUNTED.
.SKIP 1
	'.'R (UTIL)VARIAN<(CR)
.SKIP 1
	'7 TRACK TO 9 TRACK VERS. 1.3 FOR VARIAN'
	'INPUT FROM MAG TAPE UNIT :'0<(CR)
					USE ONLY ONE DIGIT FOR THE UNIT.
	'OUTPUT TO MAG TAPE UNIT  :'2<(CR)
.SKIP 1
	'OUTPUT DENSITY (1600,800):'800<(CR)
					WHATEVER IS SPECIFIED ON THE
                                    BATCH REQUEST.
.SKIP 1
	'TAPE POSITION:'1<(CR)		THIS REFERS TO THE <1STORE TAPE.
.SKIP 1
	'END OF JOB'
	'EXIT'
	'.'
.SUBTITLE <VARREC <SAMPLE <RUNS
.PAGE
	VARREC
	------
.SKIP 1
     (ASSIGN THE DRIVES AS ABOVE)
.SKIP 1
	'.'R (UTIL)VARREC<(CR)
.SKIP 1
	'7 TRACK TO 9 TRACK VERSION 2.0 VARIABLE RECORD'
	'INPUT FROM MAG TAPE UNIT  :'0
.SKIP 1
	'OUTPUT TO MAG TAPE UNIT  :'2
	'OUTPUT DENSITY (1600,800):'800<(CR)
.SKIP 1
	'OUTPUT TAPE POSITION :'1<(CR)	
					USUALLY START AT 1 - BEGINNING OF
	'INPUT TAPE POSITION :'1-2<(CR)
.SKIP 1
	'INPUT TAPE POSITION :'4<(CR)	THE NEXT POSITION IF ANY.
.SKIP 1
	'INPUT TAPE POSITION :'E<(CR)	ALL DONE NOW; EXIT THE PROGRAM.
.SKIP 1
	'END OF JOB'
	'.'
.SUBTITLE <VARIAN <ERRORS <AND <RECOVERIES
.SKIP 1
.INDEX <VARIAN <ERRORS <AND <RECOVERIES
.INDEX <VARREC <ERRORS <AND <RECOVERIES
.SKIP 1
((<ERRORS <AND <RECOVERIES))
\\
.FILL.JUST
.PARA
^BE SURE YOU ARE RUNNING THE CORRECT PROGRAM (THAT IS, FOLLOWING THE
INSTRUCTIONS ON THE BATCH REQUEST). ^OFTEN THE REQUEST WILL INCLUDE INFORMATION
ABOUT THE FORMAT CHARACTERISTICS; EXCEPT IN RARE CASES THESE WILL BE HANDLED
AUTOMATICALLY BY THE PROGRAM. ^ALSO, PAY ATTENTION TO THE DIRECTORY LISTING
FROM THE <1STORE TAPE. ^WE CANNOT CHECK THE OUTPUT TAPES HERE AT <WCO SO
YOU MUST REFERENCE THE CORRECT INPUT FILE.
.SUBTITLE <TAPER <PROGRAM
.PAGE!END OF VARIAN AND VARREC SPECIAL TAPE PROGRAMS
\\
.INDEX <TAPER <PROGRAM
.FLAG CAPIT
.FILL.JUST
.CENTER;<TAPER <PROGRAM
.CENTER;----- -------
.SKIP 1
((<INTRODUCTION))
.PARA
<(UTIL)TAPER IS A PROGRAM USED OCCASIONALLY TO TRANSFER DATA FROM
A TAPE TO DISK. ^USUALLY THE USER ENTERING THE REQUEST WILL SPECIFY
THAT THE <TAPER PROGRAM BE USED INSTEAD OF <MAGCON. ^REMEMBER THAT
<TAPER IS USED FOR <EBCDIC ONLY, AND THAT YOU MUST <ASSIGN <FTA_# AS
<MTA_# BEFORE YOU RUN <TAPER.
.PARA
^IF AN <EBCDIC TAPE CANNOT BE READ WITH <MAGCON, ATTEMPT TO READ IT
USING <TAPER.  ^USE THIS PROGRAM AT YOUR DISCRETION.
.NOFILL.NOJUST
.SUBTITLE  <TAPER <SAMPLE <BATCH <REQUEST
.PAGE
.INDEX  <TAPER <SAMPLE <BATCH <REQUEST
.SKIP 1
((<SAMPLE <BATCH <REQUEST))
^^
.SKIP 1
REQUEST NUMBER          _#_#_#_#_#
.SKIP 1
SYSTEM NUMBER           C_#_#
.SKIP 1
DATE AND TIME           DD-MTH-YY  HH:MM
.SKIP 1
ENTERED FROM            _#_#_#_#_#
.SKIP 1
COMPANY NAME            _#_#_#
.SKIP 1
USER NAME               _#_#_#_#_#
.SKIP 1
PROJECT CODE            _#_#_#_#_#
.SKIP 1
TELEPHONE NO. (EXT.)    _#_#_# _#_#_#-_#_#_#_#
.SKIP 1
REQUESTED BY            _#_#_# _#_#_#_#_#
.SKIP 1
GLOBAL ACCT. NO.        _#_#_#_#_#
.SKIP 1
DISTRICT NO.            _#_#
.SKIP 1
DESCRIPTION OF WORK
WILL DELIVER 3 TAPES TO THE COMPUTER CENTER.
EACH TAPE IS:  9 TRACK   EBCDIC   800 BPI   ODD PARITY
               VARIABLE RECORD LENGTH (MAX = 800 CHARS/RECORD)
               BLOCKING FACTOR = 1
.SKIP 1
IT IS SUGGESTED THAT YOU USE THE TAPER PROGRAM TO READ TAPES:
 -GO (UTIL) TAPER
    7 OR 9 TRACK: 9
    BLOCK SIZE IN CHARS: 9999
    ADD CR/LF TO END OF RECORD: Y
.SKIP 1
TAPE 1 : HAS ONE SMALL FILE (1 RECORD).  STARTS WITH BRACKET, LETTER X,
         AND SIX DIGITS.  WILL BE 2ND OR 3RD FILE ON TAPE.  CAN USE 
         MAGCON ON THIS ONE, IF YOU WISH.
.SKIP 1
TAPE 2 : HAS TWO SMALL FILES (1 TO 3 RECORDS EACH).  BOTH START WITH
         BRACKET, LETTER AND SIX DIGITS.  LIKELY THE 2ND AND 3RD FILES,
         OR 3RD AND 4TH FILES.  USE TAPER.
.SKIP 1
TAPE 3 : HAS ONE VERY LARGE FILE.  STARTS WITH BRACKET, LETTER AND SIX
         DIGITS.  WILL BE THE 2ND OR 3RD FILE ON TAPE.  (LIKELY THE
         3RD:  FILE 1 IS TAPE MARK, FILE 2 IS BINARY FILE .)
.SKIP 1
CALL THE FILES:  TAPE1,  TAPE2A,  TAPE2B,  TAPE3
.SKIP 1
ON FILE FROM TAPE 3, EACH RECORD SHOULD START WITH A BRACKET.
.SKIP 1
CALL IF ANY QUESTIONS.  THANK YOU.
.SKIP 1
DELIVERY INSTRUCTIONS
HOLD TAPES FOR PICKUP.  SEND MESSAGE WHEN COMPLETED.
.SUBTITLE <TAPER <SAMPLE <RUN
\\
.PAGE
.INDEX <TAPER <SAMPLE <RUN
((<SAMPLE <RUN))
^^
.SKIP 1
"_."R (UTIL)MAGCON (CR)
"MAGCON (V5.2) HERE AT (TIME)(DATE)"
.SKIP 1
"*** INPUT SPECIFICATION ***"
"1. FILE:" FTA1: (CR)
"2. MODE:" EBCDIC (CR)
"5. RECORD SIZE:" 800 (CR)
"6. BLOCKING FACTOR:" 1 (CR)
"8. STOP ON ERRORS?" Y (CR)
"11. DENSITY:" 800 (CR)
"13. ADVANCE FILES:" 0 (CR)
"    BACKSPACE:" 0 (CR)
"14. ADVANCE RECORDS:" 0 (CR)
"15. REWIND:" O (CR)
"16. LABEL:" N (CR)
"20. UNLOAD TAPE?" N (CR)
"22. MULTIPLE OUTPUT FILES FOR THIS INPUT FILE?" N (CR)
.SKIP 1
"ALL INPUT ENTRIES CORRECT?" Y (CR)
.SKIP 1
"*** OUTPUT SPECIFICATION ***"
"1. FILE:" (OPER)FIL1 (CR)
"2. MODE:" ASCII (CR)
"3. VARIABLE LENGTH RECORDS?" Y (CR)
"4. CRLF'S IN ASCII FILE?" Y (CR)
"5A. MAXIMUM RECORD SIZE:" 800 (CR)
"8. STOP ON ERRORS?" Y (CR)
"24. DELETE TRAILING BLANKS?" N (CR)
.SKIP 1
"ALL OUTPUT ENTRIES CORRECT?" Y (CR)
.SKIP 1
"MAGCON (TIME)(DATE)
.SKIP 1
"SUBSTITUTIONS?" N (CR)
"MAGCON: DSK:FIL1(OPER)                 1 BLK. 1 REC. WRITTEN."
.SKIP 1
"8.992 SEC. 7 I/0 UNITS."
"5777 OCTAL LOCATIONS USED."
"1 BLK. 1 REC. READ."
"1 BLK. 1 REC. WRITTEN."
.SKIP 1
"REPEAT SPECIFICATIONS?" Y (CR)
.PAGE
\\
^^
"_."AS FTA1 MTA1 (CR)
"FTA1 ASSIGNED"
.SKIP 1
"_."R (UTIL)TAPER (CR)
.SKIP 1
"INPUT FROM DEVICE :"MTA1 (CR)
.SKIP 1
"7 OR 9 TRACK TAPE (7 OR 9) :" 9 (CR)
.SKIP 1
"BLOCK SIZE IN CHARACTERS :"9999 (CR)
.SKIP 1
"ADD CR/LF TO END OF RECORD (Y OR N):"Y (CR)
.SKIP 1
"OUTPUT TO DEVICE :" DSK (CR)
.SKIP 1
"FILE NAME :"FIL4 (CR)
.SKIP 1
"OUTPUT TO DEVICE :"DSK (CR)
.SKIP 1
"FILE NAME :"FIL5 (CR)
.SKIP 1
"OUTPUT TO DEVICE :"DSK (CR)
.SKIP 1
"FILE NAME :"FIL6 (CR)
.SKIP 1
"OUTPUT TO DEVICE :"DSK (CR)
.SKIP 1
"FILE NAME :"FIL7 (CR)
.SKIP 1
"END OF JOB"
.SKIP 1
"EXIT"
.NOTE
DON'T FORGET TO RENAME FILES OVER TO REQUESTOR DIRECTORY.
.END NOTE
.PAGE!END OF TAPER SAMPLE RUN
.NOFILL.NOJUST
.INDEX <AUXMAP
.SUBTITLE <AUXMAP
.CENTER
<AUXMAP <PROGRAM
.CENTER
--------------
.SKIP 1
.INDEX <AUXMAP <INTRODUCTION
((<INTRODUCTION))
\\
.FILL.JUST
.PARA
^PROGRAM BUILDS AUXILIARY CIRCUITS TO <TYMCOM ^X'S AND RUNS 
THE <DSKMAP PROGRAM.  ^THE INFORMATION IS EDITED AND PRINTED
AT THE TERMINAL.
.INDEX <AUXMAP <PROCEDURES
.SUBTITLE <PROCEDURES
.NOFILL.NOJUST
.SKIP 1
((<PROCEDURES))
.SKIP 1
^TO COMPILE THE PROGRAM:
.SKIP 1
 1.  ^LOG INTO THE <USERNAME THE PROGRAM IS TO RESIDE IN.
.SKIP 1
 2.  ^MAKE SURE '<AUXMAP.TBA' AND '<EGTLIB.MAC' ARE PRESENT.
.SKIP 1
 3.  ^DO THE FOLLOWING.
^^
.SKIP 1
        .'COM EGTLIB'
.SKIP 1
        .'R (FTTBA)TBA'
.SKIP 1
        VER 4.5
.SKIP 1
        >'LIBRARY EGTLIB,(TBATLIB)TLIB'
.SKIP 1
        >'GET AUXMAP'
.SKIP 1
        >'SAVE BINARY'
.SKIP 1
        <AUXMAP.SHR: NEW FILE, OK? 'Y'
.SKIP 1
        >'QUIT'
.SKIP 1
        EXIT
.SKIP 1
        .'R SETLIC'
.SKIP 1
        FILE NAME: '<AUXMAP.LOW'
.SKIP 1
        HOME FILE ACCESS? 'Y'
.SKIP 1
        EXIT
.SKIP 1
        .
.SKIP 1
\\
 4.  ^CREATE A FILE NAMED '<SYSNOS.DAT' CONTAINING THE SYSTEM 
     NUMBERS (NO LETTERS) THAT THE PROGRAM DEFAULTS TO.
     ^THE NUMBERS SHOULD BE SEPARATED BY A COMMA.
.SKIP 1
        <EX.  34,35,36,37,38
.SKIP 1
 5.  ^THE FILES NEEDED FOR THE PROGRAM TO RUN ARE
     '<AUXMAP.SHR', '<AUXMAP.LOW', AND '<SYSNOS.DAT'.
     ^ANY OTHER FILE MAY BE DELETED.
.PAGE
^TO RUN THE PROGRAM:
.SKIP 1
 1.  ^LOG INTO A <USERNAME THAT IS VALID ON THE <TYMCOM ^X'S THAT 
     YOU WANT <DSKMAPS FOR.
.SKIP 1
 2.  ^AT THIS POINT YOU MAY CREATE YOUR OWN '<SYSNOS.DAT' FILE.
     ^USE THE FORMAT DESCRIBED IN _#4 ABOVE.
     ^THE PROGRAM WILL LOOK FOR THIS FILE BEFORE LOOKING FOR THE
     FILE IN THE RUN FROM DIRECTORY.
.SKIP 1
 3.  ^TYPE '<R <(USER)AUXMAP' TO RUN THE PROGRAM USING THE DEFAULT
     SYSTEMS (THE ONE IN YOUR LOGGED IN DIRECTORY OR THE
     ONE IN THE RUN FROM DIRECTORY).
.SKIP 1
 4.  ^TYPE '<R <(USER)AUXMAP;SYSTEM <NUMBERS SEPARATED BY COMMAS'
     TO OVERRIDE DEFAULTS.
.SKIP 1
 5.  ^TYPE TWO ESCAPES OR TWO CONTROL ^C'S (DEPENDING ON WHETHER
     YOU'RE IN <TYMEX OR <PDP-10 MODE) TO TRAP OUT.  ^THE PROGRAM
     WILL PROBABLY PRINT SEVERAL LINES BEFORE ACTUALLY STOPPING.
     ^BUT HAVE FAITH, IT WILL STOP.
.SKIP 1
 6.  ^IF THE PROGRAM APPEARS TO HANG, GIVE IT 2 TO 3 MINS BEFORE
     ABORTING THE RUN (SEE ITEM _#5 ABOVE), IT WILL USUALLY TRY
     TO RECOVER AND RESTART FROM THE SYSTEM THAT CAUSED THE
     PROBLEM.
.SUBTITLE <SAMPLE <RUN
.PAGE
^^
.LEFT MARGIN 7
.SKIP 1
.INDEX <AUXMAP <SAMPLE <RUN
<((SAMPLE <RUN))
.SKIP 1
"SYSN"
"TYMSHARE C35-P034/G-1 10-7-80"
"-"O OP SY WF (CR)
(YOUR NAME)(CR)
.SKIP 1
"-"(YOUR PASSWORD)(CR)
"-"RU (UTIL)AUXMAP;22,23,25,26,33 (CR)
.SKIP 2
"VERSION 6.2"
.SKIP 2
"DSKMAP FOR SYSTEM C22      8-JAN-81 09:23"
.SKIP 1
 "FILE   CKSUM  LAST UPD VERSION COMMENTS"
"SYSTEM DOSMER 21-DEC-80 P034/G-4     Fix to GIVPGK crashes."
"BACKUP JIQKAH 11-Dec-80 P034/G-3     Temporary fix to IL problem"
"OLDMON XOFQAK 12-Nov-80 P034/F-7     ***"
"NEWMON SAKGUC 11-Nov-80 P034/G-2     ***"
"BCODEB YAVKUG  7-Sep-78 SYNC BOOT    (TYMNET)SYNCLD.SAV 9-7-78"
.SKIP 3
"DSKMAP FOR SYSTEM V23      8-JAN-81 09:24"
.SKIP 1
 "FILE   CKSUM  LAST UPD VERSION COMMENTS"
"SYSTEM TENKIR 22-DEC-80 P034/G-2     FIX FOR BLTPAG USER WORKING SET
                                      BUG"
"BACKUP XEZXIC 21-Oct-80 P034/F-2     108 JOBS,FAST DSKCLN"
"OLDMON SUYHIK 21-Oct-80 P034/D3-33   NODE FIX"
"NEWMON LUKRAB 21-Oct-80 P034/G10-7   ASK BILL SOLEY FOR EXPLANATION"
"BCODE  XODLUB  3-Nov-78 413.00       (TYMNET)NOD43.SAV 11-03-78"
"BCODEB YAVKUG  4-Oct-78 SYNC BOOT    (TYMNET)SYNCLD.SAV"
"DSPCH  QOTCAB 15-Nov-76 OPS27        (TYMNET)RPS620.CUR DISPATCH"
"DSPCHB TEDSEH  9-Feb-76 OPS26        (TYMNET)RPS620.BAK DISPATCH"
"BADMON YOXSAF 19-Sep-80 P034/F-4     FRECOR__3*FCWDS;FC DEADLOCK BUG
                                      FIX"
.SKIP 2
" ** WE HAVE BEEN ZAPPED" ** "
.SKIP 2
"UNKNOWN ERROR"
.SKIP 2
"SYSTEM 33 IS UNAVAILABLE."
.SKIP 2
"EOJ"
.SKIP 2
"-"
.SUBTITLE <CLRMAI <INTRODUCTON
.PAGE!END OF AUXMAP DOCUMENTATION
.LM 7
.INDEX <CLRMAI
.CENTER;<CLRMAI <PROGRAM
.CENTER;--------------
.INDEX <CLRMAI <INTRODUCTION
.SKIP 1
((<INTRODUCTION)
\\
.FILL.JUST
.PARA
<CLRMAI is designed to clear mail sent to a particular username on
any <TYMCOM-X from one system.
.INDEX <CLRMAI <PROCEDURE
.SKIP 1
.NOFILL.NOJUST
((<PROCEDURE))
.FILL.JUST
.PARA
^To run the program you have to be logged into the username you want to
clear.  ^Being <gfd'd into another directory will not affect this.
.PARA
^The program has three ways of determining which systems to clear.
.NOFILL.NOJUST
.SKIP 1
 1.  ^The system numbers are included in the command string as follows:
.SKIP 1
        <R <(USER)CLRMAI;33,35,37
.SKIP 1
     ^Note that the system numbers must be separated by a comma, no other
     character will do.
.SKIP 1
 2.  ^The system numbers are contained in a file called <SYSNOS.DAT
     which is in the logged in or <gfd'd to directory.  ^The system
     numbers may be separated by commas or carriage returns.
.SKIP 1
     ^To use this  default system type:
.SKIP 1
        <R <(USER)CLRMAI
.SKIP 1
 3.  ^If the above file was not found then the program looks for the
     the same filename in the program owner's directory (the directory
     that the program is stored in).  ^For this reason the
     file <CLRMAI.LOW should have license <HF.
.FILL.JUST
.PARA
^The above conventions allow many users to run the same disk copy 
of the program while still allowing them to personalize the
default systems that the program will clear.
.PAGE
.NOFILL.NOJUST
.INDEX <CLRMAI <SAMPLE <RUN
.SUBTITLE <SAMPLE <RUN
<((SAMPLE <RUN))
.SKIP 1
-<RU <(USERNAME)CLRMAI
.SKIP 1
<VERSION 4.1
.SKIP 1
08
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
38
39
54
56
.SKIP 1
-
.SUBTITLE <COM <PROGRAM
.PAGE!END OF CLRMAI DOCUMENTATION
.INDEX <COM <INTRODUCTION
.NOFILL.NOJUST
.CENTER;<COM <DOCUMENTATION
.CENTER;-----------------
.SKIP 1
((<INTRODUCTION))
.FILL.JUST
.PARA
\\
<COM IS A PROGRAM THAT TAKES THE CONTENTS OF A FILE AND
LOADS IT INTO AN INPUT BUFFER FOR EXECUTION. ^ANY COMMANDS NORMALLY
INPUT AT THE MONITOR LEVEL (OR AS A RESPONSE TO A PROGRAM PROMPT)  CAN
BE PUT IN THE FILE. ^THE FILE CAN BE CREATED BY PROGRAM OR IN AN
EDITOR.
.NOFILL.NOJUST
.INDEX <COM <PROCEDURE
.SKIP 1
((<PROCEDURE))
.PARA
^THE PROGRAM IS CALLED IN THE FOLLOWING MANNER AFTER ^G^F^DING TO <UTIL:
.SKIP 1
^^
.INDENT 5
-RU COM;FILE.EXT (CR)    (ENTER THE FILE CREATED IN EDITOR)
\\
.FILL.JUST
.PARA
        ^AT THIS POINT <COM WILL OUTPUT A CARRIAGE RETURN LINE FEED
IF THE FILE HAS BEEN FOUND. ^TOO START EXECUTION TYPE A SECOND
CARRIAGE RETURN. ^THE PROGRAM WILL TAKE THE CONTENTS OF <FILE.EXT
AND LOAD IT IN THE INPUT BUFFER AND START EXECUTING THE COMMANDS.
^AFTER LOADING THE CONTENTS OF THE FILE INTO A BUFFER <COM WILL PRINT
^^
.SKIP 1
.NOFILL.NOJUST
.INDENT 5
EXIT            (THEN COM WILL DISPLAY EACH COMMAND AS IT
                      IS EXECUTED).
.SKIP 1
.INDENT 5
VARIATIONS:
.SKIP 1
.INDENT 5
-RU COM (CR)
\\
.PARA
.FILL.JUST
^IF NO FILE HAS BEEN SPECIFIED THE COMMAND STRING <COM WILL
LOOK IN THE CURRENT <USER DIRECTORY FOR A FILE NAMED
.SKIP 1
.INDENT 5
<FILE.CMD.
\\
.FILL.JUST
.PARA
^IF FOUND <COM WILL PROMPT WITH A CARRIAGE RETURN INDICATING IT HAS FOUND
<FILE.CMD. ^A CARRIAGE RETURN AT THIS POINT WILL START EXECUTION.
^IF <FILE.CMD IS NOT FOUND <COM WILL PROMPT THE USER WITH
.NOFILL.NOJUST
^^
.SKIP 1
.INDENT 5
INPUT FILE:______.___           (ASKING FOR A FILE NAME)
\\
.FILL.JUST
.PARA
^ANY FILE NAME MAY BE ENTERED AT THIS POINT.  <COM WILL CHECK FOR THE
NAME GIVEN AND THEN PROMPT WITH A CARRIAGE RETURN IF FOUND
OR DISPLAY 
^^
.NOFILL.NOJUST
.SKIP 1
.INDENT 5
****ERROR: CANNOT FIND ______.___ (FILE NAME ENTERED)
.SKIP 1
.INDENT 5
EXIT
.SKIP 1
.INDENT 5
-
.SKIP 1
WARNINGS:
        DO NOT EXCEED 200 CHARACTERS PER FILE (BUFFER) THIS IS THE
MAXIMUM NUMBER OF CHARACTERS THAT CAN BE PUT IN AN INPUT BUFFER.
\\
.FILL.JUST
.PARA
^THE FILES CAN BE LINKED BY HAVING THE LAST ENTRY IN THE
FILE (OR BUFFER AT EXECUTION TIME) CALL THE NEXT FILE TO BE LOADED.
.SUBTITLE <CREATING <COM <FILES
.PAGE
^^
.NOFILL.NOJUST
.INDEX <COM <CREATING <FILES
.CENTER;CREATING COM FILES IN EDITOR
.CENTER;----------------------------
.SKIP 1
_.R EDITOR (CR)
*A (CR)
WATCH
SYSN
DAY
SYS UP
WHE OPR:
SET HAPPY
PSP
R LETTER ; BE SURE YOU REMOVE OBSOLETE LETTER(S).
C
Q
SCH
SYS _<PAM>
;
;
; **** IMPORTANT NOTE **** IF PJ IS IN A CONTROL C (_^C)
;                          STATE OR NOT LOGGED IN, NOTIFY
;                          YOUR SUPERVISOR IMMEDIATELY.
;
;
SYS _<CHKPNT>
R CHKCLK ('KI' ONLY)
;
; IF ANY STATEMENT OTHER THAN THE ABOVE OUTPUT, NOTIFY
; YOUR SUPERVISOR IMMEDIATELY.
;
RU (UTIL)COM;MIDS1
*W MIDS (CR)
 EXISTING FILE - OK? Y (CR)
_#_#_# CHARS
*Q (CR)
.PAGE
_.R EDITOR (CR)
*A (CR)
R 1CLEAR; GIVE BATCH CONTROLLER ANY REQUESTS THAT OUTPUT HERE.
DIR (OPER)/TOT
DIR (HOLD)/TOT
;
;
; *** NOTE *** IF A BACKUP HAS BEEN TAKEN, AND YOU HAVE NOT BEEN
; NOTIFIED TO SAVE THESE FILES, THEY SHOULD BE DELETED.
;
; WARNING!  DO NOT DELETE ANY FILE THAT HAS TO DO WITH
;           ALL FILES (EXAMPLE:  33AF11.07).
;
GFD OPER
SYSN
SYS ME
SETE OP SY GD TD WF
WATCH DAY
*W MIDS1 (CR)
 EXISTING FILE - OK? Y (CR)
_#_#_# CHARS
*Q (CR)
.SUBTITLE <COM <SAMPLE <RUN
.PAGE!END OF CREATING COM FILES IN EDITOR
.INDEX <COM <SAMPLE <RUN
((SAMPLE RUN))
.SKIP 1
_.GFD UTIL
.SKIP 1
_.RU COM;MIDS
.SKIP 1
EXIT
_.WATCH
.SKIP 1
_.SYSN
TYMSHARE C35-P034/G-1 10-7-80
_.DAY
3-JAN-1981 15:46:37
.SKIP 1
_.SYS UP
.SKIP 1
TYMSHARE C35-P034/G-1 10-7-80 up 15:14:05 at 15:46:38 on Sat Jan 3,1981
.SKIP 1
_.WHE OPR:
.SKIP 1
On Job  3 WCOSR1 #71 OPER +
_.SET HAPPY
.SKIP 1
_.PSP
DSKB:   62992
BPA2(DSKB2:350402):  SDATAI(CTRL:0 DRV:C Data field correctable)
 SCONI( Recoverable data check) SLBN(CYL:101 HEAD:0 RECORD:4) SDAT:1
BPA4(DSKB4:350404):  RETRIES:2 SDATAI(CTRL:0 DRV:E No message) SCONI(
 Count error Equipment check) SLBN(CYL:0 HEAD:1 RECORD:15) SDEV:13
.SKIP 1
_.R LETTER ; BE SURE YOU REMOVE OBSOLETE LETTER(S).
@C
1   0
2   0
3   0
4   0
5   0
6   0
@Q
.SKIP 1
_.SCH
000000
.SKIP 1
_.SYS _<PAM>
 1  DETACHED      PAM    4        SL       143.88  0:00:02 PJ +
.SKIP 1
.;
.;
.; **** IMPORTANT NOTE **** IF PJ IS IN A CONTROL C (_^C)
.;                          STATE OR NOT LOGGED IN, NOTIFY
.;                          YOUR SUPERVISOR IMMEDIATELY.
.;
.;
_.SYS _<CHKPNT>
 2  DETACHED      CHKPNT 8        TI        81.84  0:00:02 OPER +$
.SKIP 1
 2  010381 SAT 69    DUMP UN1         OPER
 2  010381 DAT 22    DUMP SYS         OPER
.SKIP 1
 2  ACT    as+init         OPER
.PAGE
_.R CHKCLK ('KI' ONLY)
THE DK10 CLOCK WORKS CORRECTLY.
.SKIP 1
EXIT
.SKIP 1
.;
.; IF ANY STATEMENT OTHER THAN THE ABOVE OUTPUT, NOTIFY
.; YOUR SUPERVISOR IMMEDIATELY.
.;
_.RU (UTIL)COM;MIDS1
.SKIP 1
EXIT
.SKIP 1
_.R 1CLEAR; GIVE BATCH CONTROLLER ANY REQUESTS THAT OUTPUT HERE.
.SKIP 1
BATCH CLEAR - VERSION 3.06
FILE LAST CLEARED  03-JAN-81  15:33
.SKIP 1
03-JAN-81  15:48
.SKIP 1
EXIT
.SKIP 1
_.DIR (OPER)/TOT
.SKIP 1
TOTAL PAGES 473 FILES 12
.SKIP 1
_.DIR (HOLD)/TOT
.SKIP 1
TOTAL PAGES 2 FILES 1
.SKIP 1
.;
.;
.; *** NOTE *** IF A BACKUP HAS BEEN TAKEN, AND YOU HAVE NOT BEEN
.; NOTIFIED TO SAVE THESE FILES, THEY SHOULD BE DELETED.
.;
.; WARNING!  DO NOT DELETE ANY FILE THAT HAS TO DO WITH
.;           ALL FILES (EXAMPLE:  33AF11.07).
.;
_.GFD OPER
.SKIP 1
_.SYSN
TYMSHARE C35-P034/G-1 10-7-80
_.SYS ME
 8* OPER +
.SKIP 1
_.SETE OP SY GD TD WF
.SKIP 1
_.WATCH DAY
[15:50:12]
.SUBTITLE <INDIRECT <OR <COMMANDS <FILES
.PAGE!END OF COM PROGRAM DOCUMENTATION
^^
.INDEX <INDIRECT <OR <COMMANDS <FILES
.NOFILL.NOJUST
.CENTER;INDIRECT OR COMMANDS FILES
.SKIP 1
WHAT:   A SEPARATE FILE REFERRING TO NUMEROUS OTHER FILES IN 
.INDENT 7
A USERS DIRECTORY.
.SKIP 1
REASON:   TO HAVE AN ACCURATE LIST OF FILE NAMES ALREADY MADE UP.
.SKIP 1
USE:   MAY BE USED WITH TITO, SPOOL, PRINT AND LIST, DIRECT
.SKIP 1
FORMAT:   PROPER FORMAT FOR A COMMANDS OR INDIRECT FILE IS USER
.INDENT 9
NAME IN PARENTHESIS IN FRONT OF FIRST FILE ONLY: EX:
.INDENT 9
.SKIP 1
(USER)FILE.NM1
.INDENT 9
FILE.NM2
.INDENT 9
FILE.NM3
.INDENT 9
ETC...
.SK3
.CENTER;EDITOR COMMANDS
.SKIP 1
.CENTER;COMMONLY USED FOR INDIRECT FILES
.SKIP 1
.CENTER;_^ STANDS FOR CONTROL CHARACTER
.SKIP 1
.NO JUST
.NO FILL
APPEND OR A  = ALLOWS YOU TO START A FILE OR ADD TO EXISTING TEXT.
READ OR R  = READS INTO EDITOR AN EXISTING FILE.
WRITE OR W  = WRITES OUT TO FILE THE TEXT IN EDITOR.
_^A = DELETES THE CHARACTER AFTER WHICH IT IS TYPED.
_^Q = DELETES THE LINE AFTER WHICH IT IS TYPED.
_^D = DURING APPEND - TERMINATES APPEND.
_^D = DURING EDIT - COPIES REST OF OLD LINE AND TERMINATES EDIT.
_^D = DURING SUBSTITUTE - TERMINATES FIRST, THEN SECOND
        PARTS OF SUBSTITUTE.
_^E = INSERT TEXT IN OLD LINE-END INSERT WITH ANOTHER _^E.
/  = TYPES OUT ENTIRE FILE AS EXISTS IN EDITOR.
_#/ = TYPES OUT LINE NUMBER INDICATED BY _#.
_#EDIT OR _#E =  TYPES OUT LINE NUMBER INDICATED READY TO
               BE EDITED.
SUBSTITUTE OR S  = ALLOWS CHARACTER(S) TO BE INSERTED IN PLACE OF
.INDENT 17
CHARACTER(S) THROUGHOUT THE TEXT.
F"ANYTHING"=  = FINDS WHATEVER IS IN QUOTES ASKING PRINT?
.INDENT 15
AND GIVING LINE NUMBER(S) WHERE FOUND.
$=  = GIVES LINE NUMBER OF LAST LINE OF TEXT.
.PG
.SK3
.PARA
IF NO LIST OF FILES ALREADY EXIST YOU MUST BUILD YOUR OWN
IN EDITOR. THIS MAY BE DONE IN TWO WAYS:
.SKIP 1
1) EX.
   R EDITOR
   *APP (CR)
   (USER)FILE.NM1
   FILE.NM2
   FILE.NM3
   ETC...(CONTROL D TO END APPEND)
   *WRITE ANY.ANY
.SKIP 1
2) EX. IF BATCH REQUEST IS USED.
   MOD (*1BATCH)PPRBAK.DAT  (FILE OF BATCH REQUESTS)
   42905 CHARS
   *F"FILE.NM1"=   (LOOKING FOR PROPER SECTION OF BATCH FILE)
   PRINT? N    (YOU COULD ANSWER EITHER Y OR N)
   2105          (GIVES YOU LINE NUMBER(S) WHERE FOUND)
   1   (THIS TELLS YOU NUMBER OF TIMES FOUND)
   *1,2104D     (DELETES TEXT IN FRONT, MAKING YOUR
                   FIRST FILE LINE 1.)
   *1/
   FILE.NM1
   *F"FILE.200"=  (LOOKING FOR LINE NUMBER OF LAST FILE YOU WANT)
   PRINT? (Y OR N)
   200
   1
   *201,$D  (DELETES TEXT AFTER YOUR LAST FILE)
   *$=200
   *1MODIFY  (SAME AS EDIT BUT DOESN'T PRINT OUT LINE)
   _<(SAMPLE)>FILE.NM1   (DONE BY _^E(SAMPLE)_^E_^D WHERE _^=CONTROL)
   *1,2/
   (SAMPLE)FILE.NM1
   FILE.NM2  
   *W (OPER)FILE.CMD
    NEW FILE
   385 CHRS
   *Q

   .
.PG
.CENTER;EXAMPLE OF  USING PPRBAK.DAT FILE:
.SKIP 1

_.R EDITOR
*R (*1BATCH)PPRBAK.DAT
65995 Chars
*F"H9477.DAT"=
Print? Y
3527
H9477.DAT
1
*1,3526D
*F"H9277.DAT"=
Print? N
7
1
*8,$D
*/
H9477.DAT
H5277.DAT
H9577.DAT
H9677.DAT
H1177.DAT
H9177.DAT
H9277.DAT
*1MOD
_<(MARZ49)>H9477.DAT
*1/
(MARZ49)H9477.DAT
*W MARZ.CMD
 New file Y
85 Chars
*Q

_.TYPE MARZ.CMD
(MARZ49)H9477.DAT
H5277.DAT
H9577.DAT
H9677.DAT
H1177.DAT
H9177.DAT
H9277.DAT
.PG
.PARA
IF YOU HAVE AN EXISTING LIST OF FILES THEY MAY NOT BE
IN PROPER FORMAT. SOME EXAMPLES OF WHAT YOU MAY GET AND
HOW TO CORRECT FOLLOW:
.SKIP 1
        1)ADDING USER NAME IN FRONT OF FIRST FILE.
                A. EDIT LINE 1 WITH _^E(USER)_^E_^D
                B. EDIT LINE 1 BY TYPING WHOLE NEW LINE
                   WITH (USER)FILE.NM1
.SKIP 1
        2)DELETING USER NAME IN FRONT OF ALL FILENAMES,EXCEPT LINE 1
                *2,$S (SAYS SUBSTITUTE LINES 2 THRU END)
                "_^D"FOR"(USER)_^D"
                WAIT? NO
                _#  (TELLS NUMBER SUBS MADE, SHOULD BE
                   1 LESS THAN TOTAL NUMBER OF FILES.)
.SKIP 1
        3)SPACES IN FRONT OF FILENAMES.
                *S
                "_^D"FOR"___^D"(WHERE__ IS NUMBER OF SPACES)
.PG
YOU CAN ALSO CREATE A FILE FROM A USER DIRECTORY ON DISK.
FOR EXAMPLE THE PRINT AND LIST COMMANDS WILL NOT ACCEPT
ANY WILCARD BUT (*). YOU GET A REQUEST TO LIST ALL
*._#_#.0 FILES IN OLDEST TO NEWEST ORDER NOT
SEPARATING BETWEEN THE FILES.
.SKIP 1
        1)TYPE IN COMMAND: FI FILE.DIR__(USERNAME)*._#_#0/REV
                A. THIS WILL CREATE A FILE IN (OPER) CALLED
                    FILE.DIR WHICH WILL LIST IN ORDER FROM
                    OLDEST TO NEWEST THE FILES SPECIFIED.
.SKIP 1
        2) YOU MUST DO SOME EDITING AS THERE WILL BE SPACES
            BETWEEN THE NAME AND EXTENSION RATHER THAN THE (.)
.SK3
.PARA
ONCE INDIRECT FILE IS BUILT PROPERLY, YOU MAY USE IT THUS:
.SKIP 1
        DIR @ANY.ANY  (ANY.ANY NAME OF YOUR INDIRECT FILE)
        PRINT @ANY.ANY
        LIST @ANY.ANY
        IN TITO  STORE @ANY.ANY **
        IN SPOOLING REQUEST FILES? @ANY.ANY
.SK3
**TITO HAS A LIMIT TO THE NUMBER OF CHARACTERS WHICH MAY
BE USED IN A COMMAND (INDIRECT)FILE. IF YOU HAVE MORE
THAN 50 FILES TO STORE YOU SHOULD MAKE YOUR INDIRECT
FILES IN BLOCKS OF 50. IF FILE NAMES ARE SHORTER YOU COULD
GO TO 60 BLOCKS.
.SUBTITLE <TELHLP
.PAGE!END OF INDIRECT OR COMMAND FILES
.INDEX <TELHLP <DOCUMENTATION
\\
.CENTER;<TELHLP <DOCUMENTATION
.CENTER;--------------------
.SKIP 1
.NOFILL.NOJUST
<PURPOSE:        ^TO CREATE A COMMANDS FILE FOR <(SYS)TELECO AND START
                <TELECO RUNNING.
.SKIP 1
<TO <START:       ^TYPE '<R <(UTIL)TELHLP'
.SKIP 1
<TO <ABORT:       ^TYPE ^ESCAPE ^KEY OR A _^<C.
.SKIP 1
.FILL.JUST
^BELOW IS A LIST OF QUESTIONS ASKED BY THE PROGRAM AND POSSIBLE
ANSWERS:
.SKIP 1
^^
.NOFILL.NOJUST
DO YOU WANT TO RUN DETACHED ?
.SKIP 1
\\
.FILL.JUST
    ^TYPE A <'Y' FOLLOWED BY A CARRIAGE RETURN IF YOU WANT 
    <TELECO TO RUN IN A DETACHED STATE.
^^
.SKIP 1
.NOFILL.NOJUST
COPY FROM USERNAME:
.SKIP 1
\\
.FILL.JUST
    ^TYPE A USERNAME ON THE CURRENT SYSTEM, OR TYPE A CARRIAGE RETURN
    TO DEFAULT TO YOUR CURRENT DIRECTORY NAME (^LOGGED ^IN OR <GFD'D),
    OR TYPE A PERIOD ('.') TO DEFAULT TO YOUR ^LOGGED ^IN
    DIRECTORY NAME REGARDLESS OF <GFD STATUS.  ^THE FIRST TIME YOU
    USE EITHER OF THE DEFAULT METHODS YOU ARE PROMPTED FOR THE
    ACTUAL USERNAME,  ONCE THIS IS DONE IT IS NEVER ASKED AGAIN.
.SKIP 1
^^
.NOFILL.NOJUST
COPY TO USERNAME:
.SKIP 1
\\
.FILL.JUST
    ^TYPE A USERNAME, OR USE EITHER OF THE DEFAULT METHODS ABOVE.
    ^THE PROGRAM WILL ALLOW ANY USERNAME, BUT REMEMBER THAT YOU
    WILL NOT HAVE WRITE FILES STATUS ON THE REMOTE SYSTEMS
    SO BE CAREFUL WHAT YOU ENTER.
.SKIP 1
^^
.NOFILL.NOJUST
COPY TO SYSTEM(S):
.SKIP 1
\\
.FILL.JUST
    ^TYPE THE SYSTEM NUMBER OR SYSTEM NUMBERS SEPARATED BY COMMAS
    THAT YOU WANT TO COPY FILES TO.  ^THE CURRENT DEFAULT SYSTEM
    NUMBERS ARE 29-39.
.SKIP 1
^^
.NOFILL.NOJUST
REPLACE EXISTING FILES ?
.SKIP 1
\\
.FILL.JUST
    ^TYPE A <'Y' IF YOU WANT TO OVERWRITE THE REMOTE FILES,
    AN <'N' IF YOU DO NOT WANT TO OVERWRITE THE REMOTE FILES.
.SKIP 1
^^
.NOFILL.NOJUST
FILE NAMES:
.SKIP 1
\\
.FILL.JUST
    ^TYPE THE FILE NAMES YOU WANT COPIED.  ^DO NOT TYPE A USERNAME
    AT THIS POINT.  ^YOU MAY USE THE <TYMCOM-X WILDCARDING CHARACTERS
    '*' AND '_#'.  SEPARATE FILENAMES BY COMMAS.
.SKIP 1
^^
.NOFILL.NOJUST
O.K. ?
.SKIP 1
\\
.FILL.JUST
    ^ANSWER <'Y' IF YOU WANT TO START <TELECO RUNNING, OR AN <'N'
    IF YOU WANT TO START OVER.
.SUBTITLE <SAMPLE <RUN
.PAGE
.INDEX <TELHLP <SAMPLE <RUN
.NOFILL.NOJUST
^^
<((SAMPLE <RUN))
.SKIP 1
_.R (UTIL)TELHLP
.SKIP 1
VERSION _#._#
.SKIP 1
DO YOU WANT TO RUN DETACHED ? (Y OR N)
.SKIP 1
COPY FROM USERNAME : (USERNAME, _<CR>, OR '.')
.SKIP 1
COPY TO USERNAME : (SAME AS ABOVE)
.SKIP 1
SYSTEM NUMBERS : (SYSTEM NUMBER TO COPY TO SEPARATED BY ',')
.SKIP 1
REPLACE EXISTING FILES ? (Y OR N)
.SKIP 1
FILES: (FILENAMES SEPARATED BY COMMAS)
.SKIP 1
O.K. ? (Y OR N)
.SKIP 1
:
:
:
CANNOT OPEN 'COPY TO' FILE: /TELHLP.LOW/
:
REPLACING FILE (UTIL:26)TELHLP.LOW
.SKIP 1
COPY STARTING
.SKIP 1
(UTIL:33)TELHLP.LOW COPIES TO (UTIL:26)TELHLP.LOW
.SKIP 1
455 (470) CHARS. TRANSMITTED
:
-
.PAGE!END OF TELHLP DOCUMENTATION
.SUBTITLE <XFORM
.PAGE
\\
.CENTER;<XFORM <PROGRAM <ON <THE <TYMCOM-X
.CENTER;-----------------------------
.SKIP 1
.INDEX <INTRODUCTION
.SUBTITLE <INTRODUCTION
((<INTRODUCTION))
.FILL.JUST
.PARA
^PROGRAM WAS DEVELOPED TO CONVERT CUSTOMER <TITO 7<TRK TAPES TO <TITO
9<TRK 6250 TAPES.
.INDEX <XFORM <PROCEDURES
.SUBTITLE <XFORM <PROCEDURES
.SKIP 1
((<PROCEDURES))
.PARA
^THE PROGRAM BEGINS BY ASKING FOR THE INPUT UNIT TO BE USED AND ASKS FOR
THE DENSITY OF INFORMATIN ON THE TAPE.  ^A CHECK IS MADE TO MAKE SURE THE
UNIT IS A 7<TRK UNIT.  ^NEXT, THE USER IS ASKED FOR THE UNIT NAME OF THE
OUTPUT TAPE.  ^CHECKS ARE MADE ON THE UNIT FOR 9<TRK, WRITE RING AND
6250 <BPI.  ^THE DENSITY IS AUTOMATICALLY SET TO 6250.
.PARA
^NEXT THE USER IS QUERRIED AS TO IF THE TAPES ARE READY.  ^A <YES RESPONSE
WILL CONTINUE THE PROGRAM.  ^THE TAPES ARE RESET TO <LOAD POINT BEFORE
THE COPY BEGINS.
.PARA
^UPON COPY COMPLETION, A MESSAGE IS TYPED OUT INDICATING THAT THE COPY
IS DONE; BOTH TAPES ARE REWOUND AND UNLOADED AND THEN THE USER IS ASKED
FOR THE NEXT TAPE(S) FOR CONVERSION.
.NOTE
^THIS PROGRAM IS GOOD FOR TAPES WITH <TEX AND <TITO SAVE SETS AND SINGLE
REEL TAPES.  ^IT DOES NOT CONVERT <TEX SAVE SETS TO <TITO
SAVE SETS AND IT CANNOT HANDLE SAVE SETS AND FILES WHICH ARE SPLIT
OVER TO ANOTHER TAPE.
.END NOTE
.SUBTITLE <INDEX
.PAGE!END OF XFORM DOCUMENT
.INDEX <INDEX
.CENTER;<INDEX
.CENTER;-----
.DO INDEX
.PAGE
ArMr%