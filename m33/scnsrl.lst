SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 1
S.MAC	 6-JUL-89 16:37		S.MAC - with system parameter file for P035/E, March 1989

     1				SUBTTL	S.MAC - with system parameter file for P035/E, March 1989
     2
     3				IF2,<IFNDEF LISTSN,<TAPE>>	;Skip to PASS2 in all but COMMON.LST
     4				;THIS MODULE ASSEMBLED WITH KL-10 PARAMETER FILE - KLSYM.MAC
     5
     6					IF2,<IFNDEF LISTSN,<		;LIST KLSYM.MAC IN COMMON ONLY
     7								TAPE>>
     8				TITLE SCNSER - TYMNET VERSION OF SCNSER
     9
    10					STOPCD(,ENTRY,SCNSER)^
    11					ENTRY	SCNSER		;For library searches
    12	000000'	260040	000000*	SCNSER::PUSHJ	P,DIE		;**** Default stopcode for "SCNSER" ****
    13	000001'	634356	634562		SIXBIT	/SCNSER/  	;Title of module
    14	000002'	000000	000000		S$NONAME,,0		;?NONAME stopcode "SCNSER+nnn(nnnnnn)"
    15			000000'	S$NAME==SCNSER			;For STOPCDs with no arguments
    16					SALL>
    17				^
    18
    19			000001		SCNVER==1	;Version number reported to the base
    20			000000		SCNREL==0	;Release number reported to the base
    21
    22				;THE 620 AND PDP-10 SHARE CORE AS A MEANS OF COMMUNICATION.
    23				;THE 620 PUTS THINGS DESTINED FOR THE PDP-10 INTO A RING
    24				;BUFFER AND VICE VERSA. THE PDP-10 EXAMINES THE STATE OF THE
    25				;RING BUFFER EVERY CLOCK TICK. FOR OUTPUT, THE PDP-10 NEVER
    26				;PUTS OUT MORE THAN 30 (=%CHRMX) CHARACTERS ON A GIVEN LINE
    27				;WITHOUT CHECKING THE INPUT RINGS IN CASE THE 620 REQUESTS
    28				;THE PDP-10 TO STOP DOING OUTPUT ON THAT LINE.
    29
    30				;NOTE VERY CAREFULLY THAT THESE ROUTINES DEPEND ON THE FACT THAT
    31				;CLOCK LEVEL NEVER INTERRUPTS UUO LEVEL AND VICE VERSA.
    32				;FOR THIS REASON THERE ARE NO INTERLOCKS BETWEEN THE TWO
    33				;LEVELS. ANYONE WHO CHANGES THIS BEWARE!!!!!!!!!!
    34
    35				SUBTTL	TABLE OF CONTENTS
    36						;Insert table of contents here
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 2
SCNSER.MAC	25-JAN-91 22:40		DEFINITIONS

    37				SUBTTL	DEFINITIONS
    38
    39			000035	AUXSTM==:^D29		;MAX NUMBER OF CHRS ALLOWED IN AUX STRING
    40			000010	AUXSTL==1+<<AUXSTM+6>/5>;SIZE OF AUX STRING STORAGE BLOCK
    41
    42			000033	STDALT==33		;STANDARD ALTMODE
    43
    44			000004	TTCHKS==4		;SIZE OF TELETYPE BUFFERLETS
    45			000010	TT2CHK==TTCHKS*2
    46
    47			000002	IMGDIM==2		;TIME TO WAIT IN IMAGE AFTER FIRST CHR
    48			000012	IMGTIM==^D10		;TIME TO WAIT IN IMAGE MODE FOR FIRST CHR
    49			000003	TIRSVD==3		;Number of chunks reserved for emergencies
    50			000110	TIWKC==^D72		;# of input chars to wake job (72 or 132)
    51				IFG TIWKC-^D72,<PRINTX Setting TIWKC above 72 causes PTY backpressure problems
    52						TIWKC==^D72>
    53			000120	TILOW==TIWKC+^D8	;# of unread input chars to trigger backpressure
    54							;(TIWRNN set to TILOW.  TIHLTN based on IRING size)
    55			000024	OWTIM==^D20		;1/2 OF ORANGE-BALL-WAIT TIMEOUT ON ZAP
    56							;(SEE TTYZAP)
    57
    58			000120	CTY==120		;FOR SPECIAL TYPOUT ON PARITY ERR
    59
    60			000036	%CHRMX==^D30		;MAX NUMBER OF CHRS TO OUTPUT ON LINE WITHOUT
    61							;RETURNING TO INPUT RING CODE (THE EFFECT IS
    62							;THAT %CHRMX IS THE NUMBER OF CHARACTERS OF
    63							;"DELAY" IN GETTING BACKPRESSURE APPLIED
    64							;TO THE LINE)  Should be <4*N>-2 for efficiency
    65
    66			000017	%PBTIM==^D15		;PTY BLOCK INPUT TIMEOUT
    67
    68				;CONDITIONAL ASSEMBLY FLAGS
    69
    70			000000	YLBUG==0		;1 IF BASE TURNS ALL ORANGE BALLS INTO YELLOW
    71			000001	OPCRET==1		;1 IF PROGRAMS THINK TTCALLS IGNORE IMAGE
    72
    73				SUBTTL	THE EXTERNALS FOR SCNSER
    74
    75				;FROM COMMON
    76				EXTERNAL BITNTB,LINFLG,NMXFLG,ALR620,JBTABT,JBTUNM,JBTUN1
    77				EXTERNAL JBTCIN,JBTCOT,JBTBCS,JBTLIC,JBTAWQ,JBTBET,JBTBIO
    78				EXTERNAL IRING,ORING,ORPPDP,IRPPDP,ORP620,IRP620,MSKIRG,MSKORG
    79				EXTERNAL JOBN,HIGHJB,CONFIG,QUEPCB
    80
    81				;GENERAL EXTERNALS
    82				EXTERNAL TPOPJ,TPOPJ1,CPOPJ,CPOPJ1,IPOPJ,IPOPJ1
    83				EXTERNAL STTIOD,JBTSTS,LINTAB,JBTPRV
    84				EXTERNAL PJOBN,WSYNC,SETRUN,PEVEN8,JOB,REFLAG
    85				EXTERNAL TTYTAB,PUNIT,STATES,UPTIME,PVYMOD
    86				EXTERNAL DEVOPR,THSDAT,JFYSEC,TIME	;NAME OF OPER CONSOLE
    87				EXTERNAL GET4WD,GIV4WD,BIOCOR
    88
    89				;EXTERNALS USED BY MUUO ROUTINES
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 2-2
SCNSER.MAC	25-JAN-91 22:40		THE EXTERNALS FOR SCNSER

    90				EXTERNAL OUT,BUFCLR,ADRERR,ADVBFF,ADVBFE
    91				EXTERNAL GTCGSZ,RELEA6
    92				EXTERNAL CHKSEG,SETIO2
    93
    94				EXTERNAL TTVINI,TTVIN2		;BIT IN LINTAB (LH) TO SAY SHOULD RUN INITIA
    95
    96				;UUOCON ALSO USES TTYFND,LDLCOM,TTYU;STC,TTYFUW
    97				;AND DDBLDB,LDBDCH,LDBDDB
    98
    99				;FOR CLOCK1
   100				EXTERNAL AXAVAL,AXREQ,AXSWT,AXWAIT,MLOWQ,RNQ,WSCHED,CHGCLK
   101				EXTERNAL FCREQ,FCWAIT
   102				EXTERNAL BPAVAL,BPREQ,BPWAIT
   103
   104				;FILSER ALSO USES TTYFUW,TTYSTR
   105
   106				;PICON
   107				EXTERNAL ABTUUO,TAKTRJ,TAKNZJ,TAKOTJ,TSTKTJ,TSTKTP,TSTTRJ,JBTPIP,TAKTRP
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 3
SCNSER.MAC	25-JAN-91 22:40		TERMINAL CHARACTERISTICS DEFINITIONS

   108				SUBTTL	TERMINAL CHARACTERISTICS DEFINITIONS
   109
   110				;TERMINAL CHARACTERISTICS
   111
   112				DEFINE TCHARS <;;Define TCNxxx, also expanded at TCNDSP and TCVMAX
   113				Z(CRD,1,TYMTC,TMCCRD)
   114				Z(IR,17,TYMTC,TMCIR)
   115				Z(OR,17,TYMTC,TMCOR)
   116				Z(PAR,1,TYMTC,TMCPAR)
   117				Z(HDX,1,TYMTC,TMCHDX)
   118				Z(PA,7,TYMTC,TMCPA)
   119				Z(PB,7,TYMTC,TMCPB)
   120				Z(PC,17,TYMTC,TMCPC)
   121				Z(XON,1,TYMTC,TMCXON)
   122				Z(ECH,1,TYMTC,TMCECH)
   123				Z(RXE,1,TYMTC,TMCRXE)
   124				Z(PD,17,TYMTC,TMCPD)	;PARM D, was TCNTYP/TMCTYP
   125				Z(NXO,1,BYTTC,LDPNXO)
   126				Z(WID,377,ACWIDC,0)
   127				Z(FC1,3,BYTTC,LDPFC1)
   128				Z(FC2,3,BYTTC,LDPFC2)
   129				Z(BSP,1,ACBSPC,0)
   130				Z(ERA,1,ACERAC,0)
   131				Z(DEF,1,ACDEFC,0)
   132				Z(LCO,1,BYTTC,LDPLCO)
   133				Z(TAB,1,BYTTC,LDPTAB)
   134				Z(FRM,1,BYTTC,LDPFRM)
   135				Z(LCT,1,BYTTC,LDPLCT)
   136				Z(NFC,1,BYTTC,LDPNFC)
   137				Z(PTP,1,ACPTPC,0)
   138				Z(BSD,1,BYTTC,LDPBSD)
   139				Z(CLA,377777777777,ACTCLA,0)	;Class (was TMCTTP)
   140				Z(RTC,1,BYTTC,LDPRTC)
   141				Z(KAT,1,TYMTC,TMCKAT)		;KATAKANA (Japanese modes), was TMCTYP
   142				Z(TYP,377777777777,ACTTYP,0)
   143				>  ;Max of 36 fields, so that TYMNET or PTY can be notified
   144
   145			000000	ZZN==0
   146				DEFINE Z(NAME,MAXVAL,TYPE,ARG) = <
   147					TCN'NAME==ZZN
   148					ZZN==ZZN+1
   149				>
   150				TCHARS
   151			000036	TCNN==ZZN
   152				IFG <TCNN-^D36>,<
   153					PRINTX MORE THAN 36 TYMCOM-X TERMINAL CHARACTERISTICS
   154					QQQQQQ
   155				>
   156	000003'	777777	777700	TCBALL:	<-1 _ <^D36-TCNN>>
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 4
SCNSER.MAC	25-JAN-91 22:40		TYMNET TERMINAL CHARACTERISTICS

   157				SUBTTL TYMNET TERMINAL CHARACTERISTICS
   158
   159				;DEFINE NAMES AND FIELD WIDTHS
   160
   161				DEFINE TERCHR <;;Terminal characteristics that TYMNET-II responds to
   162				TC(ECO,1)	; 0. ECHO
   163				TC(CIE,1)	; 1. ECHO CONTROL-I
   164				TC(ELF,1)	; 2. ECHO LF AS LF/CR/DELAY
   165				TC(ECR,1)	; 3. ECHO CR AS CR/LF
   166				TC(CRD,1)	; 4. CR DELAY
   167				TC(IR,4)	; 5. INPUT BAUD RATE CODE
   168				TC(OR,4)	; 6. OUTPUT BAUD RATE CODE
   169				TC(PAR,1)	; 7. PARITY (EVEN OR NONE)
   170				TC(HDX,1)	; 8. HALF DUPLEX
   171				TC(PA,3)	; 9. PARAMETER A
   172				TC(PB,3)	;10. PARAMETER B
   173				TC(PC,4)	;11. PARAMETER C
   174				TC(XON,1)	;12. X-ENABLE FOR REMOTE
   175				TC(ECH,1)	;13. ECHO CONTROL-H
   176				TC(RXE,1)	;14. REVERSE X-ENABLE
   177				TC(PD,4)	;15. PARAMETER D to ISIS (TMCPD was TMCTYP)
   178				TC(KAT,1)	;16. KATAKANA MODE (See comments at TYMTC2)
   179				TC(TOB,1)	;17. TERMINATE OUTPUT ON BREAK
   180				TC(ESC,1)	;18. ECHO ESCAPE
   181				TC(QM,1)	;19. Q-MODE (echo } and ~, they are not ALTMODEs)
   182				TC(SPA,1)	;20. SPACE PARITY  (not in EBUS02.J01!!)
   183				>
   184
   185				;DEFINE TERMINAL CHARACTERISTICS CODES
   186
   187			000000	ZZN==0
   188				DEFINE TC(N,Z)  <TMC'N==ZZN
   189				ZZN==ZZN+1>
   190				TERCHR
   191
   192			000077	TMCALL==77	;PROBE CODE TO GET ALL TERMINAL CHARACTERISTICS
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 5
SCNSER.MAC	25-JAN-91 22:40		DEFINE RECEIVED CHARACTERISTICS BYTE POINTERS

   193				SUBTTL	DEFINE RECEIVED CHARACTERISTICS BYTE POINTERS
   194
   195			000000	ZZWORD==0
   196		777777	777777	ZZPOS==-1
   197				DEFINE TC(N,W) <IFG <ZZPOS+W>-^D35,<ZZPOS==-1
   198				ZZWORD==ZZWORD+1>
   199				ZZPOS==ZZPOS+W
   200				LDP'N:	POINT W,LDBTMR+ZZWORD(U),ZZPOS>
   201
   202	000004'	430105	000044	TABTMR:	TERCHR
   203	000005'	420105	000044
   204	000006'	410105	000044
   205	000007'	400105	000044
   206	000010'	370105	000044
   207	000011'	330405	000044
   208	000012'	270405	000044
   209	000013'	260105	000044
   210	000014'	250105	000044
   211	000015'	220305	000044
   212	000016'	170305	000044
   213	000017'	130405	000044
   214	000020'	120105	000044
   215	000021'	110105	000044
   216	000022'	100105	000044
   217	000023'	040405	000044
   218	000024'	030105	000044
   219	000025'	020105	000044
   220	000026'	010105	000044
   221	000027'	000105	000044
   222	000030'	430105	000045
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 6
SCNSER.MAC	25-JAN-91 22:40		DEFINE SENT CHARACTERISTICS BYTE POINTERS

   223				SUBTTL	DEFINE SENT CHARACTERISTICS BYTE POINTERS
   224
   225			000000	ZZWORD==0
   226		777777	777777	ZZPOS==-1
   227				DEFINE TC(N,W) <IFG <ZZPOS+W>-^D35,<ZZPOS==-1
   228				ZZWORD==ZZWORD+1>
   229				ZZPOS==ZZPOS+W
   230				LDS'N:	POINT W,LDBTMS+ZZWORD(U),ZZPOS>
   231
   232	000031'	430105	000046	TABTMS:	TERCHR
   233	000032'	420105	000046
   234	000033'	410105	000046
   235	000034'	400105	000046
   236	000035'	370105	000046
   237	000036'	330405	000046
   238	000037'	270405	000046
   239	000040'	260105	000046
   240	000041'	250105	000046
   241	000042'	220305	000046
   242	000043'	170305	000046
   243	000044'	130405	000046
   244	000045'	120105	000046
   245	000046'	110105	000046
   246	000047'	100105	000046
   247	000050'	040405	000046
   248	000051'	030105	000046
   249	000052'	020105	000046
   250	000053'	010105	000046
   251	000054'	000105	000046
   252	000055'	430105	000047
   253				INTERN LDSRXE	;CTYSIM needs this pointer
   254
   255			000024	MAXTMC==.-TABTMS-1
   256			000025	TMCSLP==^D21	;IF MAXTMC .lt. TMC .ge. MAXTMC+TMCSLP, WE WILL
   257						;IGNORE TYMNET MESSAGES FOR THE <TMC> RATHER
   258						;THAN CRASHING (THIS LETS TYMNET GET AHEAD OF US)
   259			000002	TMCSIZ==ZZWORD+1
   260				IFG MAXTMC-^D35,<PRINTX MORE THAN 36 TERMINAL CHARACTERISTICS
   261				QQQQQQ>
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 7
SCNSER.MAC	25-JAN-91 22:40		OUTPUT REQUEST BITS

   262				SUBTTL OUTPUT REQUEST BITS
   263
   264				;WHEN A PORT WANTS SOMETHING SENT TO TYMNET, IT SETS ONE OF
   265				;THESE BITS IN ITS LDBOUT WORD. MESSAGES CORRESPONDING TO
   266				;HIGH-ORDER BITS ARE SENT FIRST.
   267
   268				DEFINE OUTBIT, <
   269				ZZZ(HSH)	;HUSH - SUPRESS MESSAGES FROM INITIALIZATION ROUTINE
   270				ZZZ(TRO)	;TERMINATE BLOCK OUTPUT
   271				ZZZ(CGB)	;CHARACTER GOBBLER
   272				ZZZ(BIN)	;BLOCK INPUT
   273				ZZZ(TRI)	;TERMINATE BLOCK INPUT
   274				ZZZ(BPN)	;BACKPRESSURE ON
   275				ZZZ(BPF)	;BACKPRESSURE OFF
   276				;-------messages above this line may be output on a backpressured port
   277				ZZZ(BOP)	;BLOCK OUTPUT IN PROGRESS (PTYS ONLY)
   278				ZZZ(SRD)	;RED BALL
   279				ZZZ(SEC)	;ECHO MODE
   280				ZZZ(STP)	;TERMINAL CHARACTERISTICS PROBE
   281				ZZZ(STC)	;SET TERMINAL CHARACTERISTICS
   282				ZZZ(SBL)	;SEND BELL (!)
   283				ZZZ(FIL)	;FILLER CHARACTERS
   284				ZZZ(RUB)	;RUBOUT CHARACTERS
   285				ZZZ(OUT)	;OUTPUT CHARACTERS
   286				ZZZ(BOT)	;BLOCK OUTPUT
   287				ZZZ(SYL)	;YELLOW BALL	(Set by TTYZAP if not a zap from Tymnet)
   288				ZZZ(HNG)	;SOFT ZAP	(Drop DTR to autodial modem, keep circuit)
   289				ZZZ(ZAP)	;HARD ZAP	(Wait for orange ball if host initiated)
   290				ZZZ(ECO)	;ECHO CHARACTERS
   291				ZZZ(SGR)	;GREEN BALL
   292				ZZZ(SOG)	;ORANGE BALL
   293				>
   294
   295			000000	ZZN==0
   296				DEFINE ZZZ(NAME), <
   297					IFE <ZZN-36>, <
   298						PRINTX MORE THAN 36 OUTPUT BITS
   299						QQQQQQ
   300					>
   301					LOP'NAME:POINT 1,LDBOUT(U),ZZN
   302					ZZN==ZZN+1
   303				>
   304	000056'	430105	000003	OUTBIT
   305	000057'	420105	000003
   306	000060'	410105	000003
   307	000061'	400105	000003
   308	000062'	370105	000003
   309	000063'	360105	000003
   310	000064'	350105	000003
   311	000065'	340105	000003
   312	000066'	330105	000003
   313	000067'	320105	000003
   314	000070'	310105	000003
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 7-2
SCNSER.MAC	25-JAN-91 22:40		OUTPUT REQUEST BITS

   315	000071'	300105	000003
   316	000072'	270105	000003
   317	000073'	260105	000003
   318	000074'	250105	000003
   319	000075'	240105	000003
   320	000076'	230105	000003
   321	000077'	220105	000003
   322	000100'	210105	000003
   323	000101'	200105	000003
   324	000102'	170105	000003
   325	000103'	160105	000003
   326	000104'	150105	000003
   327
   328			000006	BPOKBN==LOPBPF-LOPHSH	;BIT# OF LOWEST-PRIORITY MESSAGE
   329							;THAT CAN BE SENT ON A BACKPRESSURED PORT
   330			000024	NUMECO==LOPECO-LOPHSH	;BIT # OF ECHO
   331			000026	LAPBIT==LOPSOG-LOPHSH   ;LAST LEGAL PRIORITY BIT
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 8
SCNSER.MAC	25-JAN-91 22:40		LINE DATA BLOCK

   332				SUBTTL LINE DATA BLOCK
   333
   334				;LINTAB:	ONE WORD PER PORT. RH = ADR OF LINE DATA BLOCK
   335				;		LH 13-17 =0 FOR @ LINTAB
   336
   337				;LDBDDB		ONE LINE DATA BLOCK PER PORT. LINK BETWEEN
   338				;		THE LINE DATA BLOCK AND THE TTY DDB IS THE
   339				;		THING MANIPULATED BY ATTACH AND DETACH.
   340
   341	000000			CTYLDB::PHASE	0	;TTY LDB PROTOTYPE
   342	000000			LDICLR:!
   343	000105'	000000	000000	LDBDDB::!0	;(RH)	ADDR OF ATTACHED DDB, IF ATTACHED
   344	000106'	000000	000000	LDBLIN:! 0	;27-35	Port number (LDPLNO, 9 bits)
   345						;18-26	9 unused bits
   346						; 2-17	Origination host number (LDPHST, 16 bits)
   347						; 1	1 unused bit
   348			400000	LNLZIN==400000	; 0	Zapper received from TYMNET & not echoed yet
   349	000107'	000000	000000	LDBOPB:! 0	;BYTE POINTER TO SET NEED-OUTPUT BIT
   350	000110'	000000	000000	LDBOUT:! 0	;BITS SPECIFYING WHAT WANTS TO BE OUTPUT
   351	000111'	000000	000000	LDBTCB:! 0	;(PTYS) BITS INDICATING CHANGED TERMINAL CHARACTERISTICS
   352
   353	000112'	000000	000000	LDBBIO:! 0	;(LH)	BLOCK OUTPUT BUFFER ADDR
   354						;(RH)	BLOCK INPUT BUFFER ADDR
   355
   356	000113'	000000	000000	LDBBKP:! 0	;^U POINTER, RESET TO HERE
   357	000114'	000000	000000	LDBBKI:! 0	;(RH)	# INPUT CHARACTERS SINCE LBBBKP
   358						;(LH)	# BREAK2 CHARACTERS SINCE LDBBKP
   359
   360	000115'	000000	000000	LDBTIP:! 0	;INPUT PUTTER
   361	000116'	000000	000000	LDBTIT:! 0	;INPUT TAKER
   362	000117'	000000	000000	LDBTIC:! 0	;# CHARACTERS IN INPUT BUFFER
   363	000120'	000000	000000	LDBECT:! 0	;ECHO TAKER
   364	000121'	000000	000000	LDBECC:! 0	;# CHARACTERS IN ECHO BUFFER
   365	000122'	000000	000000	LDBBKC:! 0	;(RH)	# BREAK CHARACTERS IN INPUT BUFFER
   366						;(LH)	# BREAK CHARACTERS IN ECHO BUFFER
   367	000123'	000000	000000	LDBBK2:! 0	;(RH)	# BREAK2 CHARACTERS IN INPUT BUFFER
   368						;(LH)	# BREAK2 CHARACTERS IN ECHO BUFFER
   369
   370	000124'	000000	000000	LDBTOP:! 0	;OUTPUT PUTTER
   371	000125'	000000	000000	LDBTOT:! 0	;OUTPUT TAKER
   372	000126'	000000	000000	LDBTOC:! 0	;# CHARACTERS IN OUTPUT BUFFER
   373
   374	000127'	000000	000000	LDBFLP:! 0	;OUTPUT FILLER POINTER (FOR HT/VT/FF PADDING)
   375
   376	000130'	000000	000000	LDBRBI:! 0	;RUBOUT ECHO PUTTER
   377	000131'	000000	000000	LDBRBO:! 0	;RUBOUT ECHO TAKER
   378	000132'	000000	000000	LDBRBC:! 0	;# RUBOUT ECHO CHARACTERS
   379	000133'	000000	000000	LDBLOG::!0	;TYMNET login data
   380						;< 0	logged-in, bits 4-35 hold data from supervisor
   381						;= 0	not in use
   382						;> 0	in the process of logging in
   383			200000	LLLZAP==200000	; 1	zapper received or HANG uuo done on port
   384			100000	LLLNLN==100000	; 2	no line, the base has given up on this port
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 8-2
SCNSER.MAC	25-JAN-91 22:40		LINE DATA BLOCK

   385						; 3     unused TYMCOM-X bit
   386						; 4-11  first byte from needle (bits 4&5 not used by EBUS)
   387			004000	LLLHDX==004000	; 6	terminal is half duplex (32.-63. decimal)
   388						; 7-11	terminal identifier code (0.-31. decimal)
   389						;14-19	originating node # (high-order 8 bits)
   390						;22-27	originating node # (low-order 6 bits) (20&21 unused)
   391						;29-35	originating port # (obsolete, not valid in ISIS CONSAT)
   392	000134'	000000	000000	LDBBYT:! 0	;RANDOM BYTES
   393
   394			400000	L2LOEX==400000	;0	(MUST BE SIGN BIT) OUTPUT SHOULD BE
   395						;	GIVEN MORE ROOM (TO KEEP FROM TRAPPING
   396						;	DURING AN OUTSTR)
   397			200000	L2LCCS==200000	;1	SEEN 1 ESCAPE/^C
   398			100000	L2LTBK==100000	;2	(LDPTBK) TABS ARE BREAKS (BREAKSET 2 MODE)
   399			040000	L2LBBP==040000	;3	(LDPBBP) BACKSPACE IS PUNCTATION, NOT A BREAK
   400			020000	L2LNTB==020000	;4	(LDPNTB) DON'T ECHO HT, VT, FF
   401			010000	L2LLDF==010000	;5	JOB WANTS TO LEAVE DEFERRED ECHO MODE
   402			004000	L2LDEL==004000	;6	DELETE IN PROGRESS (I.E., WE HAVE TYPED
   403						;	A SLASH AND ARE ECHOING DELETED CHARS)
   404			002000	L2LOWS==002000	;7	ONCE-ISECOND LOGIC HAS FOUND
   405						;	L2LOWT SET
   406			001000	L2LBSP==001000	;8	(LDPBSP) SEND BACKSPACE FOR CHARACTER-DELETES
   407			000400	L2LOWT==000400	;9	LOGOUT LOGIC HAS SENT A YELLOW BALL AND
   408						;	IS WAITING FOR AN ORANGE BALL BACK
   409						;10-11	(LDPMOD) MONITOR MODE
   410						;12-13	(LDPFC2) FILLER CLASS 2 (HT)
   411						;14-21	(LDPWID) LINE WIDTH
   412						;22-23	(LDPFC1) FILLER CLASS 1 (VT FF)
   413						;24-27	(LDPTIM) IMAGE-INPUT-TIMEOUT TIMER
   414						;28-35	(LDPPOS) CURRENT LINE POSITION (0-511.)
   415	000135'	000000	000000	LDBMOD:! 0	;BYTES TO INDICATE THE MODE LINE IS IN
   416
   417			400000	LMLTBI==400000	;0	TRMI REQUESTED BUT TRMIHR NOT RECEIVED
   418			200000	LMLPSP==200000	;1	1 IF PORT STATUS RECEIVED BUT NOT READ
   419						;2-5	LAST PORT STATUS MESSAGE RECEIVED (see comment @ ACPSM)
   420			001000	LMLBIO==001000	;8	PORT ENABLED FOR BLOCK I/O
   421						;9-15	IMAGE COUNT FOR CHARGING
   422						;16-22	LINE MODE BITS FOR INPUT
   423						;16-18	ECHO MODE
   424						;19-22	INPUT MODE
   425						;23-31	IMAGE MODE BREAK CHARACTER
   426						;32-35	(UNUSED)
   427	000136'	000000	000000	LDBDCH::!0	;DEVICE CHARACTERISTICS
   428
   429				;BITS IN LH
   430
   431			400000	LDLNOP==400000	; *0	TYMNET REQUESTS NO MORE OUTPUT
   432						;	(MUST BE SIGN BIT)
   433			200000	LDLSOX==200000	;  1	SUPPRESS OUTPUT TRANSLATION
   434			100000	LDLECS==100000	; *2	EAT COMMAND SYNC
   435			040000	LDLPTY==040000	;  3	PSEUDO-TTY
   436			020000	LDLCOM==:20000	;! 4	IN COMMAND MODE
   437			010000	LDLBKA==010000	;! 5	SINGLE CHARACTER ACTIVATES
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 8-3
SCNSER.MAC	25-JAN-91 22:40		LINE DATA BLOCK

   438			004000	LDLBK2==004000	;! 6	IN BREAK2 MODE
   439			002000	LDLIMI==002000	;! 7	IN IMAGE MODE
   440			001000	LDLDEF==001000	;!*8	DEFERRED ECHO MODE
   441			000400	LDLOSU==000400	; *9	OUTPUT SUPRESS (^O)
   442			000200	LDLNFC==000200	; *10	NO FREE CRS ON LONG LINES
   443			000100	LDLNEC==000100	; *11	NO ECHO
   444			000040	LDLAUX==000040	; *12	AUX CIRCUIT
   445			000020	LDLLCT==000020	; *13	LOWER CASE TO UPPER CASE
   446			000010	LDLTAB==000010	; *14	TTY DOES TABS
   447			000004	LDLLCP==000004	; *15	LOCAL COPY (2741)
   448			000002	LDLPTP==000002	; *16	IN PAPER TAPE MODE
   449			000001	LDLFRM==000001	; *17	TTY DOES FORMS AND VTABS
   450
   451				;! -- REFERENCED THROUGH LDPMDF TO SET LINE MODE
   452				;* -- GIVEN TO USER IN SAME BIT POSITION BY GETLCH
   453
   454				;BITS IN RH
   455
   456			400000	LDRBPS==400000	;BACKPRESSURE HAS BEEN SENT
   457			200000	LDRXOS==200000	;XOFF HAS BEEN SENT
   458			100000	LDRNXO==100000	;(LDPNXO) DON'T SEND XON/XOFF
   459			040000	LDRDEM==040000	;STAY IN DEFERRED ECHO MODE
   460			020000	LDRFCS==020000	;FULL CHARACTER SET MODE
   461			010000	LDRBIP==010000	;PTY BLOCK INPUT IN PROGRESS
   462	000137'	000000	000000	LDBDCX:! 0	;DEVICE CHARACTERISTICS EXTENSION
   463
   464				;BITS IN LH
   465
   466			400000	LXL120==400000	;1 IF FAST LINE, 0 IF SLOW (MUST BE SIGN BIT)
   467				;LXLxx==200000	;(UNUSED 2-6-81)
   468			100000	LXLBSD==100000	;BACKSPACE == RUBOUT/^A (LPDBSD)
   469			040000	LXLERA==040000	;IF L2LBSP SET: SEND <BS><SP><BS> NOT JUST <BS>
   470						;FOR CHARACTER DELETE (LDPERA)
   471			020000	LXLDLR==020000	;SUPPRESS $ ECHO ON ALTMODES
   472			010000	LXLLCO==010000	;SET FOR CONV OF UPPER TO LOWER CASE ON OUTPUT (LDPLCO)
   473			004000	LXLOOK==004000	;OK TO SEND ORANGE BALL -- SET WHEN A YELLOW BALL
   474						;ARRIVES THAT THE MONITOR DIDN'T REFLECT (BECAUSE
   475						;THE USER WAS TRAPPING YELLOW BALLS)
   476			002000	LXLRTC==002000	;[Darren] Half-assed ^R/^T compatibility - says to
   477						; treat ^T as .USESTAT command if set.
   478
   479				;BITS IN RH -- SET WHEN EVENTS THAT COULD CAUSE INTERRUPTS
   480				;	       HAPPEN TO A PORT FOR LATER POLLING WITH
   481				;	       GETLCH OR THE POLPRT UUO (WHICH CLEAR
   482				;	       THE BITS READ)
   483
   484			400000	LXRESC==400000	;ESCAPE SEEN
   485			200000	LXROBS==200000	;ORANGE BALL SEEN
   486			100000	LXRPSS==100000	;PORT STATUS MESSAGE SEEN (see comment at ACPSM)
   487			040000	LXRICL==040000	;INPUT CHARACTERS LOST
   488			020000	LXROCL==020000	;OUTPUT CHARACTERS LOST
   489			010000	LXRCHR==010000	;CHARACTER SEEN
   490			004000	LXRBRK==004000	;BREAK CONDITION SEEN:
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 8-4
SCNSER.MAC	25-JAN-91 22:40		LINE DATA BLOCK

   491						;1) BREAK CHARACTER READ IN NORMAL STATE
   492						;2) IMAGE BREAK HAPPENED IN IMAGE STATE
   493						;3) BREAK2 CHARACTER READ WITH BK2 SET
   494						;4) BLOCK RECEIVED IN BLOCK INPUT MODE
   495			002000	LXRYBS==002000	;YELLOW BALL SEEN
   496			001000	LXRCGS==001000	;CHARACTER GOBBLER SEEN
   497			000400	LXRIOS==000400	;OUTPUT DONE
   498			000200	LXRTCC==000200	;TERMINAL CHARACTERISTIC CHANGED OR PORT JUST ATTACHED
   499
   500	000140'	000000	000000	LDBCLA:! 0	; [dws] Optional sixbit terminal class
   501			000033	LDBTYP==LDBCLA	;[JMS] TYPE same as CLASS for now
   502	000034			LDBSTR::!BLOCK AUXSTL	;SPACE FOR AUX CIRCUIT STRING (LH of CONFIG item 154)
   503	000044			LDBTMR:! BLOCK TMCSIZ	;TERMINAL CHARACTERISTICS RECEIVED
   504	000046			LDBTMS:! BLOCK TMCSIZ	;TERMINAL CHARACTERISTICS TO BE SENT
   505	000155'	000000	000000	LDBTMT:! 0		;BIT N=1 TO SEND T.C. N
   506
   507				;LDBTMT BIT DEFINITIONS
   508
   509			000000	ZZN==0
   510				DEFINE TC(N,Z) <LTS'N==1B<ZZN>
   511				ZZN==ZZN+1>
   512				;TTY LDB. THERE IS ONE OF THESE PER PORT.
   513				TERCHR
   514
   515			000050	LDICLE==.-1
   516	000156'			DEPHASE
   517			000051	LDBLEN==:.-CTYLDB
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 9
SCNSER.MAC	25-JAN-91 22:40		RANDOM LDB BYTE POINTERS

   518				SUBTTL	RANDOM LDB BYTE POINTERS
   519
   520	000156'	300505	000026	TRMBYP:	POINT  5,LDBLOG(U),11	;Terminal ID code (see also LLLHDX)
   521
   522	000157'	001105	000001	LDPLNO::POINT  9,LDBLIN(U),35	;Port number (TTY0 thru TTY777)
   523	000160'	222005	000001	LDPHST:	POINT 16,LDBLIN(U),17	;Origination host number (new in EBUS 2.01)
   524
   525	000161'	410105	000027	LDPTBK:	POINT 1,LDBBYT(U),2	;TABS-AS-BREAKS
   526	000162'	400105	000027	LDPBBP:	POINT 1,LDBBYT(U),3	;BACKSPACE-AS-PUNCTUATION
   527	000163'	370105	000027	LDPNTB:	POINT 1,LDBBYT(U),4	;NO SPECIAL TAB HANDLING
   528	000164'	330105	000027	LDPBSP:	POINT 1,LDBBYT(U),8	;BS OR ERASE FOR CHAR DELETE
   529	000165'	300205	000027	LDPMOD:	POINT 2,LDBBYT(U),11	;MONITOR MODE
   530	000166'	260205	000027	LDPFC2:	POINT 2,LDBBYT(U),13	;FILLER CLASS 2
   531	000167'	260214	000027	LDPFA2:	POINT 2,LDBBYT(P1),13
   532	000170'	161005	000027	LDPWID:	POINT 8,LDBBYT(U),21	;LINE WIDTH
   533	000171'	161014	000027	LDPWDA:	POINT 8,LDBBYT(P1),21
   534	000172'	140205	000027	LDPFC1:	POINT 2,LDBBYT(U),23	;FILLER CLASS 1
   535	000173'	140214	000027	LDPFA1:	POINT 2,LDBBYT(P1),23
   536	000174'	100405	000027	LDPTIM:	POINT 4,LDBBYT(U),27	;IMAGE INPUT TIMEOUT TIMER
   537	000175'	001005	000027	LDPPOS:	POINT 8,LDBBYT(U),35	;ESTIMATED POSITION ON LINE
   538
   539	000176'	360405	000030	LDPPSM:	POINT 4,LDBMOD(U),5	;LAST PORT-STATUS MSG
   540	000177'	240705	000030	LDPCHG:	POINT 7,LDBMOD(U),15	;IMAGE COUNT FOR CHARGING
   541	000200'	150705	000030	LDPLMD:	POINT 7,LDBMOD(U),22	;ALL THE LINE MODE (INPUT AND ECHO)
   542	000201'	210305	000030	LDPMEC:	POINT 3,LDBMOD(U),18	;ECHO LINE MODE
   543	000202'	150405	000030	LDPMIN:	POINT 4,LDBMOD(U),22	;INPUT LINE MODE
   544	000203'	041105	000030	LDPIMB:	POINT 9,LDBMOD(U),31	;IMAGE MODE BREAK CHARACTER
   545	000204'	000405	000030	LDPMOU:	POINT 4,LDBMOD(U),35	;OUTPUT LINE MODE
   546
   547	000205'	420105	000031	LDPSOX:	POINT 1,LDBDCH(U),1	;SUPPRESS OUTPUT TRANSLATION
   548	000206'	370105	000031	LDPCOM:	POINT 1,LDBDCH(U),4	;COMMAND MODE BIT
   549	000207'	330505	000031	LDPMDF:	POINT 5,LDBDCH(U),8	;SOURCE OF LINE MODE INFO
   550	000210'	310105	000031	LDPNFC:	POINT 1,LDBDCH(U),10	;NO FREE CRLFS
   551	000211'	260105	000031	LDPLCT:	POINT 1,LDBDCH(U),13	;LOWER CASE TRANSLATION (TO UPPER)
   552	000212'	250105	000031	LDPTAB:	POINT 1,LDBDCH(U),14	;HARDWARE TABS
   553	000213'	230105	000031	LDPPTP:	POINT 1,LDBDCH(U),16	;PAPER TAPE MODE
   554	000214'	220105	000031	LDPFRM:	POINT 1,LDBDCH(U),17	;HARDWARE FF/VT
   555	000215'	170105	000031	LDPNXO:	POINT 1,LDBDCH(U),20	;DON'T SEND XON/XOFF
   556	000216'	160105	000031	LDPDEM:	POINT 1,LDBDCH(U),21	;PERPETUAL DEFERRED ECHO MODE
   557
   558	000217'	410105	000032	LDPBSD:	POINT 1,LDBDCX(U),2	;BACKSPACE == RUBOUT/^A
   559	000220'	400105	000032	LDPERA:	POINT 1,LDBDCX(U),3	;ERASE ON CHAR DEL
   560	000221'	360105	000032	LDPLCO:	POINT 1,LDBDCX(U),5	;LOWER CASE OUTPUT ONLY
   561	000222'	340105	000032	LDPRTC:	POINT 1,LDBDCX(U),7	;[Darren] special ^T mode
   562	000223'	004405	000033	LDPCLA:	POINT 36,LDBCLA(U),35	;Terminal CLASS
   563	000224'	004405	000033	LDPTYP:	POINT 36,LDBTYP(U),35	;Terminal TYPE
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 10
SCNSER.MAC	25-JAN-91 22:40		DEVICE DATA BLOCK

   564				SUBTTL DEVICE DATA BLOCK
   565
   566				;TTY DDB INTERRUPT-TO-CHANNEL BYTE POINTERS
   567
   568			000000	ZZWORD==0
   569		777777	777777	ZZBIT==-1
   570				DEFINE ZZZ(N) = <IFG <ZZBIT+6>-^D35,<ZZBIT==-1
   571				ZZWORD==ZZWORD+1>
   572				ZZBIT==ZZBIT+6
   573				DDPT'N:	POINT 6,DDBTRP+ZZWORD(F),ZZBIT>
   574
   575	000225'			DDPTAB:
   576
   577	000225'	360604	000014	ZZZ(SC)	;ESCAPE/^C RECEIVED
   578	000226'	300604	000014	ZZZ(CH)	;CHARACTER RECEIVED
   579	000227'	220604	000014	ZZZ(LN)	;BREAK RECEIVED
   580	000230'	140604	000014	ZZZ(TI)	;I/O WAIT
   581	000231'	060604	000014	ZZZ(TS)	;I/O WAIT SATISFIED
   582	000232'	000604	000014	ZZZ(LC)	;LOST CHARACTERS
   583	000233'	360604	000015	ZZZ(OB)	;ORANGE BALL RECEIVED
   584	000234'	300604	000015	ZZZ(ZP)	;ZAPPER RECEIVED
   585	000235'	220604	000015	ZZZ(PS)	;PORT STATUS MESSAGE RECEIVED   (See comment at ACPSM)
   586	000236'	140604	000015	ZZZ(YB)	;YELLOW BALL RECEIVED
   587	000237'	060604	000015	ZZZ(CG)	;CHARACTER GOBBLER RECEIVED
   588	000240'	000604	000015	ZZZ(TC)	;TERMINAL CHARACTERISTIC CHANGED AT OTHER END OF PTY
   589
   590			000014	TRPLEN==.-DDPTAB
   591
   592				;TRAP NUMBER INTERNALS
   593
   594			000000	TTNESC==:DDPTSC-DDPTAB
   595			000001	TTNCHR==:DDPTCH-DDPTAB
   596			000002	TTNLIN==:DDPTLN-DDPTAB
   597			000006	TTNYLB==:DDPTOB-DDPTAB
   598
   599				;OTHER DDB BYTE POINTERS
   600
   601	000241'	430104	000012	DDPBBP:	POINT 1,DDBDCH(F),0	;BACKSPACE AS PUNCTUATION
   602	000242'	420104	000012	DDPTBK:	POINT 1,DDBDCH(F),1	;TABS ARE BREAKS
   603	000243'	410104	000012	DDPNTB:	POINT 1,DDBDCH(F),2	;NO SPECIAL TAB ACTION
   604	000244'	001104	000012	DDPIMB: POINT 9,DDBDCH(F),35	;IMAGE MODE BREAK CHARACTER
   605	000245'	000404	000002	DDPMOD: POINT 4,DEVIOS(F),35	;DATA MODE
   606	000246'	400104	000012	DDPCOM: POINT 1,DDBDCH(F),3	;SAVED STATE OF LDLCOM
   607	000247'	360104	000004	DDPNZP:	POINT 1,DEVMOD(F),5	;NO-ZAP BIT
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 11
SCNSER.MAC	25-JAN-91 22:40		TTY DDB. ONCE CREATES ONE OF THESE PER JOB FOR TTYTAB TO POINT TO.

   608				SUBTTL	TTY DDB. ONCE CREATES ONE OF THESE PER JOB FOR TTYTAB TO POINT TO.
   609
   610	000250'			TTYLST:		;LABEL FOR FIRST TTY DDB IN CHAIN
   611	000000			SCNDDB::PHASE	0	;GLOBAL LABEL
   612	000250'	646471	200000		SIXBIT /TTY0/		;DEVNAM (PHYSICAL NAME)
   613	000251'	000000	000021		XWD 0,STTYBF+1		;DEVCHR. SIZE OF USER BUFFER
   614	000252'	000000	000000		0			;DEVIOS
   615	000253'	000000	006350'		XWD 0,SCNDSP		;DEVSER
   616	000254'	000013	014407		XWD DVTTY+DVIN+DVOUT,<<1_B>+<1_A>+<1_AL>+<1_I>+<1_IB>+<1_XA>>
   617								;DEVMOD
   618	000255'	000000	000000		0			;DEVLOG (LOGICAL NAME)
   619	000256'	000000	000000		0			;DEVBUF
   620	000257'	000000	000000		0			;DEVIAD
   621	000260'	000000	000000		0			;DEVOAD
   622	000261'	200000	000000	DEVCLS:! XWD 200000,0		;CLASS
   623	000262'	000000	000000	DDBDCH:! 0	;PROCESS-RELATED DEVICE CHARACTERISTICS NOT IN DEVIOS
   624			400000		DCLBBP==400000	;0	BACKSPACE IS PUNCTATION (DDPBBP)
   625			200000		DCLTBK==200000	;1	TABS ARE BREAKS (DDPTBK)
   626			100000		DCLNTB==100000	;2	DON'T ECHO HT/VT/FF (DDPNTB)
   627			040000		DCLCOM==040000	;3	SAVED STATE OF LDLCOM (DDPCOM)
   628							;27-35	IMAGE MODE BREAK CHARACTER (DDPIMB)
   629	000013			DDBBLK::!			;(LH) BACK LINK (PREVIOUS TTY DDB)
   630	000263'	000000	000000	DDBLDB::!0			;(RH) LDB ADDR
   631	000014			DDBTRP:! BLOCK <TRPLEN+5>/6	;INTERRUPT-TO-CHANNEL ASSIGNMENTS
   632
   633	000266'			DEPHASE
   634
   635			000016	SCNDDS==:.-SCNDDB
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 12
SCNSER.MAC	25-JAN-91 22:40		TTY FILE STATUS BITS

   636				SUBTTL	TTY FILE STATUS BITS
   637
   638				;LEFT HALF
   639
   640			400000	TTYOUW==:400000	;0	TI MEANS OUTPUT WAIT, NOT INPUT WAIT
   641			200000	TWTSPC== 200000	;1	TI BECAUSE SYSTEM OUT OF BUFFERLETS
   642			100000	IOSBKA== 100000	;2	BREAK ON ALL CHARACTERS
   643			040000	TINFIO== 040000	;3	CAUSE AN OUTPUT-DONE INTERRUPT WHEN OUTPUT DONE
   644			020000	TIOUSE== 020000	;4	UUO IN PROGRESS, DON'T ZAP DDB
   645
   646				;RIGHT HALF
   647
   648			001000	BK2IOS== 001000	;26	BREAK ON PUNCTUATION
   649			000400	DLRSUP== 000400	;27	NO ESCAPE ECHO
   650			000200	NOECHO== 000200	;28	NO ECHO
   651			000100	FCS==    000100	;29	FULL CHARACTER SET
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 13
SCNSER.MAC	25-JAN-91 22:40		HOST TO BASE AND BASE TO HOST MESSAGE TYPES

   652				SUBTTL	HOST TO BASE AND BASE TO HOST MESSAGE TYPES
   653
   654				;Buffer ring message formats
   655
   656				;Each logical record in the buffer ring is some number of 8-bit bytes.
   657				;These start on a word boundry, the last 4 bits of each PDP-10 word are
   658				;ignored, and records currently do not wrap around in the buffer.
   659
   660				;The first byte of each logical record is the message type, the next 8 bits
   661				;is the port number.  If the high order bit is set in the message type, then
   662				;the remaining 7 bits in the first byte specify the number of characters that
   663				;follow.  Otherwise the first byte is a command code.
   664
   665				;BASE HOST    "{"=from host, "}"=to host, "#"=crash, "-"=ignore
   666				;00##00	UNUSED, ERROR
   667				;TYP.00,xxx,xxx,xxx
   668
   669				;01{-01	SYSTEM IS ANSWERED, IGNORED ON INPUT BY KI/KL/F3, CHECKED BY KS
   670			000001	TYPANS==01 ;xxx,xxx,xxx
   671
   672				;02{-01	SYSTEM IS SHUT, IGNORED ON INPUT
   673			000002	TYPSHT==02 ;xxx,xxx,xxx
   674
   675				;03{}03	RESET THE INTERFACE, QUIETLY ZAP ALL CIRCUITS (DR11 IS BAD ON KS)
   676			000003	TYPRES==03 ;DEBUGF,VER,REV      (used to be TYPCRS - sender has crashed)
   677
   678				;04#}04	RESET ACKNOWLEGE, TELL DEBUG STATUS, VERSION NUMBER, REVISION LEVEL
   679			000004	TYPRAK==04 ;DEBUGF,VER,REV      (used to be TYPDIE - recipient should crash)
   680
   681				;05#}05	THE NODE HAS BEEN TAKEN OVER BY A NEW SUPERVISOR
   682			000005	TYPNSP==05 ;000,xxx,xxx
   683
   684				;06#}06	EXTERNALLY INITIATED NEW CIRCUIT.  TREAT NEXT SET OF DATA BYTES SPECIAL
   685			000006	TYPLOG==06 ;PORT,xxx,xxx
   686
   687				;07#}07	SUPERVISOR RESPONSE TO ESTABLISHING AN AUX CIRCUIT
   688			000007	TYPAUX==07 ;NEWPORT,KEY,xxx
   689
   690				;08{}10	BACKPRESSURE ON
   691			000010	TYPNOP==10 ;PORT,xxx,xxx
   692
   693				;09{}11	BACKPRESSURE OFF
   694			000011	TYPOUP==11 ;PORT,xxx,xxx
   695
   696				;0A{}12	CHARACTER GOBBLER, IGNORED ON INPUT
   697			000012	TYPGOB==12 ;PORT,xxx,xxx
   698
   699				;0B{}13	CIRCUIT ZAPPER, RECIPIENT MUST ECHO ZAPPER ON SAME PORT
   700			000013	TYPZAP==13 ;PORT,xxx,xxx
   701
   702				;0C{}14	ENTER DEFERED ECHO MODE
   703			000014	TYPEDC==14 ;PORT,xxx,xxx
   704
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 13-2
SCNSER.MAC	25-JAN-91 22:40		HOST TO BASE AND BASE TO HOST MESSAGE TYPES

   705				;0D{}15	LEAVE DEFERRED ECHO MODE
   706			000015	TYPLDC==15 ;PORT,xxx,xxx
   707
   708				;0E{}16	GREEN BALL
   709			000016	TYPGRN==16 ;PORT,xxx,xxx
   710
   711				;0F{}17	RED BALL
   712			000017	TYPRED==17 ;PORT,xxx,xxx
   713
   714				;10{}20	YELLOW BALL
   715			000020	TYPYEL==20 ;PORT,xxx,xxx
   716
   717				;11{}21	ORANGE BALL
   718			000021	TYPORG==21 ;PORT,xxx,xxx
   719
   720				;12{-22	HANG CHARACTER (DROP DTR, DON'T ZAP CIRCUIT, IGNORED ON INPUT)
   721			000022	TYPHNG==22 ;PORT,xxx,xxx
   722
   723				;13{-23	ENTER 2741 TRANSPARENT MODE (IGNORED ON INPUT)
   724			000023	TYPETM==23 ;PORT,xxx,xxx
   725
   726				;14{-24	LEAVE 2741 TRANSPARENT MODE (IGNORED ON INPUT)
   727			000024	TYPLTM==24 ;PORT,xxx,xxx
   728
   729				;15#}25	LOST BALL.  BLACK BALL IF DATA=FF, GRAY BALL IF DATA=00
   730			000025	TYPLOS==25 ;PORT,DATA,xxx
   731
   732				;16{#26	REQUEST NEW PORT NUMBER FOR BUILDING AUX CIRCUIT (KEY RETURNED BY 07)
   733			000026	TYPSUP==26 ;KEY,000,xxx
   734
   735				;17#}27	SUPERVISOR RESPONSE, 3RD BYTE IS ERROR CODE
   736			000027	TYPSUR==27 ;KEY,ERRCODE,xxx
   737
   738				;18{#30	SUPERVISOR LOGIN CHARACTER IN 3RD BYTE
   739			000030	TYPAXC==30 ;KEY,CHAR,xxx
   740
   741				;19{#31	TEST PATTERN PROBE (32 BITS OF TEST DATA)
   742			000031	TYPTSP==31 ;PORT,DATA1,DATA2,  DATA3,DATA4,xxx,xxx
   743
   744				;1A#}32	TEST PATTERN RESPONSE
   745			000032	TYPTSR==32 ;PORT,DATA1,DATA2,  DATA3,DATA4,xxx,xxx
   746
   747				;1B{#33	HOST SAD, 32 UNHAPPY BITS
   748			000033	TYPSAD==33 ;000,DATA1,DATA2,  DATA3,DATA4
   749
   750				;1C{#34	ECHO ON
   751			000034	TYPECN==34 ;PORT,xxx,xxx
   752
   753				;1D{#35	ECHO OFF
   754			000035	TYPECF==35 ;PORT,xxx,xxx
   755
   756				;1E{#36	SET TERMINAL CHARACTERISTICS, NUMBER AND VALUE
   757			000036	TYPTCS==36 ;PORT,TCHNUM,VALUE
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 13-3
SCNSER.MAC	25-JAN-91 22:40		HOST TO BASE AND BASE TO HOST MESSAGE TYPES

   758
   759				;1F{#37	TERMINAL CHARACTERISTICS PROBE, FOR A PARTICULAR TCHNUM
   760			000037	TYPTCP==37 ;PORT,TCHNUM,xxx
   761
   762				;20#}40	TERMINAL CHARACTERISTICS RESPONSE, ANSWER TO PROBE
   763			000040	TYPTCR==40 ;PORT,TCHNUM,VALUE
   764
   765				;21{#41	TELL SUPERVISOR NUMBER OF PORTS AND HOST NUMBER
   766			000041	TYPHSI==41 ;MAXPORT,HOST#,xxx
   767
   768				;22{#42	REQUEST FOR SUPERVISOR CLOCK INFO (BASE IGNORES THIS)
   769			000042	TYPCLP==42 ;xxx,xxx,xxx
   770
   771				;23#}43	RESPONSE WITH SUPERVISOR CLOCK INFO IN SECONDS SINCE 1-JAN-1974
   772			000043	TYPCLR==43 ;000,DATA1,DATA2,  DATA3,DATA4,xxx,xxx
   773
   774				;24{#44	INITIATE BLOCK OUTPUT
   775			000044	TYPBKO==44 ;PORT,COUNT1,COUNT2,  ADDR1,ADDR2,ADDR3,xxxx
   776
   777				;25#}45	BLOCK OUTPUT COMPLETE
   778			000045	TYPBOC==45 ;PORT,xxx,xxx
   779
   780				;26{#46	INITIATE BLOCK INPUT
   781			000046	TYPBIN==46 ;PORT,COUNT1,COUNT2,  ADDR1,ADDR2,ADDR3,xxxx
   782
   783				;27#}47	BLOCK INPUT TERMINATED - OUT OF BUFFER
   784			000047	TYPINB==47 ;PORT,COUNT1,COUNT2
   785
   786				;28#}50	BLOCK INPUT TERMINATED - END OF TRANSMISSION
   787			000050	TYPINE==50 ;PORT,COUNT1,COUNT2
   788
   789				;29#}51	BLOCK INPUT TERMINATED - TIMEOUT BY BASE
   790			000051	TYPINT==51 ;PORT,COUNT1,COUNT2
   791
   792				;2A{#52	REQUEST BLOCK INPUT TERMINATION
   793			000052	TYPIRQ==52 ;PORT,xxx,xxx
   794
   795				;2B#}53	BLOCK INPUT TERMINATED - BY HOST REQUEST
   796			000053	TYPIHR==53 ;PORT,COUNT1,COUNT2
   797
   798				;2C{#54	REQUEST BLOCK OUTPUT TERMINATION
   799			000054	TYPORQ==54 ;PORT,xxx,xxx
   800
   801				;2D#}55	BLOCK OUTPUT TERMINATED - BY HOST REQUEST
   802			000055	TYPOHR==55 ;PORT,xxx,xxx
   803
   804				;2E{}56	NEGOTIATE FOR NUMBER OF BLOCK I/O PORTS
   805			000056	TYPNEG==56 ;PORT,DATA,xxx
   806
   807				;2F#}57	BREAK RECIEVED
   808			000057	TYPBRK==57 ;PORT,xxx,xxx
   809
   810				;30#}60	PORT STATUS RECEIVED  (Obsolete, not in EBUS, see comment at ACPSM)
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 13-4
SCNSER.MAC	25-JAN-91 22:40		HOST TO BASE AND BASE TO HOST MESSAGE TYPES

   811			000060	TYPPSR==60 ;PORT,DATA,xxx
   812
   813				;31{-61	ENTER ALTERNATE DEVICE MODE (TURN ON PRINTER), IGNORED ON INPUT
   814			000061	TYPEAD==61 ;PORT,xxx,xxx
   815
   816				;32{-62	LEAVE ALTERNATE DEVICE MODE (TURN OFF PRINTER), IGNORED ON INPUT
   817			000062	TYPLAD==62 ;PORT,xxx,xxx
   818
   819				;33{#63	SET KEEP-ALIVE-FAILURE TIMER
   820			000063	TYPKAF==63 ;000,DATA1,DATA2
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 14
SCNSER.MAC	25-JAN-91 22:40		Special KS2020 microcode for KMC

   821				SUBTTL	Special KS2020 microcode for KMC
   822
   823				IFKMC<
   824					BYP1==^D9	;RIGHTMOST BIT POSITION OF FIRST BYTE
   825					BYP2==^D17	;      SECOND BYTE OF A BUFFER RING WORD
   826					BYP3==^D27	;      THIRD BYTE
   827					BYP4==^D35	;      LAST BYTE POSITION IN A BUF RING WORD
   828					OPDEF	UUILDB	[101000,,0]	;KMC ILDB
   829					OPDEF	UUIDPB	[102000,,0]	;KMC IDPB
   830					OPDEF	EXTEND	[123000,,0]	;EXTENDED INSTRUCTION OPCODE
   831					OPDEF	MOVSLJ	[016000,,0]	;MOVE STRING LEFT JUSTIFIED
   832					DEFINE	TYPI(TYPE)		;FOR LOADING TYPES WITH A
   833					<TYPE_^D8>			;	MOVSI INSTR
   834					>;END IFKMC
   835				IFNKMC<
   836			000007		BYP1==^D7	;RIGHTMOST BIT POSITION OF FIRST BYTE
   837			000017		BYP2==^D15	;      SECOND BYTE OF A BUFFER RING WORD
   838			000027		BYP3==^D23	;      THIRD BYTE
   839			000037		BYP4==^D31	;      LAST BYTE POSITION IN A BUF RING WORD
   840					OPDEF	UUILDB	[ILDB 0]	;NORMAL ILDB
   841					OPDEF	UUIDPB	[IDPB 0]	;NORMAL IDPB
   842					DEFINE	TYPI(TYPE)		;FOR LOADING TYPES WITH A
   843					<TYPE_^D10>			;	MOVSI INSTR
   844					>;END IFNKMC
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 15
SCNSER.MAC	25-JAN-91 22:40		BUFFER RING BYTE POINTERS

   845				SUBTTL	BUFFER RING BYTE POINTERS
   846
   847	000266'	341017	000000*	INPTYP:	POINT 8,IRING(P4),BYP1	;TYPE
   848	000267'	241017	000266*	INPLIN:	POINT 8,IRING(P4),BYP2	;LINE NUMBER
   849	000270'	141017	000267*	INPCHR:	POINT 8,IRING(P4),BYP3	;CHARACTER
   850	000271'	041017	000270*	INPCH2:	POINT 8,IRING(P4),BYP4	;SECOND DATA CHARACTER
   851	000272'	242017	000271*	INPDL1:	POINT 16,IRING(P4),BYP2	;FIRST TWO CHRS
   852	000273'	042017	000272*	INPDL2:	POINT 16,IRING(P4),BYP4	;SECOND TWO CHRS
   853
   854				;POINTER FOR PUTTING THINGS IN THE OUTPUT RING
   855
   856	000274'	341017	000000*	OUPTYP:	POINT 8,ORING(P4),BYP1	;TYPE
   857	000275'	241017	000274*	OUPLIN:	POINT 8,ORING(P4),BYP2	;PORT NUMBER
   858
   859				;POINTERS FOR ASSEMBLING FULL WORDS FOR OUTPUT (IN P3)
   860
   861	000276'	241000	000016	WRPLIN:	POINT 8,P3,BYP2		;PORT NUMBER (TYPE is set via TYPI macro)
   862	000277'	141000	000016	WRPCHR:	POINT 8,P3,BYP3		;DATA CHARACTER
   863	000300'	041000	000016	WRPCH2:	POINT 8,P3,BYP4		;SECOND DATA CHARACTER
   864	000301'	042000	000016	WRP3N4:	POINT 16,P3,BYP4	;Bytes 3 and 4
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 16
SCNSER.MAC	25-JAN-91 22:40		CHARACTER TABLES

   865				SUBTTL CHARACTER TABLES
   866
   867				;HERE IS THE CHARACTER TABLE. IT INCLUDES A CHARACTER MODE FOR
   868				;EACH OF INPUT, OUTPUT, ECHO, AND READ (BY PROGRAM). IT ALSO
   869				;INCLUDES A SPECIAL ACTION CODE FOR EACH OF THESE.
   870
   871				DEFINE CHRATR (INP,OUT,RED,ECH,SPAI,SPAO,SPAR,SPAE)
   872					<BYTE (2) INP,OUT (3) SPAO,RED,ECH,SPAR (5) SPAI (4) SPAE>
   873
   874	000302'	420200	000016	CHPINP:	POINT 2,P3,1	;POINTER TO THE INPUT FIELD
   875	000303'	400200	000016	CHPOUT:	POINT 2,P3,3	;POINTER TO THE OUTPUT FIELD
   876	000304'	350300	000016	CHPSPO:	POINT 3,P3,6	;POINTER TO THE OUTPUT SPECIAL ACTION FIELD
   877	000305'	320300	000016	CHPRED:	POINT 3,P3,9	;POINTER TO THE READ FIELD
   878	000306'	270300	000016	CHPECH:	POINT 3,P3,12	;POINTER TO THE ECHO FIELD
   879	000307'	240300	000016	CHPSPR:	POINT 3,P3,15	;POINTER TO THE READ SPECIAL ACTION FIELD
   880	000310'	170500	000016	CHPSPI:	POINT 5,P3,20	;POINTER TO THE INPUT SPECIAL ACTION FIELD
   881	000311'	130400	000016	CHPSPE:	POINT 4,P3,24	;POINTER TO THE ECHO SPECIAL ACTION FIELD
   882
   883				SALL
   884	000312'			CHRTAB:
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 17
SCNSER.MAC	25-JAN-91 22:40		CONTROL CHARACTERS

   885				SUBTTL	CONTROL CHARACTERS
   886
   887	000312'	101100	000000	CHRATR 0,2,2,2,0		;NULL
   888	000313'	101101	300000	CHRATR 0,2,2,2,13		;^A
   889	000314'	501100	000000	CHRATR 2,2,2,2			;^B
   890	000315'	100000	100000	CHRATR 0,2,0,0,1,0,0,0		;^C
   891				REPEAT 3,<
   892				CHRATR 2,2,2,2>			;^D,^E,^F
   893	000316'	501100	000000
   894	000317'	501100	000000
   895	000320'	501100	000000
   896	000321'	501140	000000	CHRATR 2,2,2,3			;^G
   897	000322'	020031	744000	CHRATR 0,0,0,0,17,4,6,11	;BACKSPACE
   898	000323'	004024	614000	CHRATR 0,0,0,0,6,1,5,3		;^I
   899	000324'	501140	000000	CHRATR 2,2,2,3			;LINE FEED
   900	000325'	411000	024000	CHRATR 2,0,2,0,0,2,0,5		;VERTICAL TAB
   901	000326'	415000	030000	CHRATR 2,0,2,0,0,3,0,6		;FORM FEED
   902	000327'	000400	204000	CHRATR 0,0,1,0,2,0,0,1		;RETURN
   903	000330'	501100	000000	CHRATR 2,2,2,2			;^N
   904	000331'	101100	300000	CHRATR 0,2,2,2,3		;^O
   905	000332'	501100	000000	CHRATR 2,2,2,2			;^P
   906	000333'	101100	400000	CHRATR 0,2,2,2,4		;^Q
   907				REPEAT 2,<
   908				CHRATR 2,2,2,2>			;^R,^S
   909	000334'	501100	000000
   910	000335'	501100	000000
   911	000336'	101102	000000	CHRATR 0,2,2,2,20		;^T
   912	000337'	101000	510000	CHRATR 0,2,2,0,5,0,0,2		;^U
   913				REPEAT 4,<
   914				CHRATR 2,2,2,2>			;^V,^W,^X,^Y
   915	000340'	501100	000000
   916	000341'	501100	000000
   917	000342'	501100	000000
   918	000343'	501100	000000
   919	000344'	500014	034000	CHRATR 2,2,0,0,0,0,3,7		;^Z
   920	000345'	100004	720000	CHRATR 0,2,0,0,7,0,1,4		;ESCAPE (33)
   921	000346'	101101	600000	CHRATR 0,2,2,2,16		;^\
   922	000347'	501100	000000	CHRATR 2,2,2,2			;^]
   923	000350'	101101	000000	CHRATR 0,2,2,2,10		;^^
   924	000351'	100111	100000	CHRATR 0,2,0,2,11,0,2,0		;^_
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 18
SCNSER.MAC	25-JAN-91 22:40		NUMBERS AND PUNCTUATION

   925				SUBTTL	NUMBERS AND PUNCTUATION
   926
   927				REPEAT 20,<
   928				CHRATR 3,1,3,4>			;PUNCTUATION
   929	000352'	641600	000000
   930	000353'	641600	000000
   931	000354'	641600	000000
   932	000355'	641600	000000
   933	000356'	641600	000000
   934	000357'	641600	000000
   935	000360'	641600	000000
   936	000361'	641600	000000
   937	000362'	641600	000000
   938	000363'	641600	000000
   939	000364'	641600	000000
   940	000365'	641600	000000
   941	000366'	641600	000000
   942	000367'	641600	000000
   943	000370'	641600	000000
   944	000371'	641600	000000
   945				REPEAT 12,<
   946				CHRATR 1,1,1,1>			;0-9
   947	000372'	240440	000000
   948	000373'	240440	000000
   949	000374'	240440	000000
   950	000375'	240440	000000
   951	000376'	240440	000000
   952	000377'	240440	000000
   953	000400'	240440	000000
   954	000401'	240440	000000
   955	000402'	240440	000000
   956	000403'	240440	000000
   957				REPEAT 7,<
   958				CHRATR 3,1,3,4>			;PUNCTUATION
   959	000404'	641600	000000
   960	000405'	641600	000000
   961	000406'	641600	000000
   962	000407'	641600	000000
   963	000410'	641600	000000
   964	000411'	641600	000000
   965	000412'	641600	000000
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 19
SCNSER.MAC	25-JAN-91 22:40		UPPER CASE

   966				SUBTTL	UPPER CASE
   967
   968				REPEAT 32,<
   969				CHRATR 1,3,1,1>			;A-Z
   970	000413'	340440	000000
   971	000414'	340440	000000
   972	000415'	340440	000000
   973	000416'	340440	000000
   974	000417'	340440	000000
   975	000420'	340440	000000
   976	000421'	340440	000000
   977	000422'	340440	000000
   978	000423'	340440	000000
   979	000424'	340440	000000
   980	000425'	340440	000000
   981	000426'	340440	000000
   982	000427'	340440	000000
   983	000430'	340440	000000
   984	000431'	340440	000000
   985	000432'	340440	000000
   986	000433'	340440	000000
   987	000434'	340440	000000
   988	000435'	340440	000000
   989	000436'	340440	000000
   990	000437'	340440	000000
   991	000440'	340440	000000
   992	000441'	340440	000000
   993	000442'	340440	000000
   994	000443'	340440	000000
   995	000444'	340440	000000
   996				REPEAT 4,<
   997				CHRATR 3,1,3,4>			;PUNCTUATION
   998	000445'	641600	000000
   999	000446'	641600	000000
  1000	000447'	641600	000000
  1001	000450'	641600	000000
  1002	000451'	041601	500000	CHRATR 0,1,3,4,15		;_ (FOR TYMEX2 MODE)
  1003	000452'	641600	000000	CHRATR 3,1,3,4			;^
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 20
SCNSER.MAC	25-JAN-91 22:40		LOWER CASE

  1004				SUBTTL	LOWER CASE
  1005
  1006				REPEAT 32,<
  1007				CHRATR 1,1,4,1>			;a-z
  1008	000453'	242040	000000
  1009	000454'	242040	000000
  1010	000455'	242040	000000
  1011	000456'	242040	000000
  1012	000457'	242040	000000
  1013	000460'	242040	000000
  1014	000461'	242040	000000
  1015	000462'	242040	000000
  1016	000463'	242040	000000
  1017	000464'	242040	000000
  1018	000465'	242040	000000
  1019	000466'	242040	000000
  1020	000467'	242040	000000
  1021	000470'	242040	000000
  1022	000471'	242040	000000
  1023	000472'	242040	000000
  1024	000473'	242040	000000
  1025	000474'	242040	000000
  1026	000475'	242040	000000
  1027	000476'	242040	000000
  1028	000477'	242040	000000
  1029	000500'	242040	000000
  1030	000501'	242040	000000
  1031	000502'	242040	000000
  1032	000503'	242040	000000
  1033	000504'	242040	000000
  1034				REPEAT 2,<
  1035				CHRATR 3,1,3,4>			;PUNCTUATION
  1036	000505'	641600	000000
  1037	000506'	641600	000000
  1038	000507'	040021	440000	CHRATR 0,1,0,0,14,0,4,10	;ALTMODE (175) OR }
  1039	000510'	040021	440000	CHRATR 0,1,0,0,14,0,4,10	;ALTMODE (176) OR ~
  1040	000511'	101101	200000	CHRATR 0,2,2,2,12		;RUBOUT (177)
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 21
SCNSER.MAC	25-JAN-91 22:40		LOWER CASE

  1041				COMMENT ;
  1042				SUMMARY OF MEANING OF FIELDS
  1043
  1044				INPUT
  1045					0-SPECIAL ACTION
  1046					1-NORMAL CHARACTER
  1047					2-BREAK CHARACTER
  1048					3-CLASS 2 BREAK CHARACTER
  1049
  1050				OUTPUT
  1051					0-SPECIAL ACTION
  1052					1-OUTPUT AND COUNT FOR FREE RETURN
  1053					2-OUTPUT BUT DO NOT COUNT
  1054					3-UPPER CASE CHARACTER
  1055
  1056				REMOTE ECHO
  1057					0-SPECIAL ACTION
  1058					1-COUNT FOR FREE RETURN
  1059					2-DO NOT COUNT FOR FREE RETURN
  1060					3-SAME AS 2
  1061					4-SAME AS 1
  1062
  1063				DEFERED ECHO
  1064					0-SPECIAL ACTION
  1065					1-PRINT CHARACTER AND COUNT FOR FREE RETURN
  1066					2-BREAK CHARACTER, DO NOT PRINT, DO NOT COUNT
  1067					3-BREAK CHARACTER, PRINT, DO NOT COUNT
  1068					4-CLASS 2 BREAK CHARACTER, PRINT AND COUNT
  1069					5-IMAGE CHARACTER
  1070					6-BREAK CHARACTER, PRINT AND COUNT
  1071
  1072				READ
  1073					0-SPECIAL ACTION
  1074					1-NORMAL CHARACTER
  1075					2-BREAK CHARACTER
  1076					3-CLASS 2 BREAK CHARACTER
  1077					4-LOWER CASE CHARACTER
  1078				;
  1079
  1080				;DEFINE STOP CHARACTERS (ESCAPES) FOR VARIOUS MODES
  1081
  1082			000003	STOP10==3	;^C
  1083			000037	STOP9==37	;^_
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 22
SCNSER.MAC	25-JAN-91 22:40		Channel 1 interrupt processing

  1084				SUBTTL	Channel 1 interrupt processing
  1085
  1086	000512'	633751	506262	KEY10:	633751506262		;Magic value that TYMNET BASE wants to see
  1087
  1088				;UPDKEY - Update the KEY 60 times per second, at channel 1 level
  1089				;Called by JSP T1,UPDKEY    (T2 is scratch).
  1090
  1091	000513'	200340	000512'	UPDKEY::MOVE	T2,KEY10		;Set key for TYMNET
  1092	000514'	250340	000000*	KEYSET::EXCH	T2,KEY620##		;(JFCL if base is not being used)
  1093	000515'	336000	000007		SKIPN	T2			;If it was zero,
  1094	000516'	402000	000000*		 SETZM	KEYTIM##		; reset KEY620 timer
  1095	000517'	332000	000007		SKIPE	T2			;If zero,
  1096	000520'	316340	000512'		CAMN	T2,KEY10		; or the value we set,
  1097	000521'	334000	000000		 SKIPA				;OK
  1098	000522'	202340	016565'		  MOVEM	T2,BADKEY		;Remember bad key for later
  1099	000523'	200340	000000*		MOVE	T2,UPTIME##		;Get current system uptime
  1100	000524'	332000	000000*		SKIPE	DINITF##		;Is ONCE initializing the disks?
  1101	000525'	202340	000000*		 MOVEM	T2,THSTIM##		;Yes, make THSTIM look current
  1102	000526'	274340	000525*		SUB	T2,THSTIM##		;Check on how long since SCNTIC ran
  1103	000527'	311340	000000*		CAML	T2,JFYMIN##		;More than one minute?
  1104	000530'	256000	000000*	KAF1::	 STOPCD (,XCT,S..KAF)
  1105						;Keep alive failure
  1106	000531'	254006	000000		JRST	(T1)			;Return to PICON
  1107
  1108				;CHKBAS - Check if the nonzero value in 30 came from the base.
  1109				;Called by JSP T1,CHKBAS whenever CRSHWD is nonzero.
  1110				;T2 is scratch, stack is not set up.
  1111				;Error return of PDP-10 should crash, skip return to continue.
  1112
  1113	000532'	135340	016575'	CHKBAS::LDB	T2,[POINT 16,CRSHWD,15]	;Check if first 16 bits
  1114	000533'	312340	000000*		CAME	T2,ORP620		; match the base's ORING pointer
  1115	000534'	316340	016567'		CAMN	T2,ORPOLD
  1116	000535'	334000	000000		 SKIPA				;OK
  1117	000536'	254006	000000		  JRST	(T1)			;No match, don't blame it on base
  1118	000537'	135340	016576'		LDB	T2,[POINT 16,CRSHWD,31]	;Check if second 16 bits
  1119	000540'	312340	000000*		CAME	T2,IRP620		; match the base's IRING pointer
  1120	000541'	316340	016566'		CAMN	T2,IRPOLD
  1121	000542'	334000	000000		 SKIPA
  1122	000543'	254006	000000		  JRST	(T1)			;No match, don't blame it on base
  1123	000544'	476000	000000*		SETOM	BASDWN##		;Base problems.  Mark it as down
  1124	000545'	201340	035230		MOVEI	T2,^D15000		;Delay for about 1/60th of a second
  1125	000546'	367340	000546'		SOJG	T2,.			; for base to write into KEY620
  1126	000547'	200340	000514*		MOVE	T2,KEY620##		;Get the key
  1127	000550'	316340	000512'		CAMN	T2,KEY10		;If we overwrote it,
  1128	000551'	200340	016565'		 MOVE	T2,BADKEY		; get previous value
  1129	000552'	202340	000547*		MOVEM	T2,KEY620##		;Reset it if necessary
  1130	000553'	242340	777754		LSH	T2,^D<16-36>		;Get 16 bits of KEY620
  1131	000554'	202040	000564'		MOVEM	P,SCN1PD		;Need a stack for STOPCD
  1132	000555'	201040	000564'		MOVEI	P,SCN1PD
  1133	000556'	306340	000004		CAIN	T2,04			;Did base complain about a bad message?
  1134	000557'	256000	016577'		 STOPCD (.,STOP,BASE04,PRTCRS,<Bad message type from host>)
  1135	000560'	256000	016603'		 STOPCD (.+1,INFO,BASE,PRTCRS,<BASE has crashed - bad KEY620>)
  1136	000561'	200040	000564'		MOVE	P,SCN1PD		;Restore AC
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 22-2
SCNSER.MAC	25-JAN-91 22:40		Channel 1 interrupt processing

  1137	000562'	402000	000000*		SETZM	CRSHWD##		;Clear out location 30 to keep system up
  1138	000563'	254006	000001		JRST	1(T1)			;Skip return back to PICON
  1139
  1140	000564'			SCN1PD:	BLOCK	2			;Dummy stack for PUSHJ P,DIE
  1141
  1142				;Here from PRTIRP to output SAV30, ORP620, IRP620, and KEY620
  1143
  1144	000566'	260040	000000*	PRTCRS:	PUSHJ	P,INLMES##
  1145	000567'	476452	033144		 ASCIZ /ORP620: /
	000570'	301644	000000
  1146	000571'	200300	000533*		MOVE	T1,ORP620
  1147	000572'	260040	000000*		PUSHJ	P,PRTOCT##
  1148	000573'	260040	000566*		PUSHJ	P,INLMES##
  1149	000574'	201011	151240		 ASCIZ /  IRP620: /
	000575'	331446	035100
	000576'	000000	000000
  1150	000577'	200300	000540*		MOVE	T1,IRP620
  1151	000600'	260040	000572*		PUSHJ	P,PRTOCT##
  1152	000601'	260040	000573*		PUSHJ	P,INLMES##		;Called from STOPCD(BASE),STOPCD(BASE04)
  1153	000602'	201004	051602		 ASCIZ /   SAV30: /
	000603'	531466	035100
	000604'	000000	000000
  1154	000605'	200300	000000*		MOVE	T1,SAV30##		;Saved contents of CRSHWD
  1155	000606'	260040	000000*		PUSHJ	P,HWDPNT##
  1156	000607'	260040	000601*		PUSHJ	P,INLMES##
  1157	000610'	201724	000000		 ASCIZ / = /
  1158	000611'	135300	016607'		LDB	T1,[POINT 16,SAV30,15]	; Get Base ORING pointer field
  1159	000612'	260040	000600*		PUSHJ	P,PRTOCT##
  1160	000613'	260040	000000*		PUSHJ	P,PRCOM##		;Comma
  1161	000614'	135300	016610'		LDB	T1,[POINT 16,SAV30,31]	; Get Base IRING pointer field
  1162	000615'	260040	000612*		PUSHJ	P,PRTOCT##
  1163	000616'	260040	000607*	PRTKEY::PUSHJ	P,INLMES##		;Here from STOPCD(CRASH)
  1164	000617'	201004	045712		 ASCIZ /   Key: /
	000620'	745644	000000
  1165	000621'	200300	000552*		MOVE	T1,KEY620		;Get Key value
  1166	000622'	316300	000512'		CAMN	T1,KEY10
  1167					 JRST	[JSP T1,CONMES##
  1168						 ASCIZ /OK
  1169	000623'	254000	016611'	/]
  1170	000624'	242300	777754		LSH	T1,^D<16-36>		;Get high order 16 bits and
  1171	000625'	260040	000615*		PUSHJ	P,PRTOCT##		; print as an octal number.
  1172	000626'	324740	000000*		PJRST	CRLF##			;Finish the line.
  1173
  1174				COMMENT ~	Values stored in KEY620 when the Varian base goes down
  1175				* 00="Normal - host going down - key not refreshed.",
  1176				  01="Host crashing due to base crash.",
  1177				  02="MIC error or MIC reject tring to read key.",
  1178				* 03="Read bad key from host.",
  1179				* 04="Bad data type or port number from host.",  HOST MUST CRASH
  1180				  05="Illogical data type from host.",
  1181				  06="MIC busy trying to read host (IN10).",
  1182				  07="Input ring processing time-out.",
  1183				* 10="MIC time-out error (sen 337).",
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 22-3
SCNSER.MAC	25-JAN-91 22:40		Channel 1 interrupt processing

  1184				* 11="Parity error from MIC (sen 237).",
  1185				* 12="MIC busy for 232 cycles in addr portion of 'look'.",
  1186				  13="Host told base to crash...this is a no-no!!",
  1187				  14="MIC busy (look) from prior operation in 'look'.",
  1188				  15="Overran block i/o table.",
  1189				  16="Terminate block input req. is invalid.",
  1190				  17="Base crash...power failure.",
  1191				  20="Base crash...manual restart.",
  1192				  21="Base crash....",
  1193				**22="Base crash...GCI crash.", BASE CRASHES ITSELF
  1194				  23="Base crash...WCD crash.",
  1195				**24="Base crash...WCI crash.", BASE CRASHES ITSELF
  1196				* 25="Base crash...GCOL crash.",
  1197				  26="Base crash...speed crash.",
  1198				  27="Base crash...unidentified crash.",
  1199				  30="Base crash....",
  1200				  31="Base crash...WWI crash.",
  1201				  32="Base crash...empty crash.",
  1202				  33="Base crash...parity error.",
  1203				  34="Base crash...bad 201 interrupt.",
  1204				  35="Base crash....",
  1205				  36="Base crash....",
  1206				  37="Base crash....";
  1207				**120="Bad ISIS message.", BASE CRASHES ITSELF
  1208				**140="Bad stack usage.", BASE CRASHES ITSELF
  1209				**202="Buss Error.", BASE CRASHES ITSELF
  1210				**203="Address Error", BASE CRASHES ITSELF
  1211				**204="Illegal Instruction.", BASE CRASHES ITSELF
  1212				**354="Engine told 68K to crash.", BASE CRASHES ITSELF
  1213				**355="Split Char Pair.", BASE CRASHES ITSELF
  1214				~  ;End of COMMENT
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 23
SCNSER.MAC	25-JAN-91 22:40		INPUT RING DISPATCHER

  1215				SUBTTL INPUT RING DISPATCHER
  1216
  1217				;HERE EVERY TICK FROM CHANNEL 7
  1218
  1219				    ;KEEP TRACK OF MAXIMUM INTER-CALL DELAY
  1220
  1221	000627'	200440	000523*	SCNINT::MOVE	T4,UPTIME	;Check on how long it has been since SCNSER
  1222	000630'	250440	000526*		EXCH	T4,THSTIM##	; last had a chance to run
  1223	000631'	321440	000641'		JUMPL	T4,SCNNT0	;Don't check on the very first tick
  1224	000632'	274440	000630*		SUB	T4,THSTIM##
  1225	000633'	213000	000011		MOVNS	T4
  1226	000634'	313440	000000*		CAMLE	T4,MXTIM##
  1227	000635'	202440	000634*		 MOVEM	T4,MXTIM##	;Save maximum so far
  1228	000636'	350000	000516*		AOS	KEYTIM##	;Increment # of ticks since key was reset
  1229	000637'	350000	000000*		AOS	IRPTIM##	;          # of ticks since last input message
  1230	000640'	350000	000000*		AOS	ORPTIM##	;          # of ticks since last output message
  1231
  1232				    ;CHECK FOR CTY OUTPUT
  1233
  1234	000641'	337000	000126'	SCNNT0:	SKIPG	CTYLDB+LDBTOC	;If there are characters for the CTY
  1235	000642'	335000	014001'		SKIPGE	CTYBLF		; or if someone wants to ding its bell,
  1236	000643'	260040	014003'		 PUSHJ	P,OPRCTY	; go do it
  1237	000644'	260040	000000*		PUSHJ	P,CTYINP##	;Check for input on the CTY
  1238	000645'	255000	000000		  JFCL			;No input (character in T3 if CTYINP skips)
  1239
  1240				    ;CHECK IF RING NEEDS TO BE RESET
  1241
  1242	000646'	336300	000544*		SKIPN	T1,BASDWN##	;Has base crashed or 10 in system restart?
  1243	000647'	254000	000710'		 JRST	SCNTIC		;No, rings are fine
  1244				;BASDWN=-1 means base has crashed or is not responding.
  1245				;BASDWN=+1 means system startup - ask for date/time from the supervisor.
  1246	000650'	337000	000006		SKIPG	T1		;Startup?
  1247	000651'	260040	012541'		 PUSHJ	P,DETALL	;No, detach all jobs when base dies
  1248	000652'	403340	000000*		SETZB	T2,IRPPDP
  1249	000653'	250340	000577*		EXCH	T2,IRP620	;Reset IRING pointers
  1250	000654'	332000	000007		SKIPE	T2
  1251	000655'	202340	016566'		 MOVEM	T2,IRPOLD	;Save old pointer for CHKBAS
  1252	000656'	403340	000000*		SETZB	T2,ORPPDP
  1253	000657'	250340	000571*		EXCH	T2,ORP620	;Reset ORING pointers
  1254	000660'	332000	000007		SKIPE	T2
  1255	000661'	202340	016567'		 MOVEM	T2,ORPOLD	;Save old pointer for CHKBAS
  1256				IFCPU (F3),<
  1257					PUSHJ	P,FNSYNC	;Synchronize with the PDP-11 base
  1258					  POPJ	P,		;Not ready yet, try again next time
  1259				>;END IFCPU F3
  1260	000662'	200740	000656*		MOVE	P4,ORPPDP	;Get current ORING pointer (starts at zero)
  1261	000663'	200700	016613'		MOVE	P3,[<TYPRAK>B<BYP1>+<SCNVER>B<BYP3>+<SCNREL>B<BYP4>]
  1262	000664'	331000	000646*		SKIPL	BASDWN		;Send reset-ack if base died, CLK at startup
  1263	000665'	200700	016614'		 MOVE	P3,[<TYPCLP>B<BYP1>+<SCNVER>B<BYP3>+<SCNREL>B<BYP4>]
  1264	000666'	335000	000000*		SKIPGE	DEBUGF##	;System being debugged?
  1265	000667'	661700	000004		 TLO	P3,(1B<BYP2>)	;Yes, set LSB of 2nd byte
  1266	000670'	202717	000275*		MOVEM	P3,ORING(P4)	;Put first message in ring
  1267	000671'	260040	016267'		PUSHJ	P,ORPLOG	;Put message into ORING log
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 23-2
SCNSER.MAC	25-JAN-91 22:40		INPUT RING DISPATCHER

  1268	000672'	271740	000001		ADDI	P4,1
  1269	000673'	205700	102000		MOVSI	P3,TYPI TYPHSI	;Message type 41
  1270	000674'	201300	000000*		MOVEI	T1,RPORTN##	;Number of real ports
  1271				IFKMC<	LPERDR==<^D16>*4	;ONE OF 64. 32. or 16. LINES PER DR
  1272					;LPERDR must match that defined in the KMC microcode
  1273					MAXDR==RPORTN##/LPERDR	;HIGHEST DR = # OF PORTS/LINES PER DR
  1274					TRZ	T1,3		;Must have a multiple of 4
  1275					CAIL	T1,LPERDR	;Determine lines on 1st node
  1276					 MOVEI	T1,<LPERDR-1>&74;Must be a multiple of 4 .LT. ^D64
  1277				>;END IFKMC
  1278	000675'	137300	000276'		DPB	T1,WRPLIN	;Highest port number we will accept
  1279	000676'	200300	000000*		MOVE	T1,SYSNUM##	;Our host number
  1280	000677'	137300	000277'		DPB	T1,WRPCHR	; in 3rd byte
  1281	000700'	202717	000670*		MOVEM	P3,ORING(P4)
  1282	000701'	260040	016267'		PUSHJ	P,ORPLOG	;Put message into ORING log
  1283	000702'	271740	000001		ADDI	P4,1
  1284	000703'	202740	000662*		MOVEM	P4,ORPPDP	;Let base see those 2 messages
  1285				IFKMC<	MOVEI	T1,<4320000&<7777_<3*MAXDR>>>_-9
  1286						;T1/4320 or 320 or 20 or 0 (SEE DRFLAG:) SO AS TO PUT
  1287						;OUT 41 MESSAGES TO DRs 2,3 & 4 IF THEY ARE THERE
  1288					SETZ	W,		;INITIALIZE W FOR NON-PTY OUTPUT
  1289					MOVSI	P3,TYPI TYPHSI	;41 MESSAGES
  1290					PUSHJ	P,MDRMSG
  1291				>;END IFKMC
  1292	000704'	402000	000664*		SETZM	BASDWN##	;Flag that we think the base is up
  1293	000705'	402000	000000*		SETZM	BASVER##	;Zero version number for BASEOK message
  1294	000706'	402000	016565'		SETZM	BADKEY		;Reset saved bad key
  1295	000707'	263040	000000		POPJ	P,		;Come back next tick
  1296
  1297				    ;CHECK OTHER UNUSUAL OUTPUT REQUESTS
  1298
  1299	000710'	400500	000000	SCNTIC:	SETZ	W,		;LET OUTPUT CODE KNOW IT'S REAL NOT PTY OUTPUT
  1300	000711'	260040	004141'		PUSHJ	P,SETOUT
  1301	000712'	254000	000731'		  JRST	SCNIN		;NO ROOM FOR CHARACTERS
  1302	000713'	336700	016406'		SKIPN	P3,UPSHUT	;IS THERE A SHUT OR ANSWERED MESSAGE
  1303	000714'	254000	000722'		 JRST	SCNNT2
  1304	000715'	260040	004114'	IFNKMC<	PUSHJ	P,CLSCHR	;JUST FOR THE SAKE OF GOOD FORM
  1305	000716'	254000	000731'		  JRST	SCNIN		;DON'T UNDERSTAND HOW WE GOT HERE BUT OK
  1306	000717'	402000	016406'		SETZM	UPSHUT		;WILL SEND NOW, MARK NO MORE MSG
  1307	000720'	260040	004162'		PUSHJ	P,WRDOUT	;SEND IT
  1308	000721'	254000	000731'		  JRST	SCNIN		;THE LAST OF THE SPACE
  1309				>;END IFNKMC
  1310				IFKMC<	PUSHJ	P,MDRUP		;GET 3-BIT UP FLAGS
  1311					HLRZ	P3,P3
  1312					CAIN	P3,TYPI TYPSHT
  1313					 MOVEM	T1,DRMSHT
  1314					CAIN	P3,TYPI TYPANS
  1315					 MOVEM	T1,DRMANS
  1316					SETZM	UPSHUT>;END IFKMC
  1317	000722'	260040	014776'	SCNNT2:	PUSHJ	P,SNDSAD	;SEND A SAD MESSAGE IF APPROPRIATE
  1318	000723'	254000	000731'		  JRST	SCNIN
  1319				IFKMC<	PUSHJ	P,SNDHSI	;SEE IF ANY DRs NEED A TYPHSI MSG ETC.
  1320					  JRST	SCNIN>;END IFKMC
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 23-3
SCNSER.MAC	25-JAN-91 22:40		INPUT RING DISPATCHER

  1321	000724'	260040	011425'		PUSHJ	P,SNDAUX	;Check progress on AUX circuit builds
  1322	000725'	254000	000731'		  JRST	SCNIN		;OUT OF ROOM NOW
  1323				IFCPU (<KI,KL>), <	;TYMNET BASES REQUIRE BIO PORT NEGOTIATION,
  1324							; NEXILIS BASES DO NOT
  1325	000726'	335000	016457'		SKIPGE	BIOCNT+0	;ANY CHANGE IN THE NUMBER OF BIO PORTS?
  1326	000727'	260040	001403'		PUSHJ	P,SNDBIO	;REQUEST TO THE BASE.
  1327	000730'	254000	000731'		  JRST	SCNIN
  1328				> ;END IFCPU (<KI,KL>)
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 24
SCNSER.MAC	25-JAN-91 22:40		HERE TO PROCESS ALL THE MESSAGES IN THE INPUT RING, THEN

  1329				SUBTTL	HERE TO PROCESS ALL THE MESSAGES IN THE INPUT RING, THEN
  1330				;JUMP TO OUTPUT CODE. FSCN GETS SET TO -1 IF ANY MESSAGES
  1331				;WERE PROCESSED.
  1332
  1333	000731'	200740	000652*	SCNIN:	MOVE	P4,IRPPDP
  1334	000732'	316740	000653*		CAMN	P4,IRP620	;Anything in the input ring?
  1335	000733'	254000	003176'		 JRST	SCNOUT		;No, try output ring
  1336	000734'	476000	016374'		SETOM	FSCN		;Yes, flag that we found something
  1337				IFCPU (<F3,KS>),<
  1338					SKIPGE	IRPTIM##	;Is this the first message after base went down?
  1339					 STOPCD (,XCT,BASEOK)	;Yes, output BASEOK message
  1340				>  ;End IFCPU(F3,KS)
  1341	000735'	402000	000637*		SETZM	IRPTIM##	;Reset IRING timer
  1342	000736'	200300	000732*		MOVE	T1,IRP620	;Remember current IRING pointer so that
  1343	000737'	202300	016564'		MOVEM	T1,IRPSTP	; we can tell when it is time to pause input
  1344								; and send backpressure on lines that need it
  1345	000740'	316740	016564'	SCNIN0:	CAMN	P4,IRPSTP	;Processed all data present at start of pass?
  1346	000741'	254000	003176'		 JRST	SCNOUT		;Yes, go do output
  1347	000742'	260040	016256'		PUSHJ	P,IRPLOG	;No, LOG current IRING data, P4=INDEX
  1348				;;;;;;;;BEGIN KMC DEBUG CODE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1349				IFKMC<
  1350					MOVE	P1,IRPMB2	;SAVE PREVIOUS BASE POINTER
  1351					MOVEM	P1,IRPMB3
  1352					MOVE	P1,IRPMB1	;SAVE PREVIOUS BASE POINTER
  1353					MOVEM	P1,IRPMB2
  1354					MOVE	P1,IRP620
  1355					MOVEM	P1,IRPMB1	;SAVE CURRENT BASE POINTER TOO
  1356				
  1357					MOVE	P1,IRPMP2	;SAVE PREVIOUS MESSAGE POINTER
  1358					MOVEM	P1,IRPMP3
  1359					MOVE	P1,IRPMP1	;SAVE PREVIOUS MESSAGE POINTER
  1360					MOVEM	P1,IRPMP2
  1361					MOVEM	P4,IRPMP1	;SAVE MESSAGE POINTER TOO
  1362				
  1363					MOVE	P1,IRPMS2	;SAVE PREVIOUS MESSAGE
  1364					MOVEM	P1,IRPMS3
  1365					MOVE	P1,IRPMSG	;SAVE PREVIOUS MESSAGE
  1366					MOVEM	P1,IRPMS2
  1367					MOVE	P1,IRING(P4)	;SAVE FIRST WORD OF MESSAGE IN IRPMSG
  1368					MOVEM	P1,IRPMSG
  1369				>;END IFKMC
  1370				;;;;;;;;END KMC DEBUG CODE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1371	000743'	135600	000266'		LDB	P1,INPTYP	;P1/ MESSAGE TYPE
  1372	000744'	135240	000267'		LDB	U,INPLIN	;U/ PORT #
  1373	000745'	303240	000000*		CAILE	U,RMXLIN##
  1374	000746'	254000	000762'		 JRST	BADPRT		;Check if message does not use port number
  1375	000747'	200245	000000*	BADPR1:	MOVE	U,LINTAB(U)	;U/ PORT LDB
  1376	000750'	500245	000031		HLL	U,LDBDCH(U)
  1377	000751'	622600	000200		TRZE	P1,200		;IF 200 BIT SET, IT'S DATA
  1378	000752'	254000	001553'		 JRST	CHRMLT		;P1 has count of characters to be input
  1379	000753'	303600	000063		CAILE	P1,MXTYP	;Check if in range
  1380	000754'	256000	016615'	TTYBMT:: STOPCD (SCNIN2,INFO,TTYBMT,PRTIRG,<Bad Message Type from Base>);;CNTPRT-1
  1381	000755'	256014	001040'	CNTPRT:	XCT	TYPTRN(P1)	;DISPATCH TO IT
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 24-2
SCNSER.MAC	25-JAN-91 22:40		HERE TO PROCESS ALL THE MESSAGES IN THE INPUT RING, THEN

  1382	000756'	405740	000000*	SCNIN1:	ANDI	P4,MSKIRG	;MASK FOR WRAP AROUND
  1383	000757'	202740	000731*		MOVEM	P4,IRPPDP	;PUT IT AWAY FOR 620
  1384	000760'	254000	000740'		JRST	SCNIN0		;GO SEE IF MORE INPUT
  1385
  1386	000761'	344740	000756'	SCNIN2:	AOJA	P4,SCNIN1	;Ignore this word, go get next one
  1387
  1388				;Check for legal messages that do not have port number in 2nd byte
  1389
  1390	000762'	302600	000001	BADPRT:	CAIE	P1,TYPANS	;(1) Answered, port = 0
  1391	000763'	306600	000002		CAIN	P1,TYPSHT	;(2) Shut, port = 0
  1392	000764'	254000	000755'		 JRST	CNTPRT
  1393	000765'	302600	000003		CAIE	P1,TYPRES	;(3) Reset, port = flag bits (0,1,200,201)
  1394	000766'	306600	000004		CAIN	P1,TYPRAK	;(4) Reset ack, port = flag bits
  1395	000767'	254000	000755'		 JRST	CNTPRT
  1396	000770'	302600	000005		CAIE	P1,TYPNSP	;(5) New supervisor, port = 0
  1397	000771'	306600	000027		CAIN	P1,TYPSUR	;(27) Supervisor Response, port = key
  1398	000772'	254000	000755'		 JRST	CNTPRT
  1399	000773'	302600	000032		CAIE	P1,TYPTSR	;(32) Test pattern response, port = data
  1400	000774'	306600	000043		CAIN	P1,TYPCLR	;(43) Clock Response, port = 0
  1401	000775'	254000	000755'		 JRST	CNTPRT
  1402	000776'	201240	000000		MOVEI	U,0		;Use port 0 if out of range
  1403	000777'	256000	016621'		STOPCD (BADPR1,INFO,TTYBPN,PRTIRG,<Bad Port Number from Base>);;BADPRT+3
  1404				PRINTF([TTYBPN needs filter to skip multi-word IRING messages to continue])
  1405
  1406				;PRTIRG - Print PDP-10 ring pointers, and word at IRING+IRPPDP for STOPCD
  1407
  1408	001000'	260040	000616*	PRTIRG::PUSHJ	P,INLMES##	;Called from stopcodes TTYBMT,TTYBPN,CTYBMT
  1409	001001'	476452	050210		 ASCIZ /ORPPDP: /
	001002'	501644	000000
  1410	001003'	200300	000703*		MOVE	T1,ORPPDP
  1411	001004'	260040	000625*		PUSHJ	P,PRTOCT##
  1412	001005'	260040	001000*		PUSHJ	P,INLMES##
  1413	001006'	201011	151240		 ASCIZ /  IRPPDP: /
	001007'	502112	035100
	001010'	000000	000000
  1414	001011'	200300	000757*		MOVE	T1,IRPPDP
  1415	001012'	260040	001004*		PUSHJ	P,PRTOCT##
  1416	001013'	260040	001005*		PUSHJ	P,INLMES##	;Output word that IRPPDP points to
  1417	001014'	201004	044644		 ASCIZ /   IRING+/
	001015'	446350	725400
  1418	001016'	200740	001011*		MOVE	P4,IRPPDP	;In case called from CTYBMT in CTYSIM
  1419	001017'	550300	000017		HRRZ	T1,P4
  1420	001020'	260040	001012*		PUSHJ	P,PRTOCT##
  1421	001021'	260040	001013*		PUSHJ	P,INLMES##
  1422	001022'	275000	000000		 ASCIZ \/ \
  1423	001023'	135300	000266'		LDB	T1,INPTYP	;Message type
  1424	001024'	260040	001020*		PUSHJ	P,PRTOCT##
  1425	001025'	260040	000613*		PUSHJ	P,PRCOM##
  1426	001026'	135300	000267'		LDB	T1,INPLIN	;Get port number (U has LDB address)
  1427	001027'	260040	001024*		PUSHJ	P,PRTOCT##
  1428	001030'	260040	001025*		PUSHJ	P,PRCOM##
  1429	001031'	135300	000270'		LDB	T1,INPCHR	;Get first data byte
  1430	001032'	260040	001027*		PUSHJ	P,PRTOCT##
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 24-3
SCNSER.MAC	25-JAN-91 22:40		HERE TO PROCESS ALL THE MESSAGES IN THE INPUT RING, THEN

  1431	001033'	260040	001030*		PUSHJ	P,PRCOM##
  1432	001034'	135300	000271'		LDB	T1,INPCH2	;Get 2nd data byte
  1433	001035'	260040	001032*		PUSHJ	P,PRTOCT##
  1434	001036'	260040	000626*		PUSHJ	P,CRLF##
  1435	001037'	324740	000566'		PJRST	PRTCRS		;Output ORP620 and IRP620
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 25
SCNSER.MAC	25-JAN-91 22:40		IRING message type dispatch table

  1436				SUBTTL	IRING message type dispatch table
  1437
  1438	000000			TYPTRN:	PHASE	0		;Use XCT TYPTRN(P1)
  1439	001040'	256000	000754'	TYP.00:	 STOPCD (,XCT,TTYBMT)
  1440					; 0 ILLEGAL
  1441	001041'	254000	012556'	TYPANS:	JRST	RCVANS		; 1 KMC ANSWERED, IGNORED BY KL & KI
  1442	001042'	344740	000756'	TYPSHT:	AOJA	P4,SCNIN1	; 2 SHUT, IGNORE
  1443	001043'	254000	012525'	TYPRES:	JRST	RCVRES		; 3 BASE CRASHED AND RELOADED OR DR-11 DIED
  1444	001044'	254000	012505'	TYPRAK:	JRST	RCVRAK		; 4 BASE ACK TO MESSAGE TYPE 3
  1445	001045'	254000	011301'	TYPNSP:	JRST	RCVNSP		; 5 TAKEOVER OF BASE, RESET AUX CIRS
  1446	001046'	254000	001161'	TYPLOG:	JRST	LOGIN		; 6 START LOGIN PROCESS ON THIS PORT
  1447	001047'	254000	011361'	TYPAUX:	JRST	RCVAUX		; 7 AUX CIRCUIT PORT ESTABLISHED
  1448	001050'	260040	001144'	TYPNOP:	PUSHJ	P,NOOUT		;10 BACKPRESSURE ON
  1449	001051'	260040	001153'	TYPOUP:	PUSHJ	P,DOOUT		;11 BACKPRESSURE OFF
  1450	001052'	260040	001124'	TYPGOB:	PUSHJ	P,GOBCHR	;12 CHR. GOBBLER, CLEAR INPUT BUFFER
  1451	001053'	260040	001520'	TYPZAP:	PUSHJ	P,RCVZAP	;13 CIRCUIT ZAPPER
  1452	001054'	260040	001204'	TYPEDC:	PUSHJ	P,EDEC		;14 ENTER DEFFERED ECHO MODE
  1453	001055'	260040	001176'	TYPLDC:	PUSHJ	P,LDEC		;15 LEAVE DEFERRED ECHO MODE
  1454	001056'	254000	001210'	TYPGRN:	JRST	GREEN		;16 GREEN BALL
  1455	001057'	254000	001214'	TYPRED:	JRST	RED		;17 RED BALL
  1456	001060'	260040	001232'	TYPYEL:	PUSHJ	P,YELLOW	;20 YELLOW BALL
  1457	001061'	260040	001222'	TYPORG:	PUSHJ	P,ORANGE	;21 ORANGE BALL
  1458	001062'	344740	000756'	TYPHNG:	AOJA	P4,SCNIN1	;22 HANG, IGNORE
  1459	001063'	344740	000756'	TYPETM:	AOJA	P4,SCNIN1	;23 ENTER 2741 TRANSPARENT MODE
  1460	001064'	344740	000756'	TYPLTM:	AOJA	P4,SCNIN1	;24 LEAVE 2741 TRANSPARENT MODE
  1461	001065'	260040	001443'	TYPLOS:	PUSHJ	P,RCVLOS	;25 LOST BALL (CHARACTERS LOST ON INPT)
  1462	001066'	256000	000754'	TYPSUP:	 STOPCD (,XCT,TTYBMT)
  1463					;26 SUPERVISOR REQUEST
  1464	001067'	254000	011312'	TYPSUR:	JRST	RCVSUR		;27 SUPERVISOR RESPONSE
  1465	001070'	256000	000754'	TYPAXC:	 STOPCD (,XCT,TTYBMT)
  1466					;30 AUX CIRCUIT CHARACTER
  1467	001071'	256000	000754'	TYPTSP:	 STOPCD (,XCT,TTYBMT)
  1468					;31 TEST PROBE
  1469	001072'	344740	000756'	TYPTSR:	AOJA	P4,SCNIN1	;32 TEST RESPONSE, IGNORE
  1470	001073'	256000	000754'	TYPSAD:	 STOPCD (,XCT,TTYBMT)
  1471					;33 HOST SAD
  1472	001074'	256000	000754'	TYPECN:	 STOPCD (,XCT,TTYBMT)
  1473					;34 ECHO ON, SHOULD NOT COME IN
  1474	001075'	256000	000754'	TYPECF:	 STOPCD (,XCT,TTYBMT)
  1475					;35 ECHO OFF, SHOULD NOT COME IN
  1476	001076'	256000	000754'	TYPTCS:	 STOPCD (,XCT,TTYBMT)
  1477					;36 SEND TERMINAL CHRS. SHOULD NOT COME IN
  1478	001077'	256000	000754'	TYPTCP:	 STOPCD (,XCT,TTYBMT)
  1479					;37 TERM CHRS PROBE. SHOULD NOT COME IN
  1480	001100'	254000	001460'	TYPTCR:	JRST	RCVTMC		;40 TERM CHRS RESPONSE
  1481	001101'	256000	000754'	TYPHSI:	 STOPCD (,XCT,TTYBMT)
  1482					;41 PORT AND SYSTEM NUMBER
  1483	001102'	256000	000754'	TYPCLP:	 STOPCD (,XCT,TTYBMT)
  1484					;42 REQUEST FOR SUPERVISOR TIME
  1485	001103'	254000	001470'	TYPCLR:	JRST	CLKRSP		;43 CLOCK RESPONSE FROM SUP.
  1486	001104'	256000	000754'	TYPBKO:	 STOPCD (,XCT,TTYBMT)
  1487					;44 INITIATE BLOCK OUTPUT
  1488	001105'	260040	001364'	TYPBOC:	PUSHJ	P,BLKOHR	;45 BLOCK OUTPUT COMPLETE SAME AS TERMINATED
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 25-2
SCNSER.MAC	25-JAN-91 22:40		IRING message type dispatch table

  1489	001106'	256000	000754'	TYPBIN:	 STOPCD (,XCT,TTYBMT)
  1490					;46 INITIATE BLOCK INPUT
  1491	001107'	260040	001257'	TYPINB:	PUSHJ	P,BLKIBF	;47 BLOCK INPUT TERMINATED: OUT OF BUFFER
  1492	001110'	260040	001277'	TYPINE:	PUSHJ	P,BLKEOT	;50 BLOCK INPUT TERMINATED: END OF TRANSMISSION
  1493	001111'	260040	001315'	TYPINT:	PUSHJ	P,BLKITM	;51 BLOCK INPUT TERMINATED: TIMEOUT BY BASE
  1494	001112'	256000	000754'	TYPIRQ:	 STOPCD (,XCT,TTYBMT)
  1495					;52 REQUEST BLOCK INPUT TERMINATION
  1496	001113'	260040	001350'	TYPIHR:	PUSHJ	P,BLKIHR	;53 BLOCK INPUT TERMINATED: BY HOST REQUEST
  1497	001114'	256000	000754'	TYPORQ:	 STOPCD (,XCT,TTYBMT)
  1498					;54 REQUEST BLOCK OUTPUT TERMINATION.
  1499	001115'	260040	001364'	TYPOHR:	PUSHJ	P,BLKOHR	;55 BLOCK OUTPUT TERMINATED: BY HOST REQUEST
  1500	001116'	254000	001412'	TYPNEG:	JRST	BLKNEG		;56 NEGOTIATE FOR NUMBER OF BLOCK I/O PORTS
  1501	001117'	344740	000756'	TYPBRK:	AOJA	P4,SCNIN1	;57 BREAK, IGNORE FOR NOW
  1502	001120'	254000	001505'	TYPPSR:	JRST	RCVPS		;60 PORT STATUS RECEIVED (not used)
  1503	001121'	344740	000756'	TYPEAD:	AOJA	P4,SCNIN1	;61 ENTER ALTERNATE DEVICE MODE, IGNORE
  1504	001122'	344740	000756'	TYPLAD:	AOJA	P4,SCNIN1	;62 LEAVE ALTERNATE DEVICE MODE, IGNORE
  1505	001123'	256000	000754'	TYPKAF:	 STOPCD (,XCT,TTYBMT)
  1506					;63 SET KEEP-ALIVE FAILURE TIMER
  1507	001124'				DEPHASE
  1508
  1509			000063	MXTYP==.-TYPTRN-1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 26
SCNSER.MAC	25-JAN-91 22:40		NON-CHARACTER INPUT HANDLER ROUTINES

  1510				SUBTTL NON-CHARACTER INPUT HANDLER ROUTINES
  1511
  1512	001124'	550205	000000	GOBCHR:	HRRZ	F, LDBDDB(U)
  1513	001125'	322200	001525'		JUMPE	F, SIMRZP		;IF NO JOB, TREAT AS ZAPPER
  1514	001126'	135100	000000*		LDB	J, PJOBN
  1515	001127'	200342	000000*		MOVE	T2, JBTSTS(J)
  1516	001130'	607340	000004		TLNN	T2, JLOG		;IF NOT LOGGED-IN,
  1517	001131'	254000	001525'		 JRST	SIMRZP			;  TREAT AS ZAPPER
  1518	001132'	340740	001136'		AOJ	P4, GOBCH1
  1519	001133'	550205	000000	FRCCGB:	HRRZ	F, LDBDDB(U)
  1520	001134'	322200	001141'		JUMPE	F, GOBCH2		;IF IT'S ATTACHED
  1521	001135'	135100	001126*		LDB	J, PJOBN
  1522	001136'	135300	000237'	GOBCH1:	LDB	T1, DDPTCG
  1523	001137'	322300	001141'		JUMPE	T1, GOBCH2		;AND IT'S TRAPPING GOBBLERS,
  1524	001140'	260040	000000*		PUSHJ	P, TAKTRP		;  TAKE THE TRAP
  1525	001141'	201300	001000	GOBCH2:	MOVEI	T1, LXRCGS
  1526	001142'	436305	000032		IORM	T1, LDBDCX(U)		;SET CHARACTER-GOBBLER SEEN
  1527	001143'	324740	006276'		PJRST	TSETBI			;CLEAR THE INPUT BUFFERS
  1528
  1529	001144'	340740	000000	NOOUT:	AOJ	P4,
  1530	001145'	135300	000101'	FRCNOO:	LDB	T1, LOPZAP
  1531	001146'	326300	000000*		JUMPN	T1, CPOPJ		;IF ABOUT TO SEND ZAPPER, DO NOTHING
  1532	001147'	205300	400000		MOVSI	T1, LDLNOP
  1533	001150'	436305	000031		IORM	T1, LDBDCH(U)		;SET BACKPRESSURE FLAG
  1534	001151'	137305	000002		DPB	T1, LDBOPB(U)		;CLEAR NEED-OUTPUT
  1535	001152'	263040	000000		POPJ	P,
  1536
  1537	001153'	340740	000000	DOOUT:	AOJ	P4,
  1538	001154'	205300	400000	FRCDOO:	MOVSI	T1, LDLNOP
  1539	001155'	412305	000031		ANDCAM	T1, LDBDCH(U)		;CLEAR BACKPRESSURE FLAG
  1540	001156'	201300	000001		MOVEI	T1, 1
  1541	001157'	137305	000002		DPB	T1, LDBOPB(U)		;SET NEED-OUTPUT
  1542	001160'	263040	000000		POPJ	P,
  1543
  1544				;Here for message 06 - externally initiated login request
  1545
  1546	001161'	200305	000001	LOGIN:	MOVE	T1,LDBLIN(U)
  1547	001162'	603300	400000		TLNE	T1,LNLZIN		;IF THERE'S AN UNECHOED ZAPPER,
  1548					 JRST	[MOVEI	T1,NZAPLG
  1549						 PUSHJ	P,ZAPBUG	;NOTE IT
  1550	001163'	254000	016625'			 JRST	.+1	]
  1551	001164'	332005	000026		SKIPE	LDBLOG(U)		;IF LOGGED-IN OR LOGGING IN,
  1552									;  TREAT AS CIRCUIT ZAPPER
  1553					  JRST	[PUSHJ	P,ZAPLOG	;NOTE THE ZAP (increment P4)
  1554	001165'	254000	016630'			 JRST	SCNIN1]		;  Return to loop
  1555
  1556	001166'	201300	000010		MOVEI	T1,1B32			;This bit will be shifted to
  1557	001167'	202305	000026		MOVEM	T1,LDBLOG(U)		; 1B0 after reading 4 characters
  1558	001170'	135300	000273'		LDB	T1,INPDL2		;Get 3rd+4th byte of login message
  1559	001171'	135340	016632'		LDB	T2,[POINT 16,BASVER,31]	;Check version of base code
  1560	001172'	301340	001001		CAIL	T2,<02_^D8>+01		;If EBUS version 2.01 or later,
  1561	001173'	137300	000160'		 DPB	T1,LDPHST		; store originating host number
  1562	001174'	402005	000030		SETZM	LDBMOD(U)		;NOTHING SO FAR
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 26-2
SCNSER.MAC	25-JAN-91 22:40		NON-CHARACTER INPUT HANDLER ROUTINES

  1563	001175'	344740	000756'		AOJA	P4,SCNIN1
  1564
  1565				PRINTF (<[BUG at LDEC has not been completely fixed, causes TTYNNC]>)
  1566	001176'	332005	000014	LDEC:	SKIPE	LDBECC(U)		;ARE WE STILL ECHOING?
  1567	001177'	255000	001251'		 JFCL	ZAPDFR			;YES, TREAT AS CIRCUIT ZAPPER
  1568	001200'	205300	001000		MOVSI	T1,LDLDEF
  1569	001201'	607240	000040		TLNN	U,LDLAUX		;NOT FOR AUX CIRCUITS
  1570	001202'	412305	000031		 ANDCAM	T1,LDBDCH(U)		;RESET DEFERED ECHO FLAG
  1571	001203'	344740	007622'		AOJA	P4,SETLMD		;AND RESET LINE MODE
  1572
  1573	001204'	205300	001000	EDEC:	MOVSI	T1,LDLDEF
  1574	001205'	607240	000040		TLNN	U,LDLAUX
  1575	001206'	436305	000031		 IORM	T1,LDBDCH(U)		;ENTER DEFFERED ECHO MODE
  1576	001207'	344740	007622'		AOJA	P4,SETLMD
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 27
SCNSER.MAC	25-JAN-91 22:40		NON-CHARACTER INPUT HANDLER ROUTINES

  1577	001210'	201300	000001	GREEN:	MOVEI	T1, 1
  1578	001211'	137300	000103'		DPB	T1, LOPSGR	;SET SEND-GREEN-BALL FLAG
  1579	001212'	137305	000002		DPB	T1, LDBOPB(U)	;AND NEED-OUTPUT BIT
  1580	001213'	344740	000756'		AOJA	P4, SCNIN1
  1581
  1582	001214'	201300	000000	RED:	MOVEI	T1, 0
  1583	001215'	137300	000103'		DPB	T1, LOPSGR	;CLEAR SEND-GREEN-BALL FLAG
  1584	001216'	201300	000001		MOVEI	T1, 1
  1585	001217'	137300	000066'		DPB	T1, LOPSRD	;SET SEND-RED
  1586	001220'	137305	000002		DPB	T1, LDBOPB(U)	;AND WANNA-OUTPUT
  1587	001221'	344740	000756'		AOJA	P4, SCNIN1
  1588
  1589	001222'	340740	000000	ORANGE:	AOJ	P4,
  1590	001223'	260040	015650'	FRCORG:	PUSHJ	P, OBREC	;HANDLE INTERRUPT OR HIBER
  1591	001224'	255000	000000		  JFCL
  1592	001225'	205300	000400	OBFND:	MOVSI	T1, L2LOWT
  1593	001226'	412305	000027	OBFND1:	ANDCAM	T1, LDBBYT(U)	;CLEAR ORANGE-WAIT FLAG
  1594	001227'	201300	000001		MOVEI	T1, 1
  1595	001230'	137305	000002		DPB	T1, LDBOPB(U)	;SET NEED-OUTPUT (ZAP CODE MAY WAIT)
  1596	001231'	263040	000000		POPJ	P,
  1597
  1598	001232'	340740	000000	YELLOW:	AOJ	P4,
  1599				FRCYEL:	IFN YLBUG, <
  1600					PUSHJ	P, OBREC	;WAS JOB WAITING FOR AN ORANGE BALL?
  1601					  JRST	.+2		;NO
  1602					 JRST	OBFND		;YES, TREAT AS ORANGE BALL
  1603					MOVSI	T1, L2LOWT
  1604					TDNE	T1, LDBBYT(U)	;IS ZAP LOGIC WAITING FOR ORANGE?
  1605					 JRST	OBFND1		;YES, TREAT AS ORANGE
  1606					>
  1607	001233'	201300	002000		MOVEI	T1, LXRYBS
  1608	001234'	436305	000032		IORM	T1, LDBDCX(U)	;SET YELLOW-BALL-RECEIVED BIT
  1609	001235'	550205	000000		HRRZ	F, LDBDDB(U)
  1610	001236'	322200	001245'		JUMPE	F, YELLW1	;IF IT'S ATTACHED,
  1611	001237'	135300	000236'		LDB	T1, DDPTYB
  1612	001240'	322300	001245'		JUMPE	T1, YELLW1	;AND IT'S TRAPPING YELLOW BALLS,
  1613	001241'	260040	000000*		PUSHJ	P, TAKTRJ	;  TAKE THE TRAP
  1614	001242'	205300	004000		MOVSI	T1, LXLOOK
  1615	001243'	436305	000032		IORM	T1, LDBDCX(U)	;  AND ALLOW JOB TO SEND 1 ORANGE BALL
  1616	001244'	263040	000000		POPJ	P,		;OTHERWISE,
  1617	001245'	201300	000001	YELLW1:	MOVEI	T1, 1
  1618	001246'	137300	000104'		DPB	T1, LOPSOG	;  SET SEND-ORANGE
  1619	001247'	137305	000002		DPB	T1, LDBOPB(U)	;  AND NEED-OUTPUT
  1620	001250'	263040	000000		POPJ	P,
  1621
  1622	001251'	354000	016516'	ZAPDFR:	AOSA	DFRZAP		;RECORD NUMBER
  1623	001252'	350000	016514'	ZAPLOG:	AOS	LOGZAP		; NOTE THE ZAP
  1624	001253'	202240	016515'		MOVEM	U,ZAPLPT	; SAVE PORT LDB ADDRESS
  1625	001254'	260040	004501'		PUSHJ	P,ZAPBG0	;Save info, but use different stopcode
  1626	001255'	256000	016633'		 STOPCD (.+1,DEBUG,TTYZNE,PRTIRG,<Zapper not echoed for port>)
  1627	001256'	324740	001525'		PJRST	SIMRZP		; Simulate/force a zap (increment P4)
  1628	
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 28
SCNSER.MAC	25-JAN-91 22:40		BLKIBF - HERE WHEN A TYPE 47 (INPUT BUFFER FULL) IS RECEIVED

  1629				SUBTTL	BLKIBF - HERE WHEN A TYPE 47 (INPUT BUFFER FULL) IS RECEIVED
  1630				;	   FROM THE BASE.
  1631
  1632	001257'	135440	000273'	BLKIBF:	LDB	T4, INPDL2	; T4/ COUNT
  1633	001260'	340740	000000		AOJ	P4,
  1634	001261'	260040	001341'	FRCIBF:	PUSHJ	P,BLKICK	; EVERYTHING OK?
  1635	001262'	256000	016637'	TTYBNP:: STOPCD (FRCZAP,INFO,TTYBNP,,<Block mode io Not in Progress>)
  1636				 ;;FRCIBF+1
  1637	001263'	322200	001336'		JUMPE	F, FREBUF	; DETACHED: GIVE UP
  1638
  1639				    ;STORE THE CHARACTER COUNT INTO THE USER'S BUFFER
  1640
  1641	001264'	550305	000005	BLKIB1:	HRRZ	T1, LDBBIO(U)	; T1/ INPUT BUFFER ADDR
  1642	001265'	552446	000005		HRRZM	T4, BIOCHR(T1)	; STORE THE COUNT
  1643
  1644				    ;WAKE/INTERRUPT THE JOB
  1645
  1646	001266'	260040	005776'	BLKIB2:	PUSHJ	P, BIOWAK	; WAKE UP JOB
  1647	001267'	201300	004000		MOVEI	T1, LXRBRK
  1648	001270'	436305	000032		IORM	T1, LDBDCX(U)	; SET BIT FOR POLPRT
  1649	001271'	135300	000227'		LDB	T1, DDPTLN	; IF INTERRUPT-ON-BREAK ENABLED
  1650	001272'	260040	001241*		PUSHJ	P, TAKTRJ	; TAKE IT
  1651
  1652				    ;FREE THE BUFFER (AND, IF NO OUTPUT PENDING, THE BASE PORT)
  1653				    ;IF THE PORT HAS LEFT BLOCK MODE
  1654
  1655	001273'	205340	001000	BLKIB3:	MOVSI	T2, LMLBIO
  1656	001274'	616345	000030		TDNN	T2, LDBMOD(U)	; BLOCK I/O ENABLED?
  1657	001275'	324740	001336'		PJRST	FREBUF		; NO: FREE THE BUFFER
  1658	001276'	263040	000000		POPJ	P,
  1659
  1660				;BLKEOT - HERE WHEN A "INPUT TERMINATED - END OF TRANSMISSION"
  1661				; (TYPE 50) IS RECEIVED FROM THE BASE.
  1662
  1663	001277'	135440	000273'	BLKEOT:	LDB	T4, INPDL2	; T4/ COUNT
  1664	001300'	340740	000000		AOJ	P4,
  1665	001301'	260040	001341'	FRCEOT:	PUSHJ	P, BLKICK	; EVERYTHING OK?
  1666	001302'	256000	001262'		 STOPCD (,XCT,TTYBNP)
  1667					;Block mode io Not in Progress ;;FRCEOT+1
  1668	001303'	322200	001336'		PJUMPE	F, FREBUF	; DETACHED: GIVE UP
  1669	001304'	135300	000245'		LDB	T1, DDPMOD	; T1/ DATA MODE
  1670	001305'	306300	000014		CAIN	T1, B
  1671	001306'	254000	001264'		JRST	BLKIB1		; BINARY: JUST RETURN THE DATA
  1672	001307'	260040	012626'	IMGITM:	PUSHJ	P, BLKTRQ	; REQUEST INPUT TERMINATION
  1673	001310'	205000	000040	IMGIT2:	MOVSI	S, IOEND
  1674	001311'	437004	000002		IORB	S, DEVIOS(F)	; SET IOEND
  1675	001312'	326440	001264'		JUMPN	T4, BLKIB1	; COUNT .gt. 0: RETURN THE DATA
  1676	001313'	260040	012364'		PUSHJ	P, RELBI	; COUNT = 0: DONE WITH BLOCK INPUT
  1677	001314'	254000	001266'		JRST	BLKIB2		; WAKE THE JOB AND RETURN
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 29
SCNSER.MAC	25-JAN-91 22:40		BLKITM - HERE WHEN AN "INPUT TERMINATED - TIMEOUT BY BASE"

  1678				SUBTTL	BLKITM - HERE WHEN AN "INPUT TERMINATED - TIMEOUT BY BASE"
  1679				; (TYPE 51) MESSAGE IS RECEIVED FROM THE BASE.
  1680
  1681	001315'	135440	000273'	BLKITM:	LDB	T4,INPDL2	; T4/ COUNT
  1682	001316'	340740	000000		AOJ	P4,
  1683	001317'	260040	001341'	FRCITM:	PUSHJ	P,BLKICK	; EVERYTHING OK?
  1684	001320'	263040	000000		  POPJ	P,		; NO: IGNORE THE MESSAGE
  1685	001321'	322200	001336'		PJUMPE	F, FREBUF	; DETACHED: GIVE UP
  1686	001322'	201000	040000		MOVEI	S, IOBKTL
  1687	001323'	437004	000002		IORB	S, DEVIOS(F)	; SET IO.BKT
  1688	001324'	135300	000245'		LDB	T1, DDPMOD	; T1/ DATA MODE
  1689	001325'	306300	000010		CAIN	T1, I
  1690	001326'	254000	001307'		JRST	IMGITM		; IMAGE: REQ TRM, RETURN DATA
  1691	001327'	326440	001264'		JUMPN	T4, BLKIB1	; COUNT.gt.0: WAKE JOB, RETURN DATA
  1692
  1693				    ;HERE WHEN NOT IN IMAGE MODE, TO REPEAT THE REQUEST
  1694
  1695	001330'	200305	000030		MOVE	T1, LDBMOD(U)
  1696	001331'	603300	400000		TLNE	T1, LMLTBI	; TERMINATE PENDING?
  1697	001332'	263040	000000		 POPJ	P,		; YES: DON'T REREQUEST INPUT
  1698	001333'	550305	000005		HRRZ	T1, LDBBIO(U)	; T1/ INPUT BUFFER ADDRESS
  1699	001334'	550346	000005		HRRZ	T2, BIOCHR(T1)	; T2/ SAME COUNT AS BEFORE
  1700	001335'	324740	012230'		PJRST	BLKIRQ		; REQUEST INPUT
  1701
  1702				;FREBUF - CALLED WHEN A PORT WITH LMLBIO CLEAR RECEIVES
  1703				;	   A BLOCK INPUT TERMINATED MESSAGE
  1704
  1705	001336'	260040	012364'	FREBUF:	PUSHJ	P, RELBI	; DONE WITH BLOCK INPUT
  1706	001337'	326300	001146*		JUMPN	T1, CPOPJ	; IF NO PENDING OUTPUT,
  1707	001340'	324740	012325'		PJRST	DECBC		;   FLAG 1 FEWER BLOCK PORT
  1708
  1709				; BLKICK - COMMON SUBROUTINE FOR BLOCK-INPUT-TERMINATED
  1710				;	    MESSAGES.
  1711
  1712	001341'	550305	000005	BLKICK:	HRRZ	T1,LDBBIO(U)	; T1/ INPUT BUFFER ADDRESS
  1713	001342'	332000	000006		SKIPE	T1		; IF NO BUFFER
  1714	001343'	331006	000005		SKIPL	BIOCHR(T1)	; OR NO REQUEST PENDING
  1715	001344'	263040	000000		 POPJ	P,		; FAIL-RETURN
  1716	001345'	550205	000000		HRRZ	F,LDBDDB(U)	; F/ DDB
  1717	001346'	350001	000000		AOS	(P)
  1718	001347'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 30
SCNSER.MAC	25-JAN-91 22:40		BLKIHR - HERE WHEN "INPUT TERMINATED - BY HOST REQUEST"

  1719				SUBTTL	BLKIHR - HERE WHEN "INPUT TERMINATED - BY HOST REQUEST"
  1720				; (TYPE 52)MESSAGE IS RECEIVED FROM THE BASE.
  1721
  1722	001350'	135440	000273'	BLKIHR:	LDB	T4, INPDL2	; T4/ COUNT
  1723	001351'	340740	000000		AOJ	P4,
  1724	001352'	205300	400000	FRCIHR:	MOVSI	T1, LMLTBI
  1725	001353'	412305	000030		ANDCAM	T1, LDBMOD(U)	; CLEAR TERMINATE-PENDING FLAG
  1726	001354'	550305	000005		HRRZ	T1, LDBBIO(U)	; T1/ INPUT BUFFER ADDRESS
  1727	001355'	336000	000006		SKIPN	T1		; IF THERE'S NONE THERE,
  1728	001356'	263040	000000		POPJ	P,		;   NOTHING MORE TO DO
  1729	001357'	200346	000005		MOVE	T2, BIOCHR(T1)	; T2/ IN-PROGRESS FLAG,,COUNT
  1730	001360'	325340	001273'		JUMPGE	T2, BLKIB3	; NO BLOCK INPUT IN PROGRESS
  1731	001361'	550205	000000		HRRZ	F, LDBDDB(U)	; F/ DDB
  1732	001362'	322200	001336'		PJUMPE	F, FREBUF	; DETACHED: FREE THE BUFFER
  1733	001363'	254000	001310'		JRST	IMGIT2		; SET IOEND, RETURN DATA
  1734
  1735				;BLKOHR - HERE WHEN AN "OUTPUT TERMINATED" (TYPE 52)
  1736				;	   OR AN "OUTPUT TERMINATED BY HOST REQUEST" (TYPE 53)
  1737				;	   MESSAGE IS RECEIVED FROM THE BASE
  1738
  1739	001364'	340740	000000	BLKOHR:	AOJ	P4,
  1740	001365'	205300	400000		MOVSI T1,LDLNOP
  1741	001366'	412305	000031		ANDCAM T1,LDBDCH(U)	;CLEAR OUTPUT BACKPRESSURE
  1742	001367'	201300	000001		MOVEI T1,1
  1743	001370'	137305	000002		DPB T1,LDBOPB(U)	;AND SET NEED-OUTPUT BIT
  1744	001371'	554305	000005	FRCOHR:	HLRZ T1,LDBBIO(U)	;T1/ OUTPUT BUFFER
  1745	001372'	322300	001400'		JUMPE T1,BLKOH1		;IF NONE, DO (ALMOST) NOTHING
  1746	001373'	260040	012370'		PUSHJ P,RELBO		;DONE WITH BLOCK OUTPUT
  1747	001374'	326300	001400'		JUMPN T1,BLKOH1		;IF NO ACTIVE BLOCK I/O
  1748	001375'	200345	000030		MOVE T2,LDBMOD(U)
  1749	001376'	607340	001000		TLNN T2,LMLBIO		;AND PORT WANTS OUT OF BLOCK MODE,
  1750	001377'	260040	012325'		PUSHJ P,DECBC		;  GET IT OUT
  1751	001400'	550205	000000	BLKOH1:	HRRZ F,LDBDDB(U)
  1752	001401'	322200	001337*		JUMPE F, CPOPJ		;IF ATTACHED,
  1753	001402'	324740	006145'		PJRST XMTWAK		;WAKE THE JOB
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 31
SCNSER.MAC	25-JAN-91 22:40		BLKIHR - HERE WHEN "INPUT TERMINATED - BY HOST REQUEST"

  1754				IFNCPU (<KI,KL>), <
  1755				BLKNEG:	 STOPCD (,XCT,TTYBMT)	;56 NEGOTIATE FOR # BLOCK I/O PORTS NOT USED
  1756				>; END IFNCPU (<KI,KL>)
  1757
  1758				IFCPU (<KI,KL>), <
  1759				;SNDBIO - HERE AT CHANNEL 7 LEVEL FROM SCNINT WHEN THERE ARE
  1760				;ANY BLOCK I/O PORT REQUESTS (EITHER INCREASE OR DECREASE)
  1761				;PENDING.
  1762
  1763	001403'	260040	004114'	SNDBIO:	PUSHJ	P,CLSCHR	;FINISH PREVIOUS MESSAGE AND
  1764	001404'	263040	000000		  POPJ	P,		; RETURN IF NO MORE SPACE.
  1765	001405'	205700	134000		MOVSI	P3,TYPI TYPNEG	;PORT REQUEST TYPE FOR
  1766				;Following code commented out since there are no KMC's on
  1767				; KI's and KL's.
  1768				;IFKMC<	PUSHJ	P,MDRUP		;GET UP DRs
  1769				;	JUMPE	T1,CPOPJ	;IF NO NODES ARE UP THEN GIVEUP
  1770				;	SKIPA			;Don't shift the first time
  1771				;SNDBI1: LSH	T1,-3
  1772				;	TRNN	T1,7		;NO SKIP IF LOW 3 BITS ARE ALL 0s
  1773				;	  JRST	SNDBI1		;Go try the next one
  1774				;	SUBI	T1,1
  1775				;	ANDI	T1,3
  1776				;	LSH	T1,6
  1777				;	DPB	T1,WRPLIN	;STUFF THE UP DR NUMBER IN PORT
  1778				;>;IFKMC.END
  1779	001406'	553300	016457'		HRRZS	T1,BIOCNT+0	;GET THE NEW REQUEST COUNT
  1780	001407'	137300	000277'		DPB	T1,WRPCHR	;AND WRITE INTO 1ST DATA CHAR
  1781	001410'	350000	016467'		AOS	BIOANS		;INC RESP COUNT EXPECTED OF BASE
  1782	001411'	254000	004162'		JRST	WRDOUT		;SEND THE REQUEST AND SKIP RETURN.
  1783
  1784				;BLKNEG - AT SNDBIO, WE SENT A TYPE 54, ASKING FOR <BIOCNT+0>
  1785				;BLOCK I/O PORTS. WE GET HERE WHEN WE GET A TYPE 54 BACK FROM
  1786				;THE BASE, TELLING US HOW MANY WE CAN HAVE.
  1787
  1788	001412'	337000	016467'	BLKNEG:	SKIPG	BIOANS		;IF WE DIDN'T SEND A REQUEST
  1789					JRST	[
  1790						AOS ERRBNG
  1791						AOJA P4, SCNIN1	;  IGNORE THE "RESPONSE"
  1792	001413'	254000	016642'		]
  1793	001414'	377000	016467'		SOSG	BIOANS		;IF THERE'RE MORE RESPONSES COMING
  1794	001415'	335340	016457'		SKIPGE	T2,BIOCNT+0	;OR THERE'S ANOTHER REQUEST PENDING,
  1795	001416'	344740	000756'		AOJA	P4,SCNIN1	;  IGNORE THE RESPONSE
  1796	001417'	135440	000270'		LDB	T4,INPCHR	;T4/ # OF PORTS WE CAN HAVE
  1797	001420'	210300	000011		MOVN	T1,T4
  1798	001421'	270300	016461'		ADD	T1,BIOPRT	;T1/ #PORTS BEFORE - #PORTS NOW
  1799	001422'	322300	001434'		JUMPE	T1,BLKNG4
  1800	001423'	323300	001426'		JUMPLE	T1,BLKNG2
  1801	001424'	311340	016461'		CAML	T2,BIOPRT	;IF NOW .LT. BEFORE .LE. #JOBS
  1802	001425'	256000	000000'		 STOPCD 		;  SOMEONE'S GOING THE WRONG WAY
  1803	001426'	200340	000000*	BLKNG2:	MOVE	T2,BPREQ	;T2/ OLD BLOCK-PORT-REQ
  1804	001427'	272300	001426*		ADDM	T1,BPREQ	;UPDATE BPREQ
  1805	001430'	323340	001433'		JUMPLE	T2,BLKNG3	;IF SOMEONE WAS IN BLOCK-PORT WAIT
  1806	001431'	337000	000006		SKIPG	T1		;AND THERE'RE MORE PORTS NOW,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 31-2
SCNSER.MAC	25-JAN-91 22:40		BLKIHR - HERE WHEN "INPUT TERMINATED - BY HOST REQUEST"

  1807	001432'	476000	000000*		SETOM	BPAVAL		;  TELL THE SCHEDULER
  1808	001433'	202440	016461'	BLKNG3:	MOVEM	T4,BIOPRT	;SET THE NEW # OF PORTS
  1809	001434'	336100	016451'	BLKNG4:	SKIPN	J,BIOJOB	;IF THERE'S A JOB IN AX WAIT,
  1810	001435'	344740	000756'		AOJA	P4,SCNIN1
  1811	001436'	402000	016451'		SETZM	BIOJOB
  1812	001437'	201300	000000*		MOVEI	T1,RNQ
  1813	001440'	137300	000000*		DPB	T1,PJBSTS##
  1814	001441'	260040	000000*		PUSHJ	P,SETRUN	;  WAKE IT UP
  1815	001442'	344740	000756'		AOJA	P4,SCNIN1
  1816				> ;END IFCPU (<KI,KL>)
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 32
SCNSER.MAC	25-JAN-91 22:40		HERE WHEN A "CHARACTERS LOST" MESSAGE (BUFFER ZAP) IS

  1817				SUBTTL	HERE WHEN A "CHARACTERS LOST" MESSAGE (BUFFER ZAP) IS
  1818				;RECEIVED: IF THE DATA BYTE IS 0, OUTPUT CHARACTERS WERE
  1819				;LOST; OTHERWISE, INPUT CHARACTERS WERE LOST
  1820
  1821	001443'	340740	000000	RCVLOS:	AOJ	P4,
  1822	001444'	350000	016512'		AOS	TTYLOS		;RECORD CHARACTER LOST BY TYMNET
  1823	001445'	135300	000270'		LDB	T1,INPCHR	;T1/ DIRECTION
  1824	001446'	336000	000006	FRCLOS:	SKIPN	T1
  1825	001447'	664300	020000		TROA	T1,LXROCL	; 0 = OUTPUT LOST
  1826	001450'	201300	040000		MOVEI	T1,LXRICL	; 1 = INPUT LOST
  1827	001451'	436305	000032		IORM	T1,LDBDCX(U)
  1828	001452'	550205	000000		HRRZ	F,LDBDDB(U)
  1829	001453'	322200	001401*		JUMPE	F,CPOPJ		;NOTHING TO DO IF NO DDB
  1830	001454'	201300	040000		MOVEI	T1,IOBKTL
  1831	001455'	436304	000002		IORM	T1,DEVIOS(F)	;SET ERROR FLAG
  1832	001456'	135300	000232'		LDB	T1,DDPTLC
  1833	001457'	324740	001272*		PJRST	TAKTRJ		;SET TO INTERRUPT
  1834
  1835				;HERE WHEN A TERMINAL CHARACTERISTICS VALUE IS RECEIVED
  1836
  1837	001460'	135300	000271'	RCVTMC:	LDB	T1,INPCH2	;VALUE
  1838	001461'	135340	000270'		LDB	T2,INPCHR	;AND TYPE NUMBER
  1839	001462'	303340	000024		CAILE	T2,MAXTMC	;CHECK RANGE
  1840	001463'	254000	001466'		 JRST	RCVTCX		;(BAD)
  1841	001464'	137307	000004'		DPB	T1,TABTMR(T2)
  1842	001465'	344740	000756'		AOJA	P4,SCNIN1	;FINISHED
  1843
  1844	001466'			RCVTCX:
  1845				;*;	CAILE	T2,<MAXTMC+TMCSLP>
  1846				;*;	 STOPCD			;AMAZINGLY BAD
  1847	001466'	350000	016525'		AOS	TMCOOR		;SLIGHTLY BAD - BUMP OUT-OF-RANGE COUNT
  1848	001467'	344740	000756'		AOJA	P4,SCNIN1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 33
SCNSER.MAC	25-JAN-91 22:40		HERE WHEN THE TIME AND DATE ARE RECEIVED

  1849				SUBTTL	HERE WHEN THE TIME AND DATE ARE RECEIVED
  1850
  1851	001470'	135340	000273'	CLKRSP:	LDB	T2,INPDL2	;GET HIGH ORDER BITS OF TIME
  1852	001471'	271740	000001		ADDI	P4,1
  1853	001472'	405740	000756*		ANDI	P4,MSKIRG
  1854	001473'	135300	000272'		LDB	T1,INPDL1	;GET LOW ORDER BITS
  1855	001474'	137340	016644'		DPB	T2,[POINT 16,T1,19]
  1856	001475'	231300	250600		IDIVI	T1,^D<24*60*60>	;DAYS IN T1, SEC IN T2
  1857	001476'	271300	007105		ADDI	T1,^D3653	;Convert 1-JAN-74 to 1-JAN-64
  1858	001477'	220340	000000*		IMUL	T2,JFYSEC
  1859	001500'	250300	000007		EXCH	T1,T2		;Time in T1, Date in T2
  1860	001501'	260040	000000*		PUSHJ	P,COMGMS##	;Set GMT time (in UUOCON)
  1861	001502'	200300	000000*		MOVE	T1,DATE##	;Remember the date/time of when
  1862	001503'	202300	000000*		MOVEM	T1,SUPTIM##	; the Supervisor saw us
  1863	001504'	344740	000756'		AOJA	P4,SCNIN1
  1864
  1865				;HERE WHEN A PORT STATUS MESSAGE IS RECEIVED (see comment at ACPSM)
  1866
  1867	001505'	135300	000270'	RCVPS:	LDB	T1,INPCHR	; GET THE 4 BITS
  1868	001506'	137300	000176'		DPB	T1,LDPPSM	; STORE PORT STATUS MSG
  1869	001507'	201300	100000		MOVEI	T1,LXRPSS
  1870	001510'	436305	000032		IORM	T1,LDBDCX(U)	; AND NOTE THAT IT'S BEEN SEEN
  1871	001511'	205300	200000		MOVSI	T1,LMLPSP
  1872	001512'	436305	000030		IORM	T1,LDBMOD(U)
  1873	001513'	550205	000000		HRRZ	F,LDBDDB(U)
  1874	001514'	322200	001517'		JUMPE	F,PSDONE	; NO TRAP IF NO DDB
  1875	001515'	135300	000235'		LDB	T1,DDPTPS
  1876	001516'	260040	001457*		PUSHJ	P,TAKTRJ	; SET TO INTERRUPT
  1877	001517'	344740	000756'	PSDONE:	AOJA	P4,SCNIN1	; DONE
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 34
SCNSER.MAC	25-JAN-91 22:40		HERE WHEN A CIRCUIT ZAPPER IS RECEIVED

  1878				SUBTTL	HERE WHEN A CIRCUIT ZAPPER IS RECEIVED
  1879
  1880	001520'	350000	016517'	RCVZAP:	AOS	NZAPIN		;# REAL, TRUE ZAPPERS IN
  1881	001521'	200305	000001		MOVE	T1,LDBLIN(U)	;Mark as zapper coming from TYMNET
  1882	001522'	663300	400000		TLOE	T1,LNLZIN	;If there's one already in,
  1883					 JRST	[MOVEI	T1,NZAPN2
  1884						 PUSHJ	P,ZAPBUG  ;NOTE IT
  1885	001523'	254000	016645'			 JRST	SIMRZP	]
  1886	001524'	202305	000001		MOVEM	T1,LDBLIN(U)
  1887	001525'	271740	000001	SIMRZP:	ADDI	P4,1		;Skip past the zap command in IRING
  1888
  1889				;Enter at FRCZAP to pretend we received a zapper from the base
  1890
  1891	001526'	402005	000003	FRCZAP:	SETZM	LDBOUT(U)		;Cancel any pending output bits
  1892	001527'	205300	000400		MOVSI	T1,L2LOWT
  1893	001530'	412305	000027		ANDCAM	T1,LDBBYT(U)		;Cancel wait for orange ball
  1894	001531'	331005	000026		SKIPL	LDBLOG(U)		;If port's not logged-in,
  1895					 JRST	[SETZB	T1,LDBLOG(U)	; cancel "login in progress"
  1896						 DPB	T1,LDPHST	;Clear host number
  1897						 MOVEI	T1,1
  1898						 DPB	T1,LOPZAP	;Set send-zapper
  1899						 DPB	T1,LDBOPB(U)	; and need-output
  1900						 MOVSI	T1,LDLNOP
  1901						 ANDCAM	T1,LDBDCH(U)	;Ignore backpressure
  1902	001532'	254000	016650'			 POPJ	P,	]
  1903	001533'	205300	300000		MOVSI	T1,LLLNLN!LLLZAP	;Line not there (TYMNET has zapped it)
  1904	001534'	436305	000026		IORM	T1,LDBLOG(U)		;Mark port as externally zapped
  1905	001535'	200305	000030		MOVE	T1,LDBMOD(U)
  1906	001536'	607300	001000		TLNN	T1,LMLBIO		;IF BLOCK-MODE SET,
  1907	001537'	332005	000005		SKIPE	LDBBIO(U)		;OR BLOCK I/O'S STILL IN PROGRESS,
  1908	001540'	260040	012113'		 PUSHJ	P,BIOZAP		;  RELEASE BUFFERS & CLEAR BLOCK-MODE
  1909	001541'	603240	000040		TLNE	U,LDLAUX		;IF IT'S AN AUX PORT
  1910	001542'	324740	011254'		 PJRST	ZAPAUX
  1911	001543'	550205	000000		HRRZ	F,LDBDDB(U)
  1912	001544'	322200	001453*		JUMPE	F,CPOPJ
  1913	001545'	205300	020000		MOVSI	T1,TTYATC
  1914	001546'	616304	000004		TDNN	T1,DEVMOD(F)		;OR AT ANY RATE NOT A COMMAND PORT,
  1915	001547'	324740	011254'		 PJRST	ZAPAUX			;  DETACH & TRY TO FREE DDB
  1916
  1917				    ;HERE WHEN A ZAPPER IS RECEIVED ON A JOB'S COMMAND PORT
  1918
  1919	001550'	135100	001135*		LDB	J,PJOBN			;J/ DON't FORCE,,JOB#
  1920	001551'	260040	006657'		PUSHJ	P,HNGTTY		;Force hangup for job/frame
  1921	001552'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 35
SCNSER.MAC	25-JAN-91 22:40		INPUT CHARACTER HANDLER

  1922				SUBTTL INPUT CHARACTER HANDLER
  1923
  1924	001553'	336005	000026	CHRMLT:	SKIPN	LDBLOG(U)		;MIGHT BE LINE WE HAVE JUST
  1925	001554'	254000	001573'		 JRST	MLTNDB			; SENT ZAPPER ON, FIX INPUT RING
  1926	001555'	201317	000273*		MOVEI	T1,IRING(P4)
  1927	001556'	505300	241000		HRLI	T1,(POINT 8,0,BYP2)	;SET UP A BYTE POINTER
  1928	001557'	202300	016416'		MOVEM	T1,CHRRDP
  1929	001560'	134400	016416'	CHRML1:	UUILDB	T3,CHRRDP
  1930	001561'	260040	001607'		PUSHJ	P,MOVCHR
  1931	001562'	367600	001560'		 SOJG	P1,CHRML1		;CONTINUE
  1932	001563'	327600	001602'		JUMPG	P1,CHRML3		;HERE AT END OR DEF ECHO MODE
  1933	001564'			CLRMLT:
  1934				;;;;;;;; MORE KMC DEBUG CODE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1935				IFKMC<	MOVE	P1,IRPMSG
  1936					CAME	P1,IRING(P4)
  1937					 STOPCD 		;CRASH ON KMC IRING OVERWRITE or bad P4
  1938				>;END_IFKMC
  1939				;;;;;;;; END KMC DEBUG CODE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1940	001564'	135600	000266'		LDB	P1,INPTYP		;NOW CLEAR OUT THE INPUT RING
  1941	001565'	620600	000200		TRZ	P1,200			;GET COUNT BACK
  1942	001566'	550205	000000		HRRZ	F,LDBDDB(U)		;CHARGE
  1943	001567'	322200	001573'		JUMPE	F,MLTNDB
  1944	001570'	135300	001550*		LDB	T1,PJOBN
  1945	001571'	272606	000000*		ADDM	P1,JBTCIN(T1)
  1946	001572'	272600	001571*		ADDM	P1,JBTCIN		;System-wide # of characters input
  1947	001573'	271600	000005	MLTNDB:	ADDI	P1,5	;GET NUMBER OF WORDS USED (2 BYTES FOR COUNT AND PORT)
  1948	001574'	242600	777776		LSH	P1,-2
  1949	001575'	270740	000014		ADD	P4,P1			;INCREMENT POINTER BY NUMBER USED
  1950	001576'	254000	000756'		JRST	SCNIN1
  1951
  1952	001577'	134400	016416'	CHRML2:	UUILDB	T3,CHRRDP
  1953	001600'	260040	001607'		PUSHJ	P,MOVCHR		;THIS IS THE DEFERED ECHO LOOP
  1954	001601'	255000	000000		 JFCL				;SHOULD NOT BE GETTING HERE
  1955	001602'	367600	001577'	CHRML3:	SOJG	P1,CHRML2
  1956	001603'	201300	000001		MOVEI	T1, 1
  1957	001604'	137300	000102'		DPB	T1, LOPECO		;SET SEND-ECHO
  1958	001605'	137305	000002		DPB	T1, LDBOPB(U)		;AND NEED-OUTPUT
  1959	001606'	254000	001564'		JRST	CLRMLT
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 36
SCNSER.MAC	25-JAN-91 22:40		CALLED WITH CHARACTER IN T3. DISPATCH ON CHARACTER TYPE AND LINE MODE

  1960				SUBTTL	CALLED WITH CHARACTER IN T3. DISPATCH ON CHARACTER TYPE AND LINE MODE
  1961
  1962	001607'	135640	000202'	MOVCHR:	LDB	P2,LDPMIN	;Get the input mode
  1963	001610'	606400	000200		TRNN	T3,200
  1964	001611'	334710	000312'	MOVCH2:	SKIPA	P3,CHRTAB(T3)	;Get character bits
  1965	001612'	200710	000112'		MOVE	P3,CHRTAB-200(T3)
  1966	001613'	135340	000302'		LDB	T2,CHPINP	;GET INPUT TYPE
  1967	001614'	256015	001616'	MOVCH1:	XCT	CIMTAB(P2)	;DO THE RIGHT THING FOR THE LINE MODE
  1968	001615'	254006	000000		JRST	(T1)		;THIS WILL USUALLY LOAD AN ADDRESS IN T1
  1969
  1970				;LINE MODE DISPATCH TABLE
  1971
  1972	001616'	254000	001747'	CIMTAB:	JRST	LOGCHR		;LOGIN
  1973	001617'	254000	002124'		JRST	IMGDEF		;IMAGE,DEF ECHO
  1974	001620'	254000	002137'		JRST	IMGRMA		;IMAGE,REM ECHO,BKA=1
  1975	001621'	254000	002153'		JRST	IMGRMT		;IMAGE,REM ECHO,BKA=0
  1976	001622'	554307	001632'		HLRZ	T1,MD0405(T2)	;NORMAL,DEF ECHO,BK2=0
  1977	001623'	550307	001632'		HRRZ	T1,MD0405(T2)	;NORMAL,DEF ECHO,BK2=1
  1978	001624'	554307	001636'		HLRZ	T1,MD0607(T2)	;NORMAL,REM ECHO,BKA=1,BK2=0
  1979	001625'	550307	001636'		HRRZ	T1,MD0607(T2)	;NORMAL,REM ECHO,BKA=1,BK2=1
  1980	001626'	554307	001642'		HLRZ	T1,MD1011(T2)	;NORMAL,REM ECHO,BKA=0,BK2=1
  1981	001627'	550307	001642'		HRRZ	T1,MD1011(T2)	;NORMAL,REM ECHO,BKA=0,BK2=0
  1982	001630'	554307	001646'		HLRZ	T1,MD1213(T2)	;COMMAND,REM ECHO
  1983	001631'	550307	001646'		HRRZ	T1,MD1213(T2)	;COMMAND,DEF ECHO
  1984
  1985				;CHARACTER TYPE DISPATCH TABLES
  1986
  1987				; CHARACTER TYPES FOR INPUT
  1988				;
  1989				; 0 - SPECIAL ACTION
  1990				; 1 - NORMAL CHARACTER
  1991				; 2 - BREAK (CONTROL) CHARACTER
  1992				; 3 - BREAK2 (PUNCTUATION) CHARACTER
  1993
  1994	001632'	002520'	002520'	MD0405:	IACT0,,IACT0	; 0,, 0
  1995	001633'	002170'	002170'		IACT1,,IACT1	; 1,, 1
  1996	001634'	002173'	002173'		IACT2,,IACT2	; 2,, 2
  1997	001635'	002202'	002210'		IACT3,,IACT4	; 3,, 4
  1998
  1999	001636'	002520'	002520'	MD0607:	IACT0,,IACT0	; 0,, 0
  2000	001637'	002215'	002215'		IACT5,,IACT5	; 5,, 5
  2001	001640'	002222'	002222'		IACT6,,IACT6	; 6,, 6
  2002	001641'	002226'	002234'		IACT7,,IACT10	; 7,,10
  2003
  2004	001642'	002520'	002520'	MD1011:	IACT0,,IACT0	; 0,, 0
  2005	001643'	002242'	002242'		IACT11,,IACT11	;11,,11
  2006	001644'	002222'	002222'		IACT6,,IACT6	; 6,, 6
  2007	001645'	002234'	002451'		IACT10,,IACT12	;10,,12
  2008
  2009	001646'	002520'	002520'	MD1213:	IACT0,,IACT0	; 0,, 0
  2010	001647'	002457'	002506'		IACT13,,IACT21	;13,,21
  2011	001650'	002462'	002511'		IACT14,,IACT22	;14,,22
  2012	001651'	002470'	002500'		IACT15,,IACT17	;15,,17
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 37
SCNSER.MAC	25-JAN-91 22:40		THIS ROUTINE IS CALLED BY ALMOST EVERYONE TO PUT A CHR INTO

  2013				SUBTTL	THIS ROUTINE IS CALLED BY ALMOST EVERYONE TO PUT A CHR INTO
  2014				;THE INPUT BUFFER
  2015
  2016	001652'	200440	016375'	RCVCHR:	MOVE	T4,TTFREN
  2017	001653'	307440	000003		CAIG	T4,TIRSVD
  2018	001654'	254000	001732'		 JRST	RECHLT		;OUT OF BUFFERLETS. GIVE HIM BELL
  2019	001655'	200445	000012		MOVE	T4,LDBTIC(U)
  2020	001656'	270445	000014		ADD	T4,LDBECC(U)
  2021	001657'	311440	016475'		CAML	T4,TIWRNN	;OVER SMALL QUOTA?
  2022	001660'	254000	001720'		 JRST	RWARN		;TRY TO STOP HIS INPUT
  2023	001661'	260040	015600'	RCVCH1:	PUSHJ	P,CHRTRP	;TAKE A CHARACTER TRAP
  2024	001662'	336345	000010		SKIPN	T2,LDBTIP(U)
  2025	001663'	260040	001705'		 PUSHJ	P,RECVRG	;MUST SET UP THE INPUT POINTERS
  2026	001664'	260040	006216'		PUSHJ	P,TTPUTC	;PUT THE CHR IN THE BUFFER
  2027	001665'	202345	000010		MOVEM	T2,LDBTIP(U)
  2028	001666'	350005	000007		AOS	LDBBKI(U)
  2029	001667'	205300	004000		MOVSI	T1,L2LDEL	;SHOULD WE RESET THE \ FLAG?
  2030	001670'	616305	000027		TDNN	T1,LDBBYT(U)
  2031	001671'	254000	001701'		 JRST	RCVCH2		;NOT ON
  2032	001672'	261040	000007		PUSH	P,T2
  2033	001673'	201400	000134		MOVEI	T3,"\"
  2034	001674'	260040	002430'		PUSHJ	P,ENTRUB
  2035	001675'	201300	000001		MOVEI	T1,1
  2036	001676'	137300	000074'		DPB	T1,LOPRUB	;SET SEND-RUBOUT
  2037	001677'	137305	000002		DPB	T1,LDBOPB(U)	;AND NEED-OUTPUT
  2038	001700'	262040	000007		POP	P,T2
  2039	001701'	205300	204000	RCVCH2:	MOVSI	T1,L2LDEL!L2LCCS
  2040	001702'	412305	000027		ANDCAM	T1,LDBBYT(U)
  2041	001703'	350001	000000		AOS	(P)
  2042	001704'	263040	000000		POPJ	P,
  2043
  2044	001705'	260040	006262'	RECVRG:	PUSHJ	P,GETCHK
  2045	001706'	202345	000010		MOVEM	T2,LDBTIP(U)	;SET UP INPUT POINTERS
  2046	001707'	202345	000011		MOVEM	T2,LDBTIT(U)
  2047	001710'	202345	000013		MOVEM	T2,LDBECT(U)
  2048	001711'	402005	000007		SETZM	LDBBKI(U)
  2049	001712'	402005	000006		SETZM	LDBBKP(U)
  2050	001713'	402005	000012		SETZM	LDBTIC(U)
  2051	001714'	402005	000014		SETZM	LDBECC(U)
  2052	001715'	402005	000015		SETZM	LDBBKC(U)
  2053	001716'	402005	000016		SETZM	LDBBK2(U)
  2054	001717'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 38
SCNSER.MAC	25-JAN-91 22:40		THIS ROUTINE IS CALLED BY ALMOST EVERYONE TO PUT A CHR INTO

  2055	001720'	311440	016476'	RWARN:	CAML	T4,TIHLTN	;OVER LARGE QUOTA?
  2056	001721'	254000	001726'		 JRST	RWARN1		;YES: GO SEE HOW BADLY WE LOST
  2057	001722'	201300	000001		MOVEI	T1,1
  2058	001723'	137300	000063'		DPB	T1,LOPBPN	;NO: SET BACKPRESSURE-ON
  2059	001724'	137305	000002		DPB	T1,LDBOPB(U)	;    AND NEED-OUTPUT
  2060	001725'	254000	001661'		JRST	RCVCH1
  2061
  2062	001726'	135300	000063'	RWARN1:	LDB	T1,LOPBPN	;STILL WAITING TO SEND BACKPRESSURE?
  2063	001727'	332000	000006		SKIPE	T1
  2064	001730'	354000	016500'		 AOSA	LOSPDP		;YES: WE'RE TOO SLOW
  2065	001731'	350000	016501'		AOS	LOS620		;NO: BACKPRESSURE BROKEN
  2066					PFALL	RECHLT		;SEND BELL AND DROP CHARACTERS
  2067
  2068	001732'	350000	016477'	RECHLT:	AOS	TTYRHT		;RECORD CHARACTER LOST
  2069	001733'	201300	040000		MOVEI	T1,LXRICL
  2070	001734'	436305	000032		IORM	T1,LDBDCX(U)	;NOTE THE DIRECTION
  2071	001735'	550205	000000		HRRZ	F,LDBDDB(U)
  2072	001736'	322200	001743'		JUMPE	F,RECHT1
  2073	001737'	201300	040000		MOVEI	T1,IOBKTL	;SET IO.BKT
  2074	001740'	436304	000002		IORM	T1,DEVIOS(F)
  2075	001741'	135300	000232'		LDB	T1,DDPTLC	;IF CHARACTERS-LOST ENABLED
  2076	001742'	260040	001516*		PUSHJ	P,TAKTRJ	;TAKE IT
  2077	001743'	201300	000001	RECHT1:	MOVEI	T1,1
  2078	001744'	137300	000072'		DPB	T1,LOPSBL	;SET SEND-BELL
  2079	001745'	137305	000002		DPB	T1,LDBOPB(U)	;AND NEED-OUTPUT
  2080	001746'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 39
SCNSER.MAC	25-JAN-91 22:40		HERE ON A LOGIN CHARACTER (ONE OF FIRST 4 ON LINE)

  2081				SUBTTL	HERE ON A LOGIN CHARACTER (ONE OF FIRST 4 ON LINE)
  2082
  2083	001747'	337445	000026	LOGCHR:	SKIPG	T4,LDBLOG(U)	;Are we really logging him in?
  2084	001750'	263040	000000		 POPJ	P,		;No, return from MOVCHR
  2085	001751'	242440	000010		LSH	T4,^D8		;Put login char
  2086	001752'	434440	000010		IOR	T4,T3		; into
  2087	001753'	202445	000026		MOVEM	T4,LDBLOG(U)	;  LDBLOG
  2088	001754'	325440	001544*		JUMPGE	T4,CPOPJ	;More to come
  2089
  2090				;WE'VE RECEIVED THE 32 BITS OF LOGIN DATA FROM TYMNET - NOW LOG THE LINE IN
  2091
  2092	001755'	350000	016412'		AOS	INTERM		;COUNT 1 MORE LINE LOGGED-IN
  2093	001756'	135300	000156'		LDB	T1,TRMBYP	;T1/ TERMINAL ID CODE
  2094	001757'	200306	002064'		MOVE	T1,TRMTAB(T1)	;T1/ IBM,FAST,FC1,FC2,WIDTH CODES
  2095	001760'	607300	200000		TLNN	T1,200000	;FAST TERMINAL?
  2096	001761'	634400	000010		 TDZA	T3,T3		;NO
  2097	001762'	205400	400000		MOVSI	T3,LXL120	;YES
  2098	001763'	202405	000032		MOVEM	T3,LDBDCX(U)	;SET LDBDCX (0 EXCEPT FOR FAST BIT)
  2099	001764'	205400	021020		MOVSI	T3,LDLDEF!LDLLCT!LDLCOM
  2100	001765'	337000	000006		SKIPG	T1		;IS IT A 2741?
  2101	001766'	661400	000004		 TLO	T3,LDLLCP	;YES: SET LOCAL-COPY FLAG
  2102	001767'	402005	000027		SETZM	LDBBYT(U)	;MOST FIELDS ARE 0
  2103	001770'	137300	000172'		DPB	T1,LDPFC1	;SET FC1
  2104	001771'	242300	777776		LSH	T1,-2
  2105	001772'	137300	000166'		DPB	T1,LDPFC2	;AND FC2
  2106	001773'	242300	777776		LSH	T1,-2
  2107	001774'	137300	000170'		DPB	T1,LDPWID	;AND LINE WIDTH
  2108	001775'	205300	004000		MOVSI	T1,LLLHDX
  2109	001776'	616305	000026		TDNN	T1,LDBLOG(U)	;HALF-DUPLEX?
  2110	001777'	634300	000006		 TDZA	T1,T1		;NO
  2111	002000'	201300	000001		MOVEI	T1,1		;YES
  2112	002001'	137300	000014'		DPB	T1,LDPHDX	;SET THE CHARACTERISTIC
  2113	002002'	336000	000006		SKIPN	T1		;IF IT'S HALF DUPLEX
  2114	002003'	603400	000004		TLNE	T3,LDLLCP	;OR LOCAL-COPY (2741)
  2115	002004'	621400	001000		TLZ	T3,LDLDEF	;DON'T SET DEFERRED ECHO
  2116	002005'	202405	000031		MOVEM	T3,LDBDCH(U)
  2117	002006'	402005	000033		SETZM	LDBCLA(U)	;[dws] clear terminal type
  2118	002007'	205300	646471		MOVSI	T1,'TTY'
  2119	002010'	202305	000033		MOVEM	T1,LDBTYP(U)	;Terminal type
  2120	002011'	402005	000034		SETZM	LDBSTR(U)	;  CLEAR PREVIOUS CIRCUIT NAME
  2121	002012'	551305	000035		HRRZI	T1,LDBSTR+1(U)	;  GET ADDRESS
  2122	002013'	505306	777777		HRLI	T1,-1(T1)	;    STR,,STR+1
  2123	002014'	251305	000043		BLT	T1,LDBSTR+AUXSTL-1(U)
  2124
  2125	002015'	500240	000010		HLL	U,T3		;Make sure this matches LH<LDBDCH>
  2126								; or aux cir test on next page fails
  2127
  2128					;CLEAR RECEIVED CHARACTERISTICS
  2129
  2130			000000		ZZN==0
  2131					REPEAT TMCSIZ,<
  2132					SETZM	LDBTMR+ZZN(U)
  2133					ZZN==ZZN+1>
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 39-2
SCNSER.MAC	25-JAN-91 22:40		HERE ON A LOGIN CHARACTER (ONE OF FIRST 4 ON LINE)

  2134	002016'	402005	000044
  2135	002017'	402005	000045
  2136
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 40
SCNSER.MAC	25-JAN-91 22:40		HERE ON A LOGIN CHARACTER (ONE OF FIRST 4 ON LINE)

  2137					;SET TO ECHO CR AS CRLF, NOT ECHO CTRL-I,
  2138					;NOT ECHO LF AS CRLF
  2139
  2140	002020'	201300	000000		MOVEI	T1,0
  2141	002021'	137300	000033'		DPB	T1,LDSELF
  2142	002022'	137300	000032'		DPB	T1,LDSCIE
  2143	002023'	201300	000001		MOVEI	T1,1
  2144	002024'	137300	000034'		DPB	T1,LDSECR
  2145	002025'	200300	016660'		MOVE	T1,[LTSELF!LTSCIE!LTSECR]
  2146	002026'	202305	000050		MOVEM	T1,LDBTMT(U)
  2147
  2148	002027'	402005	000003		SETZM	LDBOUT(U)	;CLEAR ALL SEND BITS BUT...
  2149	002030'	201300	000001		MOVEI	T1,1
  2150	002031'	137300	000071'		DPB	T1,LOPSTC	;SET SEND-CHARACTERISTICS
  2151	002032'	137300	000070'		DPB	T1,LOPSTP	;AND SEND-PROBE
  2152	002033'	137305	000002		DPB	T1,LDBOPB(U)	;AND NEED-OUTPUT
  2153	002034'	553005	000000		HRRZS	LDBDDB(U)	;CLEAR KJOB ETC. BITS
  2154	002035'	201300	200000		MOVEI	T1,STSUPR	;200000
  2155	002036'	612300	000000*		TDNE	T1,STATES
  2156	002037'	254000	002043'		 JRST	LOGCH1		;System is super-shut, zap always
  2157	002040'	603240	000040		TLNE	U,LDLAUX	;Is this an AUX circuit ?
  2158	002041'	331000	002036*		SKIPL	STATES		;Yes, is system plain shut ?
  2159	002042'	254000	002046'		 JRST	LOGCH2		;No, o.k. to log in
  2160	002043'	202305	000026	LOGCH1:	MOVEM	T1,LDBLOG(U)	;Must be non-zero and non-negative
  2161	002044'	370000	016412'		SOS	INTERM		;Leave INTERM alone in case
  2162	002045'	254000	015162'		JRST	TTYZAP		; of Auto-Restart
  2163
  2164	002046'	260040	007622'	LOGCH2:	PUSHJ	P,SETLMD	;Set the line mode
  2165				;;
  2166				;; Here (finally!) to assign a frame for this port and initiate
  2167				;; LOGIN.
  2168				;;
  2169	002047'	400200	000000		SETZ	F,		;Indicate no DDB assigned yet
  2170	002050'	260040	000000*		PUSHJ	P,FRMASN##	;Assign a free frame number
  2171	002051'	254000	002056'		  JRST	NEWJER		;No free frames...
  2172	002052'	260040	015206'		PUSHJ	P,TTYATI	;Attach a TTY DDB to this LDB
  2173	002053'	254000	002061'		  JRST	NEWTER		;No free TTY DDB's
  2174	002054'	201300	000000*		MOVEI	T1,CMFCXN##	;Forced command index for LOGIN
  2175	002055'	324740	013565'		PJRST	TTFORC		;Force a LOGIN command on this port
  2176
  2177				NEWJER:	MOVEI	T1,[ASCIZ /
  2178				frame capacity exceeded
  2179	002056'	201300	016661'	/]
  2180	002057'	260040	000000*		PUSHJ	P,CONMES##	;Type out error message
  2181	002060'	324740	015162'		PJRST	TTYZAP		;Kill off TTY
  2182
  2183				NEWTER:	MOVEI	T1,[ASCIZ /
  2184				port capacity exceeded
  2185	002061'	201300	016667'	/]
  2186	002062'	260040	002057*		PUSHJ	P,CONMES##	;Type out error message
  2187	002063'	324740	000000*		PJRST	FRMKJF##	;Free up frame slot and kill off TTY
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 41
SCNSER.MAC	25-JAN-91 22:40		HERE ON A LOGIN CHARACTER (ONE OF FIRST 4 ON LINE)

  2188				;TERMINAL ID CODE = INITIAL TERMINAL CHARACTERISTICS TABLE
  2189
  2190				DEFINE TERCH (IBM,FAST,F1,F2,WIDTH)
  2191					<BYTE (1) IBM,FAST (22) 0 (8) WIDTH (2) F2,F1>
  2192
  2193	002064'	200000	002400	TRMTAB:	TERCH (0,1,0,0,^D80)	;0    AUX circuit
  2194	002065'	000000	002400		TERCH (0,0,0,0,^D80)	;1  A 300 baud
  2195	002066'	000000	003613		TERCH (0,0,3,2,^D120)	;2  C 300 baud printer, wide carriage, delay
  2196	002067'	000000	002205		TERCH (0,0,1,1,^D72)	;3  E 300 baud thermal printer, small delay
  2197	002070'	000000	003603		TERCH (0,0,3,0,^D120)	;4  G 300 baud belt printer (GE Terminet), delay
  2198	002071'	000000	002205		TERCH (0,0,1,1,^D72)	;5  B 150 baud Teletype 37, no parity
  2199	002072'	000000	003613		TERCH (0,0,3,2,^D120)	;6  F 150 in, 300 out, Syner-Data Beta terminal
  2200	002073'	000000	002205		TERCH (0,0,1,1,^D72)	;7  J 150 baud Teletype 37, even parity
  2201	002074'	000000	002205		TERCH (0,0,1,1,^D72)	;8 CR 300 baud IBM 3767 in 2471 mode 32.4 cps
  2202	002075'	400000	002406		TERCH (1,0,2,1,^D80)	;9 CR 134.5 baud IBM 2471 EBCDIC
  2203	002076'	000000	002205		TERCH (0,0,1,1,^D72)	;10 D 110 baud Teletype ASR-33
  2204	002077'	000000	002405		TERCH (0,0,1,1,^D80)	;11 I (was dot-matrix printer) SYNC - HSA
  2205	002100'	200000	002403		TERCH (0,1,3,0,^D80)	;12 A,G,I 1200 baud (GOUGING=1, 120 cps)
  2206	002101'	200000	002400		TERCH (0,1,0,0,^D80)	;13 Burroughs 1200 polled terminal
  2207	002102'	200000	002400		TERCH (0,1,0,0,^D80)	;14 AUX through gateway
  2208	002103'	000000	002200		TERCH (0,0,0,0,^D72)	;15 BAUDOT, 50 or 75 baud
  2209	002104'	200000	002403		TERCH (0,1,3,0,^D80)	;16 A,G,I 2400 baud (GOUGING=2, 240 cps)
  2210	002105'	200000	002400		TERCH (0,1,0,0,^D80)	;17   SYNC - Polled Terminals
  2211	002106'	200000	002400		TERCH (0,1,0,0,^D80)	;18   SYNC - Point-to-Point
  2212	002107'	200000	002403		TERCH (0,1,3,0,^D80)	;19 A,G,I 4800 baud (GOUGING=2, 240 cps)
  2213	002110'	200000	002403		TERCH (0,1,3,0,^D80)	;20 A,G,I 9600 baud (GOUGING=3, 960 cps)
  2214	002111'	200000	002403		TERCH (0,1,3,0,^D80)	;21 multiplexed PVC
  2215	002112'	200000	002403		TERCH (0,1,3,0,^D80)	;22 audio response on T-1 carrier (56000 bps)
  2216	002113'	200000	002403		TERCH (0,1,3,0,^D80)	;23 75 baud in 1200 out (VideoText)
  2217	002114'	200000	002403		TERCH (0,1,3,0,^D80)	;24   SYNC - SDLC
  2218	002115'	200000	002403		TERCH (0,1,3,0,^D80)	;25 Transaction Terminals
  2219	002116'	200000	002403		TERCH (0,1,3,0,^D80)	;26 Host originated
  2220	002117'	200000	002403		TERCH (0,1,3,0,^D80)	;27     unused
  2221	002120'	200000	002403		TERCH (0,1,3,0,^D80)	;28     unused
  2222	002121'	200000	002403		TERCH (0,1,3,0,^D80)	;29     unused
  2223	002122'	200000	002403		TERCH (0,1,3,0,^D80)	;30     unused
  2224	002123'	200000	002403		TERCH (0,1,3,0,^D80)	;31     unused
  2225								;32-63   HDX same as 0-31 but with Half Duplex
  2226
  2227			000000	TRMAUX==0	;CODE FOR AUX CIRCUIT
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 42
SCNSER.MAC	25-JAN-91 22:40		HERE ON IMAGE MODE IN DEFERRED ECHO

  2228				SUBTTL	HERE ON IMAGE MODE IN DEFERRED ECHO
  2229
  2230	002124'	660400	000400	IMGDEF:	TRO T3,400	;FLAG AS IMAGE CHARACTER
  2231	002125'	201300	000002		MOVEI T1,IMGDIM
  2232	002126'	137300	000174'		DPB T1,LDPTIM	;RESET INPUT TIMER
  2233	002127'	260040	001652'		PUSHJ P,RCVCHR	;GET CHR INTO BUFFER
  2234	002130'	263040	000000		 POPJ P,
  2235	002131'	260040	006437'		PUSHJ P,IMGCNT	;COUNT. IF T3 = IMAGE BREAK, T4 := TIWKC
  2236	002132'	301440	000110	DEFCHR:	CAIL T4,TIWKC	;IF IT'S A LINE'S WORTH,
  2237	002133'	260040	015611'	DEFBRK:	PUSHJ P,LINTRP	;SET LINE TRAP BITS
  2238	002134'	350005	000014	DEFNBK:	AOS LDBECC(U)
  2239	002135'	350001	000000		AOS (P)
  2240	002136'	263040	000000		POPJ P,		;SKIP-RETURN TO START ECHOING
  2241
  2242				;HERE ON IMAGE MODE, REMOTE ECHO, BREAK ON ALL CHRS
  2243
  2244	002137'	660400	000400	IMGRMA:	TRO T3,400
  2245	002140'	201300	000002		MOVEI T1,IMGDIM
  2246	002141'	137300	000174'		DPB T1,LDPTIM
  2247	002142'	260040	001652'		PUSHJ P,RCVCHR
  2248	002143'	263040	000000		 POPJ P,
  2249	002144'	260040	006451'		PUSHJ P,IMGCHG	;CHARGE FOR AN IMAGE BREAK CHR
  2250	002145'	260040	005772'		PUSHJ P,USRWAK	;WAKE JOB IF ASLEEP
  2251	002146'	135300	000203'		LDB T1,LDPIMB
  2252	002147'	312300	000010		CAME T1,T3	;IF IT'S THE IMAGE BREAK CHARACTER,
  2253	002150'	301440	000110		CAIL T4,TIWKC	;OR IF THERE'S A LINEFULL,
  2254	002151'	260040	015611'		 PUSHJ P,LINTRP	;  SET TRAP BITS
  2255	002152'	254000	002165'		JRST IMGRM1
  2256
  2257				;HERE ON IMAGE MODE, REMOTE ECHO, NOT BREAK ON ALL
  2258
  2259	002153'	660400	000400	IMGRMT:	TRO T3,400
  2260	002154'	201300	000002		MOVEI T1,IMGDIM
  2261	002155'	137300	000174'		DPB T1,LDPTIM
  2262	002156'	260040	001652'		PUSHJ P,RCVCHR
  2263	002157'	263040	000000		 POPJ P,
  2264	002160'	260040	006437'		PUSHJ P,IMGCNT	;COUNT. IF T3 = IMAGE BREAK CHAR, T4 := TIWKC
  2265	002161'	305440	000110		CAIGE T4,TIWKC	;IF IMAGE BREAK OR A LINE'S WORTH,
  2266	002162'	254000	002165'		 JRST IMGRM1
  2267	002163'	260040	005772'		PUSHJ P,USRWAK	;  WAKE UP JOB IF ASLEEP
  2268	002164'	260040	015611'		PUSHJ P,LINTRP	;  SET TRAP BITS
  2269	002165'	202345	000013	IMGRM1:	MOVEM T2,LDBECT(U)	;FIX ECHO POINTER
  2270	002166'	350005	000012		AOS LDBTIC(U)
  2271	002167'	263040	000000		POPJ P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 43
SCNSER.MAC	25-JAN-91 22:40		NORMAL CHR DEF ECHO

  2272				SUBTTL	NORMAL CHR DEF ECHO
  2273
  2274	002170'	260040	001652'	IACT1:	PUSHJ P,RCVCHR
  2275	002171'	263040	000000		 POPJ P,
  2276	002172'	254000	002132'		JRST DEFCHR
  2277
  2278				;BREAK CHR DEF ECHO
  2279
  2280	002173'	260040	001652'	IACT2:	PUSHJ P,RCVCHR
  2281	002174'	263040	000000		 POPJ P,
  2282	002175'	205300	000001		MOVSI T1,1
  2283	002176'	272305	000015		ADDM T1,LDBBKC(U)	;RECODR BREAK CHR
  2284	002177'	402005	000007	IACT2A:	SETZM LDBBKI(U)		;RESET ^U POINTERS
  2285	002200'	202345	000006		MOVEM T2,LDBBKP(U)
  2286	002201'	254000	002133'		JRST DEFBRK
  2287
  2288				;BREAK2 CHR DEF ECHO, NOT BREAK2 MODE
  2289
  2290	002202'	260040	001652'	IACT3:	PUSHJ P,RCVCHR
  2291	002203'	263040	000000		 POPJ P,
  2292	002204'	205300	000001		MOVSI T1,1
  2293	002205'	272305	000007		ADDM T1,LDBBKI(U)
  2294	002206'	272305	000016		ADDM T1,LDBBK2(U)	;COUNT BREAK2 AND IN ^U INFO
  2295	002207'	254000	002132'		JRST DEFCHR
  2296
  2297				;BREAK2 CHR DEF ECHO, BREAK2 MODE OR BREAK ON ALL AND BREAK2
  2298
  2299	002210'	260040	001652'	IACT4:	PUSHJ P,RCVCHR
  2300	002211'	263040	000000		 POPJ P,
  2301	002212'	205300	000001		MOVSI T1,1
  2302	002213'	272305	000016		ADDM T1,LDBBK2(U)	;RECORD BREAK2
  2303	002214'	254000	002177'		JRST IACT2A		;GO RESET ^U POINTER
  2304
  2305				;NORMAL CHR, RMT ECHO, BREAK ON ALL
  2306
  2307	002215'	260040	001652'	IACT5:	PUSHJ P,RCVCHR
  2308	002216'	263040	000000		 POPJ P,
  2309	002217'	301440	000110	IACT5A:	CAIL T4,TIWKC
  2310	002220'	254000	002246'		 JRST IAC11B
  2311	002221'	254000	002247'		JRST IAC11C
  2312
  2313				;BREAK CHR, RMT ECHO, ANY BREAK MODE
  2314
  2315	002222'	260040	001652'	IACT6:	PUSHJ P,RCVCHR
  2316	002223'	263040	000000		 POPJ P,
  2317	002224'	350005	000015		AOS LDBBKC(U)	;COUNT BREAK
  2318	002225'	254000	002237'		JRST IAC10A
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 44
SCNSER.MAC	25-JAN-91 22:40		BREAK2 CHR, RMT ECHO, BREAK ON ALL, NOT BREAK2

  2319				SUBTTL	BREAK2 CHR, RMT ECHO, BREAK ON ALL, NOT BREAK2
  2320
  2321	002226'	260040	001652'	IACT7:	PUSHJ P,RCVCHR
  2322	002227'	263040	000000		 POPJ P,
  2323	002230'	350005	000016		AOS LDBBK2(U)	;COUNT BREAK2
  2324	002231'	205300	000001		MOVSI T1,1
  2325	002232'	272305	000007		ADDM T1,LDBBKI(U)	;AND IN ^U INFO
  2326	002233'	254000	002217'		JRST IACT5A
  2327
  2328				;BREAK2 CHR, RMT ECHO, BREAK2 OR BREAK ALL AND BREAK2
  2329
  2330	002234'	260040	001652'	IACT10:	PUSHJ P,RCVCHR
  2331	002235'	263040	000000		 POPJ P,
  2332	002236'	350005	000016		AOS LDBBK2(U)
  2333	002237'	402005	000007	IAC10A:	SETZM LDBBKI(U)
  2334	002240'	202345	000006		MOVEM T2,LDBBKP(U)
  2335	002241'	254000	002246'		JRST IAC11B
  2336
  2337				;BREAK CHR, RMT ECHO, BREAK OR BREAK2 MODE
  2338
  2339	002242'	260040	001652'	IACT11:	PUSHJ P,RCVCHR
  2340	002243'	263040	000000		 POPJ P,
  2341	002244'	305440	000110	IAC11A:	CAIGE T4,TIWKC	;COUNT BIG ENOUGH?
  2342	002245'	254000	002250'		 JRST IAC11D	;NO
  2343	002246'	260040	015611'	IAC11B:	PUSHJ P,LINTRP
  2344	002247'	260040	005772'	IAC11C:	PUSHJ P,USRWAK
  2345	002250'	202345	000013	IAC11D:	MOVEM T2,LDBECT(U)
  2346	002251'	350005	000012		AOS LDBTIC(U)
  2347	002252'	135300	000306'		LDB T1,CHPECH	;GET THE ECHO TYPE FIELD
  2348	002253'	256006	002271'		XCT RMTECT(T1)
  2349					PFALL RMTCNT	;NOW FALL INTO THE REMOTE ECHO CODE
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 45
SCNSER.MAC	25-JAN-91 22:40		REMOTE ECHO CODE

  2350				SUBTTL	REMOTE ECHO CODE
  2351
  2352	002254'	271440	000001	RMTCNT:	ADDI T4,1	;SEVERAL JUST LDB T4,LDPPOS
  2353	002255'	606440	000400		TRNN T4,400	;TOO BIG?
  2354	002256'	137440	000175'		 DPB T4,LDPPOS	;NO RESET
  2355	002257'	603240	000006		TLNE U,LDLLCP!LDLPTP ;LOCAL COPY OR TAPE
  2356	002260'	263040	000000		 POPJ P,	;NEVER A FREE RETURN FOR THEM
  2357	002261'	135300	000170'		LDB T1,LDPWID
  2358	002262'	607240	000200		TLNN U,LDLNFC	;IF NO FREE RETURN WANTED
  2359	002263'	317440	000006		CAMG T4,T1	;OR NOT ENOUGH CHRS
  2360	002264'	263040	000000		 POPJ P,		;FINISHED
  2361	002265'	201300	000000	RMTECR:	MOVEI T1,0
  2362	002266'	137300	000175'		DPB T1,LDPPOS	;RESET POSITION TO 0
  2363	002267'	200440	005527'		MOVE T4,CRPTR
  2364	002270'	324740	002445'		PJRST RUBSTR	;PUT INTO "RUBOUT" STRING
  2365
  2366	002271'	254000	002276'	RMTECT:	JRST RMTSPA	;0 SPECIAL ACTION FOR THESE
  2367	002272'	135440	000175'		LDB T4,LDPPOS	;1 COUNT
  2368	002273'	263040	000000		POPJ P,		;2 DO NOT COUNT THIS ONE
  2369	002274'	263040	000000		POPJ P,		;3 "
  2370	002275'	135440	000175'		LDB T4,LDPPOS	;4 COUNT
  2371
  2372	002276'	135300	000165'	RMTSPA:	LDB T1,LDPMOD	;GET THE MODE WE ARE IN
  2373	002277'	135340	000311'		LDB T2,CHPSPE	;ECHO SPECIAL ACTION TYPE
  2374	002300'	256026	002301'		XCT @RMTSPT(T1)
  2375
  2376	002301'	256007	002305'	RMTSPT:	XCT RMTS10(T2)
  2377	002302'	256007	002317'		XCT RMTS94(T2)
  2378	002303'	256007	002317'		XCT RMTS94(T2)
  2379	002304'	256007	002305'		XCT RMTS10(T2)	;10 AND SUDS SAME
  2380
  2381	002305'	254000	002353'	RMTS10:	JRST RMTEXC	;^C ECHO ^C RETURN
  2382	002306'	254000	002350'		JRST RMTCR	;RETURN
  2383	002307'	254000	002357'		JRST RMTEXU	;^U  ECHO ^U
  2384	002310'	254000	002406'		JRST RMTTAB	;TAB
  2385	002311'	254000	002337'		JRST RMTALT	;ALTMODE POSSIBLE $ ECHO
  2386	002312'	254000	002372'		JRST RMTVT	;V. TAB
  2387	002313'	254000	002400'		JRST RMTFF	;FF
  2388	002314'	254000	002353'		JRST RMTEXC	;^Z  ECHO ^Z RETURN
  2389	002315'	254000	002335'		JRST RMTAL1	;175-176 POSSIBLE ALTMODE
  2390	002316'	254000	002427'		JRST RMTBSP	;BACKSPACE
  2391	002317'	263040	000000	RMTS94:	POPJ P,		;^C
  2392	002320'	254000	002350'		JRST RMTCR	;RETURN
  2393	002321'	263040	000000		POPJ P,		;^U
  2394	002322'	254000	002406'		JRST RMTTAB	;TAB
  2395	002323'	263040	000000		POPJ P,		;ALTMODE
  2396	002324'	254000	002372'		JRST RMTVT	;V. TAB
  2397	002325'	254000	002400'		JRST RMTFF	;F.F.
  2398	002326'	263040	000000		POPJ P,		;^Z
  2399	002327'	254000	002331'		JRST RMTPAT	;175-176 POSSIBLE ALTMODE
  2400	002330'	254000	002427'		JRST RMTBSP	;BACKSPACE
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 46
SCNSER.MAC	25-JAN-91 22:40		REMOTE ECHO CODE

  2401	002331'	603240	000020	RMTPAT:	TLNE U,LDLLCT
  2402	002332'	263040	000000		POPJ P,		;ALTMODE, IGNORE
  2403	002333'	135440	000175'	RMTCN1:	LDB T4,LDPPOS
  2404	002334'	254000	002254'		JRST RMTCNT	;ASSUME PRINTING CHR
  2405
  2406	002335'	607240	000020	RMTAL1:	TLNN U,LDLLCT
  2407	002336'	254000	002333'		JRST RMTCN1	;ASSUME PRINTING CHR
  2408	002337'	603240	000006	RMTALT:	TLNE U,LDLPTP!LDLLCP	;NOTHING FOR THESE NUTS
  2409	002340'	263040	000000		POPJ P,
  2410	002341'	205400	020000		MOVSI T3,LXLDLR
  2411	002342'	612405	000032		TDNE T3,LDBDCX(U) ;IF USER SUPPRESSING $ ECHO
  2412	002343'	603240	020000		TLNE U,LDLCOM	;OR WE'RE AT COMMAND LEVEL
  2413	002344'	334000	000000		SKIPA		;ECHO A $
  2414	002345'	263040	000000		POPJ P,
  2415	002346'	201400	000044		MOVEI T3,"$"
  2416	002347'	254000	002365'		JRST RMTRUB	;PUT IN RBS STRING
  2417
  2418	002350'	201300	000000	RMTCR:	MOVEI T1,0
  2419	002351'	137300	000175'		DPB T1,LDPPOS
  2420	002352'	263040	000000		POPJ P,		;RETURN, JUST SET POSITION TO 0
  2421
  2422	002353'	603240	000006	RMTEXC:	TLNE U,LDLLCP!LDLPTP	;NOTHING FOR THESE NUTS
  2423	002354'	263040	000000		POPJ P,		;NOTHING WE CN DO
  2424	002355'	260040	002361'		PUSHJ P,RMTEU1	;ECHO THE ^X
  2425	002356'	254000	002265'		JRST RMTECR	;AND THE RETURN
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 47
SCNSER.MAC	25-JAN-91 22:40		REMOTE ECHO CODE

  2426	002357'	603240	000006	RMTEXU:	TLNE	U,LDLLCP!LDLPTP	;NOTHING FOR THESE NUTS
  2427	002360'	263040	000000		POPJ	P,
  2428	002361'	201400	000136	RMTEU1:	MOVEI	T3,"^"
  2429	002362'	260040	002430'		PUSHJ	P,ENTRUB
  2430	002363'	135405	000013		LDB	T3,LDBECT(U)	;GET BACK CHR
  2431	002364'	660400	000100		TRO	T3,100
  2432	002365'	260040	002430'	RMTRUB:	PUSHJ	P,ENTRUB
  2433	002366'	201300	000001		MOVEI	T1,1
  2434	002367'	137300	000074'		DPB	T1,LOPRUB	;SET SEND-RUBOUT-CHARACTERS
  2435	002370'	137305	000002		DPB	T1,LDBOPB(U)	;AND NEED-OUTPUT
  2436	002371'	263040	000000		POPJ	P,
  2437
  2438	002372'	205440	020000	RMTVT:	MOVSI	T4,L2LNTB
  2439	002373'	616445	000027		TDNN	T4,LDBBYT(U)		; NO VT ECHO??
  2440	002374'	603240	000007		TLNE	U,LDLLCP!LDLPTP!LDLFRM	; DONE BY TERMINAL?
  2441	002375'	263040	000000		POPJ	P,			; THEN NO FILLERS
  2442	002376'	200440	005545'		MOVE	T4,VTFLP
  2443	002377'	324740	002445'		PJRST	RUBSTR			;GO
  2444
  2445	002400'	205440	020000	RMTFF:	MOVSI	T4,L2LNTB
  2446	002401'	616445	000027		TDNN	T4,LDBBYT(U)		; NO FF ECHO??
  2447	002402'	603240	000007		TLNE	U,LDLLCP!LDLPTP!LDLFRM	; DONE BY TERMINAL?
  2448	002403'	263040	000000		 POPJ	P,			; THEN NO FILLERS
  2449	002404'	200440	005542'		MOVE	T4,FFFLP
  2450	002405'	324740	002445'		PJRST	RUBSTR
  2451
  2452	002406'	205440	020000	RMTTAB:	MOVSI	T4,L2LNTB	;SEE IF WE SHOULD JUST IGNORE
  2453	002407'	612445	000027		TDNE	T4,LDBBYT(U)
  2454	002410'	603240	020000		TLNE	U,LDLCOM
  2455	002411'	334000	000000		 SKIPA			;TABS AS USUAL IN COMMAND MODE
  2456	002412'	263040	000000		  POPJ	P,		;YES, DO NOTHING
  2457	002413'	135440	000175'		LDB	T4,LDPPOS
  2458	002414'	603240	000016		TLNE	U,LDLLCP!LDLTAB!LDLPTP
  2459	002415'	254000	002421'		 JRST	RMTTB1		;MUST ADJUST POSITION BUT NO SPACES
  2460	002416'	405440	000007		ANDI	T4,7
  2461	002417'	200451	005577'		MOVE	T4,TABPTR(T4)
  2462	002420'	324740	002445'		PJRST	RUBSTR		;OUT OF SPACES ADJUSTS POS
  2463
  2464	002421'	200300	000011	RMTTB1:	MOVE	T1,T4		;SAVE SIZE
  2465	002422'	660440	000007		TRO	T4,7
  2466	002423'	271440	000001		ADDI	T4,1
  2467	002424'	606440	000400		TRNN	T4,400
  2468	002425'	137440	000175'		 DPB	T4,LDPPOS	;PUT BACK IF NOT OUT OF RANGE
  2469	002426'	263040	000000		POPJ	P,		;FINISHED
  2470
  2471	002427'	324740	005474'	RMTBSP:	PJRST	SPOBSP	;UPDATE CHAR COLUMN COUNTER
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 48
SCNSER.MAC	25-JAN-91 22:40		SOME ROUTINES TO HANDLE PUTTING THINGS IN THE RUBOUT STRING

  2472				SUBTTL	SOME ROUTINES TO HANDLE PUTTING THINGS IN THE RUBOUT STRING
  2473
  2474	002430'	336000	000000*	ENTRUB:	SKIPN	TTFREE##	;GIVE UP IF NO FREE BUFFERLETS
  2475	002431'	263040	000000		 POPJ	P,
  2476	002432'	336345	000023		SKIPN	T2,LDBRBI(U)
  2477	002433'	254000	002440'		 JRST	STRUB		;MUST SET THINGS UP
  2478	002434'	260040	006216'	STRUB1:	PUSHJ	P,TTPUTC
  2479	002435'	202345	000023		MOVEM	T2,LDBRBI(U)
  2480	002436'	350005	000025		AOS	LDBRBC(U)
  2481	002437'	263040	000000		POPJ	P,
  2482
  2483	002440'	260040	006262'	STRUB:	PUSHJ	P,GETCHK
  2484	002441'	202345	000023		MOVEM	T2,LDBRBI(U)
  2485	002442'	202345	000024		MOVEM	T2,LDBRBO(U)
  2486	002443'	402005	000025		SETZM	LDBRBC(U)
  2487	002444'	254000	002434'		JRST	STRUB1
  2488
  2489				;PUT IN A WHOLE STRING, BYTE POINTER IN T4
  2490
  2491	002445'	134400	000011	RUBSTR:	ILDB	T3,T4
  2492					JUMPE	T3, [		;IF WE'RE DONE WITH THE STRING,
  2493						MOVEI	T1,1
  2494						DPB	T1,LOPRUB	;SET SEND-RUBOUT-CHARACTERS
  2495						DPB	T1,LDBOPB(U)	;AND NEED-OUTPUT
  2496						POPJ	P,
  2497	002446'	322400	016675'		]
  2498	002447'	260040	002430'		PUSHJ	P,ENTRUB
  2499	002450'	254000	002445'		JRST	RUBSTR
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 49
SCNSER.MAC	25-JAN-91 22:40		BREAK2 CHR, RMT ECHO, BREAK MODE

  2500				SUBTTL	BREAK2 CHR, RMT ECHO, BREAK MODE
  2501
  2502	002451'	260040	001652'	IACT12:	PUSHJ P,RCVCHR
  2503	002452'	263040	000000		 POPJ P,
  2504	002453'	205300	000001		MOVSI T1,1
  2505	002454'	272305	000007		ADDM T1,LDBBKI(U)	;COUNT BREAK2
  2506	002455'	350005	000016		AOS LDBBK2(U)
  2507	002456'	254000	002244'		JRST IAC11A
  2508
  2509				;NORMAL CHARACTER, COMMAND MODE, REMOTE ECHO
  2510
  2511	002457'	260040	001652'	IACT13:	PUSHJ P,RCVCHR
  2512	002460'	263040	000000		 POPJ P,
  2513	002461'	254000	002475'		JRST IAC16B
  2514
  2515				;BREAK CHR, COMMAND MODE, REMOTE ECHO
  2516
  2517	002462'	260040	001652'	IACT14:	PUSHJ P,RCVCHR
  2518	002463'	263040	000000		 POPJ P,
  2519	002464'	350005	000015		AOS LDBBKC(U)
  2520	002465'	202345	000006		MOVEM T2,LDBBKP(U)
  2521	002466'	402005	000007		SETZM LDBBKI(U)	;RESET ^U POINTER
  2522	002467'	254000	002476'		JRST IAC16C
  2523
  2524				;BREAK2 CHR, COMMAND MODE, REMOTE ECHO, NOT BREAK2 MODE
  2525
  2526	002470'	260040	001652'	IACT15:	PUSHJ P,RCVCHR
  2527	002471'	263040	000000		 POPJ P,
  2528	002472'	205300	000001		MOVSI T1,1
  2529	002473'	272305	000007		ADDM T1,LDBBKI(U)
  2530	002474'	350005	000016		AOS LDBBK2(U)
  2531	002475'	301440	000110	IAC16B:	CAIL T4,TIWKC
  2532	002476'	260040	013554'	IAC16C:	 PUSHJ P,CMDWAK
  2533	002477'	254000	002250'		JRST IAC11D
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 50
SCNSER.MAC	25-JAN-91 22:40		BREAK2 CHR, COMMAND MODE, DEF ECHO, NOT BREAK2 MODE

  2534				SUBTTL	BREAK2 CHR, COMMAND MODE, DEF ECHO, NOT BREAK2 MODE
  2535
  2536	002500'	260040	001652'	IACT17:	PUSHJ P,RCVCHR
  2537	002501'	263040	000000		 POPJ P,
  2538	002502'	205300	000001		MOVSI T1,1
  2539	002503'	272305	000007		ADDM T1,LDBBKI(U)
  2540	002504'	272305	000016		ADDM T1,LDBBK2(U)	;COUNT BREAK2
  2541	002505'	254000	002134'		JRST DEFNBK
  2542
  2543				;BREAK2 CHR, COMMAND MODE, DEF ECHO, BREAK2 MODE
  2544
  2545
  2546				;NORMAL CHR, COMMAND MODE, DEF ECHO
  2547
  2548	002506'	260040	001652'	IACT21:	PUSHJ P,RCVCHR
  2549	002507'	263040	000000		 POPJ P,
  2550	002510'	254000	002134'		JRST DEFNBK
  2551
  2552				;BREAK CHR, COMMAND MODE, DEF ECHO
  2553
  2554	002511'	260040	001652'	IACT22:	PUSHJ P,RCVCHR
  2555	002512'	263040	000000		 POPJ P,
  2556	002513'	205300	000001		MOVSI T1,1
  2557	002514'	272305	000015		ADDM T1,LDBBKC(U)
  2558	002515'	402005	000007		SETZM LDBBKI(U)
  2559	002516'	202345	000006		MOVEM T2,LDBBKP(U)
  2560	002517'	254000	002134'		JRST DEFNBK
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 51
SCNSER.MAC	25-JAN-91 22:40		SPECIAL ACTION CHRACTER, ALMOST ANY MODE

  2561				SUBTTL	SPECIAL ACTION CHRACTER, ALMOST ANY MODE
  2562
  2563	002520'	135300	000165'	IACT0:	LDB T1,LDPMOD
  2564	002521'	135340	000310'		LDB T2,CHPSPI	;GET SPECIAL ACTION CODE
  2565	002522'	256026	002523'		XCT @INPACT(T1)
  2566
  2567	002523'	256007	002527'	INPACT:	XCT INPA10(T2)
  2568	002524'	256007	002550'		XCT INPA94(T2)
  2569	002525'	256007	002550'		XCT INPA94(T2)
  2570	002526'	256007	002527'		XCT INPA10(T2)
  2571
  2572	002527'	263040	000000	INPA10:	POPJ P,		;NULL, IGNORE
  2573	002530'	254000	003101'		JRST INPESC	;ESCAPE (^C)
  2574	002531'	254000	002615'		JRST INPRET	;RETURN
  2575	002532'	254000	002633'		JRST INPGOB	;OUTPUT SUPPRESS (^O)
  2576	002533'	254000	002571'		JRST INPBRK	;PUT IN AS A BREAK CHR (^Q)
  2577	002534'	254000	002647'		JRST INPDLN	;DELETE LINE (^U)
  2578	002535'	254000	002573'		JRST INPTAB	;TAB (DECIDE IF BREAK OR BREAK2)
  2579	002536'	254000	002571'		JRST INPBRK	;ALTMODE
  2580	002537'	254000	002571'		JRST INPBRK	;JUST A BREAK CHR ^^
  2581	002540'	254000	002571'		JRST INPBRK	;^_
  2582	002541'	254000	002722'		JRST INPRUB	;RUBOUT
  2583	002542'	254000	002571'		JRST INPBRK	;^A
  2584	002543'	254000	002571'		JRST INPBRK	;POSSIBLE ALTMODE
  2585	002544'	254000	002626'		JRST INPBK2	;_
  2586	002545'	254000	002571'		JRST INPBRK	;^\
  2587	002546'	254000	002600'		JRST INPBSP	;BACKSPACE
  2588	002547'	254000	003074'		JRST INPSTA	;^T
  2589
  2590	002550'	263040	000000	INPA94:	POPJ P,		;NULL, IGNORE
  2591	002551'	254000	002571'		JRST INPBRK	;^C
  2592	002552'	254000	002615'		JRST INPRET	;RETURN
  2593	002553'	254000	002571'		JRST INPBRK	;^O, BREAK CHR
  2594	002554'	254000	002647'		JRST INPDLN	;DELETE LINE (^Q)
  2595	002555'	254000	002571'		JRST INPBRK	;^U
  2596	002556'	254000	002573'		JRST INPTAB	;TAB
  2597	002557'	254000	003101'		JRST INPESC	;ALTMODE (ESCAPE CHR)
  2598	002560'	254000	002624'		JRST INPCLD	;CONVERT TO ^D (^^)
  2599	002561'	254000	003101'		JRST INPESC	;^_
  2600	002562'	263040	000000		POPJ P,		;RUBOUT, IGNORE
  2601	002563'	254000	002724'		JRST INPRB1	;^A, DELETE CHR
  2602	002564'	254000	002630'		JRST INPAL1	;POSSIBLE ALTMODE
  2603	002565'	254000	002626'		JRST INPBK2	;_
  2604	002566'	254000	002633'		JRST INPGOB	;^\
  2605	002567'	254000	002602'		JRST INPBS1	;BACKSPACE
  2606	002570'	254000	002571'		JRST INPBRK	;^T
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 52
SCNSER.MAC	25-JAN-91 22:40		JUST SET AS A BREAK CHARACTER (MODE 2) AND GO

  2607				SUBTTL	JUST SET AS A BREAK CHARACTER (MODE 2) AND GO
  2608
  2609	002571'	201340	000002	INPBRK:	MOVEI T2,2
  2610	002572'	254000	001614'		JRST MOVCH1	;P2 (LINE MODE) STILL SETUP
  2611
  2612				;DECIDE IF TAB IS A BREAK OR BREAK2 CHARACTER
  2613
  2614	002573'	201340	000003	INPTAB:	MOVEI T2,3	;NORMALLY BREAK2
  2615	002574'	205300	100000		MOVSI T1,L2LTBK
  2616	002575'	612305	000027		TDNE T1,LDBBYT(U)
  2617	002576'	201340	000002		MOVEI T2,2	;BIT IS ON, AS A BREAK CHARACTER
  2618	002577'	254000	001614'		JRST MOVCH1
  2619
  2620				;DECIDE IF BACKSPACE IS A BREAK OR BREAK2 CHARACTER
  2621
  2622	002600'	201340	002722'	INPBSP:	MOVEI T2,INPRUB
  2623	002601'	334000	000000		SKIPA
  2624	002602'	201340	002724'	INPBS1:	MOVEI T2,INPRB1
  2625	002603'	200305	000032		MOVE T1,LDBDCX(U)
  2626	002604'	603300	100000		TLNE T1,LXLBSD	;DELETE ON BACKSPACE?
  2627	002605'	254007	000000		  JRST	(T2)	; YES
  2628	002606'	201340	000002		MOVEI T2,2	;NORMALLY BREAK
  2629	002607'	205300	040000		MOVSI T1,L2LBBP
  2630	002610'	612305	000027		TDNE T1,LDBBYT(U)
  2631	002611'	201340	000003		MOVEI T2,3	;BIT IS ON, AS A BREAK2 CHARACTER
  2632	002612'	254000	001614'		JRST MOVCH1
  2633
  2634				;CONVERT ^A INTO _ FOR TYMEX2 MDDE
  2635
  2636	002613'	201400	000137	INPTCA:	MOVEI T3,"_"
  2637	002614'	254000	002626'		JRST INPBK2
  2638
  2639				;RETURN HANDLER
  2640
  2641	002615'	201340	000001	INPRET:	MOVEI T2,1	;GET SET TO TREAT AS TYPE 1(NORMAL) CHR
  2642	002616'	603240	000002		TLNE U,LDLPTP	;IF IN PAPER TAPE MODE
  2643	002617'	254000	001614'		JRST MOVCH1	;JUST PUT IN THE CHR
  2644	002620'	260040	001614'		PUSHJ P,MOVCH1	;ELSE PUT IT IN
  2645	002621'	255000	000000		 JFCL		;IGNORE SKIP-NON SKIP
  2646	002622'	201400	000012		MOVEI T3,12
  2647	002623'	254000	001607'		JRST MOVCHR	;AND THEN PUT IN A LINE FEED
  2648
  2649				;HANDLE ^^ IN 940 MODE (CONVERT TO ^D)
  2650
  2651	002624'	201400	000004	INPCLD:	MOVEI T3,4
  2652	002625'	254000	001611'		JRST MOVCH2
  2653
  2654	002626'	201340	000003	INPBK2:	MOVEI T2,3
  2655	002627'	254000	001614'		JRST MOVCH1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 53
SCNSER.MAC	25-JAN-91 22:40		POSSIBLE ALTMODE (175-176) IN 940 MODE

  2656				SUBTTL	POSSIBLE ALTMODE (175-176) IN 940 MODE
  2657
  2658	002630'	607240	000020	INPAL1:	TLNN U,LDLLCT
  2659	002631'	254000	002571'		JRST INPBRK	;IN LOWER CASE MODE, JUST CALL BREAK
  2660	002632'	254000	003101'		JRST INPESC
  2661
  2662				;^O IN PDP-10 MDDE
  2663
  2664	002633'	205300	000400	INPGOB:	MOVSI T1,LDLOSU
  2665	002634'	432305	000031		XORM T1,LDBDCH(U)	;CHANGE FLAG
  2666	002635'	260040	006324'		PUSHJ P,TSETBO		;CLEAR OUTPUT BUFFER, set flag to send TYPGOB
  2667	002636'	135440	000165'		LDB T4,LDPMOD
  2668	002637'	200471	002662'		MOVE T4,@IGOBEC(T4)
  2669	002640'	603240	000004	INPOTP:	TLNE U,LDLLCP
  2670	002641'	263040	000000		POPJ P,			;BUT NEVER ANYTHING TO 2741
  2671	002642'	205300	004000		MOVSI T1,L2LDEL
  2672	002643'	616305	000027		TDNN T1,LDBBYT(U)	;ALREADY IN \'S
  2673	002644'	133000	000011		IBP T4			;NO, SKIP \ IN OUTPUT STRING
  2674	002645'	412305	000027		ANDCAM T1,LDBBYT(U)	;NOT THERE NOW IN ANY CASE
  2675	002646'	324740	002445'		PJRST RUBSTR
  2676
  2677				;^U IN PDP-10 OR ^Q IN 940
  2678
  2679	002647'	260040	006044'	INPDLN:	PUSHJ P,FULLCQ		;COMMAND OR FULL CHARACTER SET?
  2680	002650'	254000	002571'		 JRST INPBRK		;YES, BREAK CHARACTER
  2681	002651'	260040	002666'		PUSHJ P,RIDLIN		;THIS DOES ALL THE WORK
  2682	002652'	263040	000000		 POPJ P,		;NOTHING TO ECHO
  2683	002653'	135300	000165'		LDB T1,LDPMOD		;GET MODE WE ARE IN
  2684	002654'	200466	002656'		MOVE T4,@IDLNEC(T1)	;AND GET APPROPRIATE ECHO STRING
  2685	002655'	324740	002640'		PJRST INPOTP
  2686
  2687	002656'	000000	005530'	IDLNEC:	CUPTR
  2688	002657'	000000	005533'		UPARPT
  2689	002660'	000000	005533'		UPARPT
  2690	002661'	000000	005530'		CUPTR
  2691
  2692	002662'	000000	005535'	IGOBEC:	COPTR
  2693	002663'	000000	005540'		FLLBSC
  2694	002664'	000000	005540'		FLLBSC
  2695	002665'	000000	005535'		COPTR
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 54
SCNSER.MAC	25-JAN-91 22:40		GET RID OF A LINE OF TEXT. ADJUST ALL POINTERS

  2696				SUBTTL	GET RID OF A LINE OF TEXT. ADJUST ALL POINTERS
  2697
  2698	002666'	336305	000006	RIDLIN:	SKIPN T1,LDBBKP(U)	;IS THERE A ^U POINTER
  2699	002667'	324740	002716'		PJRST RIDLN3		;NO, DELETE ALL FROM BUFFER
  2700	002670'	202305	000010		MOVEM T1,LDBTIP(U)
  2701	002671'	550345	000007		HRRZ T2,LDBBKI(U)	;NUMBER OF CHRS SINCE ^U POINTER
  2702	002672'	213000	000007		MOVNS T2
  2703	002673'	270345	000014		ADD T2,LDBECC(U)
  2704	002674'	325340	002701'		JUMPGE T2,RIDLN1	;NONE ECHOED
  2705	002675'	272345	000012		ADDM T2,LDBTIC(U)	;REMOVE SOME FROM INPUT
  2706	002676'	201340	000000		MOVEI T2,0
  2707	002677'	202305	000013		MOVEM T1,LDBECT(U)	;RESET ECHO POINTER
  2708	002700'	350001	000000		AOS (P)			;SKIP RETURN FOR ECHO ^U
  2709	002701'	202345	000014	RIDLN1:	MOVEM T2,LDBECC(U)
  2710	002702'	554345	000007		HLRZ T2,LDBBKI(U)	;GET NUMBER OF BREAK2 CHRS
  2711	002703'	402005	000007		SETZM LDBBKI(U)		;AND GET RID OF OLD COUNTS
  2712	002704'	213000	000007		MOVNS T2
  2713	002705'	517000	000007		HRLZS T2
  2714	002706'	270345	000016		ADD T2,LDBBK2(U)	;FIX NUMBER NOT ECHOED
  2715	002707'	325340	002714'		JUMPGE T2,RIDLN2	;ALL IN NOT ECHOED
  2716	002710'	567000	000007		HLROS T2
  2717	002711'	270345	000016		ADD T2,LDBBK2(U)	;FIX NUMBER ECHOED
  2718	002712'	552345	000016		HRRZM T2,LDBBK2(U)
  2719	002713'	263040	000000		POPJ P,
  2720
  2721	002714'	202345	000016	RIDLN2:	MOVEM T2,LDBBK2(U)
  2722	002715'	263040	000000		POPJ P,
  2723
  2724	002716'	332005	000014	RIDLN3:	SKIPE LDBECC(U)		;ALSO ECHO IF NOT CHRS AT ALL
  2725	002717'	332005	000012		SKIPE LDBTIC(U)		;ANY CHARACTERS ECHOED?
  2726	002720'	350001	000000		AOS (P)			;SET SKIP RETURN
  2727	002721'	324740	006276'		PJRST TSETBI
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 55
SCNSER.MAC	25-JAN-91 22:40		RUBOUT FROM PDP-10 MODE. 940 ^A JUST DOES NOT CHECK XON

  2728				SUBTTL	RUBOUT FROM PDP-10 MODE. 940 ^A JUST DOES NOT CHECK XON
  2729
  2730	002722'	603240	000002	INPRUB:	TLNE U,LDLPTP
  2731	002723'	263040	000000		POPJ P,			;IGNORE RUBOUTS IN XON MODE
  2732	002724'	260040	006044'	INPRB1:	PUSHJ P,FULLCQ
  2733	002725'	254000	002571'		 JRST INPBRK		;JUST CALL IT A BREAK CHR
  2734	002726'	260040	002777'		PUSHJ P,INPRBC		;COMMON RUBOUT ROUTINE
  2735	002727'	254000	003072'		 JRST INPRB2	;NO CHRS, GIVE RETURN
  2736	002730'	263040	000000		 POPJ P,		;NOT ECHOED
  2737	002731'	201400	000134		MOVEI T3,"\"
  2738	002732'	200445	000027		MOVE	T4, LDBBYT(U)
  2739	002733'	607440	001000		TLNN	T4, L2LBSP	;BACKSPACE FOR CHAR DELETE?
  2740	002734'	254000	002752'		JRST	INPRB7		;NO
  2741	002735'	200300	016376'		MOVE	T1,INPCH
  2742	002736'	302300	000010		CAIE	T1, 10		;IS IT BACKSPACE?
  2743	002737'	306300	000210		CAIN	T1, 210
  2744	002740'	254000	002761'		JRST	INPRB9		;YES
  2745	002741'	200445	000032		MOVE	T4, LDBDCX(U)
  2746	002742'	607440	040000		TLNN	T4, LXLERA	;<BS><SP><BS> OR JUST <BS>?
  2747	002743'	254000	002750'		JRST	INPRB6
  2748	002744'	201400	000010		MOVEI	T3, 10		;<BS>
  2749	002745'	260040	002430'		PUSHJ	P, ENTRUB
  2750	002746'	201400	000040		MOVEI	T3, 40		;<SP>
  2751	002747'	260040	002430'		PUSHJ	P, ENTRUB
  2752	002750'	201400	000010	INPRB6:	MOVEI	T3, 10		;<BS>
  2753	002751'	254000	002764'		JRST	INPRB8
  2754	002752'	667440	004000	INPRB7:	TLON T4,L2LDEL
  2755	002753'	260040	002430'		PUSHJ P,ENTRUB		;NO, ENTER
  2756	002754'	202445	000027		MOVEM T4,LDBBYT(U)	;AND MAKE SURE WE REMEMBER IT
  2757	002755'	200400	016376'		MOVE T3,INPCH
  2758	002756'	405400	000177		ANDI	T3, 177		;STRIP OFF PARITY BIT
  2759	002757'	302400	000010		CAIE	T3, 10		;IS IT BACKSPACE?
  2760	002760'	254000	002764'		JRST	INPRB8		;NO
  2761	002761'	201400	000040	INPRB9:	MOVEI	T3,40		;YES, SUBSTITUTE <SP> FOR <BS>
  2762	002762'	135300	000021'		LDB	T1, LDPECH
  2763	002763'	332000	000006		SKIPE	T1		;PRINT NOTHING IF NO REM BS ECHO
  2764	002764'	260040	002430'	INPRB8:	PUSHJ P,ENTRUB
  2765	002765'	201300	000001		MOVEI	T1,1
  2766	002766'	137300	000074'		DPB	T1,LOPRUB	;SET SEND-RUBOUT-CHARACTERS
  2767	002767'	137305	000002		DPB	T1,LDBOPB(U)	;AND NEED-OUTPUT
  2768	002770'	263040	000000		POPJ	P,
  2769
  2770				;HERE FROM _ IN TYMEX2 MODE
  2771
  2772	002771'	260040	006044'	INPRT2:	PUSHJ P,FULLCQ
  2773	002772'	254000	002626'		 JRST INPBK2	;JUST TREAT AS A CHR
  2774	002773'	260040	002777'		PUSHJ P,INPRBC
  2775	002774'	263040	000000		 POPJ P,
  2776	002775'	263040	000000		 POPJ P,
  2777	002776'	263040	000000		POPJ P,		;NEVER ANY ECHO
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 56
SCNSER.MAC	25-JAN-91 22:40		RUBOUT FROM PDP-10 MODE. 940 ^A JUST DOES NOT CHECK XON

  2778	002777'	550305	000007	INPRBC:	HRRZ T1,LDBBKI(U)
  2779	003000'	322300	001754*		JUMPE T1,CPOPJ		;JUST GIVE RETURN
  2780	003001'	350001	000000		AOS (P)
  2781	003002'	135405	000010		LDB T3,LDBTIP(U)	;GET LAST CHARACTER INPUT
  2782	003003'	202400	016376'		MOVEM T3,INPCH	;AND SAVE
  2783	003004'	370005	000007		SOS LDBBKI(U)
  2784	003005'	370345	000010		SOS T2,LDBTIP(U)	;NOW REALLY BACK UP
  2785					REPEAT 2,<IBP T2>	;NOW GET READY TO ADVANCE ON PREV.
  2786	003006'	133000	000007
  2787	003007'	133000	000007
  2788	003010'	260040	006171'		PUSHJ P,TTGETC
  2789	003011'	255000	000000		 JFCL			;DO NOT CARE IF PASS OVER LINK
  2790	003012'	202345	000010		MOVEM T2,LDBTIP(U)	;THAT WAS JUST IN CASE WE BACKED OVER LINK
  2791	003013'	371005	000014		SOSL LDBECC(U)
  2792					JRST [MOVSI T4,-1	;WAITING TO BE ECHOED, FORGET IT
  2793	003014'	254000	016701'			JRST INPRB4]
  2794	003015'	402005	000014		SETZM LDBECC(U)
  2795	003016'	370005	000012		SOS LDBTIC(U)
  2796	003017'	202345	000013		MOVEM T2,LDBECT(U)	;RESET ECHO POINTER TO INPUT
  2797	003020'	607240	020000		TLNN U,LDLCOM	;IF AT COMMAND IGNORE ECHO
  2798	003021'	607240	000100		TLNN U,LDLNEC	;IF NOT ECHOING, NO ECHO
  2799	003022'	603240	000004		TLNE U,LDLLCP	;BUT NEVER ECHO LOCAL COPY
  2800	003023'	254000	003025'		JRST INPRB3		;DUMP CHR
  2801	003024'	350001	000000		AOS (P)
  2802	003025'	211440	000001	INPRB3:	MOVNI T4,1		;T4 WILL HAVE THING TO ADD TO BK2
  2803	003026'	200400	016376'	INPRB4:	MOVE T3,INPCH
  2804	003027'	620400	000200		TRZ T3,200
  2805	003030'	602400	000400		TRNE T3,400
  2806	003031'	263040	000000		POPJ P,		;IMAGE MODE CHRS NEVER COUNT
  2807	003032'	200710	000312'		MOVE P3,CHRTAB(T3)
  2808	003033'	135300	000302'		LDB T1,CHPINP
  2809	003034'	256006	003040'		XCT INPRTB(T1)		;WANT ONLY BREAK2 CHRS
  2810	003035'	205300	777777	INPRB5:	MOVSI T1,-1		;WILL HAV SOS'ED CORRECT HALF OF LDBBK2
  2811	003036'	272305	000007		ADDM T1,LDBBKI(U)
  2812	003037'	263040	000000		POPJ P,
  2813
  2814	003040'	254000	003044'	INPRTB:	JRST INPRAC	;MUST WORRY ABOUT TAB
  2815	003041'	263040	000000		POPJ P,		;NORMAL CHR
  2816	003042'	263040	000000		POPJ P,		;BREAK CHR
  2817	003043'	272445	000016		ADDM T4,LDBBK2(U) ;BREAK 2
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 57
SCNSER.MAC	25-JAN-91 22:40		RUBOUT FROM PDP-10 MODE. 940 ^A JUST DOES NOT CHECK XON

  2818	003044'	135300	000310'	INPRAC:	LDB T1,CHPSPI
  2819	003045'	256006	003052'		XCT INPRTA(T1)
  2820	003046'	612305	000027		TDNE T1,LDBBYT(U)	;HERE ONLY FOR TAB WITH T1=L2LTBK
  2821	003047'	263040	000000		POPJ P,			;TREAT AS BREAK
  2822	003050'	272445	000016	INPRA1:	ADDM T4,LDBBK2(U)
  2823	003051'	254000	003035'		JRST INPRB5
  2824
  2825	003052'			INPRTA:	REPEAT 6,<POPJ P,>
  2826	003052'	263040	000000
  2827	003053'	263040	000000
  2828	003054'	263040	000000
  2829	003055'	263040	000000
  2830	003056'	263040	000000
  2831	003057'	263040	000000
  2832	003060'	205300	100000		MOVSI T1,L2LTBK
  2833					REPEAT 6,<POPJ P,>
  2834	003061'	263040	000000
  2835	003062'	263040	000000
  2836	003063'	263040	000000
  2837	003064'	263040	000000
  2838	003065'	263040	000000
  2839	003066'	263040	000000
  2840	003067'	201300	000000		MOVEI T1,0	;_ ALWAYS BREAK2
  2841	003070'	263040	000000		POPJ P,		;^\
  2842					JRST	[MOVSI T1,L2LBBP
  2843						 TDNN T1,LDBBYT(U)	;TEST BACKSPACE BREAK FLAG
  2844						 POPJ P,		;TREAT AS BREAK
  2845	003071'	254000	016703'			 JRST INPRA1]		;TREAT AS BREAK2
  2846
  2847	003072'	200440	005540'	INPRB2:	MOVE T4,FLLBSC
  2848	003073'	254000	002640'		JRST INPOTP
  2849
  2850				;;
  2851				;; Here on ^T in PDP-10 mode, to see if it should be interpreted as
  2852				;; a .USESTAT command.
  2853				;;
  2854	003074'	205300	002000	INPSTA:	MOVSI	T1,LXLRTC
  2855	003075'	616305	000032		TDNN	T1,LDBDCX(U)	;Special ^T mode set?
  2856	003076'	254000	002571'		  JRST	INPBRK		;No, just treat as break
  2857	003077'	201300	000000*		MOVEI	T1,CMFSTA##	;Forced command code for .USESTAT
  2858	003100'	324740	013565'		PJRST	TTFORC
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 58
SCNSER.MAC	25-JAN-91 22:40		ESCAPE CHARACTER 940 IS ^_ OR POSSIBLY ALTMODE, PDP-10 IS ^C

  2859				SUBTTL	ESCAPE CHARACTER 940 IS ^_ OR POSSIBLY ALTMODE, PDP-10 IS ^C
  2860
  2861	003101'	260040	015623'	INPESC:	PUSHJ P,ESCTRP		;CHECK ESCAPE TRAP
  2862								;DOES DOUBLE RETURN
  2863								;(OUT OF INPESC) IF TRAP TAKEN
  2864	003102'	332005	000007		SKIPE LDBBKI(U)
  2865	003103'	260040	002666'		PUSHJ P,RIDLIN		;REMOVE LINE IF ANY
  2866	003104'	255000	000000		 JFCL			;NEVER ECHO ANYTHING
  2867	003105'	205300	200000		MOVSI T1,L2LCCS
  2868	003106'	616305	000027		TDNN T1,LDBBYT(U)	;SECOND?
  2869	003107'	254000	003130'		JRST INPES1		;NO, JUST STORE IT
  2870	003110'	260040	006051'		PUSHJ P,CNCCHK		;SEE IF CMD LEVEL, SLAVED, ETC.
  2871	003111'	254000	003126'		 JRST INPES0		;JUST STORE IT
  2872	003112'	260040	006276'		PUSHJ P,TSETBI		;CLEAR INPUT
  2873	003113'	260040	006324'		PUSHJ P,TSETBO		;AND OUTPUT BUFFERS (send TYPGOB)
  2874	003114'	205300	000400		MOVSI T1,LDLOSU	;SUPRESS OUTPUT (UNTIL WE HAVE HALTED)
  2875	003115'	436305	000031		IORM T1,LDBDCH(U)
  2876	003116'	500245	000031		HLL U,LDBDCH(U)	;MAKE SURE LINE KNOWS ABOUT IT
  2877	003117'	135300	000165'		LDB T1,LDPMOD
  2878	003120'	200466	003122'		MOVE T4,@INPEST(T1)	;GET CORRECT THING TO PRINT
  2879	003121'	324740	002640'		PJRST INPOTP
  2880
  2881	003122'	000000	005524'	INPEST:	CCPTR
  2882	003123'	000000	005540'		FLLBSC
  2883	003124'	000000	005540'		FLLBSC
  2884	003125'	000000	005524'		CCPTR
  2885
  2886	003126'	603240	020000	INPES0:	TLNE U,LDLCOM	;IF COMMAND MODE
  2887	003127'	260040	006324'		PUSHJ P,TSETBO	;CLEAR OUTPUT BUFFER
  2888	003130'	260040	002571'	INPES1:	PUSHJ P,INPBRK	;PUT IT IN AS A BREAK CHR
  2889	003131'	334000	000000		 SKIPA
  2890	003132'	350001	000000		AOS (P)		;TRANSFER SKIP RETURN TO US
  2891	003133'	205300	200000		MOVSI T1,L2LCCS
  2892	003134'	436305	000027		IORM T1,LDBBYT(U)	;SET FLAG
  2893	003135'	263040	000000		POPJ P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 59
SCNSER.MAC	25-JAN-91 22:40		MODE CONVERSION TABLE

  2894				SUBTTL MODE CONVERSION TABLE
  2895
  2896					DEFINE LMOD (ECH,INP)
  2897					<BYTE (29)0(3)ECH(4)INP>
  2898
  2899	003136'	000000	000051	MDFLMD:	LMOD 2,11
  2900	003137'	000000	000044		LMOD 2,4
  2901	003140'	000000	000043		LMOD 2,3
  2902	003141'	000000	000041		LMOD 2,1
  2903	003142'	000000	000070		LMOD 3,10
  2904	003143'	000000	000065		LMOD 3,5
  2905	003144'	000000	000063		LMOD 3,3
  2906	003145'	000000	000061		LMOD 3,1
  2907	003146'	000000	000026		LMOD 1,6
  2908	003147'	000000	000024		LMOD 1,4
  2909	003150'	000000	000022		LMOD 1,2
  2910	003151'	000000	000021		LMOD 1,1
  2911	003152'	000000	000027		LMOD 1,7
  2912	003153'	000000	000025		LMOD 1,5
  2913	003154'	000000	000022		LMOD 1,2
  2914	003155'	000000	000021		LMOD 1,1
  2915	003156'	000000	000012		LMOD 0,12
  2916	003157'	000000	000013		LMOD 0,13
  2917	003160'	000000	000012		LMOD 0,12
  2918	003161'	000000	000013		LMOD 0,13
  2919	003162'	000000	000012		LMOD 0,12
  2920	003163'	000000	000013		LMOD 0,13
  2921	003164'	000000	000012		LMOD 0,12
  2922	003165'	000000	000013		LMOD 0,13
  2923	003166'	000000	000012		LMOD 0,12
  2924	003167'	000000	000013		LMOD 0,13
  2925	003170'	000000	000012		LMOD 0,12
  2926	003171'	000000	000013		LMOD 0,13
  2927	003172'	000000	000012		LMOD 0,12
  2928	003173'	000000	000013		LMOD 0,13
  2929	003174'	000000	000012		LMOD 0,12
  2930	003175'	000000	000013		LMOD 0,13
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 60
SCNSER.MAC	25-JAN-91 22:40		OUTPUT DISPATCHER

  2931				SUBTTL OUTPUT DISPATCHER
  2932
  2933				;HERE AT CH7 TO SCAN LINTAB FOR PORTS NEEDING OUTPUT, SCAN
  2934				;LDBOUT FOR THOSE PORTS, AND DISPATCH TO THE APPROPRIATE
  2935				;OUTPUT ROUTINES
  2936
  2937	003176'	260040	004141'	SCNOUT:	PUSHJ	P,SETOUT	;PREPARE FOR TYMNET OUTPUT, skip if room
  2938	003177'	333000	016422'		  SKIPLE MULCNT+1	;ORING is full, how about PTYs
  2939	003200'	254000	003202'		 JRST	.+2		;Room in either ORING or PTY count
  2940	003201'	254000	003361'		JRST	FINOUT		;  DO NOTHING THIS CYCLE
  2941
  2942				    ;FIND THE NEXT PORT (IN A ROUND-ROBIN FASHION) THAT WANTS
  2943				    ;TO DO OUTPUT
  2944
  2945	003202'	331300	016377'		SKIPL	T1,LINPTR	;IF NO ROUND-ROBIN PTR EXISTS,
  2946	003203'	205300	000000*		 MOVSI	T1,NMXFLG	;  SET TO START AT PORT 0
  2947	003204'	202300	016377'	SCOLP1:	MOVEM	T1,LINPTR
  2948	003205'	336246	000000*		SKIPN	U,LINFLG(T1)	;IF NO NEED-OUTPUT BITS IN THIS WORD,
  2949	003206'	254000	003356'		 JRST	NOLIN2		;  GO ON TO THE NEXT ONE
  2950	003207'	200446	000000*		MOVE	T4,BITNTB(T1)	;T4/ PORT# CORRESPONDING TO BIT 0
  2951	003210'	243240	003212'	SCOLP:	JFFO	U,.+2		;T1/ BIT# OF FIRST. IF NONE,
  2952	003211'	254000	003356'		 JRST	NOLIN2		;  GO ON TO THE NEXT WORD
  2953	003212'	242246	000001		LSH	U,1(T1)		;GET RID OF THE BIT WE JUST FOUND
  2954	003213'	202240	016410'		MOVEM	U,LINFSV	;SAVE THE REST OF THE WORD
  2955	003214'	270300	000011		ADD	T1,T4		;T1/ PORT# FOR THE BIT WE JUST FOUND
  2956	003215'	202300	016407'		MOVEM	T1,LINPNM	;SAVE THAT TOO
  2957	003216'	200246	000747*		MOVE	U,LINTAB(T1)	;U/ LDB ADDR
  2958	003217'	500245	000031		HLL	U,LDBDCH(U)	;U/ DCH BITS,,LDB ADDR
  2959	003220'	305300	000674*		CAIGE	T1,RPORTN	;Is it one of the real ports?
  2960	003221'	254000	003254'		 JRST	SCORTY		;Yes
  2961					PFALL	SCOPTY		;No
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 61
SCNSER.MAC	25-JAN-91 22:40		OUTPUT DISPATCHER

  2962				   ;PREPARE TO DO OUTPUT ON A PSEUDO-PORT
  2963
  2964				;P035/C06 17-Nov-87 - Complain if LDLPTY is wrong and fix it.
  2965				;This bug is triggered by an incoming zap during login and prevented the
  2966				;outgoing zap from reaching the base, causing "slot out of ports".
  2967
  2968	003222'	667240	040000	SCOPTY:	TLON	U,LDLPTY	;P(SEUDO)TY OR R(EAL)TY?
  2969	003223'	256000	016707'		 STOPCD (.+1,INFO,TTYPTY,PRTUT1,<PTY bit wrong for TTY>)
  2970				 ;;SCOPTY+1
  2971	003224'	502245	000031		HLLM	U,LDBDCH(U)	;Reset it if LDLPTY was wrong
  2972	003225'	200300	016375'		MOVE	T1,TTFREN
  2973	003226'	303300	000003		CAILE	T1,TIRSVD	;IF NO SYSTEM BUFFERLETS
  2974	003227'	337000	016422'		SKIPG	MULCNT+1	;OR PTY "FLOW" QUOTA EXCEEDED,
  2975	003230'	254000	003353'		 JRST	NOLIN		;  MAYBE THE NEXT PORT'S A REAL TTY
  2976	003231'	260040	003443'		PUSHJ	P,SETPTL	;T1/ MAX CHARS TO XFER
  2977	003232'	201500	000001		MOVEI	W,1		;W = 1 = PTY
  2978	003233'	254000	003263'		JRST	SCOTTY
  2979
  2980				;Typeout routine for STOPCD(TTYPTY)
  2981	003234'	261040	000006	PRTUT1:	PUSH	P,T1		;Routine to output the contents of U and T1
  2982	003235'	261040	000005		PUSH	P,U
  2983	003236'	260040	001021*		PUSHJ	P,INLMES
  2984	003237'	413236	471530		 ASCIZ /Bits,,Line = /
	003240'	262315	167312
	003241'	201724	000000
  2985	003242'	262040	000006		POP	P,T1		;Contents of U
  2986	003243'	260040	000606*		PUSHJ	P,HWDPNT
  2987	003244'	260040	003236*		PUSHJ	P,INLMES
  2988	003245'	201010	367734		 ASCIZ /  Contents of T1 = /
	003246'	723135	672346
	003247'	203374	620250
	003250'	305007	520000
  2989	003251'	262040	000006		POP	P,T1		;Get saved value
  2990	003252'	260040	003243*		PUSHJ	P,HWDPNT	;Print as halfwords
  2991	003253'	324740	001036*		PJRST	CRLF##
  2992
  2993				    ;PREPARE TO DO OUTPUT ON A REAL PORT
  2994
  2995	003254'	623240	040000	SCORTY:	TLZE	U,LDLPTY	;P(SEUDO)TY OR R(EAL)TY?
  2996	003255'	256000	003223'		 STOPCD (,XCT,TTYPTY)
  2997				 ;;SCORTY+1
  2998	003256'	502245	000031		HLLM	U,LDBDCH(U)	;Reset it if LDLPTY was wrong
  2999	003257'	337000	016421'		SKIPG	MULCNT+0	;IF NO ROOM FOR REAL TTY OUTPUT,
  3000	003260'	254000	003353'		 JRST	NOLIN		;  MAYBE THE NEXT PORT'S A PTY
  3001	003261'	201300	000036		MOVEI	T1,%CHRMX	;T1/ MAX CHRS TO XMIT (EBUS02.J01 uses ^D30)
  3002	003262'	400500	000000		SETZ	W,		;W = 0 = REAL TTY
  3003					PFALL	SCOTTY
  3004
  3005				    ;LOOK FOR THE HIGHEST-PRIORITY OUTPUT REQUEST ON THE LINE
  3006
  3007	003263'	202300	016401'	SCOTTY:	MOVEM	T1,CHQTA
  3008	003264'	202300	016400'		MOVEM	T1,CHCNT
  3009	003265'	200305	000003		MOVE	T1,LDBOUT(U)	;T1/ OUTPUT BITS
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 61-2
SCNSER.MAC	25-JAN-91 22:40		OUTPUT DISPATCHER

  3010	003266'	243300	003270'		JFFO	T1,GOLIN
  3011	003267'	254000	003313'		 JRST	MORLN2		;NOTHING (THAT'S FUNNY...)
  3012	003270'	325240	003303'	GOLIN:	JUMPGE	U,GOLIN1	;IF PORT'S BACKPRESSURED
  3013	003271'	307340	000006		CAIG	T2,BPOKBN	; AND OUTPUT TYPE IS HIGH ENOUGH PRI
  3014	003272'	254000	003303'		 JRST	GOLIN1		; THEN OUTPUT IS OK
  3015	003273'	303340	000026		CAILE   T2,LAPBIT       ;BEYOND LAST LEGAL PRIORITY BIT?
  3016	003274'	254000	003313'		 JRST   MORLN2          ;YES.  ASSUME NO OUTPUT
  3017	003275'	135300	000102'		LDB	T1,LOPECO
  3018	003276'	326300	003302'		JUMPN	T1,GOLIN2	;ATTEMPT ECHO EVEN IF BACKPRESSURE ON
  3019	003277'	400300	000000	Golin3:	SETZ	T1,		;PORT IS BACKPRESSURED
  3020	003300'	137305	000002		DPB	T1,LDBOPB(U)	;  CLEAR NEED-OUTPUT
  3021	003301'	254000	003330'		JRST	FULLIN		;  AND SAY WE'RE THROUGH
  3022
  3023	003302'	201340	000024	GOLIN2:	MOVEI	T2,NUMECO	;ECHO BIT NUMBER
  3024	003303'	202340	016411'	GOLIN1:	MOVEM	T2,SVOJFF	;SAVE THE BIT NUMBER
  3025	003304'	322527	003365'		JUMPE	W,@OUTTRN(T2)	;REAL TTY DISPATCH
  3026	003305'	254027	003414'		JRST	@PTYTRN(T2)	;PSEUDO-TTY DISPATCH
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 62
SCNSER.MAC	25-JAN-91 22:40		OUTPUT DISPATCHER

  3027				    ;OUTPUT SUCCESSFUL, ROOM FOR MORE
  3028
  3029	003306'	210340	016411'	MORLIN:	MOVN	T2, SVOJFF	;T2/ -(BIT# WE DISPATCHED FOR)
  3030	003307'	205300	400000		MOVSI	T1, (1B0)
  3031	003310'	242307	000000		LSH	T1, (T2)	;T1/ BIT WE DISPATCHED FOR
  3032	003311'	413305	000003		ANDCAB	T1, LDBOUT(U)	;CLEAR IT AND PICK UP THE REST
  3033	003312'	243300	003270'		JFFO	T1, GOLIN	;IF THERE'S MORE TO DO, DO IT
  3034
  3035				    ;FINISHED WITH THE LAST OUTPUT REQUEST FOR THIS PORT
  3036
  3037	003313'	137305	000002	MORLN2:	DPB	T1, LDBOPB(U)	;CLEAR NEED-OUTPUT BIT
  3038	003314'	260040	006145'		PUSHJ	P, XMTWAK	;WAKE UP THE JOB FOR GOOD MEASURE
  3039	003315'	254000	003330'		JRST	FULLIN
  3040
  3041				    ;OUTPUT SUCCESSFUL, NO ROOM FOR MORE
  3042
  3043	003316'	210340	016411'	FINLIN:	MOVN	T2, SVOJFF
  3044	003317'	205300	400000		MOVSI	T1, (1B0)
  3045	003320'	242307	000000		LSH	T1, (T2)
  3046	003321'	413305	000003		ANDCAB	T1, LDBOUT(U)
  3047	003322'	322300	003313'		JUMPE	T1, MORLN2
  3048	003323'	254000	003330'		JRST	FULLIN
  3049
  3050				    ;OUTPUT NOT DONE BECAUSE WE'RE WAITING FOR SOMETHING
  3051				    ;(E.G., CAN'T OUTPUT ECHO CHARACTERS IF THE PORT'S NOT
  3052				    ;IN INPUT WAIT). CODE FOR "SOMETHING"S MUST TURN
  3053				    ;THE NEED-OUTPUT BIT BACK ON
  3054
  3055	003324'	201300	000000	WATLIN:	MOVEI	T1, 0
  3056	003325'	137305	000002		DPB	T1, LDBOPB(U)
  3057	003326'	260040	006145'		PUSHJ	P, XMTWAK
  3058	003327'	254000	003330'		JRST	FULLIN
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 63
SCNSER.MAC	25-JAN-91 22:40		OUTPUT DISPATCHER

  3059				    ;OUTPUT NOT DONE AND/OR FINISHED WITH THIS PORT
  3060
  3061	003330'	550205	000000	FULLIN:	HRRZ	F, LDBDDB(U)
  3062	003331'	322200	003337'		JUMPE	F, FULLN2
  3063	003332'	135300	001570*		LDB	T1, PJOBN
  3064	003333'	200440	016401'		MOVE	T4, CHQTA
  3065	003334'	274440	016400'		SUB	T4, CHCNT
  3066	003335'	272446	000000*		ADDM	T4, JBTCOT(T1)
  3067	003336'	272440	003335*		ADDM	T4, JBTCOT	;System-wide # of characters output
  3068	003337'	326500	003344'	FULLN2:	JUMPN	W, FULLN3
  3069
  3070				    ;DONE WITH A REAL TTY
  3071
  3072	003340'	260040	004114'		PUSHJ	P, CLSCHR	;FINISH CHARACTER-OUTPUT MESSAGE
  3073	003341'	333000	016422'		  SKIPLE MULCNT+1	;No room in ORING.  Any PTY room?
  3074	003342'	254000	003353'		 JRST	NOLIN		;Room in ORING or room for PTY I/O
  3075	003343'	254000	003361'		JRST	FINOUT		;  QUIT
  3076
  3077				    ;DONE WITH A PTY
  3078
  3079	003344'	302500	000001	FULLN3:	CAIE	W, 1
  3080	003345'	256000	000000'		 STOPCD
  3081	003346'	260040	003477'		PUSHJ	P, CLSPTL	;FINISH CHARACTER OUTPUT
  3082	003347'	337000	016421'		SKIPG	MULCNT+0	;IF THERE'S ROOM FOR REAL PORTS
  3083	003350'	333000	016422'		SKIPLE	MULCNT+1	;OR PTYS,
  3084	003351'	254000	003353'		 JRST	NOLIN		;  GO ON
  3085	003352'	254000	003361'		JRST	FINOUT		;ELSE QUIT
  3086
  3087				    ;GO ON TO THE NEXT PORT
  3088
  3089	003353'	350440	016407'	NOLIN:	AOS	T4, LINPNM
  3090	003354'	200240	016410'		MOVE	U, LINFSV
  3091	003355'	326240	003210'		JUMPN	U, SCOLP	;TRY TO FIND ANOTHER IN GROUP
  3092	003356'	200300	016377'	NOLIN2:	MOVE	T1, LINPTR
  3093	003357'	253300	003204'		AOBJN	T1, SCOLP1	;TRY ANOTHER GROUP
  3094	003360'	402000	016377'		SETZM	LINPTR		;(START FROM BEGINNING NEXT TIME)
  3095	003361'	357000	016374'	FINOUT:	AOSG	FSCN	;(IF IT WAS 0 (NOW 1), THERE WAS NO I/O)
  3096	003362'	254000	000731'		 JRST	SCNIN	;IF I/O DONE THIS CYCLE, GO CHECK INPUT AGAIN
  3097	003363'	402000	016374'		SETZM	FSCN	;OTHERWISE, CLEAR FSCN
  3098	003364'	263040	000000		POPJ	P,	;AND RETURN (FROM SCNINT) TO THE TICK LOGIC
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 64
SCNSER.MAC	25-JAN-91 22:40		OUTPUT DISPATCH TABLES

  3099				SUBTTL	OUTPUT DISPATCH TABLES
  3100
  3101				DEFINE ZZZ(NAME), <GO'NAME>
  3102	003365'	000000	004217'	OUTTRN:	OUTBIT
  3103	003366'	000000	004616'
  3104	003367'	000000	004253'
  3105	003370'	000000	004527'
  3106	003371'	000000	004624'
  3107	003372'	000000	004324'
  3108	003373'	000000	004310'
  3109	003374'	000000	004544'
  3110	003375'	000000	004251'
  3111	003376'	000000	004261'
  3112	003377'	000000	004255'
  3113	003400'	000000	004224'
  3114	003401'	000000	004276'
  3115	003402'	000000	005336'
  3116	003403'	000000	004626'
  3117	003404'	000000	004650'
  3118	003405'	000000	004545'
  3119	003406'	000000	004700'
  3120	003407'	000000	004266'
  3121	003410'	000000	004346'
  3122	003411'	000000	004734'
  3123	003412'	000000	004710'
  3124	003413'	000000	004712'
  3125
  3126				DEFINE ZZZ(NAME), <PG'NAME>
  3127	003414'	000000	004216'	PTYTRN:	OUTBIT
  3128	003415'	000000	004052'
  3129	003416'	000000	003577'
  3130	003417'	000000	003667'
  3131	003420'	000000	003651'
  3132	003421'	000000	003607'
  3133	003422'	000000	003615'
  3134	003423'	000000	004013'
  3135	003424'	000000	003566'
  3136	003425'	000000	003567'
  3137	003426'	000000	003567'
  3138	003427'	000000	003570'
  3139	003430'	000000	004101'
  3140	003431'	000000	005336'
  3141	003432'	000000	004626'
  3142	003433'	000000	004650'
  3143	003434'	000000	003737'
  3144	003435'	000000	003621'
  3145	003436'	000000	003567'
  3146	003437'	000000	004056'
  3147	003440'	000000	004734'
  3148	003441'	000000	003566'
  3149	003442'	000000	003601'
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 65
SCNSER.MAC	25-JAN-91 22:40		PTY "OUTPUT" ROUTINES

  3150				SUBTTL PTY "OUTPUT" ROUTINES
  3151
  3152			000170	PTBSIZ==^D120
  3153
  3154				;SETPTL - CALLED WITH U/ PTY LDB TO SET UP FOR OUTPUT THENCE
  3155				;	IF THE OTHER END IS IN BLOCK INPUT WAIT, IT SETS
  3156				;	CHRWRP+1 TO POINT TO THE NEXT FREE BYTE IN THE
  3157				;	BLOCK INPUT BUFFER
  3158				;	OTHERWISE, IT SETS CHRWRP+1 TO POINT TO THE
  3159				;	PTY BUFFER
  3160				;	SETS T1/ MAX # CHARS TO MOVE
  3161
  3162	003443'	402000	016557'	SETPTL:	SETZM	PBDISC		;CHARIO DISCOUNT FOR BLOCK OUTPUT
  3163	003444'	261040	000005		PUSH	P, U
  3164	003445'	260040	007763'		PUSHJ	P, PTYBUD
  3165	003446'	201300	010000		MOVEI	T1, LDRBIP
  3166	003447'	612305	000031		TDNE	T1, LDBDCH(U)	;IF BLOCK INPUT IS IN PROGRESS,
  3167	003450'	254000	003465'		 JRST	SETPTB		;  DO THINGS DIFFERENTLY
  3168
  3169				    ;HERE WHEN OTHER END IS NOT IN BLOCK INPUT WAIT
  3170
  3171	003451'	402000	016560'		SETZM	DIDPBI
  3172	003452'	200300	016713'		MOVE	T1, [POINT 8, PTYBUF]
  3173	003453'	202300	016420'		MOVEM	T1, CHRWRP+1
  3174	003454'	200300	016475'		MOVE	T1, TIWRNN	;T1/ # CHARS ALLOWED BEFORE BACKPRESSURE
  3175	003455'	274305	000012		SUB	T1, LDBTIC(U)
  3176	003456'	274305	000014		SUB	T1, LDBECC(U)	;T1/ # MORE CHARS THAT WILL FIT
  3177	003457'	335000	000006		SKIPGE	T1		;IF WE'LL BE BACKPRESSURED,
  3178	003460'	201300	000036		 MOVEI	T1,%CHRMX	;  T1/ NORMAL (REAL TTY) LIMIT
  3179	003461'	303300	000170		CAILE	T1, PTBSIZ
  3180	003462'	201300	000170		MOVEI	T1, PTBSIZ	;MUSTN'T BE .gt. THAN THE PTY BUFFER SIZE
  3181	003463'	262040	000005		POP	P, U
  3182	003464'	263040	000000		POPJ	P,
  3183
  3184				    ;HERE WHEN THE OTHER END IS IN BLOCK INPUT WAIT
  3185
  3186	003465'	476000	016560'	SETPTB:	SETOM	DIDPBI
  3187	003466'	550305	000005		HRRZ	T1, LDBBIO(U)	;T1/ BLOCK INPUT BUFFER ADDR
  3188	003467'	332000	000006		SKIPE	T1		;IF NONE,
  3189	003470'	331006	000005		SKIPL	BIOCHR(T1)	;OR IF NO INPUT PENDING,
  3190	003471'	256000	000000'		 STOPCD 		;  DIE
  3191	003472'	200346	000002		MOVE	T2, BIOPBP(T1)	;T2/ BLOCK IDPB POINTER
  3192	003473'	202340	016420'		MOVEM	T2, CHRWRP+1
  3193	003474'	200306	000003		MOVE	T1, BIOPBC(T1)	;T1/ # BYTES LEFT THERE
  3194	003475'	262040	000005		POP	P, U
  3195	003476'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 66
SCNSER.MAC	25-JAN-91 22:40		CLSPTL - CALLED WITH U/ PTY LDB TO FINISH UP OUTPUT THITHER

  3196				SUBTTL	CLSPTL - CALLED WITH U/ PTY LDB TO FINISH UP OUTPUT THITHER
  3197				;	IF OTHER END WAS DOING BLOCK INPUT, THE CHARACTERS ARE
  3198				;	ALREADY MOVED - WE JUST NEED TO UPDATE THE BUFFER
  3199				;	POINTER&COUNT AND SEE IF WE'VE FILLED IT YET
  3200				;	OTHERWISE WE NEED TO MOVE THE CHARACTERS TO THE
  3201				;	OTHER END
  3202
  3203	003477'	200300	016557'	CLSPTL:	MOVE	T1, PBDISC
  3204	003500'	272300	016400'		ADDM	T1, CHCNT	;ADJUST CHARIO COUNT FOR BLOCK OUTPUT
  3205	003501'	332000	016560'		SKIPE	DIDPBI		;IF OTHER END WAS DOING BLOCK INPUT,
  3206	003502'	254000	003531'		JRST	CLSPTB		;  HANDLE THINGS DIFFERENTLY
  3207
  3208	003503'	200300	016420'		MOVE	T1, CHRWRP+1	;T1/ BYTE POINTER
  3209	003504'	316300	016713'		CAMN	T1, [POINT 8, PTYBUF]
  3210	003505'	263040	000000		POPJ	P,		;(NOTHING TO OUTPUT)
  3211
  3212	003506'	261040	000005		PUSH	P, U
  3213	003507'	261040	016714'		PUSH	P, [0]
  3214	003510'	261040	000006		PUSH	P, T1
  3215	003511'	261040	016713'		PUSH	P, [POINT 8, PTYBUF]
  3216
  3217				    ;-2(P) = 0 IF REM. ECHO, -1 IF DEFERRED
  3218				    ;-1(P) IS ORIGINAL ENDING BYTE POINTER
  3219				    ;  (P) IS SOURCE BYTE POINTER
  3220
  3221	003512'	260040	007763'		PUSHJ	P, PTYBUD	;U/ BUDDY'S LDB
  3222	003513'	134401	000000	CLSLP1:	UUILDB	T3, (P)		;T3/ CHAR
  3223	003514'	260040	001607'		PUSHJ	P, MOVCHR	;DEPOSIT IT
  3224	003515'	254000	003517'		  JRST	.+2
  3225	003516'	476001	777776		SETOM	-2(P)		;(ENTERED DEFERRED ECHO MODE)
  3226	003517'	200301	000000		MOVE	T1, (P)
  3227	003520'	312301	777777		CAME	T1, -1(P)
  3228	003521'	254000	003513'		JRST	CLSLP1
  3229
  3230	003522'	336301	777776		SKIPN	T1, -2(P)	;IF IT ENTERED DEFERRED ECHO MODE,
  3231	003523'	254000	003526'		JRST	CLSLP2
  3232	003524'	137300	000102'		DPB	T1, LOPECO	;  SET NEED-ECHO
  3233	003525'	137305	000002		DPB	T1, LDBOPB(U)	;  AND NEED-OUTPUT
  3234	003526'	274040	016715'	CLSLP2:	SUB	P, [3,,3]	;DISCARD THE THREE LOCALS
  3235	003527'	262040	000005		POP	P, U		;RESTORE U
  3236	003530'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 67
SCNSER.MAC	25-JAN-91 22:40		CLSPTL - CALLED WITH U/ PTY LDB TO FINISH UP OUTPUT THITHER

  3237				    ;HERE WHEN THE OTHER END WAS DOING BLOCK INPUT
  3238
  3239	003531'	261040	000005	CLSPTB:	PUSH	P, U
  3240	003532'	260040	007763'		PUSHJ	P, PTYBUD
  3241	003533'	201300	010000		MOVEI	T1, LDRBIP
  3242	003534'	616305	000031		TDNN	T1, LDBDCH(U)	;IF BLKI NO LONGER IN PROGRESS,
  3243	003535'	254000	003553'		 JRST	UPOPJ		;  NOTHING TO DO
  3244	003536'	550305	000005		HRRZ	T1, LDBBIO(U)	;T1/ BLOCK INPUT BUFFER ADDRESS
  3245	003537'	336000	000006		SKIPN	T1
  3246	003540'	256000	000000'		 STOPCD
  3247	003541'	200400	016420'		MOVE	T3, CHRWRP+1
  3248	003542'	202406	000002		MOVEM	T3, BIOPBP(T1)	;UPDATE BYTE POINTER
  3249	003543'	200400	016400'		MOVE	T3, CHCNT
  3250	003544'	274400	016401'		SUB	T3, CHQTA	;T3/ - # OF CHARACTERS MOVED
  3251	003545'	273406	000003		ADDB	T3, BIOPBC(T1)	;UPDATE BYTES-LEFT COUNT
  3252	003546'	322400	003555'		JUMPE	T3, CLSPBF	;(BUFFER FILLED)
  3253
  3254				    ;HERE WHEN WE HAVEN'T FINISHED FILLING THE BUFFER YET
  3255
  3256	003547'	337000	000010		SKIPG	T3
  3257	003550'	256000	000000'		 STOPCD 		;(WENT TOO FAR)
  3258	003551'	201300	000017		MOVEI	T1, %PBTIM
  3259	003552'	137300	000174'		DPB	T1, LDPTIM	;RESET BLOCK-INPUT TIMER
  3260	003553'	262040	000005	UPOPJ:	POP	P,U
  3261	003554'	263040	000000		POPJ	P,
  3262
  3263				    ;HERE WHEN WE'VE JUST FILLED A BLOCK INPUT BUFFER
  3264
  3265	003555'	550446	000005	CLSPBF:	HRRZ	T4, BIOCHR(T1)	;T4/ (PRESUMABLY) # CHARS MOVED
  3266	003556'	260040	001261'		PUSHJ	P, FRCIBF	;SIMULATE BUFFER-FULL MESSAGE
  3267	003557'	400300	000000		SETZ	T1,
  3268	003560'	137300	000174'		DPB	T1, LDPTIM	;CLEAR BLOCK-INPUT TIMER
  3269	003561'	201300	010000		MOVEI	T1, LDRBIP
  3270	003562'	412305	000031		ANDCAM	T1, LDBDCH(U)	;CLEAR IN-PROGRESS FLAG
  3271	003563'	262040	000005		POP	P, U
  3272	003564'	260040	001145'		PUSHJ	P, FRCNOO	;BACKPRESSURE OURSELVES
  3273	003565'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 68
SCNSER.MAC	25-JAN-91 22:40		CLSPTL - CALLED WITH U/ PTY LDB TO FINISH UP OUTPUT THITHER

  3274				    ;IMPOSSIBLE OUTPUT BITS
  3275
  3276	003566'			PGSRD:	;RED BALL
  3277	003566'			PGSGR:	;GREEN BALL
  3278	003566'	256000	000000'		 STOPCD
  3279
  3280				    ;IGNORED OUTPUT BITS
  3281
  3282	003567'			PGSEC:	;SET ECHO MODE (SHOULD ALWAYS BE OFF)
  3283	003567'			PGSTP:	;TERMINAL CHARACTERISTICS PROBE
  3284	003567'			PGHNG:	;HANG UP DATA SET
  3285	003567'	254000	003306'		JRST	MORLIN
  3286
  3287				    ;NOT IMPLEMENTED YET - IGNORE
  3288
  3289	003570'			PGSTC:	;SET TERMINAL CHARACTERISTICS
  3290	003570'	254000	003306'		JRST	MORLIN
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 69
SCNSER.MAC	25-JAN-91 22:40		MSGSIM - SIMULATE INPUT-MESSAGE ARRIVAL

  3291				SUBTTL	MSGSIM - SIMULATE INPUT-MESSAGE ARRIVAL
  3292				;	CALLED WITH T1/ ADDR OF A FRC--- ROUTINE
  3293				;	CALLS <T1> WITH U/ THE CURRENT PTY'S "BUDDY"
  3294
  3295	003571'	261040	000005	MSGSIM:	PUSH	P, U		;SAVE U
  3296	003572'	260040	007763'		PUSHJ	P, PTYBUD	;U/ "BUDDY" LDB
  3297	003573'	500245	000031		HLL	U, LDBDCH(U)
  3298	003574'	260046	000000		PUSHJ	P, (T1)		;SIMULATE A <T1>-ARRIVAL
  3299	003575'	262040	000005		POP	P, U
  3300	003576'	254000	003306'		JRST	MORLIN
  3301
  3302				;CHARACTER GOBBLER
  3303
  3304	003577'	201300	001133'	PGCGB:	MOVEI	T1, FRCCGB
  3305	003600'	324740	003571'		PJRST	MSGSIM
  3306
  3307
  3308				;ORANGE BALL
  3309
  3310	003601'	205340	004000	PGSOG:	MOVSI	T2, L2LDEL
  3311	003602'	616345	000027		TDNN	T2, LDBBYT(U)	;IF WE'RE IN \...
  3312	003603'	260040	004720'		 PUSHJ	P, WTCHK	;OR WE'RE IN INPUT WAIT,
  3313	003604'	254000	003324'		  JRST	WATLIN		;  WAIT
  3314	003605'	201300	001223'		MOVEI	T1, FRCORG
  3315	003606'	324740	003571'		PJRST	MSGSIM
  3316
  3317				;BACKPRESSURE ON
  3318
  3319	003607'	201300	200000	PGBPN:	MOVEI	T1, LDRXOS
  3320	003610'	612305	000031		TDNE	T1, LDBDCH(U)	;IF WE'VE ALREADY SENT AN XOFF,
  3321	003611'	254000	003306'		 JRST	MORLIN		;  DON'T SEND ANOTHER
  3322	003612'	436305	000031		IORM	T1, LDBDCH(U)
  3323	003613'	201300	001145'		MOVEI	T1, FRCNOO
  3324	003614'	324740	003571'		PJRST	MSGSIM
  3325
  3326				;BACKPRESSURE OFF
  3327
  3328	003615'	201300	200000	PGBPF:	MOVEI	T1, LDRXOS
  3329	003616'	412305	000031		ANDCAM	T1, LDBDCH(U)	;CLEAR BACKPRESSURE-SEND FLAG
  3330	003617'	201300	001154'		MOVEI	T1, FRCDOO
  3331	003620'	324740	003571'		PJRST	MSGSIM
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 70
SCNSER.MAC	25-JAN-91 22:40		YELLOW BALL

  3332				SUBTTL	YELLOW BALL
  3333
  3334	003621'	261040	000005	PGSYL:	PUSH	P, U
  3335	003622'	260040	007763'		PUSHJ	P, PTYBUD
  3336	003623'	500245	000031		HLL	U, LDBDCH(U)
  3337	003624'	201300	010000		MOVEI	T1, LDRBIP
  3338	003625'	616305	000031		TDNN	T1, LDBDCH(U)	;IS OTHER END DOING BLOCK INPUT?
  3339	003626'	254000	003642'		 JRST	PGSYLN		;(NO)
  3340
  3341				    ;HERE WHEN THE OTHER END'S DOING BLOCK INPUT
  3342
  3343	003627'	412305	000031		ANDCAM	T1, LDBDCH(U)	;CLEAR IN-PROGRESS FLAG
  3344	003630'	550305	000005		HRRZ	T1, LDBBIO(U)
  3345	003631'	332000	000006		SKIPE	T1
  3346	003632'	331346	000005		SKIPL	T2, BIOCHR(T1)
  3347	003633'	256000	000000'		 STOPCD
  3348	003634'	550440	000007		HRRZ	T4, T2		;T4/ # CHARS TO TRANSFER
  3349	003635'	274446	000003		SUB	T4, BIOPBC(T1)	;T4/ # CHARS TRANSFERRED
  3350	003636'	260040	001301'		PUSHJ	P, FRCEOT	;FAKE A BLKI-EOT
  3351	003637'	262040	000005		POP	P, U
  3352	003640'	260040	001145'		PUSHJ	P, FRCNOO	;BACKPRESSURE OURSELVES
  3353	003641'	254000	003324'		JRST	WATLIN		;(SEND YLB WHEN BKP RELIEVED)
  3354
  3355				    ;HERE IN THE NORMAL CASE
  3356
  3357	003642'	205300	000400	PGSYLN:	MOVSI	T1, L2LOWT
  3358	003643'	436305	000027		IORM	T1, LDBBYT(U)	;SAY WE'RE WAITING
  3359	003644'	205300	002000		MOVSI	T1, L2LOWS
  3360	003645'	412305	000027		ANDCAM	T1, LDBBYT(U)	;AND THAT WE HAVEN'T SEEN ONE
  3361	003646'	260040	001233'		PUSHJ	P, FRCYEL
  3362	003647'	262040	000005		POP	P, U
  3363	003650'	254000	003306'		JRST	MORLIN
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 71
SCNSER.MAC	25-JAN-91 22:40		WHEN THE PTY OUTPUT CODE FILLS UP A BLOCK INPUT BUFFER, IT

  3364				SUBTTL	WHEN THE PTY OUTPUT CODE FILLS UP A BLOCK INPUT BUFFER, IT
  3365				;FORCES BACKPRESSURE ON THE LINE DOING THE OUTPUT - THE
  3366				;REQUEST-BLOCK-INPUT AND REQUEST-BLOCK-INPUT-TERMINATION
  3367				;OUTPUT ROUTINES CLEAR THE BACKPRESSURE
  3368
  3369				;TERMINATE BLOCK INPUT
  3370
  3371	003651'	201300	010000	PGTRI:	MOVEI	T1, LDRBIP
  3372	003652'	616305	000031		TDNN	T1, LDBDCH(U)	;IF BLOCK INPUT'S IN PROGRESS,
  3373	003653'	254000	003664'		 JRST	PGTRI1
  3374	003654'	412305	000031		ANDCAM	T1, LDBDCH(U)	;  CLEAR IN-PROGRESS FLAG
  3375	003655'	550305	000005		HRRZ	T1, LDBBIO(U)	;  T1/ BLOCK INPUT BUFFER ADDR
  3376	003656'	332000	000006		SKIPE	T1
  3377	003657'	331346	016457'		SKIPL	T2, BIOCNT(T1)
  3378	003660'	256000	003675'		 STOPCD (,XCT,TTYNPB)
  3379					;No PTY Buffer for block IO  ;;PGTRI+7
  3380	003661'	550440	000007		HRRZ	T4, T2		;  T4/ # OF CHARS TO TRANSFER
  3381	003662'	274446	000003		SUB	T4, BIOPBC(T1)	;  T4/ # OF CHARS TRANFERRED
  3382	003663'	254000	003665'		JRST	.+2		;OTHERWISE
  3383	003664'	400440	000000	PGTRI1:	SETZ	T4,		;  T4/ 0 CHARS
  3384	003665'	260040	001352'		PUSHJ	P, FRCIHR	;FAKE A TERMINATED-BY-REQUEST
  3385	003666'	254000	003703'		JRST	PGBIN1		;CLEAR BACKPRESSURE ON THE OTHER END
  3386
  3387				;REQUEST BLOCK INPUT
  3388
  3389	003667'	201300	010000	PGBIN:	MOVEI	T1, LDRBIP
  3390	003670'	436305	000031		IORM	T1, LDBDCH(U)	;MARK INPUT IN PROGRESS
  3391	003671'	201300	000017		MOVEI	T1, %PBTIM
  3392	003672'	137300	000174'		DPB	T1, LDPTIM	;SET BLOCK-INPUT TIMEOUT
  3393	003673'	550305	000005		HRRZ	T1, LDBBIO(U)	;T1/ INPUT BUFFER ADDRESS
  3394	003674'	336000	000006		SKIPN	T1
  3395	003675'	256000	016716'	TTYNPB:: STOPCD (.,JOB,TTYNPB,,<No PTY Buffer for block IO>)
  3396				 ;;PGBIN+6
  3397	003676'	550346	000005		HRRZ	T2, BIOCHR(T1)	;T2/ # CHARS TO TRANSFER
  3398	003677'	202346	000003		MOVEM	T2, BIOPBC(T1)	;STORE PTY COUNT
  3399	003700'	200340	016721'		MOVE	T2, [POINT 8,BIODAT]
  3400	003701'	270340	000006		ADD	T2, T1
  3401	003702'	202346	000002		MOVEM	T2, BIOPBP(T1)	;STORE PTY BYTE POINTER
  3402
  3403				    ;HERE FROM ABOVE AND FROM PGTRI TO CLEAR BACKPRESSURE
  3404
  3405	003703'	261040	000005	PGBIN1:	PUSH	P, U
  3406	003704'	260040	007763'		PUSHJ	P, PTYBUD
  3407	003705'	500245	000031		HLL	U, LDBDCH(U)
  3408	003706'	260040	001154'		PUSHJ	P, FRCDOO	;CLEAR BACKPRESSURE ON OTHER END
  3409	003707'	262040	000005		POP	P, U
  3410	003710'	254000	003306'		JRST	MORLIN
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 72
SCNSER.MAC	25-JAN-91 22:40		PBTIMO - CALLED BY SCNSEC WHEN A PORT DOING BLOCK INPUT

  3411				SUBTTL	PBTIMO - CALLED BY SCNSEC WHEN A PORT DOING BLOCK INPUT
  3412				;	   TIMES OUT.
  3413				;	   SAVES P1-P4.
  3414				;	   ASSUMES THAT FRCITM PRESERVES U AND F.
  3415
  3416	003711'	261040	000014	PBTIMO:	PUSH	P, P1
  3417	003712'	261040	000015		PUSH	P, P2
  3418	003713'	261040	000016		PUSH	P, P3
  3419	003714'	261040	000017		PUSH	P, P4
  3420
  3421	003715'	550305	000005		HRRZ	T1, LDBBIO(U)
  3422	003716'	332000	000006		SKIPE	T1
  3423	003717'	331446	000005		SKIPL	T4, BIOCHR(T1)
  3424	003720'	256000	000000'		 STOPCD 		;NO BUFFER OR NO INPUT PENDING
  3425	003721'	201340	010000		MOVEI	T2, LDRBIP
  3426	003722'	412345	000031		ANDCAM	T2, LDBDCH(U)	;CLEAR IN-PROGRESS FLAG
  3427	003723'	550440	000011		HRRZ	T4, T4		;T4/ # BYTES REQUESTED
  3428	003724'	274446	000003		SUB	T4, BIOPBC(T1)	;T4/ # BYTES TRANSFERRED
  3429	003725'	260040	001317'		PUSHJ	P, FRCITM	;FAKE A TIMEOUT MESSAGE
  3430	003726'	261040	000005		PUSH	P, U
  3431	003727'	260040	007763'		PUSHJ	P, PTYBUD
  3432	003730'	260040	001145'		PUSHJ	P, FRCNOO	;BACKPRESSURE OTHER END
  3433	003731'	262040	000005		POP	P, U
  3434
  3435	003732'	262040	000017		POP	P, P4
  3436	003733'	262040	000016		POP	P, P3
  3437	003734'	262040	000015		POP	P, P2
  3438	003735'	262040	000014		POP	P, P1
  3439	003736'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 73
SCNSER.MAC	25-JAN-91 22:40		BLOCK OUTPUT

  3440				SUBTTL	BLOCK OUTPUT
  3441
  3442	003737'	336000	016560'	PGBOT:	SKIPN	DIDPBI		;IF THE OTHER END WAS DOING BLOCK INPUT,
  3443	003740'	254000	004000'		 JRST	PGBOTC
  3444	003741'	200300	016400'		MOVE	T1, CHCNT
  3445	003742'	312300	016401'		CAME	T1, CHQTA	;AND IT HASN'T GOTTEN ANY CHARS YET,
  3446	003743'	254000	004000'		 JRST	PGBOTC
  3447	003744'	261040	000005		PUSH	P, U
  3448	003745'	260040	007763'		PUSHJ	P, PTYBUD
  3449	003746'	201300	010000		MOVEI	T1, LDRBIP
  3450	003747'	612305	000031		TDNE	T1, LDBDCH(U)	;AND IT'S STILL IN BLOCK INPUT WAIT,
  3451	003750'	254000	003753'		 JRST	PGBOT1
  3452	003751'	262040	000005		POP	P, U
  3453	003752'	254000	004000'		JRST	PGBOTC
  3454
  3455	003753'	550305	000005	PGBOT1:	HRRZ	T1, LDBBIO(U)	;  T1/ ITS BLOCK INPUT BUFFER
  3456	003754'	336000	000006		SKIPN	T1
  3457	003755'	256000	000000'		 STOPCD
  3458	003756'	550341	000000		HRRZ	T2, (P)		;  T2/ OUR LDB ADDR
  3459	003757'	554407	000005		HLRZ	T3, LDBBIO(T2)	;  T3/ OUR BLOCK OUTPUT BUFFER
  3460	003760'	336000	000010		SKIPN	T3
  3461	003761'	256000	000000'		 STOPCD
  3462	003762'	542405	000005		HRRM	T3, LDBBIO(U)	;  OUR OUTPUT = ITS INPUT
  3463	003763'	506307	000005		HRLM	T1, LDBBIO(T2)	;  ITS INPUT = OUR OUTPUT
  3464	003764'	200446	000004		MOVE	T4, BIOREQ(T1)
  3465	003765'	250450	000004		EXCH	T4, BIOREQ(T3)
  3466	003766'	202446	000004		MOVEM	T4, BIOREQ(T1)	;  BUT KEEP THE OLD BIOREQ'S
  3467	003767'	331306	000005		SKIPL	T1, BIOCHR(T1)	;  T1/ -1,,# CHARS "TRANSMITTED"
  3468	003770'	256000	000000'		 STOPCD
  3469	003771'	202310	000005		MOVEM	T1, BIOCHR(T3)	;  INPUT SIDE WANTS THE -1 FLAG
  3470	003772'	553006	000005		HRRZS	BIOCHR(T1)	;  OUTPUT SIDE DOESN'T
  3471	003773'	552300	016557'		HRRZM	T1, PBDISC	;  ALREADY CHARGED (JBTBIO), SO DISCOUNT
  3472	003774'	262040	000005		POP	P, U
  3473	003775'	402000	016400'		SETZM	CHCNT		;  WE'VE FILLED ITS BUFFER
  3474	003776'	260040	001371'		PUSHJ	P, FRCOHR	;  WE'VE DONE OUR BLOCK OUTPUT
  3475	003777'	254000	003316'		JRST	FINLIN		;  NO MORE THIS CYCLE
  3476
  3477				    ;HERE WHEN THE OTHER END'S NOT COOPERATING BY DOING BLOCK INPUT
  3478
  3479	004000'	554305	000005	PGBOTC:	HLRZ	T1, LDBBIO(U)	;T1/ BLOCK OUTPUT BUFFER
  3480	004001'	336000	000006		SKIPN	T1
  3481	004002'	256000	000000'		 STOPCD
  3482	004003'	550346	000005		HRRZ	T2, BIOCHR(T1)	;T2/ TOTAL CHARS TO TRANSFER
  3483	004004'	202346	000003		MOVEM	T2, BIOPBC(T1)	;STORE IT
  3484	004005'	200400	016721'		MOVE	T3, [POINT 8,BIODAT]
  3485	004006'	270400	000006		ADD	T3, T1		;T3/ BYTE POINTER
  3486	004007'	202406	000002		MOVEM	T3, BIOPBP(T1)	;STORE IT
  3487	004010'	201300	000001		MOVEI	T1, 1
  3488	004011'	137300	000065'		DPB	T1, LOPBOP	;SET BLOCK-OUTPUT-IN-PROGRESS
  3489	004012'	254000	003306'		JRST	MORLIN		;(DISPATCH WILL GO DO IT)
  3490				;BLOCK OUTPUT IN PROGRESS
  3491
  3492	004013'	554305	000005	PGBOP:	HLRZ	T1, LDBBIO(U)
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 73-2
SCNSER.MAC	25-JAN-91 22:40		BLOCK OUTPUT

  3493	004014'	336000	000006		SKIPN	T1
  3494	004015'	256000	000000'		 STOPCD
  3495	004016'	200346	000003		MOVE	T2, BIOPBC(T1)	;T2/ COUNT
  3496	004017'	200406	000002		MOVE	T3, BIOPBP(T1)	;T3/ POINTER
  3497	004020'	200440	016422'		MOVE	T4, MULCNT+1
  3498	004021'	313440	016400'		CAMLE	T4, CHCNT
  3499	004022'	200440	016400'		MOVE	T4, CHCNT	;T4/ MIN(MULCNT+1,CHCNT)
  3500	004023'	261040	000011		PUSH	P, T4		;SAVE IT
  3501	004024'	313340	000011		CAMLE	T2, T4
  3502	004025'	200340	000011		MOVE 	T2, T4		;T4/ MIN(# TO XFER,# THAT'LL FIT)
  3503	004026'	261040	000007		PUSH	P, T2		;SAVE IT
  3504
  3505	004027'	322340	004033'		JUMPE	T2, PGBOP2
  3506	004030'	134440	000010	PGBOP1:	UUILDB	T4, T3
  3507	004031'	136440	016420'		UUIDPB	T4, CHRWRP+1
  3508	004032'	367340	004030'		SOJG	T2, PGBOP1
  3509
  3510	004033'	262040	000007	PGBOP2:	POP	P, T2
  3511	004034'	272340	016557'		ADDM	T2, PBDISC	;(TO BE DISCOUNTED FROM CHARIO CHARGE)
  3512	004035'	210440	000007		MOVN	T4, T2
  3513	004036'	272440	016422'		ADDM	T4, MULCNT+1	;DECREMENT MULCNT
  3514	004037'	272440	016400'		ADDM	T4, CHCNT	;AND CHCNT
  3515	004040'	272441	000000		ADDM	T4, (P)		;AND SAVED # THAT'LL FIT
  3516	004041'	273446	000003		ADDB	T4, BIOPBC(T1)	;AND BLOCK-BUFFER COUNT
  3517	004042'	327440	004047'		JUMPG	T4, PGBOP3	;IF WE'RE DONE
  3518	004043'	260040	001371'		PUSHJ	P, FRCOHR	;  FAKE AN OUTPUT-TERMINATED
  3519	004044'	262040	000006		POP	P, T1
  3520	004045'	323300	003316'		JUMPLE	T1, FINLIN
  3521	004046'	254000	003306'		JRST	MORLIN
  3522								;OTHERWISE,
  3523	004047'	202406	000002	PGBOP3:	MOVEM	T3, BIOPBP(T1)	;  UPDATE CHARACTER POINTER
  3524	004050'	262040	000006		POP	P, T1
  3525	004051'	254000	003330'		JRST	FULLIN
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 74
SCNSER.MAC	25-JAN-91 22:40		TERMINATE BLOCK OUTPUT

  3526				SUBTTL	TERMINATE BLOCK OUTPUT
  3527
  3528	004052'	400300	000000	PGTRO:	SETZ	T1,
  3529	004053'	137300	000065'		DPB	T1, LOPBOP	;CLEAR BLKO-IN-PROGRESS
  3530	004054'	260040	001371'		PUSHJ	P, FRCOHR	;FAKE AN OUTPUT-TERMINATED
  3531	004055'	254000	003306'		JRST	MORLIN
  3532
  3533
  3534				SUBTTL	CIRCUIT ZAPPER
  3535
  3536	004056'	205300	000400	PGZAP:	MOVSI	T1,L2LOWT	;ZAP PTY
  3537	004057'	616305	000027		TDNN	T1,LDBBYT(U)	;IF WAITING FOR ORANGE BALL,
  3538	004060'	332005	000005		SKIPE	LDBBIO(U)	;OR IF BLOCK I/O NEEDS CLEANING-UP,
  3539	004061'	254000	003324'		 JRST	WATLIN		;  WAIT
  3540	004062'	403305	000026		SETZB	T1,LDBLOG(U)	;MARK THIS PORT GONE
  3541	004063'	137300	000160'		DPB	T1,LDPHST	;Clear origination host
  3542	004064'	402005	000030		SETZM	LDBMOD(U)
  3543	004065'	260040	006324'		PUSHJ	P,TSETBO
  3544	004066'	260040	006276'		PUSHJ	P,TSETBI
  3545	004067'	400300	000000		SETZ	T1,
  3546	004070'	137305	000002		DPB	T1,LDBOPB(U)	;CLEAR NEED-OUTPUT
  3547	004071'	261040	000005		PUSH	P,U
  3548	004072'	260040	007763'		PUSHJ	P,PTYBUD	;U/ "BUDDY" LDB
  3549	004073'	336005	000026		SKIPN	LDBLOG(U)	;IF IT'S ALREADY GONE,
  3550	004074'	254000	004077'		 JRST	PGZAP1		;  THERE'S NOTHING MORE TO DO
  3551	004075'	500245	000031		HLL	U,LDBDCH(U)
  3552	004076'	260040	001526'		PUSHJ	P,FRCZAP	;FAKE A ZAPPER THERE
  3553	004077'	262040	000005	PGZAP1:	POP	P,U
  3554	004100'	254000	003316'		JRST	FINLIN
  3555
  3556				;BELL (SHOULDN'T REALLY HAPPEN) - SIMULATE BLACK BALLS
  3557
  3558	004101'	350000	016513'	PGSBL:	AOS	PTYLOS		;COUNT CHARACTER LOST BY US
  3559	004102'	201300	000001		MOVEI	T1, 1
  3560	004103'	260040	001446'		PUSHJ	P, FRCLOS	;"INPUT LOST" TO BELL SENDER
  3561	004104'	261040	000005		PUSH	P, U
  3562	004105'	260040	007763'		PUSHJ	P, PTYBUD
  3563	004106'	201300	000000		MOVEI	T1, 0
  3564	004107'	260040	001446'		PUSHJ	P, FRCLOS	;"OUTPUT LOST" TO OTHER END
  3565	004110'	262040	000005		POP	P, U
  3566	004111'	550205	000000		HRRZ	F,LDBDDB(U)	;Point to TTY DDB (for stopcode processor)
  3567	004112'	256000	016722'		 STOPCD	(.+1,INFO,PTYSBL,,<PTY saw a Black Ball>)
  3568				  ;;PGSBL+10
  3569	004113'	254000	003306'		JRST	MORLIN		;(Fixed in P035/C07 - was a POPJ)
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 75
SCNSER.MAC	25-JAN-91 22:40		TYMNET OUTPUT ROUTINES

  3570				SUBTTL TYMNET OUTPUT ROUTINES
  3571
  3572				;THIS ROUTINE IS CALLED TO FINISH UP OUTPUT. IT NONSKIP-RETURNS
  3573				;IF THERE IS NO BUFFER SPACE NOW.
  3574
  3575	004114'	335300	016423'	CLSCHR:	SKIPGE	T1,MXMCNT
  3576	004115'	254000	004141'		 JRST	SETOUT		;WE REALLY DON'T THINK ANY CHRS THERE
  3577	004116'	274300	016421'		SUB	T1,MULCNT+0	;COMPUTE NUMBER OUTPUT
  3578	004117'	322300	000000*		JUMPE	T1,CPOPJ1	;NONE SO MUST STILL BE SPACE
  3579	004120'	337000	016421'		SKIPG	MULCNT+0	;DID WE RUN OUT OF ROOM IN RING
  3580	004121'	370000	016400'		 SOS	CHCNT+0		;YES, ACTUALLY 1 MORE CHR OUT
  3581	004122'	476000	016374'		SETOM	FSCN		;FLAG AS SOME OUTPUT
  3582	004123'	660300	000200		TRO	T1,200		;SET BIT TO FLAG AS DATA TYPE
  3583	004124'	137300	000274'		DPB	T1,OUPTYP	;SET IN TYPE FIELD
  3584	004125'	135400	000157'		LDB	T3,LDPLNO
  3585	004126'	137400	000275'		DPB	T3,OUPLIN	;AND THE PORT NUMBER
  3586	004127'	261040	000016		PUSH	P,P3		; SAVE P3, THEN SETUP AS USUAL
  3587	004130'	200717	000700*		MOVE	P3,ORING(P4)	;  ORING(P4) contains data
  3588	004131'	260040	016267'		PUSHJ	P,ORPLOG	; Log the transmission
  3589	004132'	262040	000016		POP	P,P3		; Restore saved P3 (someone want it)
  3590	004133'	275300	000173		SUBI	T1,200-5	;COMPUT NUMBER OF WORDS USED
  3591	004134'	242300	777776		LSH	T1,-2
  3592	004135'	270740	000006		ADD	P4,T1
  3593	004136'	405740	000000*	ADVPTR:	ANDI	P4,MSKORG
  3594	004137'	202740	001003*		MOVEM	P4,ORPPDP	;SET FOR 620 TO FIND
  3595	004140'	402000	000640*		SETZM	ORPTIM##	;Reset ORING timer
  3596					PFALL	SETOUT		;AND FIND OUT ABOUT MORE SPACE
  3597
  3598
  3599				;THIS ROUTINE IS CALLED TO SET THINGS UP FOR CHARACTER
  3600				;OUTPUT. NON-SKIP RETURN MEANS NO ROOM IN OUTPUT BUFFER
  3601
  3602	004141'	476000	016423'	SETOUT:	SETOM	MXMCNT		;FLAG THAT NO ROOM THERE
  3603	004142'	476000	016421'		SETOM	MULCNT+0	;Flag that we've been here (no room?)
  3604	004143'	200740	000657*		MOVE	P4,ORP620
  3605	004144'	274740	004137*		SUB	P4,ORPPDP	;SIZE OF SPACE IN OUTPUT RING
  3606					SOJL	P4,[MOVEI P4,MSKORG+1
  3607						SKIPN	ORP620	  ;IF 620 AT 0 CAN NOT
  3608						 MOVEI	P4,MSKORG ;USE LAST WORD
  3609						SUB	P4,ORPPDP ;FIND SPACE TO END OF BUFFER
  3610						JUMPN	P4,.+2	  ;SOME REALLY THERE
  3611	004145'	361740	016725'			POPJ	P,]	  ;NOT REALLY ANY THERE
  3612	004146'	322740	003000*		JUMPE	P4,CPOPJ	;REALLY NO ROOM
  3613	004147'	242740	000002		LSH	P4,2		;CONVERT TO NUMBER OF CHARACTERS
  3614	004150'	275740	000002		SUBI	P4,2		;TAKES TWO FOR COUNT AND PORT
  3615	004151'	303740	000177		CAILE	P4,177		;COUNT MUST FIT IN BYTE SIZE-1
  3616	004152'	201740	000177		 MOVEI	P4,177
  3617	004153'	202740	016421'		MOVEM	P4,MULCNT+0	;SAVE COUNT
  3618	004154'	202740	016423'		MOVEM	P4,MXMCNT	;AND ORIGINAL (SO KNOW HOW MANY SENT)
  3619	004155'	200740	004144*		MOVE	P4,ORPPDP
  3620	004156'	201317	004130*		MOVEI	T1,ORING(P4)
  3621	004157'	505300	241000		HRLI	T1,(POINT 8,0,BYP2);SET TO PUT FIRST IN 3RD BYTE
  3622	004160'	202300	016417'		MOVEM	T1,CHRWRP+0	;SET BYTE POINTER
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 75-2
SCNSER.MAC	25-JAN-91 22:40		TYMNET OUTPUT ROUTINES

  3623	004161'	254000	004117*		JRST	CPOPJ1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 76
SCNSER.MAC	25-JAN-91 22:40		TYMNET OUTPUT ROUTINES

  3624				COMMENT !
  3625				TO OUTPUT A CHARACTER INTO THE RING (OR TO A PTY), USE THE CODE:
  3626					UUIDPB T3,CHRWRP(W)	;CHR. IN T3
  3627					SOSLE MULCNT(W)		;SEE IF OUT OF ROOM
  3628					SOSG CHCNT		;OR TIME TO STOP AND CHECK INPUT RING
  3629					 HERE IF WE SHOULD STOP
  3630					 HERE IF WE SHOULD NOT STOP
  3631				!
  3632
  3633				;OUTPUT A FULL WORD FOR SPECIAL TYPES
  3634
  3635	004162'	322500	004164'	WRDOUT:	JUMPE	W, .+2		;IF IT'S A PTY,
  3636	004163'	256000	000000'		 STOPCD 		;  THERE SHOULD BE ONLY CHAR. OUTPUT
  3637	004164'	202717	004156*		MOVEM	P3,ORING(P4)	;PUT THE WORD IN THE OUTPUT BUFFER
  3638	004165'	260040	016267'		PUSHJ	P,ORPLOG	;Put message into ORING log
  3639	004166'	476000	016374'		SETOM	FSCN
  3640	004167'	211700	000004		MOVNI	P3,4
  3641	004170'	272700	016421'		ADDM	P3,MULCNT+0	;UPDATE REAMAINING COUNTS
  3642	004171'	273700	016423'		ADDB	P3,MXMCNT	;IN CASE WE GO TO CHR OUTPUT
  3643	004172'	321700	016733'		JUMPL	P3,[AOJA P4,ADVPTR]	;WILL GET TO SETOUT, NONSKIP RETURN
  3644	004173'	350000	016417'		AOS	CHRWRP+0
  3645	004174'	271740	000001		ADDI	P4,1		;JUST ADVANCE OUTPUT POINTER
  3646	004175'	405740	004136*		ANDI	P4,MSKORG
  3647	004176'	202740	004155*		MOVEM	P4,ORPPDP	;SET FOR 620 TO FIND
  3648	004177'	254000	004161*		JRST	CPOPJ1
  3649
  3650				;OUTPUT 2 WORDS FOR SPECIAL TYPES.
  3651
  3652	004200'	322500	004202'	WRDOT2:	JUMPE	W,.+2		;IF IT'S A PTY,
  3653	004201'	256000	000000'		 STOPCD 		;  THERE SHOULD BE ONLY CHARACTER OUTPUT
  3654	004202'	202717	004164*		MOVEM	P3,ORING(P4)	;PUT 2ND WORD IN THE OUTPUT BUFFER.
  3655				;** No LOG HERE **;
  3656				;**;	PUSHJ	P,ORPLOG	;Put message into ORING log
  3657	004203'	476000	016374'		SETOM	FSCN		;FLAG THAT THERE'S SOMETHING TO DO.
  3658	004204'	211700	000010		MOVNI	P3,8		;2 WDS (8 CHARS) TO OUTPUT.
  3659	004205'	272700	016421'		ADDM	P3,MULCNT+0	;UPDATE REMAINING COUNTS
  3660	004206'	273700	016423'		ADDB	P3,MXMCNT	;IN CASE WE GO TO CHR OUTPUT
  3661	004207'	321700	016733'		JUMPL	P3,[AOJA P4,ADVPTR]	;WILL GET TO SETOUT.
  3662	004210'	350000	016417'		AOS	CHRWRP+0	;INCREMENT CHAR BYTE POINTER.
  3663	004211'	350000	016417'		AOS	CHRWRP+0	;INCREMENT IT AGAIN (PAST 2 WORDS).
  3664	004212'	271740	000001		ADDI	P4,1		;INCREMENT ORING OFFSET
  3665	004213'	405740	004175*		ANDI	P4,MSKORG
  3666	004214'	202740	004176*		MOVEM	P4,ORPPDP	;AND INFORM THE BASE.
  3667	004215'	254000	004177*		JRST	CPOPJ1		;SKIP RETURN.
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 77
SCNSER.MAC	25-JAN-91 22:40		NON-CHARACTER OUTPUT MESSAGE HANDLERS

  3668				SUBTTL NON-CHARACTER OUTPUT MESSAGE HANDLERS
  3669
  3670				;DON'T SEND ANY MESSAGES FROM THIS LINE
  3671
  3672	004216'	256000	000000'	PGHSH:	 STOPCD			;HSH NOT USED ON PTYs
  3673	004217'	135300	000101'	GOHSH:	LDB	T1,LOPZAP	;SEE IF ZAP SET
  3674	004220'	336000	000006		SKIPN	T1
  3675					 JRST	[AOS BADGUY	;COUNT BADGUYS THAT TRY TO SEND MESSAGES
  3676	004221'	254000	016734'			JRST WATLIN]	; FROM THIS PORT
  3677	004222'	260040	004422'		PUSHJ	P,CLRTTY	;DO FALSE ZAP STUFF
  3678	004223'	254000	003316'		JRST	FINLIN
  3679
  3680				;SEND TERMINAL CHARACTERISTIC(S)
  3681
  3682	004224'	260040	004114'	GOSTC:	PUSHJ	P,CLSCHR
  3683	004225'	254000	003330'		  JRST	FULLIN		;NO ROOM
  3684	004226'	200405	000050	GOSTC1:	MOVE	T3,LDBTMT(U)	;T3/TRANSMIT BITS
  3685	004227'	243400	004231'		JFFO	T3,.+2		;T4/T.C # TO SEND THIS TIME
  3686	004230'	254000	003306'		JRST	MORLIN		;NONE OR NO MORE
  3687	004231'	205700	074000		MOVSI	P3,TYPI TYPTCS	;MESSAGE TYPE
  3688	004232'	137440	000277'		DPB	T4,WRPCHR	;CHARACTERISTIC NUMBER
  3689	004233'	135311	000031'		LDB	T1,TABTMS(T4)
  3690	004234'	137300	000300'		DPB	T1,WRPCH2	;CHARACTERISTIC VALUE
  3691	004235'	205300	400000		MOVSI	T1,(1B0)
  3692	004236'	213000	000011		MOVNS	T4
  3693	004237'	242311	000000		LSH	T1,(T4)
  3694	004240'	412305	000050		ANDCAM	T1,LDBTMT(U)	;CLEAR THE TRANSMIT BIT
  3695	004241'	135400	000157'		LDB	T3,LDPLNO
  3696	004242'	137400	000276'		DPB	T3,WRPLIN	;SET PORT NUMBER IN OUTPUT WORD
  3697	004243'	260040	004162'		PUSHJ	P,WRDOUT	;SEND IT. IF THERE'S ROOM FOR MORE,
  3698	004244'	254000	004246'		  JRST	.+2
  3699	004245'	254000	004226'		JRST	GOSTC1		;  GO SEE IF THERE'S MORE TO SEND.
  3700	004246'	332005	000050		SKIPE	LDBTMT(U)	;(NO ROOM) IF THERE WERE MORE TO DO,
  3701	004247'	254000	003330'		  JRST	FULLIN		;  SAY WE'RE NOT DONE
  3702	004250'	254000	003316'		JRST	FINLIN
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 78
SCNSER.MAC	25-JAN-91 22:40		SEND A RED BALL

  3703				SUBTTL	SEND A RED BALL
  3704
  3705	004251'	205700	036000	GOSRD:	MOVSI	P3,TYPI TYPRED
  3706	004252'	254000	004267'		JRST	FMTB
  3707
  3708				;SEND A CHARACTER GOBBLER
  3709
  3710	004253'	205700	024000	GOCGB:	MOVSI	P3,TYPI TYPGOB
  3711	004254'	254000	004267'		JRST	FMTB
  3712
  3713				;SEND A TERMINAL CHARACTERISTICS PROBE
  3714
  3715	004255'	205700	076000	GOSTP:	MOVSI	P3,TYPI TYPTCP	;PROBE
  3716	004256'	201400	000077		MOVEI	T3,TMCALL	;FOR ALL
  3717	004257'	137400	000277'		DPB	T3,WRPCHR
  3718	004260'	254000	004267'		JRST	FMTB
  3719
  3720				;SET ECHO MODE
  3721
  3722	004261'	205700	070000	GOSEC:	MOVSI	P3,TYPI TYPECN	;ECHO ON
  3723	004262'	200305	000031		MOVE	T1,LDBDCH(U)	;GET BOTH HALVES OF DCH
  3724	004263'	612300	016736'		TDNE	T1,[LDLNEC,,LDRDEM];DO WE WANT IT OFF INSTEAD?
  3725	004264'	205700	072000		MOVSI 	P3,TYPI TYPECF	;(YES)
  3726	004265'	254000	004267'		JRST	FMTB
  3727
  3728				;SEND SOFT ZAP (HANG UP PHONE, KEEP CIRCUIT)
  3729
  3730	004266'	205700	044000	GOHNG:	MOVSI	P3,TYPI TYPHNG
  3731					PFALL	FMTB
  3732
  3733				;FMTB -- CALLED WITH P3/ BYTE (8) TYPE, 0, XXX, XXX
  3734				;	 CLOSES CHARACTER MODE, RETURNING TO FULLIN IF NO ROOM,
  3735				;	 DEPOSITS PORT# INTO SECOND BYTE, TRANSMITS THE
  3736				;	 1-WORD MESSAGE, AND RETURNS TO THE OUTPUT DISPATCH
  3737				;FMTB1 -- ASSUMES CALLER HAS ALREADY DONE A CLSCHR
  3738
  3739	004267'	260040	004114'	FMTB:	PUSHJ	P,CLSCHR	;LEAVE CHARACTER MODE. IF NO MORE ROOM,
  3740	004270'	254000	003330'		  JRST	FULLIN		;  RETURN TO OUTPUT DISPATCH
  3741	004271'	135400	000157'	FMTB1:	LDB	T3,LDPLNO	;T3/ PORT #
  3742	004272'	137400	000276'		DPB	T3,WRPLIN	;DEPOSIT IT
  3743	004273'	260040	004162'		PUSHJ	P,WRDOUT	;SEND IT. ROOM FOR MORE?
  3744	004274'	254000	003316'		  JRST	FINLIN		;NO
  3745	004275'	254000	003306'		JRST	MORLIN		;YES
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 79
SCNSER.MAC	25-JAN-91 22:40		SEND BELL

  3746				SUBTTL	SEND BELL
  3747
  3748	004276'	200345	000031	GOSBL:	MOVE	T2,LDBDCH(U)
  3749	004277'	607240	002000		TLNN	U,LDLIMI	;IF IN IMAGE STATE,
  3750	004300'	602340	100000		TRNE	T2,LDRNXO	;OR USER SAYS NO XOFF/XON,
  3751	004301'	254000	003306'		JRST	MORLIN		;  AVOID SENDING BELLS
  3752	004302'	201400	000007		MOVEI	T3,7		;T3/ ASCII BELL
  3753					PFALL	COMXON
  3754
  3755				;COMXON - CALLED WITH T3/ A CHARACTER AND THE PORT OPEN FOR
  3756				;	   CHARACTER OUTPUT. DEPOSIT THE CHARACTER IN THE BUFFER
  3757				;	   RING AND RETURN TO THE OUTPUT DISPATCH
  3758
  3759	004303'	136412	016417'	COMXON:	UUIDPB	T3,CHRWRP(W)	;DEPOSIT THE CHARACTER
  3760	004304'	373012	016421'		SOSLE	MULCNT(W)
  3761	004305'	377000	016400'		SOSG	CHCNT
  3762	004306'	254000	003316'		 JRST	FINLIN		;NO ROOM FOR MORE
  3763	004307'	254000	003306'		JRST	MORLIN		;ROOM FOR MORE
  3764
  3765				;BACKPRESSURE OFF
  3766
  3767	004310'	201340	200000	GOBPF:	MOVEI	T2,LDRXOS
  3768	004311'	612345	000031		TDNE	T2,LDBDCH(U)	;IF WE SENT AN XOFF,
  3769	004312'	254000	004321'		  JRST	GOXON		;  GO SEND AN XON
  3770	004313'	260040	004114'		PUSHJ	P,CLSCHR
  3771	004314'	254000	003330'		  JRST	FULLIN		;NO ROOM FOR MESSAGE
  3772	004315'	201340	400000		MOVEI	T2,LDRBPS
  3773	004316'	412345	000031		ANDCAM	T2,LDBDCH(U)	;TURN OFF BACKPRESSURE-SENT FLAG
  3774	004317'	205700	022000		MOVSI	P3,TYPI TYPOUP	;P3/ MESSAGE TYPE
  3775	004320'	254000	004271'		JRST	FMTB1
  3776
  3777				    ;HERE TO SEND AN XON
  3778
  3779	004321'	412345	000031	GOXON:	ANDCAM	T2,LDBDCH(U)	;CLEAR BACKPRESSURE-SENT FLAG
  3780	004322'	201400	000021		MOVEI	T3,21		;T3/ ASCII XON
  3781	004323'	254000	004303'		JRST	COMXON		;GO SEND IT
  3782
  3783				;BACKPRESSURE ON
  3784
  3785	004324'	135300	000156'	GOBPN:	LDB	T1,TRMBYP	;T1/ TERMINAL ID #
  3786	004325'	322300	004330'		JUMPE	T1,GOBPN1	;IF AUX CIRCUIT (0), BACKPRESSURE
  3787	004326'	607240	002000		TLNN	U,LDLIMI	;OTHERWISE, IF NOT IMAGE STATE,
  3788	004327'	254000	004336'		  JRST	GOXOFF		;  SEND AN XOFF
  3789	004330'	260040	004114'	GOBPN1:	PUSHJ	P,CLSCHR
  3790	004331'	254000	003330'		  JRST	FULLIN		;NO ROOM FOR MESSAGE
  3791	004332'	201340	400000		MOVEI	T2,LDRBPS
  3792	004333'	436345	000031		IORM	T2,LDBDCH(U)	;SET BACKPRESSURE-SENT FLAG
  3793	004334'	205700	020000		MOVSI	P3,TYPI TYPNOP	;P3/ MESSAGE TYPE
  3794	004335'	254000	004271'		JRST	FMTB1
  3795
  3796				   ;HERE TO SEND AN XOFF
  3797
  3798	004336'	201300	100000	GOXOFF:	MOVEI	T1,LDRNXO
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 79-2
SCNSER.MAC	25-JAN-91 22:40		SEND BELL

  3799	004337'	201400	200000		MOVEI	T3,LDRXOS
  3800	004340'	616405	000031		TDNN	T3,LDBDCH(U)	;IF WE'VE ALREADY SENT ONE XOFF
  3801	004341'	612305	000031		TDNE	T1,LDBDCH(U)	;OR IF WE MUSTN'T SEND ANY,
  3802	004342'	254000	003306'		  JRST	MORLIN		;  JUST SAY WE'VE DONE IT
  3803	004343'	436405	000031		IORM	T3,LDBDCH(U)	;SET XOFF-SENT FLAG
  3804	004344'	201400	000023		MOVEI	T3,23		;T3/ ASCII XOFF
  3805	004345'	254000	004303'		JRST	COMXON		;GO SEND IT
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 80
SCNSER.MAC	25-JAN-91 22:40		SEND CIRCUIT ZAPPER

  3806				SUBTTL	SEND CIRCUIT ZAPPER
  3807
  3808	004346'	205300	000400	GOZAP:	MOVSI	T1,L2LOWT
  3809	004347'	616305	000027		TDNN	T1,LDBBYT(U)	;IF SOMEONE'S WAITING FOR ORANGE BALL
  3810	004350'	332005	000005		SKIPE	LDBBIO(U)	;OR IF BLOCK I/O NEEDS CLEANING-UP,
  3811	004351'	254000	003324'		 JRST	WATLIN		;  WAIT
  3812	004352'	260040	004114'		PUSHJ	P,CLSCHR	;LEAVE CHAR MODE. SKIP IF ROOM.
  3813	004353'	254000	003330'		  JRST	FULLIN		;  MUST WAIT OR NO ROOM
  3814	004354'	550300	000005		HRRZ	T1,U
  3815	004355'	312300	016405'		CAME	T1,OPRLDB	;Check if zapping OPR terminal
  3816	004356'	254000	004367'		 JRST	NOTOPR
  3817	004357'	402000	016405'		SETZM	OPRLDB
  3818	004360'	402000	000000*		SETZM	DEVOPR
  3819	004361'	260040	014527'		PUSHJ	P,OPRFRE	;No more OPR
  3820	004362'	201300	400000		MOVEI	T1,STSHUT	;400000
  3821	004363'	612300	002041*		TDNE	T1,STATES	;IS SYSTEM SHUT?
  3822	004364'	254000	004367'		 JRST	NOTOPR		;YES
  3823	004365'	201300	000132		MOVEI	T1,^D90
  3824	004366'	202300	016413'		MOVEM	T1,OPRTIM	;NO, SET TIMER FOR UNHAPPY MSG
  3825	004367'	607240	040040	NOTOPR:	TLNN	U,LDLAUX!LDLPTY	;THIS ONE WAS NOT COUNTED ANYWAY
  3826	004370'	331005	000026		SKIPL	LDBLOG(U)
  3827	004371'	254000	004377'		 JRST	NOTLIN		;NOT REALLY IN
  3828	004372'	201300	200000		MOVEI	T1,STSUPR	;200000
  3829	004373'	377000	016412'		SOSG	INTERM
  3830	004374'	332000	016471'		SKIPE	DWNFLG
  3831	004375'	334000	000000		 SKIPA			;DO NOT RESET IF COMING DOWN
  3832	004376'	412300	004363*		ANDCAM T1,STATES	;CAN'T BE SUPER SHUT WITH EVERYONE GONE
  3833	004377'			NOTLIN:
  3834					;Here to put ZAP message in the ORING
  3835
  3836	004377'	403305	000026		SETZB	T1,LDBLOG(U)	;CLEAR LOGGED IN INFO
  3837	004400'	137300	000160'		DPB	T1,LDPHST	;Clear origination host
  3838	004401'	402005	000030		SETZM	LDBMOD(U)	;RESET MODE TO LOGIN MODE
  3839	004402'	260040	006324'		PUSHJ	P,TSETBO	;Flush output buffer (free TTY chunks)
  3840	004403'	260040	006276'		PUSHJ	P,TSETBI	;ALSO CLEAR INPUT BUFFER
  3841	004404'	200305	000001		MOVE	T1,LDBLIN(U)
  3842	004405'	623300	400000		TLZE	T1,LNLZIN
  3843	004406'	350000	016524'		 AOS	NZAPOT		;AN IN-ZAP WAS RESPONDED TO
  3844	004407'	202305	000001		MOVEM	T1,LDBLIN(U)
  3845	004410'	403305	000003		SETZB	T1,LDBOUT(U)	;Cancel LOPCGB that was set by TSETBO
  3846	004411'	137305	000002		DPB	T1,LDBOPB(U)	;NOTHING MORE TO DO ON OUTPUT
  3847	004412'	205700	026000		MOVSI	P3,TYPI TYPZAP
  3848	004413'	135340	000157'		LDB	T2,LDPLNO
  3849	004414'	137340	000276'		DPB	T2,WRPLIN	;Port # in 2nd byte
  3850	004415'	301340	003220*		CAIL	T2,RPORTN##	;(if RPORTN=200, then only 0-177 are legal)
  3851	004416'	256000	000000'		 STOPCD 		;CRASH- ZAPPING BEYOND HIGHEST REAL PORT
  3852	004417'	260040	004162'		PUSHJ	P,WRDOUT	;Store in ORING
  3853	004420'	255000	000000		  JFCL			;Don't care if ORING is now full
  3854	004421'	254000	003316'		JRST	FINLIN		;NOBODY LEFT TO TALK TO
  3855
  3856	004422'	550300	000005	CLRTTY:	HRRZ	T1,U		;FALSE ZAP STUFF FOR REAL TTYs
  3857	004423'	312300	016405'		CAME	T1,OPRLDB
  3858	004424'	254000	004435'		 JRST	NTTOPR
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 80-2
SCNSER.MAC	25-JAN-91 22:40		SEND CIRCUIT ZAPPER

  3859	004425'	402000	016405'		SETZM	OPRLDB		;OPR terminal has been zapped
  3860	004426'	402000	004360*		SETZM	DEVOPR
  3861	004427'	260040	014527'		PUSHJ	P,OPRFRE
  3862	004430'	201300	400000		MOVEI	T1,STSHUT	;400000
  3863	004431'	612300	004376*		TDNE	T1,STATES	;IS SYSTEM SHUT?
  3864	004432'	254000	004435'		 JRST	NTTOPR		;YES
  3865	004433'	201300	000132		MOVEI	T1,^D90
  3866	004434'	202300	016413'		MOVEM	T1,OPRTIM	;NO, SET TIMER FOR UNHAPPY MSG
  3867	004435'	607240	000040	NTTOPR:	TLNN	U,LDLAUX	;THIS ONE WAS NOT COUNTED ANYWAY
  3868	004436'	331005	000026		SKIPL	LDBLOG(U)
  3869	004437'	254000	004445'		 JRST	CLRPTY		;NOT REALLY IN
  3870	004440'	201300	200000		MOVEI	T1,STSUPR	;200000
  3871	004441'	377000	016412'		SOSG	INTERM
  3872	004442'	332000	016471'		SKIPE	DWNFLG
  3873	004443'	334000	000000		 SKIPA			;DO NOT RESET IF COMING DOWN
  3874	004444'	412300	004431*		  ANDCAM T1,STATES	;CAN'T BE SUPER SHUT WITH EVERYONE GONE
  3875	004445'			CLRPTY:				;FALSE ZAP ENTRY FOR PTYs
  3876	004445'	403305	000026		SETZB	T1,LDBLOG(U)	;CLEAR LOGGED IN INFO
  3877	004446'	137300	000160'		DPB	T1,LDPHST	;Clear origination host number
  3878	004447'	402005	000030		SETZM	LDBMOD(U)	;RESET MODE TO LOGIN MODE
  3879	004450'	260040	006324'		PUSHJ	P,TSETBO
  3880	004451'	260040	006276'		PUSHJ	P,TSETBI	;ALSO CLEAR INPUT
  3881	004452'	200305	000001		MOVE	T1,LDBLIN(U)
  3882	004453'	623300	400000		TLZE	T1,LNLZIN
  3883	004454'	350000	016524'		 AOS	NZAPOT		;AN IN-ZAP WAS RESPONDED TO
  3884	004455'	202305	000001		MOVEM	T1,LDBLIN(U)
  3885	004456'	403305	000003		SETZB	T1,LDBOUT(U)	;CLEAR 'SEND SPECIAL MESSAGE' FLAGS
  3886	004457'	137305	000002		DPB	T1,LDBOPB(U)	;NOTHING MORE TO DO ON OUTPUT
  3887	004460'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 81
SCNSER.MAC	25-JAN-91 22:40		HERE ON A DETECTED ZAPPER ANOMALY TO STORE STUFF ABOUT THE PORT

  3888				SUBTTL	HERE ON A DETECTED ZAPPER ANOMALY TO STORE STUFF ABOUT THE PORT
  3889
  3890	004461'	000000	000000	ZBGBUG:	0	;ADDRESS OF THE COUNT INCREMENTED
  3891	004462'	000000	000000	ZBGPC:	0	;Where problem was detected
  3892	004463'	000000	000000	ZBGLIN:	0	;LDBLIN OF THE OFFENDING PORT
  3893	004464'	000000	000000	ZBGDCH:	0	;LDBDCH
  3894	004465'	000000	000000	ZBGDDB:	0	;LDBDDB
  3895	004466'	000000	000000	ZBGOUT:	0	;LDBOUT
  3896	004467'	000000	000000	ZBGBIT:	0	;OUTPUT BIT
  3897	004470'	000000	000000	ZBGBYT:	0	;LDBBYT
  3898	004471'	000000	000000	ZBGMOD:	0	;LDBMOD
  3899	004472'	000000	000000	ZBGDCX:	0	;LDBDCX
  3900	004473'	000000	000000	ZBGLOG:	0	;LDBLOG
  3901	004474'	000000	000000		0
  3902	004475'	000000	000000		0
  3903	004476'	000000	000000		0
  3904	004477'	000000	000000		0
  3905
  3906	004500'	256000	016737'	ZAPBUG:	 STOPCD (.+1,INFO,ZAPBUG,,<Port not Zapped - *BUG*>)
  3907	004501'	261040	000007	ZAPBG0:	PUSH	P,T2
  3908	004502'	551340	004460'		HRRZI	T2,ZBGBUG-1	;(PDL POINTER)
  3909	004503'	261340	000006		PUSH	T2,T1		;STORE THE COUNTER'S ADDRESS
  3910	004504'	350006	000000		AOS	(T1)		;INCREMENT THE COUNTER
  3911	004505'	261341	777777		PUSH	T2,-1(P)	;RETURN PC
  3912	004506'	261345	000001		PUSH	T2,LDBLIN(U)
  3913	004507'	261345	000031		PUSH	T2,LDBDCH(U)
  3914	004510'	261345	000000		PUSH	T2,LDBDDB(U)
  3915	004511'	261345	000003		PUSH	T2,LDBOUT(U)
  3916	004512'	135305	000002		LDB	T1,LDBOPB(U)
  3917	004513'	261340	000006		PUSH	T2,T1
  3918	004514'	261345	000027		PUSH	T2,LDBBYT(U)
  3919	004515'	261345	000030		PUSH	T2,LDBMOD(U)
  3920	004516'	261345	000026		PUSH	T2,LDBLOG(U)
  3921	004517'	255000	000000	ZAPBG1:	JFCL
  3922	004520'	255000	000000		JFCL
  3923	004521'	255000	000000		JFCL
  3924	004522'	255000	000000		JFCL
  3925	004523'	255000	000000		JFCL
  3926	004524'	255000	000000		JFCL
  3927	004525'	262040	000007		POP	P,T2
  3928	004526'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 82
SCNSER.MAC	25-JAN-91 22:40		BLOCK I/O MESSAGE ROUTINES

  3929				SUBTTL BLOCK I/O MESSAGE ROUTINES
  3930
  3931				;BLOCK INPUT
  3932
  3933	004527'	260040	004571'	GOBIN:	PUSHJ	P, GOBIO1	;INITIAL SETUP
  3934	004530'	254000	003330'		  JRST	FULLIN		;NO ROOM
  3935	004531'	550405	000005		HRRZ	T3, LDBBIO(U)	;T3/ INPUT BUFFER ADDR
  3936				IFCPU (KL),<
  3937	004532'	200310	000001		MOVE	T1, BIOCSH(T3)	;T1/ SWEEP NUMBER
  3938	004533'	312300	000000*		CAME	T1, CSUCNT##	;UNLOAD ALREADY DONE?
  3939					JRST	[
  3940						AOS CSHSAV##	;PAT OURSELVES ON THE BACK
  3941						JRST GOBIN1
  3942	004534'	254000	016742'		]
  3943	004535'	260040	000000*		CSHUNL			;UNLOAD THE CACHE
  3944	004536'	316300	004533*		CAMN	T1, CSUCNT##
  3945	004537'	254000	004536'		 JRST	.-1		;WAIT 'TIL IT'S DONE
  3946	004540'			GOBIN1:>;END IFCPU (KL)
  3947				IFCPU (KS),<CSHIVL>		;INVALIDATE 2020 CACHE
  3948	004540'	205700	114000		MOVSI	P3, TYPI TYPBIN	;P3/ MESSAGE TYPE
  3949	004541'	260040	004601'		PUSHJ	P, GOBIO2	;OUTPUT THE MESSAGE
  3950	004542'	254000	003316'		  JRST	FINLIN		;(NO ROOM FOR MORE)
  3951	004543'	254000	003306'		JRST	MORLIN		;(ROOM FOR MORE)
  3952
  3953				;BLOCK OUTPUT
  3954
  3955	004544'	256000	000000'	GOBOP:	 STOPCD		;(PTYS ONLY)
  3956	004545'	260040	004571'	GOBOT:	PUSHJ	P, GOBIO1	;INITIAL SETUP
  3957	004546'	254000	003330'		  JRST	FULLIN		;NO ROOM
  3958				;"/Patch to check for prior circuit zap on BIO port before output/
  3959	004547'	554405	000005		HLRZ	T3, LDBBIO(U)	;T3/ OUTPUT BUFFER ADDR
  3960	004550'	326400	004555'		JUMPN	T3,GOBOT3	;Must be nonzero
  3961	004551'	205400	400000		MOVSI	T3,LNLZIN	;Has a zapper been seen in the IRING?
  3962	004552'	616405	000001		TDNN	T3,LDBLIN(U)	; ...
  3963	004553'	256000	016744'		 STOPCD (.+1,INFO,BIOZAD,,<Block I/O with Zero Address>);GOBOT+3
  3964	004554'	254000	003316'		JRST	FINLIN		;Say "no room", so zapper can be processed
  3965	004555'			GOBOT3:
  3966				IFCPU (KL),<
  3967	004555'	200310	000001		MOVE	T1, BIOCSH(T3)	;T1/ SWEEP NUMBER
  3968	004556'	312300	000000*		CAME	T1, CSVCNT##	;IF A SWEEP'S ALREADY BEEN DONE,
  3969					 JRST	[
  3970						AOS CSHSAV##	;PAT OURSELVES ON THE BACK
  3971						JRST GOBOT1
  3972	004557'	254000	016747'		]
  3973	004560'	260040	000000*		CSHVAL			;START VALIDATE
  3974	004561'	316300	004556*		CAMN	T1, CSVCNT##
  3975	004562'	254000	004561'		JRST	.-1		;AND WAIT 'TIL IT'S DONE
  3976	004563'			GOBOT1:>;END IFCPU (KL)
  3977	004563'	205300	400000		MOVSI	T1, LDLNOP
  3978	004564'	436305	000031		IORM	T1, LDBDCH(U)	;PREVENT FUTURE OUTPUT UNTIL
  3979								;BLOCK OUTPUT IS COMPLETE
  3980	004565'	205700	110000		MOVSI	P3, TYPI TYPBKO	;P3/ MESSAGE TYPE
  3981	004566'	260040	004601'		PUSHJ	P, GOBIO2	;OUTPUT THE MESSAGE
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 82-2
SCNSER.MAC	25-JAN-91 22:40		BLOCK I/O MESSAGE ROUTINES

  3982	004567'	254000	003316'		  JRST	FINLIN		;(NO ROOM FOR MORE)
  3983	004570'	254000	003316'		JRST	FINLIN		;(ROOM FOR MORE BUT CLAIM THERE ISN'T)
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 83
SCNSER.MAC	25-JAN-91 22:40		GOBIO1 - CLOSE CHARACTER OUTPUT, THEN SKIP IF THERE ARE

  3984				SUBTTL	GOBIO1 - CLOSE CHARACTER OUTPUT, THEN SKIP IF THERE ARE
  3985				;	   AT LEAST 2 FREE WORDS IN THE OUTPUT RING
  3986
  3987	004571'	260040	004114'	GOBIO1:	PUSHJ	P,CLSCHR	;CLOSE CHARACTER MODE
  3988	004572'	263040	000000		  POPJ	P,		;NO ROOM
  3989	004573'	200300	004214*		MOVE	T1,ORPPDP
  3990	004574'	271300	000002		ADDI	T1,2
  3991	004575'	405300	004213*		ANDI	T1,MSKORG	;T1/ (PDP PTR + 2) MOD RING SIZE
  3992	004576'	312300	004143*		CAME	T1,ORP620
  3993	004577'	350001	000000		AOS	(P)		;ENOUGH ROOM
  3994	004600'	263040	000000		POPJ	P,
  3995
  3996				;GOBIO2 - CALLED WITH T3/ BUFFER ADDR
  3997				;		       P3/ BYTE (8) TYPE, 0, 0, 0
  3998				;	   DEPOSIT THE PORT# AND BUFFER ADDRESS APPROPRIATELY,
  3999				;	   OUTPUT THE BLOCK INPUT/OUTPUT MESSAGE,
  4000				;	   SKIP-RETURN IF THERE'S ROOM FOR MORE
  4001
  4002	004601'	135300	000157'	GOBIO2:	LDB	T1,LDPLNO	;T1/ PORT#
  4003	004602'	137300	000276'		DPB	T1,WRPLIN	;DEPOSIT IT
  4004	004603'	550310	000005		HRRZ	T1,BIOCHR(T3)	;T1/ CHARACTER COUNT
  4005	004604'	137300	016751'		DPB	T1,[POINT ^D16, P3, BYP4]
  4006	004605'	202717	004202*		MOVEM	P3,ORING(P4)
  4007	004606'	260040	016267'		PUSHJ	P,ORPLOG	;Put message into ORING log
  4008	004607'	271740	000001		ADDI	P4,1
  4009	004610'	405740	004575*		ANDI	P4,MSKORG
  4010	004611'	400700	000000		SETZ	P3,
  4011				IFKMC<
  4012					EXTERNAL UBANXT,UBAEND	;OUR UBA SPACE IS BETWEEN THESE TWO
  4013					UBABIO==<763000!<<UBANXT+1>&776>>;START UBA's BLOCK I/O PAGING RAM
  4014					MOVEI	T1,(T3)		;T1/ BUFFER ADDRESS
  4015					PUSHJ	P,SCANBB	;FIND UBA PAGE MATCHING T1
  4016						 STOPCD		;THERE HAS TO BE ONE AT THIS POINT
  4017					ADDI	T2,UBABIO&77	;UBAPAG# + Low 6 BITS OF UBA ADDRESS
  4018					DPB	T2,[POINT 11,T1,26]	;PAGE # OVERLAYS HIGH 11 BITS
  4019					ADDI	T1,BIODAT		;Offset to first Char address
  4020					DPB	T1,[POINT 8,P3,BYP3]	;LOW 8 BITS TO 3RD BYTE POS.
  4021					LSH	T1,-8			;SHIFT TO HIGH 10 BITS
  4022					DPB	T1,[POINT 10,P3,BYP2]	;THE REST IN BYTES 1 & 2
  4023					>;END IFKMC
  4024				IFNKMC<
  4025	004612'	201310	000006		MOVEI	T1,BIODAT(T3)	;T1/ FIRST-CHARACTER ADDR
  4026				IFNCPU (KI),<
  4027	004613'	257306	000000		MAP	T1,(T1)	;GET PHYSICAL ADDRESS
  4028	004614'	137300	016752'		DPB	T1,[POINT 18,P3,23] ;PUT IT IN
  4029				>;END IFNCPU (KI)
  4030				>;END IFNKMC
  4031				IFCPU (KI),<
  4032					DPB	T1,[POINT 9,P3,23] ;PUT IN LOW 9 BITS, MAP SMASHES THEM
  4033					MAP	T1,(T1)		;GET PAGE NUMBER
  4034					DPB	T1,[POINT 9,P3,14] ;PUT IN HIGH 9 BITS.
  4035				>;END IFCPU (KI)
  4036	004615'	324740	004200'		PJRST	WRDOT2
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 83-2
SCNSER.MAC	25-JAN-91 22:40		GOBIO1 - CLOSE CHARACTER OUTPUT, THEN SKIP IF THERE ARE

  4037
  4038				;TERMINATE BLOCK OUTPUT
  4039
  4040	004616'	260040	004114'	GOTRO:	PUSHJ	P,CLSCHR	;LEAVE CHARACTER MODE. IF NO ROOM,
  4041	004617'	254000	003330'		JRST	FULLIN		;  RETURN TO OUTPUT DISPATCH
  4042	004620'	205300	400000		MOVSI	T1,LDLNOP
  4043	004621'	436305	000031		IORM	T1,LDBDCH(U)	;SET BACKPRESSURE
  4044	004622'	205700	130000		MOVSI	P3,TYPI TYPORQ	;SEND OUTPUT TERMINATION REQUEST
  4045	004623'	254000	004271'		JRST	FMTB1
  4046
  4047				;TERMINATE BLOCK INPUT
  4048
  4049	004624'	205700	124000	GOTRI:	MOVSI	P3,TYPI TYPIRQ	;SET UP BLOCK TERMINATION REQ
  4050	004625'	254000	004267'		JRST	FMTB
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 84
SCNSER.MAC	25-JAN-91 22:40		RUBOUT STRING/OUTPUT CHARACTER HANDLERS

  4051				SUBTTL RUBOUT STRING/OUTPUT CHARACTER HANDLERS
  4052
  4053				;SEND RUBOUT CHARACTERS
  4054
  4055	004626'			PGRUB:
  4056	004626'	336005	000025	GORUB:	SKIPN	LDBRBC(U)
  4057	004627'	254000	003306'		 JRST	MORLIN		;NO RUBOUT CHARACTERS
  4058	004630'	634600	000014		TDZA	P1,P1		;P1 := -1 IF PRCOUT RUNS OUT OF ROOM
  4059	004631'	254000	003330'		 JRST	FULLIN		;OUT OF ROOM
  4060	004632'	200345	000024	CNTRUB:	MOVE	T2,LDBRBO(U)
  4061	004633'	260040	006171'		PUSHJ	P,TTGETC	;GET A CHAR. IF DONE WITH THE CHUNK,
  4062	004634'	260040	006252'		  PUSHJ	P,FRECHK	;  FREE IT
  4063	004635'	202345	000024		MOVEM	T2,LDBRBO(U)
  4064	004636'	260040	005346'		PUSHJ	P,PRCOUT	;PRINT THE CHARACTER
  4065					  JRST	[		;NO ROOM
  4066						ADDM	T3,LDBRBO(U)
  4067						JRST	FULLIN
  4068	004637'	254000	016753'		  ]
  4069	004640'	373005	000025		SOSLE	LDBRBC(U)	;IF THERE'RE MORE CHARACTERS,
  4070	004641'	254014	004632'		 JRST	CNTRUB(P1)	;  KEEP GOING IF THERE'S ROOM
  4071
  4072				    ;HERE WHEN THERE'RE NO MORE RUBOUT CHARACTERS
  4073
  4074	004642'	402005	000023		SETZM	LDBRBI(U)
  4075	004643'	332345	000024		SKIPE	T2,LDBRBO(U)	;Pointer to last chunk used in rubout string
  4076	004644'	260040	006071'		 PUSHJ	P,FREUP
  4077	004645'	402005	000024		SETZM	LDBRBO(U)	;CLEAN UP THE BUFFERLETS
  4078	004646'	321600	003316'		JUMPL	P1,FINLIN	;NO ROOM
  4079	004647'	254000	003306'		JRST	MORLIN		;MORE ROOM
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 85
SCNSER.MAC	25-JAN-91 22:40		SEND OUTPUT CHARACTERS

  4080				SUBTTL	SEND OUTPUT CHARACTERS
  4081
  4082	004650'			PGOUT:
  4083	004650'	336005	000021	GOOUT:	SKIPN	LDBTOC(U)
  4084	004651'	254000	003306'		 JRST	MORLIN
  4085	004652'	634600	000014		TDZA	P1,P1		;P1 := -1 IF PRCOUT RUNS OUT OF ROOM
  4086	004653'	254000	004673'		 JRST	CLNOC
  4087	004654'	200345	000020	CNTOUT:	MOVE	T2,LDBTOT(U)
  4088	004655'	260040	006171'		PUSHJ	P,TTGETC	;GET A CHAR. IF DONE WITH BUFFERLET,
  4089	004656'	260040	006252'		  PUSHJ	P,FRECHK	;  FREE IT
  4090	004657'	202345	000020		MOVEM	T2,LDBTOT(U)
  4091	004660'	260040	005346'		PUSHJ	P,PRCOUT	;PRINT THE CHARACTER
  4092					 JRST	[		;OUT OF ROOM
  4093						ADDM T3,LDBTOT(U)
  4094						JRST CLNOCP
  4095	004661'	254000	016755'		 ]
  4096	004662'	373345	000021		SOSLE	T2,LDBTOC(U)	;IF THERE'RE MORE CHARACTERS,
  4097	004663'	254014	004654'		 JRST	CNTOUT(P1)	;  CONTINUE IF THERE'S ROOM
  4098
  4099				    ;HERE WHEN THERE'RE NO MORE OUTPUT CHARACTERS
  4100
  4101	004664'	260040	006145'		PUSHJ	P,XMTWAK	;WAKE THE JOB UP
  4102	004665'	550340	000005		HRRZ	T2,U
  4103	004666'	316340	016405'		CAMN	T2,OPRLDB	;IS THIS OPR?
  4104	004667'	260040	014527'		 PUSHJ	P,OPRFRE	;RESTART WAITERS FOR SETUUO
  4105	004670'	321600	003316'		JUMPL	P1,FINLIN	;NO MORE ROOM
  4106	004671'	254000	003306'		JRST	MORLIN		;MORE ROOM
  4107
  4108				    ;HERE WHEN CHARACTER OUTPUT RUNS OUT OF ROOM TO DECIDE
  4109				    ;WHETHER TO WAKE THE JOB UP NOW
  4110
  4111	004672'	200345	000021	CLNOCP:	MOVE	T2,LDBTOC(U)
  4112	004673'	335005	000032	CLNOC:	SKIPGE	LDBDCX(U)	;IF IT'S A FAST LINE,
  4113	004674'	311340	016505'		CAML	T2,OWK120	;AND UNDER THE FAST MINIMUM,
  4114	004675'	315340	016503'		CAMGE	T2,OWK30	;OR IF IT'S UNDER THE SLOW MINIMUM,
  4115	004676'	260040	006145'		 PUSHJ	P,XMTWAK	;  WAKE THE JOB UP
  4116	004677'	254000	003330'		JRST	FULLIN
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 86
SCNSER.MAC	25-JAN-91 22:40		ECHO LOGIC

  4117				SUBTTL ECHO LOGIC
  4118
  4119				;YELLOW BALL
  4120
  4121	004700'	260040	004114'	GOSYL:	PUSHJ	P,CLSCHR	;LEAVE CHARACTER MODE
  4122	004701'	254000	003330'		  JRST	FULLIN		;NO ROOM
  4123	004702'	205300	000400		MOVSI	T1,L2LOWT
  4124	004703'	436305	000027		IORM	T1,LDBBYT(U)	;SAY WE'RE WAITING
  4125	004704'	205300	002000		MOVSI	T1,L2LOWS
  4126	004705'	412305	000027		ANDCAM	T1,LDBBYT(U)	;AND THAT WE HAVEN'T SEEN ONE
  4127	004706'	205700	040000		MOVSI	P3,TYPI TYPYEL
  4128	004707'	254000	004271'		JRST	FMTB1
  4129
  4130				;GREEN (GOSGR) AND ORANGE (GOSOG) BALLS
  4131
  4132	004710'	205700	034000	GOSGR:	MOVSI	P3,TYPI TYPGRN
  4133	004711'	334000	000000		SKIPA
  4134	004712'	205700	042000	GOSOG:	MOVSI	P3,TYPI TYPORG
  4135	004713'	205340	004000		MOVSI	T2,L2LDEL
  4136	004714'	616345	000027		TDNN	T2,LDBBYT(U)	;IF WE'RE IN \...
  4137	004715'	260040	004720'		 PUSHJ	P,WTCHK		;OR IF WE'RE NOT IN INPUT WAIT,
  4138	004716'	254000	003324'		  JRST	WATLIN		;  WAIT
  4139	004717'	254000	004267'		JRST	FMTB		;GO SEND IT
  4140
  4141				;WTCHK - SKIP IF TTY IN INPUT WAIT
  4142
  4143	004720'	603240	020000	WTCHK:	TLNE	U,LDLCOM
  4144	004721'	254000	000000*		 JRST	CMDCKW##	;SPECIAL CHECK IF AT COMMAND LEVEL
  4145				;	HRRZ	T1,LDBBIO(U)
  4146				;	JUMPN	T1,CPOPJ
  4147	004722'	205200	010000		MOVSI	F,L2LLDF
  4148	004723'	612205	000027		TDNE	F,LDBBYT(U)	;IF LEAVE DEF ECHO BIT ON
  4149	004724'	254000	004215*		 JRST	CPOPJ1		;ALWAYS GET OUT
  4150	004725'	550205	000000		HRRZ	F,LDBDDB(U)
  4151	004726'	322200	004724*		JUMPE	F,CPOPJ1	;NO JOB, TAKE A CHANCE
  4152	004727'	200004	000002		MOVE	S,DEVIOS(F)
  4153	004730'	602000	010000		TRNE	S,IOACT
  4154	004731'	603000	400000		TLNE	S,TTYOUW
  4155	004732'	263040	000000		 POPJ	P,		;NOT IN WAIT OR IN OUTPUT WAIT
  4156	004733'	254000	004726*		JRST	CPOPJ1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 87
SCNSER.MAC	25-JAN-91 22:40		ECHO CHARACTER OUTPUT

  4157				SUBTTL	ECHO CHARACTER OUTPUT
  4158
  4159	004734'			PGECO:
  4160	004734'	336005	000014	GOECO:	SKIPN	LDBECC(U)
  4161	004735'	254000	003306'		 JRST	MORLIN		;NO CHARACTERS
  4162	004736'	260040	004720'		PUSHJ	P,WTCHK		;IF WE AREN'T IN INPUT WAIT,
  4163					  JRST	[JUMPL	U,GOLIN3	;Don't wake if backpressured
  4164	004737'	254000	016757'			 JRST WATLIN]		;  WAIT UNTIL WE ARE
  4165	004740'	634600	000014		TDZA	P1,P1		;THIS USED THE SAME TRICK AS OUTPUT
  4166	004741'	254000	003330'		 JRST	FULLIN		;WILL GET HERE WHEN OUT OF ROOM
  4167	004742'	200345	000013	CNTECO:	MOVE	T2,LDBECT(U)
  4168	004743'	260040	006171'		PUSHJ	P,TTGETC
  4169	004744'	255000	000000		 JFCL			;DON'T CARE ABOUT BOUNDARIES
  4170	004745'	202345	000013		MOVEM	T2,LDBECT(U)
  4171	004746'	602400	000400		TRNE	T3,400
  4172					 JRST	[MOVEI T1,5	;SET MODE 5 FOR IMAGE CHR
  4173	004747'	254000	016761'			JRST ECHRPT]
  4174	004750'	602400	000200		TRNE	T3,200
  4175	004751'	334710	000112'		 SKIPA	P3,CHRTAB-200(T3)
  4176	004752'	200710	000312'		MOVE	P3,CHRTAB(T3)
  4177	004753'	135300	000306'		LDB	T1,CHPECH	;GET ECHO TYPE
  4178	004754'	135340	000201'	ECHRPT:	LDB	T2,LDPMEC	;AND LINE MODE
  4179	004755'	256006	004766'		XCT	ECHTAB(T1)	;USUALLY LOADS T1 WITH ADDRESS
  4180	004756'	254006	000000		JRST	(T1)		;GO THERE
  4181
  4182				;HERE WHEN THERE'S NOT ENOUGH OUTPUT RING SPACE: BACK UP
  4183				;THE ECHO POINTER AND REPORT NON-COMPLETION TO THE DISPATCHER
  4184
  4185	004757'	272405	000013	ECHBAK:	ADDM	T3,LDBECT(U)	;BACK UP POINTER
  4186	004760'	254000	003330'		JRST	FULLIN
  4187
  4188				;HERE TO SEE IF THERE ARE MORE CHARACTERS TO BE ECHOED
  4189
  4190	004761'	373005	000014	ECHLST:	SOSLE	LDBECC(U)	;IF THERE ARE MORE TO ECHO,
  4191	004762'	254014	004742'		 JRST	CNTECO(P1)	;  CONTINUE
  4192	004763'	321600	003316'		JUMPL	P1,FINLIN	;OTHERWISE, IF THERE'S OUTPUT RING SPACE,
  4193	004764'	260040	013534'		PUSHJ	P,BPXOFF	;  CLEAR BACKPRESSURE (WHY NOW?)
  4194	004765'	254000	003306'		JRST	MORLIN		;  AND RETURN TO OUTPUT DISPATCH
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 88
SCNSER.MAC	25-JAN-91 22:40		ECHO DISPATCH TABLES

  4195				SUBTTL	ECHO DISPATCH TABLES
  4196
  4197	004766'	254000	005133'	ECHTAB:	JRST ECHSPA		; 0 - SPECIAL ACTION
  4198	004767'	554307	004776'		HLRZ T1,ECHT12(T2)	; 1 - NONBREAK: PRINT & COUNT
  4199	004770'	550307	004776'		HRRZ T1,ECHT12(T2)	; 2 - BREAK: NO PRINT, NO COUNT
  4200	004771'	554307	005002'		HLRZ T1,ECHT34(T2)	; 3 - BREAK: PRINT, NO COUNT
  4201	004772'	550307	005002'		HRRZ T1,ECHT34(T2)	; 4 - BREAK2: PRINT & COUNT
  4202	004773'	554307	005006'		HLRZ T1,ECHT56(T2)	; 5 - IMAGE MODE CHARACTER
  4203	004774'	550307	005006'		HRRZ T1,ECHT56(T2)	; 6 - BREAK: PRINT & COUNT
  4204	004775'	550307	005012'		HRRZ T1,ECHT7(T2)	; 7 - BREAK2: NO PRINT, NO COUNT
  4205
  4206	004776'	005016'	005030'	ECHT12:	EACT1,,EACT2	; 0 - COMMAND MODE
  4207	004777'	005060'	005106'		EACT6,,EACT12	; 1 - BREAK-ON-ALL
  4208	005000'	005046'	005106'		EACT10,,EACT12	; 2 - BREAK NORMALLY
  4209	005001'	005046'	005106'		EACT10,,EACT12	; 3 - BREAK-ON-PUNCTUATION
  4210
  4211	005002'	005034'	005036'	ECHT34:	EACT3,,EACT4
  4212	005003'	005111'	005115'		EACT13,,EACT14
  4213	005004'	005111'	005124'		EACT13,,EACT15
  4214	005005'	005111'	005115'		EACT13,,EACT14
  4215
  4216	005006'	005043'	005026'	ECHT56:	EACT5,,EACT16
  4217	005007'	005076'	005102'		EACT7,,EACT17
  4218	005010'	005066'	005102'		EACT11,,EACT17
  4219	005011'	005066'	005102'		EACT11,,EACT17
  4220
  4221	005012'	000000	005040'	ECHT7:	EAC4A
  4222	005013'	000000	005121'		EAC14A
  4223	005014'	000000	005130'		EAC15A
  4224	005015'	000000	005121'		EAC14A
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 89
SCNSER.MAC	25-JAN-91 22:40		COMMAND MODE

  4225				SUBTTL	COMMAND MODE
  4226
  4227				;NONBREAK: PRINT & COUNT
  4228
  4229	005016'	260040	005314'	EACT1:	PUSHJ P,EPCOUT	;DO THE NORMAL OUTPUT THING
  4230	005017'	254000	004757'		 JRST ECHBAK	;MUST BACK UP
  4231	005020'	350445	000012	EACT1B:	AOS T4,LDBTIC(U)
  4232	005021'	305440	000110		CAIGE T4,TIWKC	;ENOUGH TO WAKE UP
  4233	005022'	254000	004761'		 JRST ECHLST	;NO, CHECK MORE CHRS
  4234	005023'	260040	013554'	EACT1A:	PUSHJ P,CMDWAK	;WAKE COMMAND
  4235	005024'	370005	000014		SOS LDBECC(U)	;DECREASE COUNT
  4236	005025'	254000	003324'		JRST WATLIN	;NO MORE ECHO UNTIL WE'RE IN WAIT AGAIN
  4237
  4238				;BREAK: PRINT & COUNT
  4239
  4240	005026'	260040	005314'	EACT16:	PUSHJ P,EPCOUT
  4241	005027'	254000	004757'		 JRST ECHBAK
  4242
  4243				;BREAK: NO PRINT, NO COUNT
  4244
  4245	005030'	561300	000001	EACT2:	HRROI T1,1	;-1 FOR LEFT HALF 1 FOR RIGHT HALF
  4246	005031'	272305	000015		ADDM T1,LDBBKC(U)
  4247	005032'	350005	000012		AOS LDBTIC(U)
  4248	005033'	254000	005023'		JRST EACT1A	;GO WAKE UP
  4249
  4250				;BREAK: PRINT, NO COUNT
  4251
  4252	005034'	260040	005323'	EACT3:	PUSHJ	P,E1IDPB	;OUTPUT IF NOT BACKPRESSURED
  4253	005035'	254000	005030'		JRST EACT2
  4254
  4255				;(EACT4)  BREAK2: PRINT & COUNT
  4256				;(EACT4A) BREAK2: NO PRINT, NO COUNT
  4257
  4258	005036'	260040	005314'	EACT4:	PUSHJ P,EPCOUT
  4259	005037'	254000	004757'		 JRST ECHBAK
  4260	005040'	561300	000001	EAC4A:	HRROI T1,1
  4261	005041'	272305	000016		ADDM T1,LDBBK2(U)
  4262	005042'	254000	005020'		JRST EACT1B
  4263
  4264				;IMAGE
  4265
  4266	005043'	260040	005330'	EACT5:	PUSHJ	P,E2IDPB	;OUTPUT IF NOT BACKPRESSURED
  4267	005044'	211600	000001		MOVNI P1,1	;OUT OF ROOM
  4268	005045'	254000	005020'		JRST EACT1B
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 90
SCNSER.MAC	25-JAN-91 22:40		NONBREAK: PRINT & COUNT; NORMAL OR BREAK2 MODE

  4269				SUBTTL	NONBREAK: PRINT & COUNT; NORMAL OR BREAK2 MODE
  4270
  4271	005046'	603240	000100	EACT10:	TLNE U,LDLNEC		;WORRY ABOUT ECHO
  4272	005047'	254000	005052'		 JRST EAC10A		;NO ECHO
  4273	005050'	260040	005314'		PUSHJ P,EPCOUT
  4274	005051'	254000	004757'		  JRST ECHBAK
  4275	005052'	350445	000012	EAC10A:	AOS T4,LDBTIC(U)
  4276	005053'	307440	000110		CAIG T4,TIWKC
  4277	005054'	254000	004761'		 JRST ECHLST	;DO NOT WAKE UP
  4278	005055'	260040	005772'	EAC10B:	PUSHJ P,USRWAK
  4279	005056'	370005	000014		SOS LDBECC(U)
  4280	005057'	254000	003324'		JRST WATLIN	;NO MORE ECHO UNTIL WE'RE IN WAIT AGAIN
  4281
  4282				;NONBREAK: PRINT & COUNT; BREAK-ON-ALL MODE
  4283
  4284	005060'	603240	000100	EACT6:	TLNE U,LDLNEC
  4285	005061'	254000	005064'		JRST EACT6A
  4286	005062'	260040	005314'		PUSHJ P,EPCOUT
  4287	005063'	254000	004757'		 JRST ECHBAK
  4288	005064'	350005	000012	EACT6A:	AOS LDBTIC(U)
  4289	005065'	254000	005055'		JRST EAC10B
  4290
  4291				;IMAGE; NORMAL OR BREAK2 MODE
  4292
  4293	005066'	603240	000100	EACT11:	TLNE U,LDLNEC
  4294	005067'	254000	005072'		JRST EAC11A
  4295	005070'	260040	005330'		PUSHJ	P,E2IDPB	;OUTPUT IF NOT BACKPRESSURED
  4296	005071'	211600	000001		MOVNI P1,1
  4297	005072'	135300	000203'	EAC11A:	LDB T1,LDPIMB
  4298	005073'	312300	000010		CAME T1,T3
  4299	005074'	254000	005052'		JRST EAC10A	;WAK IF COUNT BIG ENOUGH
  4300	005075'	254000	005064'		JRST EACT6A	;SPECIAL BREAK, WAKE
  4301
  4302				;IMAGE; BREAK-ON-ALL MODE
  4303
  4304	005076'	603240	000100	EACT7:	TLNE U,LDLNEC
  4305	005077'	254000	005064'		JRST EACT6A
  4306	005100'	260040	005323'		PUSHJ	P,E1IDPB	;OUTPUT IF NOT BACKPRESSURED
  4307	005101'	254000	005064'		JRST EACT6A
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 91
SCNSER.MAC	25-JAN-91 22:40		BREAK: PRINT & COUNT; NOT COMMAND MODE

  4308				SUBTTL	BREAK: PRINT & COUNT; NOT COMMAND MODE
  4309
  4310	005102'	603240	000100	EACT17:	TLNE U,LDLNEC
  4311	005103'	254000	005106'		JRST EACT12	;DO NOT ECHO
  4312	005104'	260040	005314'		PUSHJ P,EPCOUT
  4313	005105'	254000	004757'		 JRST ECHBAK
  4314
  4315				;BREAK: NO PRINT, NO COUNT; NOT COMMAND MODE
  4316
  4317	005106'	561300	000001	EACT12:	HRROI T1,1
  4318	005107'	272305	000015		ADDM T1,LDBBKC(U)
  4319	005110'	254000	005064'		JRST EACT6A
  4320
  4321				;BREAK: PRINT, NO COUNT; NOT COMMAND MODE
  4322
  4323	005111'	603240	000100	EACT13:	TLNE U,LDLNEC
  4324	005112'	254000	005106'		JRST EACT12
  4325	005113'	260040	005323'		PUSHJ	P,E1IDPB	;OUTPUT IF NOT BACKPRESSURED
  4326	005114'	254000	005106'		JRST EACT12
  4327
  4328				;(EACT14)  BREAK2: PRINT & COUNT; BREAK-ON-ALL OR BREAK2 MODE
  4329				;(EACT14A) BREAK2: NO PRINT, NO COUNT; BREAK-ON-ALL OR BREAK2 MODE
  4330
  4331	005115'	603240	000100	EACT14:	TLNE U,LDLNEC
  4332	005116'	254000	005121'		JRST EAC14A
  4333	005117'	260040	005314'		PUSHJ P,EPCOUT
  4334	005120'	254000	004757'		 JRST ECHBAK
  4335	005121'	561300	000001	EAC14A:	HRROI T1,1
  4336	005122'	272305	000016		ADDM T1,LDBBK2(U)
  4337	005123'	254000	005064'		JRST EACT6A
  4338
  4339				;(EACT15)  BREAK2: PRINT & COUNT; NORMAL MODE
  4340				;(EACT15A) BREAK2: NO PRINT, NO COUNT; NORMAL MODE
  4341
  4342	005124'	603240	000100	EACT15:	TLNE U,LDLNEC
  4343	005125'	254000	005130'		JRST EAC15A
  4344	005126'	260040	005314'		PUSHJ P,EPCOUT
  4345	005127'	254000	004757'		JRST ECHBAK
  4346	005130'	561300	000001	EAC15A:	HRROI T1,1
  4347	005131'	272305	000016		ADDM T1,LDBBK2(U)
  4348	005132'	254000	005052'		JRST EAC10A
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 92
SCNSER.MAC	25-JAN-91 22:40		SPECIAL ACTION

  4349				SUBTTL	SPECIAL ACTION
  4350
  4351	005133'	135300	000165'	ECHSPA:	LDB T1,LDPMOD
  4352	005134'	135340	000311'		LDB T2,CHPSPE
  4353	005135'	256026	005136'		XCT @ECHSPT(T1)
  4354
  4355	005136'	256007	005142'	ECHSPT:	XCT SPEPDP(T2)
  4356	005137'	256007	005154'		XCT SPE940(T2)
  4357	005140'	256007	005154'		XCT SPE940(T2)
  4358	005141'	256007	005142'		XCT SPEPDP(T2)
  4359
  4360	005142'	254000	005253'	SPEPDP:	JRST SPEUXC	;ECHO ^X RETURN (^C)
  4361	005143'	254000	005166'		JRST SPECR	;RETURN
  4362	005144'	254000	005244'		JRST SPEUX	;ECHO ^X (^U)
  4363	005145'	254000	005212'		JRST SPETAB	;TAB
  4364	005146'	254000	005203'		JRST SPEALT	;33
  4365	005147'	254000	005225'		JRST SPEVM	;V. TAB
  4366	005150'	254000	005225'		JRST SPEVM	;FF
  4367	005151'	254000	005253'		JRST SPEUXC	;ECHO ^X RETURN (^Z)
  4368	005152'	254000	005201'		JRST SPEALP	;175-176
  4369	005153'	254000	005231'		JRST SPEBS	;BACKSPACE
  4370
  4371	005154'	254000	005170'	SPE940:	JRST SPEBRK	;TYPE 2
  4372	005155'	254000	005166'		JRST SPECR	;RETURN
  4373	005156'	254000	005170'		JRST SPEBRK
  4374	005157'	254000	005212'		JRST SPETAB	;TAB
  4375	005160'	254000	005170'		JRST SPEBRK	;33
  4376	005161'	254000	005225'		JRST SPEVM	;V. TAB
  4377	005162'	254000	005225'		JRST SPEVM	;FF
  4378	005163'	254000	005170'		JRST SPEBRK	;TYPE 2
  4379	005164'	254000	005176'		JRST SPEAP1	;175-176
  4380	005165'	254000	005231'		JRST SPEBS	;BACKSPACE
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 93
SCNSER.MAC	25-JAN-91 22:40		TREAT AS NONBREAK: PRINT & COUNT

  4381				SUBTTL	TREAT AS NONBREAK: PRINT & COUNT
  4382
  4383	005166'	201300	000001	SPECR:	MOVEI T1,1
  4384	005167'	254000	004754'		JRST ECHRPT	;JUST TURN INTO TYPE 1
  4385
  4386				;TREAT AS BREAK: NO PRINT, NO COUNT
  4387
  4388	005170'	201300	000002	SPEBRK:	MOVEI T1,2
  4389	005171'	254000	004754'		JRST ECHRPT	;TYPE 2
  4390
  4391				;TREAT AS BREAK: PRINT, NO COUNT
  4392
  4393	005172'	201300	000003	SPEBK3:	MOVEI T1,3
  4394	005173'	254000	004754'		JRST ECHRPT	;TYPE 3
  4395
  4396				;TREAT AS BREAK: PRINT & COUNT
  4397
  4398	005174'	201300	000006	SPEBK6:	MOVEI T1,6
  4399	005175'	254000	004754'		JRST ECHRPT	;TYPE 6
  4400
  4401				;RIGHT BRACE OR TILDE IN 940 MODE
  4402
  4403	005176'	607240	000020	SPEAP1:	TLNN U,LDLLCT	;175-176
  4404	005177'	254000	005174'		JRST SPEBK6	;TTY LC, BREAK: PRINT & COUNT
  4405	005200'	254000	005170'		JRST SPEBRK	;TTY NO LC, BREAK: NO PRINT, NO COUNT
  4406
  4407				;RIGHT BRACE OR TILDE IN PDP10 MODE
  4408
  4409	005201'	607240	000020	SPEALP:	TLNN U,LDLLCT
  4410	005202'	254000	005174'		 JRST SPEBK6	;TTY LC, BREAK: PRINT & COUNT
  4411					PFALL SPEALT	;TTY NO LC, EQUIVALENT TO ESC
  4412
  4413				;ESCAPE IN PDP10 MODE
  4414
  4415	005203'	205400	020000	SPEALT:	MOVSI T3,LXLDLR
  4416	005204'	612405	000032		TDNE T3,LDBDCX(U) ;IF USER SUPPRESSING $ ECHO
  4417	005205'	603240	020000		TLNE U,LDLCOM	;OR WE'RE AT COMMAND LEVEL
  4418	005206'	334000	000000		SKIPA		;ECHO A $
  4419	005207'	254000	005170'		JRST SPEBRK
  4420	005210'	201400	000044		MOVEI T3,"$"
  4421	005211'	254000	005174'		JRST SPEBK6	;YES, SAY IT WAS A $
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 94
SCNSER.MAC	25-JAN-91 22:40		HORIZONTAL TAB

  4422				SUBTTL	HORIZONTAL TAB
  4423
  4424	005212'	200305	000027	SPETAB:	MOVE	T1, LDBBYT(U)
  4425	005213'	603300	020000		TLNE	T1, L2LNTB	; NO ECHO?
  4426	005214'	254000	005221'		JRST	SPETB1
  4427	005215'	603300	100000		TLNE	T1, L2LTBK	; BREAK ?
  4428	005216'	254000	005174'		JRST	SPEBK6		; BREAK & ECHO
  4429	005217'	201300	000004		MOVEI	T1, 4
  4430	005220'	254000	004754'		JRST	ECHRPT		; BREAK2 & ECHO
  4431
  4432	005221'	603300	100000	SPETB1:	TLNE	T1, L2LTBK	; BREAK ?
  4433	005222'	254000	005170'		JRST	SPEBRK		; BREAK & NO ECHO
  4434	005223'	201300	000007		MOVEI	T1, 7
  4435	005224'	254000	004754'		JRST	ECHRPT		; BREAK2 & NO ECHO
  4436
  4437				;VERTICAL TAB OR FORMFEED
  4438
  4439	005225'	205300	020000	SPEVM:	MOVSI	T1, L2LNTB
  4440	005226'	616305	000027		TDNN	T1, LDBBYT(U)	; ECHO?
  4441	005227'	254000	005174'		JRST	SPEBK6		; YES
  4442	005230'	254000	005170'		JRST	SPEBRK		; NO
  4443
  4444				;BACKSPACE
  4445
  4446	005231'	200305	000027	SPEBS:	MOVE	T1,LDBBYT(U)
  4447	005232'	135340	000021'		LDB	T2,LDPECH	;REMOTE BS ECHO SET
  4448	005233'	322340	005240'		JUMPE	T2,SPEBS1	;NO, DON'T ECHO
  4449	005234'	607300	040000		TLNN	T1,L2LBBP	;BREAK
  4450	005235'	254000	005174'		JRST	SPEBK6		;BREAK & ECHO
  4451	005236'	201300	000004		MOVEI	T1,4
  4452	005237'	254000	004754'		JRST	ECHRPT		;BREAK2 & ECHO
  4453
  4454	005240'	607300	040000	SPEBS1:	TLNN	T1,L2LBBP	;BREAK
  4455	005241'	254000	005170'		JRST	SPEBRK		;BREAK & NO ECHO
  4456	005242'	201300	000007		MOVEI	T1,7
  4457	005243'	254000	004754'		JRST	ECHRPT		;BREAK2 & NO ECHO
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 95
SCNSER.MAC	25-JAN-91 22:40		ECHO <CONTROL CHAR> AS ^<CONTROL CHAR + 100>

  4458				SUBTTL	ECHO <CONTROL CHAR> AS ^<CONTROL CHAR + 100>
  4459
  4460	005244'	607240	020000	SPEUX:	TLNN U,LDLCOM
  4461	005245'	607240	000100		TLNN U,LDLNEC	;ALWAYS DO IT IN COMMAND MODE
  4462	005246'	334000	000000		SKIPA
  4463	005247'	254000	005170'		JRST SPEBRK	;OTHERWISE NOT IF NO ECHO
  4464	005250'	260040	005272'		PUSHJ P,SPEUCM	;COMMON ^X ECHO CODE
  4465	005251'	254000	004757'		 JRST ECHBAK
  4466	005252'	254000	005170'		JRST SPEBRK
  4467
  4468				;ECHO <CONTROL CHAR> AS ^<CONTROL CHAR + 100><CR><LF>
  4469
  4470	005253'	607240	020000	SPEUXC:	TLNN U,LDLCOM	;SAME AS SPEUX BUT ADD RETURN
  4471	005254'	607240	000100		TLNN U,LDLNEC
  4472	005255'	334000	000000		SKIPA
  4473	005256'	254000	005170'		JRST SPEBRK
  4474	005257'	260040	005272'		PUSHJ P,SPEUCM	;ECHO THE ^X
  4475	005260'	254000	004757'		 JRST ECHBAK	;DID NOT MAKE IT
  4476	005261'	200440	005527'		MOVE T4,CRPTR	;GET READY FOR THE RETURN LF
  4477	005262'	321600	005270'		JUMPL P1,SPEUX1	;OUT OF ROOM, MUST USE RUBOUT STRING
  4478	005263'	201400	000000		MOVEI T3,0
  4479	005264'	137400	000175'		DPB T3,LDPPOS	;RESET POSITION
  4480	005265'	260040	005505'		PUSHJ P,SPOFIL
  4481	005266'	254000	005170'		 JRST SPEBRK	;HAVE PUT OUT THE CRLF (OR TO FILLER)
  4482	005267'	254000	005170'		JRST SPEBRK	;SAME
  4483
  4484	005270'	260040	002445'	SPEUX1:	PUSHJ P,RUBSTR
  4485	005271'	254000	005170'		JRST SPEBRK
  4486
  4487				;COMMON CODE FOR SPEUX AND SPEUXC
  4488
  4489	005272'	321240	005315'	SPEUCM:	JUMPL	U,EPCOU1	;CAN'T OUTPUT NOW
  4490	005273'	135440	000175'		LDB T4,LDPPOS
  4491	005274'	271440	000002		ADDI T4,2	;MAKE SURE BOTH FIT ON SAME LINE
  4492	005275'	201400	000136		MOVEI T3,"^"	;THE ^
  4493	005276'	260040	005357'		PUSHJ P,PRCCR	;THIS WILL PUT IN A CRLF IF NEEDED
  4494	005277'	263040	000000		 POPJ P,	;^ NOT SENT, OUT OF ROOM, BACK UP
  4495	005300'	306440	000001		CAIN T4,1	;^ SEND, T4 IS LDPPOS, IF 1 CRLF SENT
  4496					AOJA T4,[DPB T4,LDPPOS	;MUST SET TO 2
  4497	005301'	344440	016763'			JRST .+1]
  4498	005302'	135405	000013		LDB T3,LDBECT(U)	;GET BACK CHARACTER
  4499	005303'	660400	000100		TRO T3,100
  4500	005304'	321600	005310'		JUMPL P1,SPEUC1	;ALREADY OUT OF ROOM, INTO RUBOUT STRING
  4501	005305'	260040	005330'		PUSHJ	P,E2IDPB	;OUTPUT IF NOT BACKPRESSURED
  4502	005306'	211600	000001		MOVNI P1,1
  4503	005307'	254000	004733*		JRST CPOPJ1	;FINISHED
  4504
  4505	005310'	260040	002430'	SPEUC1:	PUSHJ P,ENTRUB
  4506	005311'	201300	000001		MOVEI T1,1
  4507	005312'	137300	000074'		DPB T1,LOPRUB	;SET TO SEND RUBOUT STRING
  4508	005313'	254000	005307*		JRST CPOPJ1	;P1 IS NEG SO WILL FINISH
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 96
SCNSER.MAC	25-JAN-91 22:40		DON'T ECHO IF PORT BACKPRESSURED

  4509				SUBTTL	DON'T ECHO IF PORT BACKPRESSURED
  4510
  4511	005314'	325240	005346'	EPCOUT:	JUMPGE	U,PRCOUT	;DO OUTPUT IF NOT BACKPRESSURED
  4512	005315'	262040	000006	EPCOU1:	POP	P,T1		;FLUSH RETURN ADDR
  4513	005316'	400300	000000		SETZ	T1,
  4514	005317'	137305	000002		DPB	T1,LDBOPB(U)	;TURN OFF NEED OUTPUT
  4515	005320'	205400	110000		MOVSI	T3,110000
  4516	005321'	272405	000013		ADDM	T3,LDBECT(U)	;BACK UP BYTE POINTER
  4517	005322'	254000	003330'		JRST	FULLIN		;GO ON TO NEXT LINE
  4518
  4519	005323'	321240	005315'	E1IDPB:	JUMPL	U,EPCOU1	;CAN'T ECHO NOW
  4520	005324'	136412	016417'		UUIDPB	T3,CHRWRP(W)
  4521	005325'	373012	016421'		SOSLE	MULCNT(W)
  4522	005326'	370000	016400'		SOS	CHCNT
  4523	005327'	263040	000000		POPJ	P,
  4524
  4525	005330'	321240	005315'	E2IDPB:	JUMPL	U,EPCOU1	;CAN'T ECHO NOW
  4526	005331'	136412	016417'		UUIDPB	T3,CHRWRP(W)
  4527	005332'	373012	016421'		SOSLE	MULCNT(W)
  4528	005333'	377000	016400'		SOSG	CHCNT
  4529	005334'	263040	000000		POPJ	P,
  4530	005335'	254000	005313*		JRST	CPOPJ1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 97
SCNSER.MAC	25-JAN-91 22:40		OUTPUT FILLER LOGIC

  4531				SUBTTL OUTPUT FILLER LOGIC
  4532
  4533				;SEND FILLER CHARACTERS
  4534
  4535	005336'			PGFIL:
  4536	005336'	134405	000022	GOFIL:	ILDB	T3, LDBFLP(U)	;T3/ NEXT CHAR, OR 0 IF LDBFLP=0
  4537					JUMPE	T3, [		;IF NO (MORE) CHARACTERS,
  4538						SETZM	LDBFLP(U)	;CLEAR THE POINTER
  4539						JRST	MORLIN
  4540	005337'	322400	016765'		]
  4541	005340'	620400	000200		TRZ	T3, 200		;WHAT IS THIS FOR???
  4542	005341'	136412	016417'		UUIDPB	T3, CHRWRP(W)	;DEPOSIT THE CHARACTER
  4543	005342'	373012	016421'		SOSLE	MULCNT(W)
  4544	005343'	377000	016400'		SOSG	CHCNT
  4545	005344'	254000	003330'		JRST	FULLIN		;NO MORE ROOM
  4546	005345'	254000	005336'		JRST	GOFIL		;BACK FOR MORE
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 98
SCNSER.MAC	25-JAN-91 22:40		PRCOUT - CALLED WITH T3/ THE CHARACTER TO PRINT,

  4547				SUBTTL	PRCOUT - CALLED WITH T3/ THE CHARACTER TO PRINT,
  4548				;	   PRINTS THE CHARACTER (MAPPING UPPER CASE TO LOWER
  4549				;	   CASE IF SO ENABLED), INSERTS FREE CRLFS AND
  4550				;	   HT/VT/FF PADDING/SIMULATION CHARACTERS IF NECESSARY.
  4551				;	   IF IT CAN'T PRINT THE CHARACTER, IT NONSKIP-RETURNS
  4552				;	   WITH T3/ 110000,,0 (WITH WHICH THE CALLER CAN BACK UP
  4553				;	   A BYTE POINTER). OTHERWISE, IT SKIP-RETURNS. IT MAY
  4554				;	   SET THE NEED-FILLER BIT, AND IT WILL SET P1 = -1 IF
  4555				;	   THERE'S NO CHARACTER SPACE LEFT.
  4556
  4557	005346'	606400	000400	PRCOUT:	TRNN	T3, 400		;IF IT'S AN IMAGE CHARACTER
  4558	005347'	603240	200000		TLNE	U, LDLSOX	;OR SUPPRESSING OUTPUT TRANSLATION,
  4559	005350'	254000	005406'		JRST	PRCOT3		;  JUST SEND IT
  4560	005351'	602400	000200		TRNE	T3, 200
  4561	005352'	334710	000112'		SKIPA	P3, CHRTAB-200(T3)
  4562	005353'	200710	000312'		MOVE	P3, CHRTAB(T3)	;P3/ CHARACTER-TYPE BITS
  4563	005354'	135300	000303'		LDB	T1, CHPOUT	;T1/ CHARACTER PRINT MODE
  4564					XCT	[
  4565						JRST PROACT	;0 SPECIAL ACTION
  4566						LDB T4, LDPPOS	;1 PRINT AND COUNT 1 CHARACTER-WIDTH
  4567						JRST PRCOT3	;2 PRINT BUT DON'T COUNT
  4568						JRST PROUCC	;3 UPPER CASE ACTION
  4569	005355'	256006	016767'		](T1)
  4570
  4571				    ;HERE ON 1-CHARACTER-WIDE CHARACTERS
  4572
  4573	005356'	340440	000000	PRCOCW:	AOJ	T4,		;T4/ POSITION ON LINE
  4574
  4575				    ;HERE WITH T4/ POSITION, FROM ABOVE AND FROM ECHO CODE,
  4576				    ;TO PRINT A FREE CR IF ONE IS NEEDED, THEN THE CHAR IN T3
  4577
  4578	005357'	135300	000170'	PRCCR:	LDB	T1,LDPWID	;T1/ LINE WIDTH
  4579	005360'	313440	000006		CAMLE	T4,T1		;IF THE LINE ISN'T FULL
  4580	005361'	603240	200200		TLNE	U,LDLNFC!LDLSOX	;OR THE USER DOESN'T WANT FREE CRLFS
  4581	005362'	254000	005404'		 JRST	PRCOT1		;  JUST PRINT THE CHARACTER
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 99
SCNSER.MAC	25-JAN-91 22:40		PRCOUT - CALLED WITH T3/ THE CHARACTER TO PRINT,

  4582				    ;HERE TO PRINT A CRLF
  4583
  4584	005363'	200440	005527'		MOVE	T4, CRPTR
  4585	005364'	134340	000011	PRCFIL:	ILDB	T2, T4		;T2/ NEXT CHARACTER
  4586					JUMPE	T2, [		;IF WE'RE DONE,
  4587						MOVEI	T4, 1		;LINE POSITION WILL BE 1
  4588						JRST	PRCOT2		;GO PRINT THE CHARACTER
  4589	005365'	322340	016773'		]
  4590	005366'	136352	016417'		UUIDPB	T2, CHRWRP(W)	;DEPOSIT THE CHARACTER
  4591	005367'	373012	016421'		SOSLE	MULCNT(W)
  4592	005370'	377000	016400'		SOSG	CHCNT
  4593	005371'	254000	005373'		JRST	.+2		;(NO MORE ROOM)
  4594	005372'	254000	005364'		JRST	PRCFIL		;BACK FOR MORE
  4595	005373'	200400	000011		MOVE	T3, T4
  4596	005374'	134400	000010		ILDB	T3, T3		;T3/ THE NEXT CHAR
  4597	005375'	322400	005401'		JUMPE	T3, PRCFL1	;IF IT WASN'T THE TERMINATING NUL,
  4598	005376'	202445	000022		MOVEM	T4, LDBFLP(U)	;  SET THE REST AS FILLER
  4599	005377'	201440	000001		MOVEI	T4, 1
  4600	005400'	137440	000073'		DPB	T4, LOPFIL	;  SET THE NEED-FILLER BIT
  4601	005401'	205400	110000	PRCFL1:	MOVSI	T3, 110000	;(MAGIC SO CALLER CAN BACKUP BYTE PTR)
  4602	005402'	137400	000175'		DPB	T3, LDPPOS	;LINE POSITION := 0
  4603	005403'	263040	000000		POPJ	P,
  4604
  4605	005404'	307440	000377	PRCOT1:	CAIG	T4, 377
  4606	005405'	137440	000175'	PRCOT2:	DPB	T4, LDPPOS
  4607	005406'	136412	016417'	PRCOT3:	UUIDPB	T3, CHRWRP(W)
  4608	005407'	373012	016421'		SOSLE	MULCNT(W)
  4609	005410'	377000	016400'		SOSG	CHCNT
  4610	005411'	474600	000000		SETO	P1,
  4611	005412'	254000	005335*		JRST	CPOPJ1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 100
SCNSER.MAC	25-JAN-91 22:40		HERE ON SPECIAL-ACTION CHARACTERS

  4612				SUBTTL	HERE ON SPECIAL-ACTION CHARACTERS
  4613
  4614	005413'	135340	000304'	PROACT:	LDB T2,CHPSPO
  4615	005414'	256007	005415'		XCT SPOTBL(T2)	;DO CORRECT OUTPUT THING FOR CHR
  4616
  4617	005415'	254000	005422'	SPOTBL:	JRST SPOCR	;RETURN
  4618	005416'	254000	005424'		JRST SPOTAB	;TAB
  4619	005417'	254000	005463'		JRST SPOVT	;VERTICAL TAB
  4620	005420'	254000	005454'		JRST SPOFF	;FORM FEED
  4621	005421'	254000	005472'		JRST SPOBS2	;BACKSPACE
  4622
  4623				;CARRIAGE RETURN
  4624
  4625	005422'	201440	000000	SPOCR:	MOVEI T4,0
  4626	005423'	254000	005405'		JRST PRCOT2	;OUTPUT BUT SET POS TO 0
  4627
  4628				;HORIZONTAL TAB
  4629
  4630	005424'	135300	000175'	SPOTAB:	LDB T1,LDPPOS	;GET CURRENT POSITION
  4631	005425'	660300	000007		TRO T1,7
  4632	005426'	271300	000001		ADDI T1,1	;WHERE IT WILL BE
  4633	005427'	135440	000170'		LDB T4,LDPWID
  4634	005430'	607240	000200		TLNN U,LDLNFC
  4635	005431'	315300	000011		CAMGE T1,T4	;WILL WE OVERFLOW?
  4636	005432'	254000	005437'		 JRST SPOTB0	;NO OR NO CR WANTED
  4637	005433'	201300	000000		MOVEI T1,0
  4638	005434'	137300	000175'		DPB T1,LDPPOS	;SET TO 0 POSITION
  4639	005435'	200440	005527'		MOVE T4,CRPTR
  4640	005436'	254000	005505'		JRST SPOFIL
  4641
  4642	005437'	135440	000175'	SPOTB0:	LDB T4,LDPPOS	;NO CR, GET CURRENT POSITION
  4643	005440'	606300	000400		TRNN T1,400
  4644	005441'	137300	000175'		DPB T1,LDPPOS	;SAVE NEW
  4645	005442'	603240	000010		TLNE U,LDLTAB
  4646	005443'	254000	005447'		JRST SPOTB1	;TTY DOES TABS, JUST FILL
  4647	005444'	405440	000007		ANDI T4,7
  4648	005445'	200451	005577'		MOVE T4,TABPTR(T4)	;GET CORRECT NUMBER
  4649	005446'	254000	005505'		JRST SPOFIL	;AND SEND
  4650
  4651	005447'	135300	000166'	SPOTB1:	LDB T1,LDPFC2
  4652	005450'	606440	000004		TRNN T4,4
  4653	005451'	334446	005562'		SKIPA T4,TBFL2(T1)	;USE LONG FILL
  4654	005452'	200446	005556'		MOVE T4,TBFL(T1)	;OR SHORT FILL
  4655	005453'	254000	005507'		JRST SPOFL1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 101
SCNSER.MAC	25-JAN-91 22:40		FORM FEED

  4656				SUBTTL	FORM FEED
  4657
  4658	005454'	603240	000001	SPOFF:	TLNE U,LDLFRM	;IF TTY DOESN'T DO FORMS,
  4659	005455'	254000	005460'		JRST SPOFF1
  4660	005456'	200440	005542'		MOVE T4,FFFLP
  4661	005457'	254000	005505'		JRST SPOFIL	;  SEND LINEFEEDS
  4662	005460'	135300	000172'	SPOFF1:	LDB T1,LDPFC1	;IF IT DOES,
  4663	005461'	200446	005546'		MOVE T4,FLLFFS(T1)
  4664	005462'	254000	005507'		JRST SPOFL1	;  SEND PAD CHARACTERS
  4665
  4666				;VERTICAL TAB
  4667
  4668	005463'	603240	000001	SPOVT:	TLNE U,LDLFRM	;IF TTY DOESN'T DO VERTICAL TABS,
  4669	005464'	254000	005467'		JRST SPOVT1
  4670	005465'	200440	005545'		MOVE T4,VTFLP
  4671	005466'	254000	005505'		JRST SPOFIL	;  SEND LINEFEEDS
  4672	005467'	135300	000172'	SPOVT1:	LDB T1,LDPFC1	;IF IT DOES,
  4673	005470'	200446	005552'		MOVE T4,FLLVTS(T1)
  4674	005471'	254000	005507'		JRST SPOFL1	;  SEND PAD CHARACTERS
  4675
  4676				;BACKSPACE
  4677
  4678	005472'	260040	005474'	SPOBS2:	PUSHJ	P, SPOBSP	;UPDATE CHAR COLUMN COUNTER
  4679	005473'	254000	005406'		JRST	PRCOT3
  4680
  4681	005474'	205300	001000	SPOBSP:	MOVSI	T1, L2LBSP	;IF NEITHER BS FOR CHAR DELETE
  4682	005475'	612305	000027		TDNE	T1, LDBBYT(U)
  4683	005476'	254000	005501'		JRST	SPOBS1
  4684	005477'	135300	000021'		LDB	T1, LDPECH	;NOR REMOTE BS ECHO
  4685	005500'	322300	004146*		JUMPE	T1, CPOPJ	;THEN DON'T COUNT IT
  4686	005501'	135300	000175'	SPOBS1:	LDB	T1, LDPPOS
  4687	005502'	371000	000006		SOSL	T1
  4688	005503'	137300	000175'		DPB	T1, LDPPOS	;IF POS-1 .ge. 0, POS:=POS-1
  4689	005504'	263040	000000		POPJ	P,
  4690
  4691				;SPOFIL -- CALLED WITH T4/ FILL POINTER. OUTPUT THE FILL CHARACTERS.
  4692				;	   IF THERE'S NOT ENOUGH OUTPUT RING SPACE, SET UP LDPFLP
  4693				;	   TO POINT TO WHAT'S LEFT, SET P1 = -1, AND LET GOFIL
  4694				;	   DO THE REST. SKIP-RETURNS ALWAYS.
  4695				;SPOFL1 -- OUTPUT THE CHAR IN T3, THEN THE T4 STRING
  4696
  4697	005505'	134400	000011	SPOFIL:	ILDB	T3, T4		;T3/ NEXT CHAR
  4698	005506'	322400	005412*		JUMPE	T3, CPOPJ1	;DONE
  4699	005507'	136412	016417'	SPOFL1:	UUIDPB	T3, CHRWRP(W)	;DEPOSIT IT
  4700	005510'	373012	016421'		SOSLE	MULCNT(W)
  4701	005511'	377000	016400'		SOSG	CHCNT
  4702	005512'	254000	005514'		JRST	.+2		;(NO ROOM)
  4703	005513'	254000	005505'		JRST	SPOFIL		;BACK FOR MORE
  4704	005514'	474600	000000		SETO	P1,		;SET NO-MORE-ROOM FLAG
  4705	005515'	200400	000011		MOVE	T3, T4
  4706	005516'	134400	000010		ILDB	T3, T3		;T3/ NEXT CHAR
  4707	005517'	322400	005506*		JUMPE	T3, CPOPJ1	;IF IT WASN'T THE TERMINATING NUL,
  4708	005520'	202445	000022		MOVEM	T4, LDBFLP(U)	;  SET THE REST AS FILLER
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 101-2
SCNSER.MAC	25-JAN-91 22:40		FORM FEED

  4709	005521'	201400	000001		MOVEI	T3, 1
  4710	005522'	137400	000073'		DPB	T3, LOPFIL	;  AND SET NEED-FILLER
  4711	005523'	254000	005517*		JRST	CPOPJ1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 102
SCNSER.MAC	25-JAN-91 22:40		FILLER	POINTERS AND VARIOUS ECHO POINTERS

  4712				SUBTTL	FILLER	POINTERS AND VARIOUS ECHO POINTERS
  4713
  4714	005524'	440700	005525'	CCPTR:	POINT 7,CCASC
  4715	005525'			CCASC:	ASCIZ /\^C
  4716	005525'	562750	306424	/
	005526'	000000	000000
  4717
  4718	005527'	170700	005525'	CRPTR:	POINT 7,CCASC,20	;JUST THE RETURN FROM ABOVE
  4719
  4720	005530'	440700	005531'	CUPTR:	POINT 7,CUASC
  4721	005531'			CUASC:	ASCIZ /\^U
  4722	005531'	562752	506424	/
	005532'	000000	000000
  4723
  4724	005533'	440700	005534'	UPARPT:	POINT 7,UPASC
  4725	005534'			UPASC:	ASCIZ /\^
  4726	005534'	562741	505000	/
  4727
  4728	005535'	440700	005536'	COPTR:	POINT 7,COASC
  4729	005536'			COASC:	ASCIZ /\^O
  4730	005536'	562751	706424	/
	005537'	000000	000000
  4731
  4732	005540'	440700	005541'	FLLBSC:	POINT 7,BSLASC
  4733	005541'			BSLASC:	ASCIZ /\
  4734	005541'	560321	200000	/
  4735
  4736	005542'	440700	005543'	FFFLP:	POINT 7,FFLP0		;FILLER FOR SIMULATING FORM FEED
  4737	005543'	050241	205024	FFLP0:	BYTE (7) 12,12,12,12,12,12,12,12,0
	005544'	050241	200000
  4738
  4739	005545'	100700	005543'	VTFLP:	POINT 7,FFLP0,27	;FILLER FOR SIMULATING VERTICAL TAB
  4740
  4741					DEFINE FILLP(N)
  4742				<IF1,<IFG N-FLMX,<FLMX==N>
  4743					0>
  4744				IF2,< XXXQ==<FLMX-N>/5
  4745				XXXR==FLMX-N-<XXXQ*5>
  4746				
  4747				IFE XXXR,<POINT 7,FILERS+XXXQ>
  4748				IFN XXXR,<POINT 7,FILERS+XXXQ,<7*XXXR>-1>>>
  4749
  4750				;THE ABOVE MACRO DEFINES POINTERS INTO A LIST OF FILLERS (377)
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 103
SCNSER.MAC	25-JAN-91 22:40		FILLER	POINTERS AND VARIOUS ECHO POINTERS

  4751				IF1,<FLMX==0>
  4752
  4753	005546'	000000	000000	FLLFFS:	0
  4754	005547'	170700	005573'		FILLP ^D12
  4755	005550'	440700	005573'		FILLP ^D15
  4756	005551'	440700	005566'		FILLP ^D40
  4757
  4758	005552'	000000	000000	FLLVTS:	0
  4759	005553'	100700	005574'		FILLP 6
  4760	005554'	440700	005575'		FILLP 5
  4761	005555'	440700	005572'		FILLP ^D20
  4762
  4763	005556'	000000	000000	TBFL:	0
  4764	005557'	100700	005575'		FILLP 1
  4765	005560'	260700	005575'		FILLP 3
  4766	005561'	260700	005575'		FILLP 3
  4767
  4768	005562'	000000	000000	TBFL2:	0
  4769	005563'	170700	005575'		FILLP 2
  4770	005564'	440700	005575'		FILLP 5
  4771	005565'	440700	005575'		FILLP 5
  4772
  4773				;NOW GENERATE FILLERS
  4774
  4775					DEFINE GENFL(X)
  4776				<XXQ==X/5
  4777					REPEAT XXQ,<BYTE (7) 177,177,177,177,177>
  4778				XXQ==X-<XXQ*5>
  4779				IFE XXQ,<0>
  4780				IFE XXQ-1,<BYTE (7) 177>
  4781				IFE XXQ-2,<BYTE (7) 177,177>
  4782				IFE XXQ-3,<BYTE (7) 177,177,177>
  4783				IFE XXQ-4,<BYTE (7) 177,177,177,177>
  4784				>
  4785
  4786	005566'	777777	777776	FILERS:	GENFL (FLMX)
  4787	005567'	777777	777776
  4788	005570'	777777	777776
  4789	005571'	777777	777776
  4790	005572'	777777	777776
  4791	005573'	777777	777776
  4792	005574'	777777	777776
  4793	005575'	777777	777776
  4794	005576'	000000	000000
  4795
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 104
SCNSER.MAC	25-JAN-91 22:40		FILLER	POINTERS AND VARIOUS ECHO POINTERS

  4796	005577'	440700	005607'	TABPTR:	POINT 7,SSPT
  4797	005600'	350700	005607'		POINT 7,SSPT,6		;FILLERS TO SIMULATE TABS WITH SPACES
  4798	005601'	260700	005607'		POINT 7,SSPT,13
  4799	005602'	170700	005607'		POINT 7,SSPT,20
  4800	005603'	100700	005607'		POINT 7,SSPT,27
  4801	005604'	440700	005610'		POINT 7,SSPT+1
  4802	005605'	350700	005610'		POINT 7,SSPT+1,6
  4803	005606'	260700	005610'		POINT 7,SSPT+1,13
  4804
  4805	005607'	201004	020100	SSPT:	BYTE (7) 40,40,40,40,40,40,40,40,0
	005610'	201004	000000
  4806
  4807				;HERE IF CHARACTER IS UPPER CASE
  4808
  4809	005611'	554305	000032	PROUCC:	HLRZ	T1,LDBDCX(U)	;GET LEFT HALF OF DEV CHR EXT WORD
  4810	005612'	602300	010000		TRNE	T1,LXLLCO	;SKIP IF U TO L CASE CONV NOT DESIRED
  4811	005613'	271400	000040		ADDI	T3,40		;CONVERT CHAR TO LOWER CASE
  4812	005614'	135440	000175'		LDB	T4,LDPPOS
  4813	005615'	254000	005356'		JRST	PRCOCW		;PRINT AND COUNT 1 CHARACTER-WIDTH
  4814
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 105
SCNSER.MAC	25-JAN-91 22:40		ONCE A SECOND LOGIC

  4815				SUBTTL ONCE A SECOND LOGIC
  4816
  4817				;THIS ROUTINE IS CALLED EVERY SECOND TO WORRY ABOUT IMAGE MODE
  4818				;TIME OUTS AND TO MAKE SURE THAT SOMEONE WHO IS JUST WAITING
  4819				;FOR SOME SPACE TO FILL HIS OUTPUT BUFFER GETS RESTARTED
  4820
  4821	005616'	205400	000004	SCNSEC::MOVSI	T3,(BV.DBG)	;Get base version and debugging flag
  4822	005617'	616400	000705*		TDNN	T3,BASVER	;Is base being debugged?
  4823	005620'	332000	000000*		SKIPE	CTYDO##		; or running in CONSOLE mode?
  4824	005621'	254000	005656'		 JRST	SCNSC0		;Yes, ignore timeouts
  4825	005622'	200300	000636*		MOVE	T1,KEYTIM##	;Ticks since key was updated
  4826	005623'	200340	000735*		MOVE	T2,IRPTIM##	;Ticks since last input
  4827	005624'	311300	000007		CAML	T1,T2		;Get smaller in T1
  4828	005625'	200300	000007		 MOVE	T1,T2
  4829	005626'	230300	001477*		IDIV	T1,JFYSEC##	;Seconds since last input
  4830				IFCPU(KS),<ND BASTIM,777777>	;Wait a long time on the 2020
  4831			000132		   ND BASTIM,^D90	;1.5 minutes on KI, KL, F3
  4832	005627'	331000	005623*		SKIPL	IRPTIM##	;Only output this message once
  4833	005630'	305300	000132		CAIGE	T1,BASTIM	;Has it been too long?
  4834	005631'	254000	005656'		 JRST	SCNSC0		;No message
  4835	005632'	256000	016775'		 STOPCD (.+1,EVENT,NOBASE,PRTBTM,<No response from BASE>)
  4836	005633'	476000	000704*		SETOM	BASDWN##	;Set flag to mark base down
  4837	005634'	263040	000000		POPJ	P,		;Do something about it next tic
  4838
  4839	005635'	260040	003244*	PRTBTM:	PUSHJ	P,INLMES##	;Called from STOPCD(NOBASE)
  4840	005636'	473364	071312		 ASCIZ /No response from base.  Please reload it.  PDP-10 is still up.
	005637'	717415	767346
	005640'	625014	671336
	005641'	665014	260746
	005642'	625344	020240
	005643'	663134	171712
	005644'	203454	566336
	005645'	607104	064750
	005646'	271004	050210
	005647'	501326	130100
	005650'	647464	071750
	005651'	647315	420352
  4841	005652'	701341	505000	/
  4842	005653'	205300	400000		MOVSI	T1,(1B0)	;Set flag saying NOBASE message output done
  4843	005654'	436300	005627*		IORM	T1,IRPTIM##
  4844	005655'	263040	000000		POPJ	P,
  4845
  4846	005656'			SCNSC0:
  4847				IFKMC<	SKIPE	CRSHWD##	;If location 30 is nonzero,
  4848					 PUSHJ	P,HNGALL	; hang all jobs before halting 2020
  4849					MOVEI	P4,MXLIN##	;FOR EACH LINE
  4850					AOS	DRMTIM		;INC MESSAGE TIMER
  4851					SOSGE	TIMMIN		;KMC MINUTE COUNTER
  4852					 JRST 	[MOVEI T1,^D60
  4853						MOVEM T1,TIMMIN	;SET FOR ONE MINUTE
  4854						PUSHJ P,SCNMIN	;CALLED EVERY MINUTE
  4855						JRST	.+1]
  4856					SOSGE	TIMDRD		;COUNTER FOR SERVICING DOWN DRs
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 105-2
SCNSER.MAC	25-JAN-91 22:40		ONCE A SECOND LOGIC

  4857					 JRST 	[MOVEI T1,^D60
  4858						MOVEM T1,TIMDRD	;SET FOR ONE MINUTE
  4859						PUSHJ P,SCNDRD	;TIMING VARIES BUT IS USUALLY 60
  4860						JRST	.+1]
  4861				>;END IFKMC
  4862	005656'	200300	016526'		MOVE	T1,PTYFLO
  4863	005657'	202300	016422'		MOVEM	T1,MULCNT+1	;LET PTYS OUTPUT SOME MORE
  4864	005660'	333000	016413'		SKIPLE	OPRTIM
  4865	005661'	373000	016413'		SOSLE	OPRTIM		;IF OPER TIMEOUT HAS GONE OFF,
  4866	005662'	254000	005665'		 JRST	SCNSC1
  4867	005663'	201300	000020		MOVEI	T1,ALROPR
  4868	005664'	436300	000000*		IORM	T1,ALR620	;  SET THE ALARM CELL
  4869	005665'	371000	016424'	SCNSC1:	SOSL	TIMOW		;IF ORANGE-BALL-WAIT HAS GONE OFF,
  4870	005666'	254000	005671'		 JRST	SCNSC2
  4871	005667'	201300	000024		MOVEI	T1,OWTIM
  4872	005670'	202300	016424'		MOVEM	T1,TIMOW	;  RESET IT
  4873	005671'	201740	000000*	SCNSC2:	MOVEI	P4,MXLIN##	;(LOOP THROUGH ALL PORTS)
  4874
  4875	005672'	200257	003216*	SECLOP:	MOVE	U,LINTAB(P4)
  4876	005673'	500245	000031		HLL	U,LDBDCH(U)	;U/ DCH BITS,,LDB ADDR
  4877	005674'	550205	000000		HRRZ	F,LDBDDB(U)	;F/ DDB ADDR
  4878	005675'	200305	000030		MOVE	T1,LDBMOD(U)
  4879	005676'	603300	001000		TLNE	T1,LMLBIO	;IF PORT'S IN BLOCK MODE,
  4880					 JRST	[
  4881						PUSHJ	P,BIOCHG	;CHARGE FOR ELAPSED TIME
  4882						MOVEI	T1,LDRBIP	;CHECK TIMEOUT IF PTY BLKI
  4883						JRST	SECLP1
  4884	005677'	254000	017001'		]
  4885	005700'	205300	002000		MOVSI	T1,LDLIMI	;ELSE CHECK TIMEOUT IF IN IMAGE STATE
  4886	005701'	616305	000031	SECLP1:	TDNN	T1,LDBDCH(U)	;IF WE DON'T CARE ABOUT TIMEOUTS,
  4887	005702'	254000	005740'		 JRST	SECLP2		;  SKIP THIS STUFF
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 106
SCNSER.MAC	25-JAN-91 22:40		ONCE A SECOND LOGIC

  4888				    ;CODE TO CHECK THE PER-PORT TIMEOUT FIELD
  4889
  4890	005703'	135400	000174'		LDB	T3,LDPTIM	;T3/ SECONDS REMAINING, OR 0
  4891	005704'	371000	000010		SOSL	T3		;IF IT WASN'T 0,
  4892	005705'	137400	000174'		DPB	T3,LDPTIM	;  DECREMENT IT
  4893	005706'	326400	005740'		JUMPN	T3,SECLP2	;IF IT JUST RAN OUT,
  4894	005707'	201300	010000		MOVEI	T1,LDRBIP
  4895	005710'	616305	000031		TDNN	T1,LDBDCH(U)	;  IF PTY BLOCK INPUT IS IN PROGRESS,
  4896	005711'	254000	005714'		 JRST	SECTM1
  4897	005712'	260040	003711'		PUSHJ	P,PBTIMO	;    TIME IT OUT
  4898	005713'	254000	005740'		JRST	SECLP2
  4899
  4900	005714'	322200	005734'	SECTM1:	JUMPE	F,SECTM3	;  IF NO DDB, FORCE OUT OF IMAGE STATE
  4901	005715'	135300	000203'		LDB	T1,LDPIMB	;  T1/ 0, OR IMAGE BREAK CHAR
  4902	005716'	326300	005722'		JUMPN	T1,SECTM2	;  IF THERE'S NO BREAK CHAR,
  4903	005717'	260040	006451'		PUSHJ	P,IMGCHG	;    CHARGE FOR A WAKEUP
  4904	005720'	260040	015611'		PUSHJ	P,LINTRP	;    SIGNAL A BREAK
  4905	005721'	260040	005772'		PUSHJ	P,USRWAK	;    WAKE THE JOB
  4906	005722'	603240	000040	SECTM2:	TLNE	U,LDLAUX	;  IF IT'S NOT AN AUX CIRCUIT,
  4907	005723'	254000	005740'		 JRST	SECLP2
  4908	005724'	336005	000012		SKIPN	LDBTIC(U)
  4909	005725'	332005	000014		SKIPE	LDBECC(U)	;    IF THERE'RE NO CHARACTERS,
  4910	005726'	254000	005740'		 JRST	SECLP2
  4911	005727'	205000	000040		MOVSI	S,IOEND
  4912	005730'	437004	000002		IORB	S,DEVIOS(F)	;      SET EOF
  4913	005731'	602000	000010		TRNE	S,10
  4914	005732'	602000	000007		TRNE	S,7
  4915	005733'	254000	005740'		 JRST	SECLP2		;      IF IMAGE MODE,
  4916	005734'	205300	002000	SECTM3:	MOVSI	T1,LDLIMI
  4917	005735'	412305	000031		ANDCAM	T1,LDBDCH(U)	;        FORCE OUT OF IMAGE STATE
  4918	005736'	260040	013535'		PUSHJ	P,BPOFF		;        CLEAR BACKPRESSURE
  4919	005737'	260040	007622'		PUSHJ	P,SETLMD	;        FIX LINE MODE
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 107
SCNSER.MAC	25-JAN-91 22:40		ONCE A SECOND LOGIC

  4920				    ;THE REST OF THE PER-PORT ONCE-A-SECOND CODE
  4921
  4922	005740'	205300	000400	SECLP2:	MOVSI	T1,L2LOWT
  4923	005741'	336000	016424'		SKIPN	TIMOW		;IF ORANGE-BALL-WAIT TIMER'S GONE OFF
  4924	005742'	616305	000027		TDNN	T1,LDBBYT(U)	;AND PORT'S WAITING FOR ORANGE BALL,
  4925	005743'	254000	005750'		 JRST	SECLP3
  4926	005744'	205300	002000		MOVSI	T1,L2LOWS
  4927	005745'	616305	000027		TDNN	T1,LDBBYT(U)	;  IF WE HAVEN'T BEEN HERE BEFORE,
  4928					 JRST	[
  4929						IORM	T1,LDBBYT(U)	;SET THE ONCE-BEFORE FLAG
  4930						JRST	SECLP3
  4931	005746'	254000	017004'		]
  4932	005747'	260040	001225'		PUSHJ	P,OBFND		;  IF WE HAVE, FAKE AN ORANGE BALL
  4933
  4934				;P035/C06 17-Nov-87 - Watch for lost zappers.
  4935			400000		..==LNLZIN		;CREF this reference to sign bit
  4936	005750'	335005	000001	SECLP3:	SKIPGE	LDBLIN(U)	;Is there an in-zap seen?
  4937					 JRST	[MOVEI  T1,1	    ;Yes
  4938						 LDB    T2,LDBOPB(U);See if it is scheduled to go out
  4939						 DPB    T1,LOPZAP   ;Make sure the "send zap" bit is on
  4940						 DPB    T1,LDBOPB(U); and "need output" is on
  4941						 MOVSI  T1,L2LOWT   ; and orange-ball wait
  4942						 ANDCAM T1,LDBBYT(U); is off
  4943						 SKIPN  T2          ;If it wasn't scheduled,
  4944						  AOS    NZAPRS	   ;Count number of zaps resent
  4945	005751'	254000	017006'			 JRST  .+1]
  4946	005752'	322200	005763'		JUMPE	F,SECLP4	;IF THERE'S A DDB
  4947	005753'	205000	200000		MOVSI	S,TWTSPC
  4948	005754'	616004	000002		TDNN	S,DEVIOS(F)	;AND IT'S WAITING FOR BUFFERLETS
  4949	005755'	254000	005763'		 JRST	SECLP4
  4950	005756'	200300	016375'		MOVE	T1,TTFREN
  4951	005757'	307300	000003		CAIG	T1,TIRSVD	;AND THERE'RE ENOUGH NOW,
  4952	005760'	254000	005763'		 JRST	SECLP4
  4953	005761'	412004	000002		ANDCAM	S,DEVIOS(F)	;  CLEAR BUFFERLET-WAIT BIT
  4954	005762'	260040	006145'		PUSHJ	P,XMTWAK	;  AND AWAKEN JOB
  4955	005763'	367740	005672'	SECLP4:	SOJG	P4,SECLOP	;(CONTINUE WITH NEXT PORT)
  4956	005764'	263040	000000		POPJ	P,
  4957
  4958
  4959	005765'	322200	005500*	BIOCHG:	JUMPE	F,CPOPJ		;CHECK FOR DETACHED JOB.
  4960	005766'	135300	003332*		LDB	T1,PJOBN	;PICK UP HIS JOB NUMBER.
  4961	005767'	350006	000000*		AOS	JBTBET(T1)	;INCREMENT HIS ELAPSED BIO TIME.
  4962	005770'	350000	005767*		AOS	JBTBET		;INCR TOTAL ELAPSED BIO TIME.
  4963	005771'	263040	000000		POPJ	P,		;AND RETURN.
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 108
SCNSER.MAC	25-JAN-91 22:40		MISC STUFF FOR INPUT AND OUTPUT

  4964				SUBTTL MISC STUFF FOR INPUT AND OUTPUT
  4965				;SUBROUTINE TO WAKE UP JOB IF IT IS IN TTY INPUT WAIT. CALL WITH
  4966				;U SET UP. IT WILL SET F AND S AS NEEDED.
  4967
  4968	005772'	550305	000005	USRWAK:	HRRZ	T1,LDBBIO(U)	; DOING BLOCK INPUT ?
  4969	005773'	322300	006017'		JUMPE	T1,USRWK1	; NO
  4970	005774'	335006	000005		SKIPGE	BIOCHR(T1)	; YES. REQUEST IN PROGRESS ?
  4971	005775'	263040	000000		 POPJ	P,		; YES. LEAVE IT ALONE.
  4972	005776'			BIOWAK:
  4973				IFCPU (KL),<
  4974	005776'	603000	000020		TLNE	S,IO		;IF BLOCK INPUT,
  4975	005777'	254000	006017'		 JRST	USRWK1		;(OUTPUT, FORGET IT)
  4976	006000'	550305	000005		HRRZ	T1,LDBBIO(U)	;THEN MUST MAKE SURE EDGES OF DATA NOT IN CACHE
  4977	006001'	322300	006017'		JUMPE	T1,USRWK1
  4978	006002'	271300	000006		ADDI	T1,BIODAT	;GET ADDRESS OF 1ST DATA WORD
  4979	006003'	405300	000777		CSHREF	
  4980	006004'	330020	000000*
  4981	006005'	330020	000001*
  4982	006006'	330020	000002*
  4983	006007'	330020	000003*
  4984						;TAKE THAT 4 WD CHUNK OUT OF THE CACHE
  4985	006010'	550305	000005		HRRZ	T1,LDBBIO(U)	;GET ADDRESS AGAIN
  4986	006011'	271300	000000*		ADDI	T1,BIOCOR*4-1	;ADDRESS OF LAST WORD
  4987	006012'	405300	000777		CSHREF	
  4988	006013'	330020	006004*
  4989	006014'	330020	000001*
  4990	006015'	330020	000002*
  4991	006016'	330020	000003*
  4992						;THAT TAKES CARE OF ADJACENT REFS DURING I/O
  4993				>;END IFCPU (KL)
  4994	006017'	205300	010000	USRWK1:	MOVSI	T1,L2LLDF
  4995	006020'	412305	000027		ANDCAM	T1,LDBBYT(U)	;TURN OFF WHEN USER IS AWAKENED
  4996	006021'	550205	000000		HRRZ	F,LDBDDB(U)	;GET ADDRESS OF ATTACHED F
  4997	006022'	322200	006040'		JUMPE	F,RCVWK1	;IF NONE,SKIP THIS CODE
  4998	006023'	200004	000002		MOVE	S,DEVIOS(F)	;GET STATUS OF TTY FROM F
  4999	006024'	602000	010000		TRNE	S,IOACT		;SINCE IOW MAY NOT BE SET YET
  5000	006025'	603000	400000		TLNE	S,TTYOUW	;YES. FOR INPUT WAIT?
  5001	006026'	254000	006040'		 JRST	RCVWK1		;NO. DONT WAKE JOB.
  5002	006027'	607000	000001	TIWAKE:	TLNN	S,IOW		;IS IOW REALLY SET
  5003	006030'	254000	006041'		 JRST	TIWAKN		;NO
  5004	006031'	200000	017017'		MOVE	S,[XWD IOW,IOACT];YES. CLEAR WAIT BITS
  5005	006032'	413004	000002		ANDCAB	S,DEVIOS(F)	;IN F FOR THIS JOB
  5006	006033'	261040	000006		PUSH	P,T1		;SAVE VOLATILE AC'S
  5007	006034'	261040	000007		PUSH	P,T2		; ..
  5008	006035'	260040	000000*		PUSHJ	P,STTIOD	;SET JOB TO TS STATE
  5009	006036'	262040	000007		POP	P,T2		;RESTORE AC'S
  5010	006037'	262040	000006		POP	P,T1		; ..
  5011	006040'	263040	000000	RCVWK1:	POPJ	P,0		;RETURN FROM RCVWAK
  5012
  5013	006041'	201000	010000	TIWAKN:	MOVEI	S,IOACT
  5014	006042'	413004	000002		ANDCAB	S,DEVIOS(F)	;JUST RESET IOACT
  5015	006043'	263040	000000		POPJ	P,
  5016
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 108-2
SCNSER.MAC	25-JAN-91 22:40		MISC STUFF FOR INPUT AND OUTPUT

  5017	006044'	200305	000031	FULLCQ:	MOVE	T1,LDBDCH(U)
  5018	006045'	607300	020000		TLNN	T1,LDLCOM	;IF NOT CMND MODE
  5019	006046'	616300	017020'		TDNN	T1,[LDLBKA,,LDRFCS];AND HE WANTS TO SEE EDIT CHARS,
  5020	006047'	350001	000000		 AOS	(P)
  5021	006050'	263040	000000		POPJ	P,		;  NONSKIP-RETURN
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 109
SCNSER.MAC	25-JAN-91 22:40		SUBROUTINE TO SEE IF A CONTROL C SHOULD BE ACTED ON OR STORED.

  5022				SUBTTL	SUBROUTINE TO SEE IF A CONTROL C SHOULD BE ACTED ON OR STORED.
  5023				;NON-SKIP MEANS STORE IT.
  5024				;SKIP MEANS DO IT.
  5025
  5026	006051'	603240	020000	CNCCHK:	TLNE	U,LDLCOM	;SHOULD ^C BE RETURNED?
  5027	006052'	263040	000000		 POPJ	P,0		;YES.
  5028	006053'	261040	000006		PUSH	P,T1		;MAYBE NOT. SAVE TAC.
  5029	006054'	550205	000000		HRRZ	F,LDBDDB(U)	;GET U'S JOB
  5030	006055'	322200	006065'		JUMPE	F,CNCCK1	;IF NO F ATTACHED, ASSUME SHOULD DO ^C
  5031	006056'	205300	020000		MOVSI	T1,TTYATC
  5032	006057'	616304	000004		TDNN	T1,DEVMOD(F)
  5033	006060'	254000	000000*		 JRST	TPOPJ		;THIS IS A SLAVED TTY
  5034	006061'	135300	005766*		LDB	T1,PJOBN	; ..
  5035	006062'	200306	001127*		MOVE	T1,JBTSTS(T1)	;GET JOB STATUS WORD
  5036	006063'	612300	017021'		TDNE	T1,[XWD JACCT,JACCT2] ;IS ^C LEGAL?
  5037	006064'	254000	006060*		 JRST	TPOPJ		;NO. GIVE IT TO CUSP
  5038	006065'	260040	013767'	CNCCK1:	PUSHJ	P,CNCMOD	;FORCE LINE TO BE AT COMMAND LEVEL
  5039	006066'	201300	000000*		MOVEI	T1,CMFCHT##
  5040	006067'	260040	013565'		PUSHJ	P,TTFORC	;FORCE HALT COMMAND
  5041	006070'	254000	000000*		JRST	TPOPJ1		;RESTORE T1, SKIP RETURN
  5042
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 110
SCNSER.MAC	25-JAN-91 22:40		THIS ROUTINE TRACES BACKWARDS DOWN A LINKED LIST TO THE START

  5043				SUBTTL	THIS ROUTINE TRACES BACKWARDS DOWN A LINKED LIST TO THE START
  5044				;AND THEN ADDS THE WHOLE LIST TO THE FREE LIST.
  5045				;Called from GORUB/PGRUB after outputing rubout characters.
  5046				;Called from TSETBI/TSETBO to clear input/output buffers.
  5047				;Uses T1 and T2 only.
  5048
  5049	006071'	260040	006121'	FREUP:	PUSHJ	P,CHECKU	;Check on address in U
  5050	006072'	405340	777774		ANDI	T2,777774	;GET BASE ADDRESS
  5051	006073'	311340	016570'	FREST:	CAML	T2,RCC.LO	;Check if this is a reasonable pointer
  5052	006074'	313340	016571'		CAMLE	T2,RCC.HI	; to the TTY chunks
  5053	006075'	256000	017022'		 STOPCD (RCC.T3,INFO,RCCDBG,RCC.T1,<Range Checked Chunk, continuing>)
  5054	006076'	554307	000000		HLRZ	T1,(T2)		;LOOK FOR BACK LINKS
  5055	006077'	322300	006102'		JUMPE	T1,STLST	;FOUND START
  5056	006100'	200340	000006		MOVE	T2,T1		;TRY SOME MORE
  5057	006101'	254000	006073'		JRST	FREST
  5058
  5059				;JMS 7-May-86 - X95(KS) has a nasty habit of looping here.  Added TTYFLM.
  5060
  5061	006102'	332300	002430*	STLST:	SKIPE	T1,TTFREE##	;Pointer to current free list (0 is OK)
  5062	006103'	311300	016570'		 CAML	T1,RCC.LO	;Check if this is a reasonable pointer
  5063	006104'	313300	016571'		CAMLE	T1,RCC.HI	; to the TTY chunks
  5064	006105'	403300	006102*		 SETZB	T1,TTFREE##	;Was bad, start with a new free list
  5065	006106'	250307	000000		EXCH	T1,(T2)		;Make current chunk point to the old free list
  5066	006107'	552340	006105*		HRRZM	T2,TTFREE##	;Put current chunk at start of free list
  5067	006110'	350000	016375'		AOS	TTFREN		;Mark one more free
  5068	006111'	602300	777777		TRNE	T1,777777	;If there is a next pointer,
  5069	006112'	554346	000000		 HLRZ	T2,(T1)		; get its back pointer
  5070	006113'	621340	777777		TLZ	T2,777777	;Clear LH for compare
  5071	006114'	312340	006107*		CAME	T2,TTFREE##	;Does next point back to current?
  5072	006115'	256000	017026'		 STOPCD (RCC.T3,INFO,TTYFLM,RCC.T1,<TTY Free List Messed Up>)
  5073				 ;;STLST+7
  5074	006116'	550340	000006		HRRZ	T2,T1		;Did current chunk have a next one?
  5075	006117'	326340	006102'		JUMPN	T2,STLST	;Yes, continue until all are freed up
  5076	006120'	263040	000000		POPJ	P,		;All done
  5077
  5078				;Check on U.  Uses T1.
  5079	006121'	550300	000005	CHECKU:	HRRZ	T1,U		;Make sure U is pointing to a legal LDB
  5080	006122'	306300	000105'		CAIN	T1,CTYLDB
  5081	006123'	263040	000000		 POPJ	P,		;CTYLDB is outside the range of LDB.LO-LDB.HI
  5082	006124'	311300	016572'		CAML	T1,LDB.LO
  5083	006125'	313300	016573'		CAMLE	T1,LDB.HI
  5084	006126'	256000	017032'		 STOPCD (RCC.T3,DEBUG,RCCBAD,RCC.T1,<Range Checked Chunk, bad U>)
  5085	006127'	263040	000000		POPJ	P,
  5086
  5087				;Resume address from RCC stopcodes - Set T1,T2,T3 to reasonable values
  5088	006130'	403300	000007	RCC.T3:	SETZB	T1,T2
  5089	006131'	201400	000003		MOVEI	T3,'C'-'@'	;Return Control-C
  5090	006132'	263040	000000		POPJ	P,
  5091
  5092				;Output contents of T1,T2, and U on STOPCD(TTYFLM) and STOPCD(RCCDGB)
  5093	006133'	550205	000000	RCC.T1:	HRRZ	F,LDBDDB(U)
  5094	006134'	260040	000000*		PUSHJ	P,PRTDDB##	;Output TTY name
  5095	006135'	265300	000000*		JSP	T1,BGCTYP##	;Output contents of T1, T2, and U
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 110-2
SCNSER.MAC	25-JAN-91 22:40		THIS ROUTINE TRACES BACKWARDS DOWN A LINKED LIST TO THE START

  5096	006136'	642100	000000		  EXP	'T1    ',T1,'T2    ',T2,'LDB   ',U,0
	006137'	000000	000006
	006140'	642200	000000
	006141'	000000	000007
	006142'	544442	000000
	006143'	000000	000005
	006144'	000000	000000
  5097
  5098
  5099	006145'	550205	000000	XMTWAK:	HRRZ	F,LDBDDB(U)
  5100	006146'	322200	005765*		JUMPE	F,CPOPJ		;NO JOB HOOKED TO IT
  5101	006147'	205000	000400		MOVSI	S,L2LOWT	;IF WAITING FOR ORANGE BALL
  5102	006150'	612005	000027		TDNE	S,LDBBYT(U)
  5103	006151'	263040	000000		 POPJ	P,		;DON'T WAKE UP OUTPUT
  5104	006152'	200004	000002		MOVE	S,DEVIOS(F)
  5105	006153'	607000	040000		TLNN	S,TINFIO
  5106	006154'	254000	006165'		 JRST	XMTWK1
  5107	006155'	135300	000231'		LDB	T1,DDPTTS	;NOW TRAP ON READY FOR MORE OUTPUT
  5108	006156'	261040	000002		PUSH	P,J
  5109	006157'	260040	001742*		PUSHJ	P,TAKTRJ
  5110	006160'	205000	040000		MOVSI	S,TINFIO
  5111	006161'	413004	000002		ANDCAB	S,DEVIOS(F)
  5112	006162'	201100	000400		MOVEI	J,LXRIOS
  5113	006163'	436105	000032		IORM	J,LDBDCX(U)
  5114	006164'	262040	000002		POP	P,J
  5115	006165'	602000	010000	XMTWK1:	TRNE	S,IOACT		;SINCE IOW MAY NOT BE SET YET
  5116	006166'	607000	400000		TLNN	S,TTYOUW
  5117	006167'	263040	000000		 POPJ	P,		;NOT WAITING SO DONE
  5118	006170'	324740	006027'		PJRST	TIWAKE		;WAKE HIM UP
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 111
SCNSER.MAC	25-JAN-91 22:40		CHUNK HANDLERS

  5119				SUBTTL CHUNK HANDLERS
  5120
  5121				;SUBROUTINE TO READ A CHARACTER FROM A TELETYPE BUFFER
  5122				;CALL WITH T2 CONTAINING A BYTE POINTER TO THE LIST
  5123				;THIS ROUTINE WILL IBP T2 WHICH MAY POINT IT INTO A LINK WORD
  5124				;ALSO WE MAY BE CALLED WITH THE POINTER DECREMENTED SO THAT
  5125				;IBP WILL POINT TO THE CURRENT CHUNKS LINK WORD
  5126				;THIS ROUTINE WILL CORRECTLY FOLLOW THE LINKS. THE ROUTINE
  5127				;WILL NORMALLY SKIP RETURN. THE NON-SKIP RETURN IS TAKEN IF
  5128				;IT WAS NECESSARY TO FOLLOW A LINK. IN THIS CASE, T1
  5129				;CONTAINS THE BASE ADDRESS OF THE NEW CHUNK.
  5130				;ON RETURN, T2 CONAINS THE BYTE POINTER TO THE CHARACTER
  5131				;JUST OBTAINED, AND T3 THE CHARACTER
  5132
  5133	006171'	260040	006121'	TTGETC:	PUSHJ	P,CHECKU	;Make sure U is pointing to a legal LDB
  5134	006172'	134400	000007		ILDB	T3,T2		;IF WE GET INTO A LINK WORD, T3 WILL NOT
  5135								;BE WHAT WE WANT BUT NOTHING WILL HAVE
  5136								;BEEN CLOBBERED
  5137	006173'	602340	000003		TRNE	T2,3		;ALL LINK WORDS ARE IN WORDS AT AN ADDRESS
  5138								;WHICH IS A MULTIPLE OF 4
  5139	006174'	254000	005523*		 JRST	CPOPJ1		;ALL OK, JUST RETURN
  5140	006175'	550307	777774		HRRZ	T1,-4(T2)	;THIS WILL BE THE FORWARD LINK TO NEXT CHUNK
  5141	006176'	607340	770000		TLNN	T2,770000	;IF WE ARE AT THE RIGHT END OF THE WORD
  5142								;WE MUST HAVE BACKED UP
  5143	006177'	554307	000000		 HLRZ	T1,(T2)		;SO GET BACK LINK (T2 POINTS TO FIRST WORD OF CHUNK)
  5144	006200'	322300	006212'		JUMPE	T1,TTGC1	;NO LINK THERE
  5145	006201'	311300	016570'		CAML	T1,RCC.LO	;Check if this is a reasonable pointer
  5146	006202'	313300	016571'		CAMLE	T1,RCC.HI	; to the TTY chunks
  5147	006203'	256000	006075'		 STOPCD (,XCT,RCCDBG)
  5148					;Forward/back pointer is bad
  5149	006204'	540340	000006		HRR	T2,T1		;NOW POINT TO CORRECT WORD
  5150	006205'	603340	770000		TLNE	T2,770000
  5151	006206'	354000	000007		 AOSA	T2		;IF FORWARD, POINT TO FIRST CHR
  5152	006207'	271340	000003		ADDI	T2,TTCHKS-1	;IF BACKWARD, TO LAST
  5153	006210'	135400	000007		LDB	T3,T2		;NOW GET THE CHARACTER
  5154	006211'	263040	000000		POPJ	P,		;AND RETURN SAYING PASSED A LINK
  5155
  5156				;Stop at TTYNNC may be related to ZAP (or nonzap) at LDEC
  5157
  5158	006212'	603340	770000	TTGC1:	TLNE	T2,770000	;IS THIS A BACKUP
  5159	006213'	256000	017036'		 STOPCD (TSETBI,INFO,TTYNNC,,<TTY - No Next Chunk>)
  5160				 ;;TTGC1+1
  5161	006214'	201400	000000		MOVEI	T3,0		;GIVE BACK 0
  5162	006215'	254000	006174*		JRST	CPOPJ1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 112
SCNSER.MAC	25-JAN-91 22:40		SUBROUTINE TO PLACE A CHARACTER IN A BUFFER.

  5163				SUBTTL	SUBROUTINE TO PLACE A CHARACTER IN A BUFFER.
  5164				;CHARACTER IS IN T3. T2 CONTAINS A BYTE POINTER TO LAST
  5165				;CHARACTER PLACED IN BUFFER. WE WANT TO DO AN IDPB T3,T2 BUT
  5166				;MUST WATCH FOR LINKS. WILL FOLLOW A FORWARD LIST IF IT
  5167				;EXISTS OR GET A NEW CHUNK IF NECESSARY
  5168
  5169	006216'	133000	000007	TTPUTC:	IBP	T2		;MUST NOT IDPB SINCE MIGHT CLOBBER SOMETHING
  5170	006217'	602340	000003		TRNE	T2,3		;ARE WE IN A LINK?
  5171	006220'	254000	006250'		 JRST	TTPC1		;NO, ALL OK
  5172	006221'	550307	777774		HRRZ	T1,-4(T2)	;GET LINK
  5173	006222'	607340	770000		TLNN	T2,770000
  5174	006223'	256000	000000'		 STOPCD			;SOMEONE CALLED US AFTER BACKING UP
  5175	006224'	326300	006247'		JUMPN	T1,TTPC2	;HAVE A FORWARD LINK ALREADY
  5176	006225'	200300	006114*		MOVE	T1,TTFREE##	;GET A NEW CHUNK
  5177	006226'	311300	016570'		CAML	T1,RCC.LO	;Check if this is a reasonable pointer
  5178	006227'	313300	016571'		CAMLE	T1,RCC.HI	; to the TTY chunks
  5179	006230'	256000	017041'		 STOPCD (.,STOP,RCCSTP,RCC.T1,<Range Checked Chunk - TTFREE is bad, stop>)
  5180	006231'	261040	000014		PUSH	P,P1		;GET A REGISTER TO WORK WITH
  5181	006232'	550606	000000		HRRZ	P1,(T1)		;Current points to new first free chunk
  5182	006233'	332000	000014		SKIPE	P1		;Zero if T1 points to very last chunk on system
  5183	006234'	311600	016570'		 CAML	P1,RCC.LO	;Check if this is a reasonable pointer
  5184	006235'	313600	016571'		CAMLE	P1,RCC.HI	; to the TTY chunks
  5185	006236'	256000	006230'		 STOPCD (,XCT,RCCSTP)
  5186					;Die - TTFREE is bad
  5187	006237'	202600	006225*		MOVEM	P1,TTFREE##	;UPDATE FREE POINTER
  5188	006240'	332000	000014		SKIPE	P1
  5189	006241'	553014	000000		 HRRZS	(P1)		;MAKE SURE NO BACK LINE IF A CHUNK LEFT
  5190	006242'	370000	016375'		SOS	TTFREN		;COUNT CHUNK TAKEN
  5191	006243'	515607	777774		HRLZI	P1,-4(T2)	;GET A BACK LINK
  5192	006244'	202606	000000		MOVEM	P1,(T1)		;TO PUT IN NEW CHUNK
  5193	006245'	542307	777774		HRRM	T1,-4(T2)	;AND PUT IN FORWARD LINK
  5194	006246'	262040	000014		POP	P,P1
  5195	006247'	541346	000001	TTPC2:	HRRI	T2,1(T1)	;NOW RESET BYTE POINTER
  5196	006250'	137400	000007	TTPC1:	DPB	T3,T2		;STORE AWAY CHARACTER
  5197	006251'	263040	000000		POPJ	P,		;ALL DONE
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 113
SCNSER.MAC	25-JAN-91 22:40		ROUTINE TO FREE UP A CHUNK OF THE CHARACTER LIST BY LINKING IT

  5198				SUBTTL	ROUTINE TO FREE UP A CHUNK OF THE CHARACTER LIST BY LINKING IT
  5199				;ONTO THE FRONT OF THE FREE-LIST. ASSUMES THAT TTGETC HAS JUST BEEN
  5200				;CALLED SO T1 CONTAINS THE ADDRESS OF THE CHUNK AFTER THE ONE
  5201				;TO RETURN TO THE FREE LIST.
  5202				;T1 has already been verified to be between RCC.LO and RCC.HI by TTGETC
  5203
  5204	006252'	261040	000007	FRECHK:	PUSH	P,T2
  5205	006253'	554346	000000		HLRZ	T2,(T1)		;RETRIEVE THE LINK TO THE ONE TO PUT BACK
  5206	006254'	553006	000000		HRRZS	(T1)		;NO BACK LINK IN THIS CHUNK NOW
  5207	006255'	250340	006237*		EXCH	T2,TTFREE##	;PUT OLD ON FREE LIST
  5208	006256'	552360	006255*		HRRZM	T2,@TTFREE##	;RELINK REST OF FREE LIST AFTER THIS ONE
  5209	006257'	350000	016375'		AOS	TTFREN
  5210	006260'	262040	000007		POP	P,T2
  5211	006261'	263040	000000		POPJ	P,
  5212
  5213				;ROUTINE TO GET A FREE CHUNK FROM THE FREELIST. SETS UP
  5214				;A BYTE POINTER IN T2. CLOBBERS T1
  5215
  5216	006262'	200340	006256*	GETCHK:	MOVE	T2,TTFREE##	;This should have been checked for 0 earlier
  5217	006263'	311340	016570'		CAML	T2,RCC.LO	;Check if this is a reasonable pointer
  5218	006264'	313340	016571'		CAMLE	T2,RCC.HI	; to the TTY chunks
  5219	006265'	256000	006230'		 STOPCD (,XCT,RCCSTP)
  5220					;Die - TTFREE is bad (or all chunks in use)
  5221	006266'	550307	000000		HRRZ	T1,(T2)		;THE NEXT ELEMENT
  5222	006267'	202300	006262*		MOVEM	T1,TTFREE##	;RESET FREE LIST
  5223				;P035/D08 when getting first chunk on list, make sure second chunk does
  5224				; not have a back pointer to the first chunk.  /JMS 12-Jul-88
  5225	006270'	332000	000006		SKIPE	T1		;As long as free list is not empty,
  5226	006271'	553006	000000		 HRRZS	(T1)		; make sure it doesn't point to this one
  5227	006272'	402007	000000		SETZM	(T2)		;NO LINKS IN THIS NEW ONE
  5228	006273'	505340	001100		HRLI	T2,(POINT 9,0,35) ;POINT SO THAT IBP POINT TO 1ST CHR
  5229	006274'	370000	016375'		SOS	TTFREN		;ONE LESS
  5230	006275'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 114
SCNSER.MAC	25-JAN-91 22:40		TSETBI - CLEAR INPUT BUFFER

  5231				SUBTTL	TSETBI - CLEAR INPUT BUFFER
  5232
  5233	006276'			TSETBI::	;P035/D08 - commented out code to special case zapped lines
  5234				;*;	MOVSI	T1,LLLZAP
  5235				;*;	TDNE	T1,LDBLOG(U)	;DO NOT ZAP IF TRYING TO GET RID OF HIM
  5236				;*;	 POPJ	P,
  5237	006276'	332345	000010		SKIPE	T2,LDBTIP(U)	;CLEAR THIS LIST
  5238	006277'	260040	006071'		 PUSHJ	P,FREUP		;BUT ONLY IF ONE IS THERE
  5239	006300'	332345	000023		SKIPE	T2,LDBRBI(U)	;AND THIS ONE TOO
  5240	006301'	260040	006071'		 PUSHJ	P,FREUP
  5241	006302'	402005	000010		SETZM	LDBTIP(U)
  5242	006303'	402005	000011		SETZM	LDBTIT(U)
  5243	006304'	402005	000012		SETZM	LDBTIC(U)
  5244	006305'	402005	000015		SETZM	LDBBKC(U)
  5245	006306'	402005	000016		SETZM	LDBBK2(U)
  5246	006307'	402005	000007		SETZM	LDBBKI(U)
  5247	006310'	402005	000006		SETZM	LDBBKP(U)
  5248	006311'	402005	000013		SETZM	LDBECT(U)
  5249	006312'	402005	000014		SETZM	LDBECC(U)
  5250	006313'	402005	000025		SETZM	LDBRBC(U)
  5251	006314'	402005	000024		SETZM	LDBRBO(U)
  5252	006315'	402005	000023		SETZM	LDBRBI(U)
  5253	006316'	205340	100000		MOVSI	T2,LDLECS
  5254	006317'	412345	000031		ANDCAM	T2,LDBDCH(U)	;MUST CLEAR COMMAND SYNC BIT
  5255	006320'	500245	000031		HLL	U,LDBDCH(U)	;LET PEOPLE KNOW ABOUT IT
  5256	006321'	205340	204000		MOVSI	T2,L2LDEL!L2LCCS
  5257	006322'	412345	000027		ANDCAM	T2,LDBBYT(U)
  5258	006323'	324740	013534'		PJRST	BPXOFF		;GET OUT OF BACKPRESSURE OR XOFF
  5259
  5260				;TSETBO - CLEAR OUTPUT BUFFER
  5261				;Uses T1 and T2 only
  5262
  5263	006324'	332345	000017	TSETBO:	SKIPE	T2,LDBTOP(U)
  5264	006325'	260040	006071'		 PUSHJ	P,FREUP
  5265	006326'	402005	000017	TSTBO1:	SETZM	LDBTOP(U)	;OUTPUT PUTTER
  5266	006327'	402005	000021		SETZM	LDBTOC(U)	;OUTPUT COUNT
  5267	006330'	402005	000020		SETZM	LDBTOT(U)	;OUTPUT TAKER
  5268	006331'	402005	000022		SETZM	LDBFLP(U)	;AND FILLERS CURRENTLY GOING
  5269	006332'	550300	000005		HRRZ	T1,U
  5270	006333'	316300	016405'		CAMN	T1,OPRLDB	;IS THIS OPR
  5271	006334'	260040	014527'		 PUSHJ	P,OPRFRE	;YES, MAY NEED TO RESTART JOBS
  5272	006335'	201340	000001		MOVEI	T2,1
  5273	006336'	205300	000400		MOVSI	T1,L2LOWT
  5274	006337'	616305	000027		TDNN	T1,LDBBYT(U)	;IF WE'RE WAITING FOR AN ORANGE BALL,
  5275	006340'	254000	006343'		 JRST	TSTBO2
  5276	006341'	412305	000027		ANDCAM	T1,LDBBYT(U)	;  STOP WAITING
  5277	006342'	137340	000077'		DPB	T2,LOPSYL	;  SEND YELLOW BALL
  5278	006343'	137340	000060'	TSTBO2:	DPB	T2,LOPCGB	;SEND GOBBLER
  5279	006344'	205300	400000		MOVSI	T1,LDLNOP	;SEND EVEN IF SAYS SHOULD NOT
  5280	006345'	412305	000031		ANDCAM	T1,LDBDCH(U)
  5281	006346'	137345	000002		DPB	T2,LDBOPB(U)
  5282	006347'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 115
SCNSER.MAC	25-JAN-91 22:40		BUFFERED I/O UUO-LEVEL ROUTINES

  5283				SUBTTL BUFFERED I/O UUO-LEVEL ROUTINES
  5284
  5285				;DISPATCH TABLE FOR MUUO'S AND INITIALIZATION
  5286
  5287	000000			SCNDSP:	PHASE 0
  5288	006350'	000000	000012	DDXZ:	DSPSIZ
  5289	006351'	263040	000000	DDINT:	POPJ P,
  5290	006352'	001000	001000	DBYT:	1000,,1000
  5291	006353'	201300	000016	DVSIZ:	MOVEI T1,SCNDDS
  5292	006354'	254000	016144'	DINI:	JRST TTYINI
  5293	006355'	254000	006215*	DHNG:	JRST CPOPJ1
  5294	006356'	263040	000000	DRL:	POPJ P,
  5295	006357'	254000	000000*	DCL:	JRST OUT
  5296	006360'	254000	006464'	DOU:	JRST TTYOUT
  5297	006361'	254000	006363'	DIN:	JRST TTYIN
  5298	006362'	254000	011262'	DZAP:	JRST AUXZAP
  5299			000012		DSPSIZ==.-1
  5300	006363'				DEPHASE
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 116
SCNSER.MAC	25-JAN-91 22:40		INPUT UUO PROCESSOR - CALLED FROM UUOCON ON INPUT M, F SET UP

  5301				SUBTTL	INPUT UUO PROCESSOR - CALLED FROM UUOCON ON INPUT M, F SET UP
  5302
  5303	006363'	260040	013216'	TTYIN:	PUSHJ	P,CKATTI	;MAKE SURE ATTACHED. SET S.
  5304	006364'	254000	000000*		  JRST	ABTUUO		;WAITING FOR AN INTERRUPT. ABORT
  5305					JUMPE	U,[MOVSI S,IOEND
  5306	006365'	322240	017045'			JRST TTYINX]	;ZAPPED AUX CIRCUIT GIVE EOF
  5307	006366'	702600	400000*		NOCHARGE
  5308	006367'	260040	007575'		PUSHJ	P,FIXIMI	;SET IMAGE STATE FROM DATA MODE
  5309	006370'	260040	013340'		PUSHJ	P,TWAITL	;BECOME ATTACHED, WAIT FOR U
  5310								; OR FULL BUFFER CONDITION
  5311	006371'	607240	002000		TLNN	U,LDLIMI	;IMAGE HAS ALREADY CHARGED
  5312	006372'	260040	006430'		PUSHJ	P,SETBRK	;CHARGE FOR A BREAK CHR
  5313	006373'	550304	000007	TTYIN5:	HRRZ	T1,DEVIAD(F)		;PREPARE AND ADDR CHECK THE
  5314	006374'	260040	000000*		PUSHJ	P,BUFCLR		; USER'S BUFFER
  5315	006375'	254000	000000*		  JRST	ADRERR			;OUT OF BOUNDS. STOP JOB.
  5316	006376'	550604	000007		HRRZ	P1,DEVIAD(F)		;PREPARE BYTE POINTER TO STORE
  5317									; THE CHARACTERS IN HIS BUFFER
  5318	006377'	256040	017050'		XCTFU <LDB P2,[POINT 17,(P1),17]>	;BUFFER SIZE IN WORDS
  5319	006400'	275640	000001		SUBI	P2,1			;MINUS LINK
  5320	006401'	550244	000013		HRRZ	U,DDBLDB(F)		;RESTORE U, CLOBBERED IN UUOCON
  5321	006402'	500245	000031		HLL	U,LDBDCH(U)	;ALSO GET BITS
  5322	006403'	550304	000006		HRRZ	T1,DEVBUF(F)	;BUFFER POINTER FOR SIZE
  5323	006404'	260040	006456'		PUSHJ	P,TTYSZS		;SET SIZES
  5324									;FALL INTO MAIN PART OF ROUTINE
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 117
SCNSER.MAC	25-JAN-91 22:40		INPUT UUO PROCESSOR - CALLED FROM UUOCON ON INPUT M, F SET UP

  5325
  5326	006405'	260040	012654'	TTYIN1:	PUSHJ	P,TYI			;GET A CHARACTER
  5327	006406'	254000	006413'		  JRST	TTYIN3			; END OF BUFFER.
  5328	006407'	405400	000377		ANDI	T3,377
  5329	006410'	256040	017051'		XCTFU <IDPB T3,P1>			;AND STORE IN USER AREA
  5330	006411'	302340	000002		CAIE	T2,%CHBRK		;A BREAK?
  5331	006412'	367640	006405'		SOJG	P2,TTYIN1			;NO. LOOP FOR MORE, IF ROOM.
  5332	006413'	200644	000007	TTYIN3:	MOVE	P2,DEVIAD(F)		;COMPUTE WORD COUNT FOR UUOCON
  5333	006414'	275615	000001		SUBI	P1,1(P2)			; TO PUT IN BUFFER HEADER.
  5334	006415'	256200	017052'		XCTFU <HRRM P1,1(P2)>			;STORE WITH THE DATA IN RING
  5335	006416'	260040	000000*		PUSHJ	P,ADVBFF			;ON TO NEXT BUFFER
  5336	006417'	334000	000000		  SKIPA				;NO MORE THERE.
  5337	006420'	254000	006424'		JRST	TTYIN6			;MORE TO GO. USE IF IMAGE.
  5338	006421'	205000	000004	TTYIN8:	MOVSI	S,IOFST			;SET VIRGIN BUFFER BIT
  5339	006422'	437004	000002	TTYINX:	IORB	S,DEVIOS(F)		;IN DEV S WORD IN F
  5340	006423'	324740	007171'		PJRST	NOCTRO			;CLEAR CONTROL O. END OF Muuo
  5341
  5342	006424'	602000	000010	TTYIN6:	TRNE	S,I			;IMAGE MODE?
  5343	006425'	337005	000012		SKIPG	LDBTIC(U)		;AND MORE CHARACTERS TO READ?
  5344	006426'	254000	006421'		 JRST	TTYIN8			;NO. QUIT.
  5345	006427'	254000	006373'		JRST	TTYIN5			;YES. GO PASS SOME MORE
  5346
  5347	006430'	603240	002000	SETBRK:	TLNE	U,LDLIMI
  5348	006431'	263040	000000		 POPJ	P,			;IMAGE IS ALREADY CHARGED FOR
  5349	006432'	135100	006061*		LDB	J,PJOBN
  5350	006433'	260040	000000*		PUSHJ	P,GTCGSZ	;GET THE JOB'S CHARGING SIZE.
  5351	006434'	272302	000000*		ADDM	T1,JBTBCS(J)	;ONE BREAK CHR
  5352	006435'	272300	006434*		ADDM	T1,JBTBCS
  5353	006436'	263040	000000		POPJ	P,
  5354
  5355	006437'	135300	000203'	IMGCNT:	LDB	T1,LDPIMB	;GET IMAGE BREAK CHR
  5356	006440'	316300	000010		CAMN	T1,T3	;IS IT THIS ONE?
  5357	006441'	254000	006450'		 JRST	IMGCH1	;YES, GO CHARGE
  5358	006442'	135300	000177'		LDB	T1,LDPCHG
  5359	006443'	271300	000001		ADDI	T1,1
  5360	006444'	301300	000110		CAIL	T1,TIWKC	;ENOUGH GONE BY TO CHARGE?
  5361	006445'	254000	006451'		 JRST	IMGCHG	;YES
  5362	006446'	137300	000177'		DPB	T1,LDPCHG	;NO, JUST RECORD
  5363	006447'	263040	000000		POPJ	P,
  5364
  5365	006450'	201440	000110	IMGCH1:	MOVEI	T4,TIWKC	;SO CALLER WILL THINK MANY CHRS
  5366	006451'	201300	000000	IMGCHG:	MOVEI	T1,0
  5367	006452'	137300	000177'		DPB	T1,LDPCHG	;SET CHARGE COUNTER TO 0
  5368	006453'	550205	000000		HRRZ	F,LDBDDB(U)
  5369	006454'	322200	006146*		JUMPE	F,CPOPJ	;NO LINE
  5370	006455'	254000	006430'		JRST	SETBRK	;GO CHARGE FOR 1 BCS
  5371
  5372	006456'	256040	017054'	TTYSZS:	XCTBU <LDB T2,[POINT 6,1(T1),11]>	;GET POINTER SIZE
  5373	006457'	137340	017055'		DPB	T2,[POINT 6,P1,11]	;SET IN P1 POINTER
  5374	006460'	201300	000044		MOVEI	T1,^D36
  5375	006461'	230300	000007		IDIV	T1,T2		;NUMBER OF CHRS/WORD
  5376	006462'	220640	000006		IMUL	P2,T1		;NUMBER OF CHRS IN BUFFER
  5377	006463'	344600	006454*		AOJA	P1,CPOPJ	;ADD 1 TO POINT TO FIRST DATA WORD
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 118
SCNSER.MAC	25-JAN-91 22:40		OUTPUT UUO

  5378				SUBTTL	OUTPUT UUO
  5379				;CALLED ON OUTPUT OR OUTPUT CLOSE, FROM UUOCON, WITH F SET UP.
  5380
  5381	006464'	260040	013251'	TTYOUT:	PUSHJ	P,CKATTO	;FIRST, MAKE SURE THERE'S A LINE
  5382	006465'	254000	006364*		  JRST	ABTUUO		;WAITING FOR AN INTERRUPT
  5383	006466'	322240	006546'		JUMPE	U,TTYOUS	;ZAPPED AUX CIRCUIT
  5384	006467'	260040	013151'		PUSHJ	P,CHKROM	;MAKE SURE ROOM FOR THIS CHR
  5385	006470'	254000	006464'		  JRST	TTYOUT		;NO ROOM.
  5386	006471'	702600	400000*		NOCHARGE
  5387	006472'	260040	007606'		PUSHJ	P,CLRIMI	;CLEAR IMAGE INPUT STATE
  5388	006473'	205000	000002		MOVSI	S,IOBEG		;IS THIS THE FIRST BUFFER AFTER INIT?
  5389	006474'	205300	000400		MOVSI	T1,LDLOSU	;IF SO, WILL KILL ^O ACTION
  5390	006475'	616004	000002		TDNN	S,DEVIOS(F)	;CHECK F
  5391	006476'	254000	006501'		 JRST	TTOUT1		;NO.
  5392	006477'	412004	000002		ANDCAM	S,DEVIOS(F)	;YES. CLEAR BEG BIT,
  5393	006500'	412305	000031		ANDCAM	T1,LDBDCH(U)	; AND CONTROL O BIT
  5394	006501'	612305	000031	TTOUT1:	TDNE	T1,LDBDCH(U)	;IS CONTROL O ON NOW?
  5395	006502'	254000	006527'		 JRST	TTOUT5		;YES. SKIP THIS WHOLE BUFFER.
  5396	006503'	205000	000024		MOVSI	S,IO+IOFST	;MARK OUTPUT, AND FIRST OF BUFFER
  5397	006504'	437004	000002		IORB	S,DEVIOS(F)	;IN DEVICE DATA BLOCK
  5398	006505'	550604	000010		HRRZ	P1,DEVOAD(F)	;CHECK ADDRESSES OF OUTPUT BLOCK
  5399	006506'	256200	017056'		XCTFU <HRRZ P2,1(P1)>	;GET WORD COUNT
  5400	006507'	554304	000006		HLRZ	T1,DEVBUF(F)	;GET POINTER TO BUFFER HEADER
  5401	006510'	260040	006456'		PUSHJ	P,TTYSZS
  5402	006511'	602640	000777	TTOUT2:	TRNE	P2,777		;TIME TO LET SOMEONE ELSE RUN?
  5403	006512'	254000	006517'		 JRST	TTOUT3		;NO
  5404	006513'	260040	000000*		PUSHJ	P,WSCHED	;YES -- RESCHEDULE
  5405	006514'	550244	000013		HRRZ	U,DDBLDB(F)	;STILL ATTACHED?
  5406	006515'	326240	006517'		JUMPN	U,TTOUT3	;YES -- GO AHEAD
  5407	006516'	260040	013141'		PUSHJ	P,CKATTF	;NO -- WAIT FOR REATTACH
  5408	006517'	256040	017057'	TTOUT3:	XCTFU <ILDB T3,P1>	;GET A USER'S CHARACTER
  5409	006520'	602000	000010		TRNE	S,I		;SEE IF IMAGE MODE
  5410	006521'	664400	000400		 TROA	T3,400		;YES. SET BIT FOR SUPPRESSING FILLERS
  5411	006522'	620400	000400		  TRZ	T3,400		;ELSE CLEAR IN CASE EXTENDED
  5412	006523'	322400	006526'		JUMPE	T3,TTOUT4	;DON'T OUTPUT NULLS
  5413	006524'	260040	013062'		PUSHJ	P,TYO		;OUTPUT THIS CHARACTER (WAIT IF NEEDED)
  5414	006525'	254000	006537'		  JRST	XPNOUT		;TYO WANTS AN INTERRUPT (SEE TYO)
  5415	006526'	367640	006511'	TTOUT4:	SOJG	P2,TTOUT2		;COUNT USER'S ITEMS.
  5416	006527'	260040	000000*	TTOUT5:	PUSHJ	P,ADVBFE		;ADVANCE HIS BUFFERS
  5417	006530'	255000	000000		  JFCL			;JUST SINGLE BUFFER FOR NOW
  5418	006531'	201000	010000		MOVEI	S,IOACT		;CLEAR ACTIVE BIT.
  5419	006532'	413004	000002		ANDCAB	S,DEVIOS(F)	;IN DEVICE DATA BLOCK FOR THE JOB
  5420	006533'	201300	000001		MOVEI	T1,1
  5421	006534'	137300	000075'		DPB	T1,LOPOUT
  5422	006535'	137305	000002		DPB	T1,LDBOPB(U)
  5423	006536'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 119
SCNSER.MAC	25-JAN-91 22:40		TYO GAVE ERROR RETURN - NO MORE ROOM IN TTY CHUNCKS

  5424				SUBTTL	TYO GAVE ERROR RETURN - NO MORE ROOM IN TTY CHUNCKS
  5425	006537'	260040	013141'	XPNOUT:	PUSHJ	P,CKATTF		;HE MUST BE ATTCHED
  5426	006540'	205300	400000		MOVSI	T1,L2LOEX
  5427	006541'	436305	000027		IORM	T1,LDBBYT(U)	;SET FOR EXPANDED OUTPUT
  5428	006542'	200305	000021		MOVE	T1,LDBTOC(U)
  5429	006543'	311300	016506'		CAML	T1,TOEMAX		;ALREADY TOO MANY FOR EXPANDED?
  5430	006544'	350001	000000		AOS	(P)			;YES SKIP RETURN (TO TYO)
  5431								;WILL GET US INTO OUTPUT WAIT
  5432	006545'	263040	000000		POPJ	P,			;NON-SKIP RETURN (TO TYO) GO NOW
  5433
  5434	006546'	260040	006527*	TTYOUS:	PUSHJ	P,ADVBFE	;SKIP THIS BUFFER
  5435	006547'	255000	000000		  JFCL
  5436	006550'	201000	010000		MOVEI	S,IOACT
  5437	006551'	413004	000002		ANDCAB	S,DEVIOS(F)	;JUST TO MAKE SURE
  5438	006552'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 120
SCNSER.MAC	25-JAN-91 22:40		DDT MODE CALLI'S

  5439				SUBTTL DDT MODE CALLI'S
  5440
  5441				;INPUT TO DDT	- CALL AC,[SIXBIT /DDTIN/]  WHERE AC/ ADDR
  5442				;ADDR GETS UP TO 21 WORDS OF ASCIZ, BREAKING ON ANY CHARACTER
  5443
  5444	006553'	260040	014347'	DDTIN::	PUSHJ	P,TTYFNU		;SET U AND F FOR THIS TTY
  5445	006554'	260040	013216'		PUSHJ	P,CKATTI		;CHECK FOR ATTACHED
  5446	006555'	254000	006465*		  JRST	ABTUUO			;INTERRUPT, GET OUT OF UUO
  5447	006556'	702600	400000*		NOCHARGE
  5448	006557'	256200	017060'		XCTFU <HRRZ P2,(M)>
  5449	006560'	505640	440700		HRLI	P2,440700		;SEVEN BIT BYTES, RELOCATED.
  5450	006561'	201600	000124		MOVEI	P1,<21*5>-1		;NUMBER OF BYTES ALLOWED
  5451	006562'	260040	013403'		PUSHJ	P,TWAITC		;GET AT LEAST ONE CHARACTER
  5452	006563'	260040	006430'		PUSHJ	P,SETBRK		;ONE BREAK CHR
  5453	006564'	337005	000012	DDTINL:	SKIPG	LDBTIC(U)		;ANY MORE TO COME?
  5454	006565'	254000	006573'		 JRST	DDTINX			;NO.
  5455	006566'	260040	012654'		PUSHJ	P,TYI			;YES. GO GET ONE
  5456	006567'	254000	006573'		  JRST	DDTINX			;WASNT ANY. I'M CONFUSED.
  5457	006570'	602400	000177		TRNE	T3,177			;NULL?
  5458	006571'	256040	017061'		XCTFU <IDPB T3,P2>		;NO. STORE IN USER AREA
  5459	006572'	367600	006564'		SOJG	P1,DDTINL		;IF MORE SPACE, GET ANOTHER CHARACTER
  5460	006573'	201400	000000	DDTINX:	MOVEI	T3,0			;FLAG END OF STRING
  5461	006574'	256040	017061'		XCTFU <IDPB T3,P2>		; IN USER AREA
  5462	006575'	324740	007171'		PJRST	NOCTRO			;AND RETURN TO USER, CLEARING ^O FLAG
  5463
  5464				;DDTOUT - CALL AC,[SIXBIT /DDTOUT/], AC/ ADDR, ADDR/ ASCIZ /XXX/
  5465
  5466	006576'	256200	017062'	DDTOUT::UMOVE	M,(M)	;GET ADDRESS
  5467	006577'	201500	000003		MOVEI	W,3
  5468	006600'	254000	007042'		JRST	TTYUUO	;HANDLE LIKE OUTSTR
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 121
SCNSER.MAC	25-JAN-91 22:40		HANG UUO

  5469				SUBTTL HANG UUO
  5470
  5471				COMMENT @
  5472
  5473				HANG UUO - HANG A PORT, A JOB, OR ALL JOBS
  5474
  5475					T1/	BITS,,PORT OR JOB #
  5476
  5477					<BITS>  = 1B13 SAME AS 1B16 EXCEPT DON'T DETACH CMD PORT (LET
  5478						       LOGOUT DO IT)
  5479						  1B14 TO HANG A PORT OSTENSIBLY NOT TIED TO
  5480						       A CIRCUIT
  5481						  1B15 TO HANG ALL JOBS THEN GO TO BOOTS LOADED
  5482						  1B16 TO FORCE A LOGOUT EVEN FOR JOBS WITH
  5483						       DETACH OR TIMEOUT SET
  5484						  1B17 IF SPECIFYING A JOB RATHER THAN A PORT
  5485				@
  5486
  5487	006601'	607300	000004	HNGUUO::TLNN	T1,(1B15)	;IF HANGING THE SYSTEM
  5488	006602'	607300	000001		TLNN	T1,(1B17)	;OR SPECIFYING A PORT,
  5489	006603'	254000	006616'		 JRST	HNGUUL		;  NEED LICENSE
  5490
  5491				    ;HANGING A SPECIFIC FRAME - CHECK ACCESS RIGHTS
  5492
  5493	006604'	540600	000002		HRR	P1,J		;SAVE CALLER JOB#
  5494	006605'	500600	000006		HLL	P1,T1		;SAVE <BITS>
  5495	006606'	550740	000006		HRRZ	P4,T1		;P4/ FRAME DESC
  5496	006607'	551700	000054		HRRZI	P3,.ARHNG	;P3/ HANG-FRAME ACCESS
  5497	006610'	260040	000000*		PUSHJ	P,FDRUPX##	;J/ TARGET JOB#
  5498	006611'	263040	000000		  POPJ	P,		;(NO JOB OR INSUFFICIENT ACCESS)
  5499	006612'	500300	000014		HLL	T1,P1		;T1/ <BITS>,,
  5500	006613'	540300	000002		HRR	T1,J		;T1/ <BITS>,,TARGET JOB#
  5501	006614'	550100	000014		HRRZ	J,P1		;J/ CALLER JOB#
  5502	006615'	254000	006621'		JRST	HNGMON
  5503
  5504				    ;HANGING A PORT OR HANGING SYSTEM - NEED WC LICENSE
  5505
  5506	006616'	205340	400000	HNGUUL:	MOVSI	T2,LICWCR
  5507	006617'	616342	000000*		TDNN	T2,JBTLIC(J)
  5508	006620'	263040	000000		 POPJ	P,
  5509
  5510				    ;HERE WHEN ACCESS IS OK, TO DO THE ACTUAL STUFF
  5511
  5512	006621'	550340	000006	HNGMON::HRRZ	T2,T1		;GET JOB OR PORT NUMBER
  5513	006622'	603300	000004		TLNE	T1,(1B15)
  5514	006623'	254000	006720'		 JRST	HNGALL		;HANG ALL JOBS
  5515	006624'	603300	000001		TLNE	T1,(1B17)
  5516	006625'	254000	006710'		 JRST	HNGJOB		;HANG A JOB
  5517	006626'	301340	004415*		CAIL	T2,RPORTN##
  5518	006627'	263040	000000		 POPJ	P,		;BAD PORT
  5519	006630'	540247	005672*		HRR	U,LINTAB(T2)
  5520
  5521	006631'	336005	000026		SKIPN	LDBLOG(U)	;THERE?
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 121-2
SCNSER.MAC	25-JAN-91 22:40		HANG UUO

  5522	006632'	643300	000010		 TLCE	T1,(1B14)	;SKIP IF DESIRE TO HANG ACTIVE PORTS
  5523	006633'	603300	000010		TLNE	T1,(1B14)	;SKIP IF WANT TO HANG INACTIVE PORTS
  5524	006634'	263040	000000		 POPJ	P,		;ERROR RETURN
  5525	006635'	350001	000000		AOS	(P)		;SET TO SKIP RETURN
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 122
SCNSER.MAC	25-JAN-91 22:40		HANG UUO

  5526				    ;HERE FROM ABOVE AND FROM ZAPCIR UUO
  5527				    ;U/ ---,,LDB ADDR
  5528				    ;T1/1B16 if ignoring continue-on-disconnect
  5529
  5530	006636'	261040	000006	HNGPRT:	PUSH	P,T1		;Save the "kill flag"
  5531	006637'	205340	001000		MOVSI	T2,LMLBIO
  5532	006640'	612345	000030		TDNE	T2,LDBMOD(U)
  5533	006641'	260040	012105'		 PUSHJ	P,BIOREL	;RESET BIO ON THIS PORT
  5534	006642'	262040	000006		POP	P,T1		;Restore "kill flag"
  5535
  5536				;HERE WITH U/ LDB ADDR TO HANG THAT PORT
  5537
  5538	006643'	500245	000031		HLL	U,LDBDCH(U)
  5539	006644'	205340	200000		MOVSI	T2,LLLZAP
  5540	006645'	436345	000026		IORM	T2,LDBLOG(U)	;MARK PORT INTERNALLY "ZAPPED"
  5541	006646'	603240	000040		TLNE	U,LDLAUX	;IS IT AN AUX CIRCUIT?
  5542	006647'	254000	011237'		 JRST	HNGAUX		;YES, SO IT'S NOT A COMMAND PORT
  5543	006650'	550205	000000		HRRZ	F,LDBDDB(U)	;F/ DDB ADDR
  5544	006651'	322200	015162'		JUMPE	F,TTYZAP	;Detached, just zap the port
  5545	006652'	205340	020000		MOVSI	T2,TTYATC
  5546	006653'	616344	000004		TDNN	T2,DEVMOD(F)	;IS IT A COMMAND PORT?
  5547	006654'	254000	011237'		 JRST	HNGAUX		;NO
  5548	006655'	135100	006432*		LDB	J,PJOBN		;Get number of controlling job/frame
  5549	006656'	500100	000006		HLL	J,T1		;Set up J for general hang code
  5550					PFALL	HNGTTY
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 123
SCNSER.MAC	25-JAN-91 22:40		Here from above or by PUSHJ.  At entry, F=DDB address, U=LDB

  5551				SUBTTL	 Here from above or by PUSHJ.  At entry, F=DDB address, U=LDB
  5552				; address (if any), J=job/frame # in RH, LH has bit 16 set if
  5553				; continue-on-disconnect is to be ignored.
  5554
  5555	006657'	603100	000020	HNGTTY:	TLNE	J,(1B13)	;WANT TO DETACH?
  5556	006660'	254000	006670'		 JRST	HNGTT1		;NO, LET LOGOUT HANDLE IT
  5557	006661'	513004	000013		HLLZS	DDBLDB(F)	;Clear DDB-to-LDB pointer
  5558	006662'	553004	000000		HRRZS	DEVNAM(F)	;Clear "TTY" from device name
  5559	006663'	322240	006670'		JUMPE	U,HNGTT1	;Skip port code if no port
  5560	006664'	513005	000000		HLLZS	LDBDDB(U)	;Clear LDB-to-DDB pointer
  5561	006665'	260040	015162'		PUSHJ	P,TTYZAP	;ZAP the port
  5562	006666'	135300	000206'		LDB	T1,LDPCOM	;Command mode from LDB
  5563	006667'	137300	000246'		DPB	T1,DDPCOM	;Copy into DDB
  5564
  5565				; Here job/frame is detached and TTY is gone
  5566
  5567	006670'	623100	000022	HNGTT1:	TLZE	J,(1B13!1B16)	;"Really kill"?
  5568	006671'	254000	006703'		 JRST	HNGTT2		;Yes, kill him good
  5569	006672'	135300	000000*		LDB	T1,PVYHNG##	;HANG/ZAP action field
  5570	006673'	302300	000002		CAIE	T1,.PVHCN	;Continue-on-disconnect?
  5571	006674'	254000	006704'		 JRST	HNGTT3		;No, go kill it dead
  5572
  5573				; Here for continue-on-disconnect
  5574
  5575	006675'	135300	000234'		LDB	T1,DDPTZP
  5576	006676'	260040	001140*		PUSHJ	P,TAKTRP	;Cause "TTY ZAP" interrupt (if enabled)
  5577	006677'	200004	000002		MOVE	S,DEVIOS(F)
  5578	006700'	603000	020000		TLNE	S,TIOUSE	;If the DDB is in use,
  5579	006701'	260040	006027'		 PUSHJ	P,TIWAKE	; wake the job
  5580	006702'	263040	000000		POPJ	P,
  5581
  5582				; Here to kill job dead
  5583
  5584	006703'	260040	000000*	HNGTT2:	PUSHJ	P,TTKJOB##	;"Really kill" (no questions)
  5585
  5586				; Here to stop on disconnect or logout on disconnect
  5587
  5588	006704'	205300	040000	HNGTT3:	MOVSI	T1,DCLCOM
  5589	006705'	436304	000012		IORM	T1,DDBDCH(F)	;In command mode at detach time
  5590	006706'	260040	000000*		PUSHJ	P,COMKJB##	;The MAGIC INVOCATION which kills jobs
  5591	006707'	263040	000000		POPJ	P,		;Less magical, returns to caller
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 124
SCNSER.MAC	25-JAN-91 22:40		HERE TO HANG A JOB

  5592				SUBTTL	HERE TO HANG A JOB
  5593				;T1/ BITS,,JOB#  T2/ 0,,JOB#
  5594
  5595	006710'	301340	000000*	HNGJOB:	CAIL	T2,JOBN
  5596	006711'	263040	000000		 POPJ	P,		;BAD JOB NUMBER
  5597	006712'	550207	000000*		HRRZ	F,TTYTAB(T2)
  5598	006713'	322200	006463*		JUMPE	F,CPOPJ		;NO JOB THERE
  5599	006714'	550244	000013		HRRZ	U,DDBLDB(F)
  5600	006715'	200100	000006		MOVE	J,T1		;Copy BITS,,JOB#
  5601	006716'	260040	006657'		PUSHJ	P,HNGTTY	;Force hang for this job/frame
  5602	006717'	254000	006355*		JRST	CPOPJ1
  5603
  5604				;HERE TO HANG EVERYONE AND BRING DOWN THE SYSTEM
  5605
  5606	006720'	402000	000562*	HNGALL::SETZM	CRSHWD##	; THIS KEEPS US FROM NESTING
  5607	006721'	476000	016471'		SETOM	DWNFLG
  5608	006722'	201300	600000		MOVEI	T1,600000
  5609	006723'	436300	004444*		IORM	T1,STATES	;SET SUPER SHUT
  5610	006724'	260040	014746'		PUSHJ	P,SETSHT	;LET SUPERVISOR KNOW
  5611	006725'	200300	000000*		MOVE	T1,HIGHJB
  5612	006726'	261040	000006		PUSH	P,T1
  5613	006727'	505300	000003	HNGAL1:	HRLI	T1,(1B16!1B17)	;HANG JOB AND FORCE LOGOUT
  5614	006730'	550340	000006		HRRZ	T2,T1		;Copy job #
  5615	006731'	260040	006710'		PUSHJ	P,HNGJOB
  5616	006732'	255000	000000		  JFCL
  5617	006733'	373301	000000		SOSLE	T1,(P)
  5618	006734'	254000	006727'		JRST	HNGAL1
  5619	006735'	254000	006070*		JRST	TPOPJ1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 125
SCNSER.MAC	25-JAN-91 22:40		RESET UUO

  5620				SUBTTL RESET UUO
  5621
  5622	006736'	550202	006712*	TTYRES::HRRZ	F,TTYTAB(J)	;CALLED AT RESET TIME
  5623	006737'	322200	006713*		JUMPE	F,CPOPJ		;NO DDB
  5624	006740'	200000	017063'		MOVE	S,[XWD TWTSPC!IOSBKA,BK2IOS!DLRSUP!NOECHO!FCS!17]
  5625	006741'	413004	000002		ANDCAB	S,DEVIOS(F)	;RESET TTY TO NORMAL STATE
  5626	006742'	550244	000013		HRRZ	U,DDBLDB(F)
  5627	006743'	322240	006756'		JUMPE	U,TTYRS1	;NO LINE
  5628	006744'	200305	000030		MOVE	T1,LDBMOD(U)	;CHECK FOR BLOCK I/O MODE SET
  5629	006745'	603300	001000		TLNE	T1,LMLBIO	;FOR THE PORT AND RELEASE
  5630	006746'	260040	012105'		 PUSHJ	P,BIOREL	;BUFFERS AND RESET, IF SO.
  5631	006747'	205300	020000		MOVSI	T1,L2LNTB
  5632	006750'	412305	000027		ANDCAM	T1,LDBBYT(U)	;RESET THE NO TAB FUNCTION
  5633	006751'	551300	100000		HRRZI	T1,L2LTBK
  5634	006752'	260040	007626'		PUSHJ	P,SETTBK	;NOW MAKE SURE TABS ARE BREAK2
  5635	006753'	551300	040000		HRRZI	T1,L2LBBP
  5636	006754'	260040	007626'		PUSHJ	P,SETTBK	;MAKE SURE THAT BACKSPACES ARE BREAK
  5637	006755'	260040	013273'		PUSHJ	P,UUOLDB	;MAKE LINE AGREE WITH S
  5638	006756'	260040	015702'	TTYRS1:	PUSHJ	P,NXTTTY	;GET NEXT DDB
  5639	006757'	263040	000000		  POPJ	P,		;NONE
  5640	006760'	205340	010000		MOVSI	T2,DVNZP
  5641	006761'	612344	000004		TDNE	T2,DEVMOD(F)	;SHOULD WE ZAP ON RESET?
  5642	006762'	254000	006756'		 JRST	TTYRS1		;NO
  5643	006763'	201340	400000		MOVEI	T2,ASSCON
  5644	006764'	260040	000000*		PUSHJ	P,RELEA6	;YES
  5645	006765'	254000	006756'		JRST	TTYRS1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 126
SCNSER.MAC	25-JAN-91 22:40		.STTLK SETUUO FUNCTION

  5646				SUBTTL .STTLK SETUUO FUNCTION
  5647
  5648				COMMENT @
  5649
  5650				CALLED BY SETUUO TO DO THE .STTLK FUNCTION (TALK COMMAND CLONE):
  5651
  5652					MOVE	J,[TALKER JOB #]
  5653					MOVE	T1,[TALKEE JOB #] (0 for OPR+CTY, 400000 for CTY only)
  5654					MOVE	T2,[ILDB POINTER TO MESSAGE IN USER SPACE]
  5655					MOVE	T4,[BYTE COUNT, 0 IF MESSAGE IS ASCIZ]
  5656					PUSHJ	P, STTLK
  5657					  ERROR RETURN	;T1/ ERROR CODE (SEE DEFINITIONS BELOW)
  5658					NORMAL RETURN
  5659
  5660				ADVANCES T2 AS IT GOES, SO T2 IS CORRECTLY UPDATED IF THE MESSAGE
  5661				CAN ONLY BE PARTIALLY OUTPUT.  T4 updated if it started nonzero.
  5662
  5663				DESTROYS T1 T3.
  5664
  5665				@
  5666
  5667			000000	TKROM%==:0	;NO ROOM FOR MORE OUTPUT CHARACTERS
  5668			000001	TKEXS%==:1	;JOB DOESN'T EXIST
  5669			000002	TKATT%==:2	;JOB NOT ATTACHED
  5670			000003	TKBSY%==:3	;JOB BUSY (NO OPER LICENSE & NOT AT CMND LEVEL)
  5671
  5672				PRINTF(<[STTLK to job -1 does not SEND ALL]>)
  5673
  5674	006766'	602300	377777	STTLK::	TRNE	T1,377777	;Zero or 400000?
  5675	006767'	254000	006776'		 JRST	STTLK0		;No, T1 has job number
  5676	006770'	306300	400000		CAIN	T1,400000	;Is 1B18 and nothing else set?
  5677	006771'	644300	400001		 TRCA	T1,400001	;Yes, change T1 to 1 and output to CTY only
  5678	006772'	201300	000002		  MOVEI	T1,2		;No, change T1 to 2 for both OPR and CTY
  5679	006773'	260040	014053'		PUSHJ	P,OPROUT	;Set up to go to right LDB
  5680	006774'	201400	000105'		MOVEI	T3,CTYLDB	;Fake it
  5681	006775'	254000	007021'		JRST	STTLK1
  5682
  5683	006776'	205400	040000	STTLK0:	MOVSI	T3,JNA
  5684				;*;	JUMPL	T1,#SEND#ALL#	;***    NOT IMPLEMENTED   ****
  5685	006777'	305300	006710*		CAIGE	T1,JOBN		;IF BAD JOB #
  5686	007000'	616406	006062*		TDNN	T3,JBTSTS(T1)	;OR JOB NOT ASSIGNED,
  5687					 JRST	[MOVEI	T1,TKEXS%
  5688	007001'	254000	017064'			 POPJ	P,]	;Error return - non existant job
  5689	007002'	550406	006736*		HRRZ	T3,TTYTAB(T1)	;T3/ TALKEE DDB
  5690	007003'	336000	000010		SKIPN	T3
  5691	007004'	256000	000000'		 STOPCD
  5692	007005'	550410	000013		HRRZ	T3,DDBLDB(T3)	;T3/ TALKEE LDB
  5693					JUMPE	T3,[		;IF JOB NOT ATTACHED,
  5694						MOVEI	T1,TKATT%
  5695						POPJ	P,	;  ERROR-RETURN
  5696	007006'	322400	017066'		]
  5697
  5698	007007'	306400	016405'		CAIN	T3,OPRLDB	;No license required to send to OPR or CTY
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 126-2
SCNSER.MAC	25-JAN-91 22:40		.STTLK SETUUO FUNCTION

  5699	007010'	254000	007021'		 JRST	STTLK1
  5700	007011'	500442	006617*		HLL	T4,JBTLIC(J)	;Get caller's license
  5701	007012'	603440	100000		TLNE	T4,LICOPR	;OPER can talk to anyone
  5702	007013'	254000	007021'		 JRST	STTLK1
  5703	007014'	500450	000031		HLL	T4,LDBDCH(T3)	;Get talkee's status
  5704	007015'	603440	020000		TLNE	T4,LDLCOM	;Receive messages if port is at command level
  5705	007016'	254000	007021'		 JRST	STTLK1
  5706	007017'	201300	000003		MOVEI	T1,TKBSY%	;Port is busy
  5707	007020'	263040	000000		POPJ	P,		;Error return
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 127
SCNSER.MAC	25-JAN-91 22:40		.STTLK SETUUO FUNCTION

  5708				    ;HERE WITH T2/ ILDB POINTER, T3/ TALKEE LDB TO SEND A MESSAGE
  5709
  5710	007021'	621440	777777	STTLK1:	TLZ	T4,-1		;Keep only byte count
  5711	007022'	261040	000005		PUSH	P,U		;SAVE U
  5712	007023'	550240	000010		HRRZ	U,T3
  5713	007024'	621340	000037		TLZ	T2,37		;CLEAR INDEX AND INDIRECT FIELDS
  5714	007025'	261040	000007		PUSH	P,T2		;AND SAVE BYTE POINTER
  5715
  5716	007026'	260040	013202'	STTLK2:	PUSHJ	P,IFROOM	;Check for room in destination output buffer
  5717					 JRST	[
  5718						MOVEI	T1,TKROM%
  5719						POP	P,T2
  5720						POP	P,U
  5721						POPJ	P,	;  RESTORE T2 AND U AND ERROR-RETURN
  5722	007027'	254000	017070'		]
  5723	007030'	256040	017074'		XCTFU	<ILDB T3,(P)>	;GET NEXT BYTE OF MESSAGE
  5724	007031'	336000	000011		SKIPN	T4		;If count started at 0, then
  5725	007032'	322400	007037'		 JUMPE	T3,STTLK3	; end at null in ASCIZ
  5726	007033'	260040	013606'		PUSHJ	P,COMTYO	;PRINT THE CHARACTER
  5727	007034'	332000	000011		SKIPE	T4		;If byte count supplied,
  5728	007035'	362440	007037'		 SOJE	T4,STTLK3	; count it down
  5729	007036'	254000	007026'		JRST	STTLK2
  5730
  5731	007037'	262040	000007	STTLK3:	POP	P,T2
  5732	007040'	262040	000005		POP	P,U
  5733	007041'	254000	006717*		JRST	CPOPJ1		;RESTORE T2 AND U AND SUCCESS-RETURN
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 128
SCNSER.MAC	25-JAN-91 22:40		TTCALL UUO

  5734				SUBTTL TTCALL UUO
  5735				;TTCALL AC,E - VALUE OF AC DETERMINES ACTION OF UUO (051)
  5736
  5737				;W has a number from 0 to 17 if called from TTCALL uuo,
  5738				;negative numbers in W if fake call from UUOCON.
  5739
  5740	007042'	260040	014347'	TTYUUO::PUSHJ	P,TTYFNU	;SET F AND U
  5741	007043'	350012	010206'		AOS	TTCCNT(W)	;Count each TTCALL by function
  5742	007044'	200412	007105'		MOVE	T3,TTUUOT(W)	;GET DIPACTH ADRS AND BITS
  5743	007045'	607400	200000		TLNN	T3,TUUATO	;DOES UUO NEED ATTACH FOR OUTPUT?
  5744	007046'	254000	007055'		 JRST	TTYUU1
  5745	007047'	260040	013251'		PUSHJ	P,CKATTO	;YES, CHECK IF ATTACHED FOR OUTPUT
  5746	007050'	254000	006555*		  JRST	ABTUUO		;ABORT THE UUO FOR INTERRUPT
  5747	007051'	326240	007055'		JUMPN	U,TTYUU1
  5748	007052'	260040	013257'		PUSHJ	P,CKATO2	;FORCE ATTACH EVEN IF "SPECIAL"
  5749	007053'	254000	007050*		  JRST	ABTUUO
  5750	007054'	322240	007052'		JUMPE	U,.-2		;JUST TO MAKE SURE
  5751	007055'	607400	400000	TTYUU1:	TLNN	T3, TUUATI	;ATTACH FOR INPUT ?
  5752	007056'	254000	007061'		 JRST	TTYUU2
  5753	007057'	260040	013216'		PUSHJ	P,CKATTI	;YES, CHECK IF ATTACHED
  5754	007060'	254000	007053*		  JRST	ABTUUO		;ABORT FOR INTERRUPT
  5755	007061'	603400	140000	TTYUU2:	TLNE  T3,TUUATR!TUUAIR	;RETURN IF DETACHED ?
  5756	007062'	322240	006737*		JUMPE	U,CPOPJ		;YES
  5757	007063'	607400	600000		TLNN	T3,TUUATO!TUUATI;IF DOING INPUT OR OUTPUT
  5758	007064'	260040	013273'		 PUSHJ	P,UUOLDB	;MUST GET THROUGH UUOLDB
  5759	007065'	607400	020000		TLNN	T3,TUUROM	;NEED ROOM FOR OUTPUT?
  5760	007066'	254000	007071'		 JRST	TTYUU3
  5761	007067'	260040	013151'		PUSHJ	P,CHKROM	;SEE IF WILL GO INTO IOW FOR INTERRUPT
  5762	007070'	254000	007042'		 JRST	TTYUUO
  5763	007071'	603400	040000	TTYUU3:	TLNE	T3,TUUAIR	;MUST IT BE AT USER LEVEL TOO?
  5764	007072'	607240	020000		TLNN	U,LDLCOM
  5765	007073'	334000	000000		 SKIPA			;NEED NOT BE OR IS
  5766	007074'	263040	000000		  POPJ	P,
  5767	007075'	603400	010000		TLNE	T3,TUUEAT	;EAT RESCAN BUFFER?
  5768	007076'	260040	013003'		 PUSHJ	P,TYIEAT	;MUST EAT COMMAND BEFORE INPUT
  5769				IFE OPCRET,<	; KLUDGE TIL OPERATIONS CAN WRITE 10 CODE
  5770					TLNE	T3,TUUFXI
  5771					 PUSHJ	P,FIXIMI	;SET IMAGE STATE FROM DATA MODE
  5772				>;OPCRET=1 IF PROGRAMS THINK TTCALLS IGNORE IMAGE
  5773	007077'	254010	000000		JRST	(T3)
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 129
SCNSER.MAC	25-JAN-91 22:40		BITS FOR THE TTY UUOS

  5774				SUBTTL	BITS FOR THE TTY UUOS
  5775
  5776			400000	TUUATI==400000	;NEED TO BE ATTACHED - INPUT
  5777			200000	TUUATO==200000	;NEED TO BE ATTACHED - OUTPUT
  5778			100000	TUUATR==100000	;RETURN IF NOT ATTACHED
  5779			040000	TUUAIR==040000	;RETURN IF NOT AT USER LEVEL
  5780			020000	TUUROM==020000	;CHECK FOR ROOM FOR AT LEAST 1 CHR BEFORE OUTPUT
  5781			010000	TUUEAT==010000	;EAT COMMAND
  5782			004000	TUUFXI==004000	;SET IMAGE STATE FROM DATA MODE
  5783			002000	TUUIMI==002000	;TURN ON IMAGE STATE (REGARDLESS OF DATA MODE)
  5784
  5785				;THERE ARE SOME NEGATIVE DISPATCHES FAKED BY UUOCON
  5786
  5787	007100'	040000	007516'	TTUNEG:	XWD TUUAIR,LEVDEF		;-5 LEAVE DEFERED ECHO MODE
  5788	007101'	054000	007500'		XWD TUUAIR!TUUEAT!TUUFXI,RDNXT	;-4 READ NEXT CHR AND SKIP
  5789	007102'	000000	007062*		XWD 0,CPOPJ			;   NO LONGER IMPLEMENTED
  5790	007103'	000000	007525'		XWD 0,GETMC			;-2 GET LINE CHRS
  5791	007104'	414000	013403'		XWD TUUATI!TUUEAT!TUUFXI,TWAITC	;-1 WAIT FOR CHR
  5792	007105'	414000	007431'	TTUUOT:	XWD TUUATI!TUUEAT!TUUFXI,INCHRW	;00 INPUT CHR AND WAIT
  5793	007106'	220000	007126'		XWD TUUATO!TUUROM,ONEOUT	;01 OUTPUT 1 CHR
  5794	007107'	054000	007364'		XWD TUUAIR!TUUEAT!TUUFXI,INCHRS	;02 INPUT CHR AND SKIP
  5795	007110'	220000	007153'		XWD TUUATO!TUUROM,OUTSTR	;03 OUTPUT STRING
  5796	007111'	414000	007406'		XWD TUUATI!TUUEAT!TUUFXI,INCHWL	;04 INPUT CHR AND WAIT LINE MODE
  5797	007112'	054000	007375'		XWD TUUAIR!TUUEAT!TUUFXI,INCHSL	;05 INPUT CHR AND SKIP LINE MODE
  5798	007113'	000000	007300'		XWD 0,GETLIN			;06 GET LINE CHRS.
  5799	007114'	200000	007350'		XWD TUUATO,SETLIN		;07 SET LINE CHRS.
  5800	007115'	100000	007163'		XWD TUUATR,TRESCU		;10 INHIBIT COMMAND LINE EATING
  5801	007116'	100000	006276'		XWD TUUATR,TSETBI		;11 CLEAR INPUT BUFFER
  5802	007117'	100000	006324'		XWD TUUATR,TSETBO		;12 CLEAR OUTPUT BUFFER
  5803	007120'	054000	007166'		XWD TUUAIR!TUUEAT!TUUFXI,SKPINC	;13 SKIP IF CHR TO BE INPUT
  5804	007121'	054000	007176'		XWD TUUAIR!TUUEAT!TUUFXI,SKPINL	;14 SKIP IF LINE TO BE INPUT
  5805	007122'	220000	007145'		XWD TUUATO!TUUROM,IONEOU	;15 IMAGE ONE-CHAR OUTPUT
  5806	007123'	220000	007125'		XWD TUUATO!TUUROM,OUTCHI	;16 OUTPUT CHR IMMEDIATE
  5807	007124'	220000	007210'		XWD TUUATO!TUUROM,OUTPTR	;17 OUTPUT FROM POINTER
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 130
SCNSER.MAC	25-JAN-91 22:40		SUBROUTINES FOR TTCALL

  5808				SUBTTL	SUBROUTINES FOR TTCALL
  5809
  5810				;ONEOUT OUTPUTS ONE CHARACTER FROM C(E)
  5811
  5812	007125'	334400	000013	OUTCHI:	SKIPA T3,M	;GET THE CHARACTER FROM ADDRESS FILED
  5813	007126'	256200	017075'	ONEOUT:	UMOVE T3,(M)	;GET CHR FROM ADDRESS
  5814	007127'	702600	400000*		NOCHARGE
  5815	007130'	260040	007606'		PUSHJ P,CLRIMI			;CLEAR IMAGE INPUT STATE
  5816	007131'	606000	000010		TRNN S,10		;IF MODES 10,13,14
  5817	007132'	606000	000002		TRNN S,2		;OR 0,1
  5818	007133'	624400	000600		TRZA T3,600		;SAME AS ANDI 177 SINCE TTGETC GETS 9 BIT BYTE
  5819	007134'	405400	000377		ANDI T3,377		;8 BITS IN MODE 2
  5820	007135'	322400	007102*		JUMPE T3,CPOPJ			;IF NOT NULL,
  5821	007136'	260040	013062'	ONEOU2:	PUSHJ P,TYO
  5822	007137'	254000	006537'		 JRST XPNOUT		;SET BIGGER OUTPUT AND GO TO TYO
  5823	007140'	201300	000001	ONEOU3:	MOVEI T1,1
  5824	007141'	137300	000075'		DPB T1,LOPOUT
  5825	007142'	137305	000002		DPB T1,LDBOPB(U)
  5826	007143'	263040	000000		POPJ P,
  5827
  5828				;IONEOU OUTPUTS ONE CHARACTER FROM LOW 8 BITS OF C(E)
  5829	007144'	334400	000013	ACOTCI:	SKIPA T3,M	;GET CHR IMMEDIATE (AUXCAL)
  5830	007145'	256200	017075'	IONEOU:	UMOVE T3,(M)	;GET CHR
  5831	007146'	702600	400000*		NOCHARGE
  5832	007147'	260040	007606'		PUSHJ P,CLRIMI			;NOT IN INPUT WAIT ANY MORE
  5833	007150'	322200	007126'		JUMPE F,ONEOUT		;IF NO F, SEND 7 BITS
  5834	007151'	660400	000400		TRO T3,400			;FLAG AS IMAGE CHARACTER (NO FILLER)
  5835	007152'	324740	007136'		PJRST ONEOU2		;OUTPUT CHARACTER
  5836
  5837				;OUTSTR OUTPUTS A STRING OF ASCIZ CHARACTERS
  5838
  5839
  5840	007153'	260040	007606'	OUTSTR:	PUSHJ P,CLRIMI			;CLEAR IMAGE INPUT STATE
  5841	007154'	702600	400000*		NOCHARGE
  5842	007155'	505540	440700		HRLI M,(POINT 7,0)			;POINT TO USER AREA
  5843	007156'	256040	017076'	OUTST1:	XCTFU <ILDB T3,M>	;GET CHR
  5844	007157'	322400	007140'		JUMPE T3,ONEOU3			;NULL MARKS END OF STRING, START PTY
  5845	007160'	260040	013062'		PUSHJ P,TYO			;TYPE OUT CHARACTER WITH PARITY
  5846	007161'	254000	006537'		 JRST XPNOUT		;TRY BIGGER OUTPUT BUFFER
  5847	007162'	254000	007156'		JRST OUTST1			;AND GO BACK FOR MORE.
  5848
  5849				;TRESCU IS FOR COMPIL TO READ COMMAND WHICH STARTED IT
  5850
  5851	007163'	205300	100000	TRESCU:	MOVSI T1,LDLECS		;CLEAR BIT IN LINE DATA BLOCK WHICH
  5852	007164'	412305	000031		ANDCAM T1,LDBDCH(U)		; WOULD CAUSE COMMAND TO BE SKIPPED
  5853	007165'	263040	000000		POPJ P,0			;AND RETURN TO USER
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 131
SCNSER.MAC	25-JAN-91 22:40		SKPINC - SKIP IF INCHRW WOULDN'T WAIT (TOO LONG)

  5854				SUBTTL	SKPINC - SKIP IF INCHRW WOULDN'T WAIT (TOO LONG)
  5855
  5856	007166'	337005	000014	SKPINC:	SKIPG	LDBECC(U)	;If anything to be echoed
  5857	007167'	333005	000012		SKIPLE	LDBTIC(U)	;Or characters have been input
  5858	007170'	350001	000000		 AOS	(P)		;Skip return
  5859	007171'			TTYSET::		;OLD CLOCK1 FUNCTION
  5860	007171'	205300	010000	NOCTRO:	MOVSI	T1,L2LLDF
  5861	007172'	412305	000027		ANDCAM	T1,LDBBYT(U)	;TURN OFF LEVDEF FLAG TOO
  5862	007173'	205300	000400		MOVSI	T1,LDLOSU	;TURN OFF CONTROL O BIT
  5863	007174'	412305	000031		ANDCAM	T1,LDBDCH(U)
  5864	007175'	263040	000000		POPJ	P,
  5865
  5866				;SKPINL - SKIP IF INCHWL WOULDN'T WAIT
  5867
  5868	007176'	200305	000012	SKPINL:	MOVE	T1,LDBTIC(U)	;T1/ # READABLE CHARACTERS
  5869	007177'	603240	002000		TLNE	U,LDLIMI	;IF IMAGE MODE
  5870	007200'	337000	000006		 SKIPG	T1		;AND THERE'RE ANY,
  5871	007201'	301300	000110		CAIL	T1,TIWKC	;OR OF THERE'S A LINEFULL,
  5872	007202'	254000	007206'		 JRST	SKPIN1		;  SKIP
  5873	007203'	603240	004000		TLNE	U,LDLBK2	;IF BREAK-ON-PUNCTUATION
  5874	007204'	337005	000016		 SKIPG	LDBBK2(U)	;AND THERE'RE PUNCTUATION CHARS,
  5875	007205'	333005	000015		SKIPLE	LDBBKC(U)	;OR IF THERE'RE BREAK CHARACTERS,
  5876	007206'	350001	000000	SKPIN1:	 AOS (P)		;  SKIP
  5877	007207'	324740	007171'		PJRST	NOCTRO
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 132
SCNSER.MAC	25-JAN-91 22:40		OUTPTR - OUTPUT FROM BYTE POINTER

  5878				SUBTTL	OUTPTR - OUTPUT FROM BYTE POINTER
  5879
  5880	007210'	260040	007606'	OUTPTR:	PUSHJ P,CLRIMI
  5881	007211'	702600	400000*		NOCHARGE
  5882	007212'	256200	017077'		XCTFU <MOVE W,(M)>	;GET BYTE POINTER
  5883	007213'	621500	000037		TLZ W,37		;GET RID OF INDEX AND INDIRECT
  5884	007214'	256040	017100'	OUTPT1:	XCTFU <ILDB T3,W>	;GET NEXT CHARACTER
  5885	007215'	322400	007140'		JUMPE T3,ONEOU3		;DONE - SET OUTPUT BITS&RETURN
  5886	007216'	260040	013062'		PUSHJ P,TYO
  5887	007217'	334000	000000		 SKIPA			;TYO WANTS TO TAKE INTERRUPT
  5888	007220'	254000	007214'		JRST OUTPT1		;TYO DONE, NEXT CHR
  5889	007221'	135400	017101'		LDB T3,[POINT 6,W,11]	;GET SIZE FIELD
  5890	007222'	241400	777772		ROT T3,-6		;MOVE TO POSITION FILED
  5891	007223'	272400	000012		ADDM T3,W		;BACK UP POINTER 1 POSITION
  5892	007224'	256200	017102'		XCTTU <MOVEM W,(M)>	;PUT IT BACK
  5893	007225'	201300	000001		MOVEI T1,1
  5894	007226'	137300	000075'		DPB T1,LOPOUT
  5895	007227'	137305	000002		DPB T1,LDBOPB(U)
  5896	007230'	254000	007060*		JRST ABTUUO		;AND DUMP THIS UUO
  5897
  5898				;OUTPTC - OUTPUT FROM BYTE POINTER + COUNT
  5899
  5900	007231'	260040	007606'	OUTPTC:	PUSHJ	P, CLRIMI
  5901	007232'	702600	400000*		NOCHARGE
  5902	007233'	256200	017103'		XCTFU	<HRRZ P1, 0(M)>	;P1/ COUNT
  5903	007234'	322600	007135*		JUMPE	P1, CPOPJ	;IF 0, DONE
  5904	007235'	256200	017104'		XCTFU	<MOVE W, 1(M)>	;W/ BYTE POINTER
  5905	007236'	621500	000037		TLZ	W, 37		;W/ BYTE POINTER - INDEX&INDIRECT BITS
  5906	007237'	256040	017100'	OUTPC1:	XCTFU	<ILDB T3, W>	;T3/ NEXT CHARACTER
  5907	007240'	260040	013062'		PUSHJ	P, TYO		;OUTPUT IT
  5908	007241'	254000	007244'		  JRST	OUTPC2		;(TYO WANTS AN INTERRUPT)
  5909	007242'	367600	007237'		SOJG	P1, OUTPC1	;IF MORE CHARACTERS, CONTINUE
  5910	007243'	324740	007251'		PJRST	OUTPCF		;FINISH UP
  5911
  5912	007244'	135400	017101'	OUTPC2:	LDB	T3, [POINT 6,W,11]
  5913	007245'	241400	777772		ROT	T3, -6		;POSITION FIELD := SIZE FIELD
  5914	007246'	272400	000012		ADDM	T3, W		;DECREMENT BYTE POINTER BY 1 BYTE
  5915	007247'	260040	007251'		PUSHJ	P, OUTPCF	;FINISH UP
  5916	007250'	254000	007230*		JRST	ABTUUO		;AND DUMP THIS UUO
  5917
  5918					;OUTPCF ALSO USED BY OUTSNW...BELOW
  5919	007251'	256200	017105'	OUTPCF:	XCTBU	<HRRM P1, 0(M)>	;STORE THE UPDATED COUNT
  5920	007252'	256200	017106'		XCTTU	<MOVEM W, 1(M)>	;AND BYTE POINTER
  5921	007253'	201300	000001		MOVEI	T1, 1
  5922	007254'	137300	000075'		DPB	T1, LOPOUT
  5923	007255'	137305	000002		DPB	T1, LDBOPB(U)
  5924	007256'	263040	000000		POPJ	P,
  5925
  5926				;OUTSNW - OUTPUT STRING, NEVER WAIT
  5927
  5928	007257'	260040	007606'	OUTSNW:	PUSHJ	P,CLRIMI
  5929	007260'	702600	400000*		NOCHARGE
  5930	007261'	554305	000005		HLRZ	T1,LDBBIO(U)	;BLOCK OUTPUT IN PROGRESS?
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 132-2
SCNSER.MAC	25-JAN-91 22:40		OUTPTR - OUTPUT FROM BYTE POINTER

  5931	007262'	326300	007234*		JUMPN	T1,CPOPJ	;IF SO, CAN'T DO ANYTHING
  5932	007263'	256200	017103'		XCTFU	<HRRZ P1,(M)>	;P1/ COUNT
  5933	007264'	322600	007041*		JUMPE	P1,CPOPJ1	;NOTHING TO DO
  5934	007265'	256200	017104'		XCTFU	<MOVE W,1(M)>	;W/ BYTE POINTER
  5935	007266'	621500	000037		TLZ	W,37		;W/ BYTE POINTER - INDEX & IND BITS
  5936	007267'	260040	013202'	OUTSN1:	PUSHJ	P,IFROOM	;IS THERE ROOM FOR A CHARACTER?
  5937	007270'	254000	007276'		 JRST	OUTSN2		;NO ROOM - SET FIO GO AWAY
  5938	007271'	256040	017100'		XCTFU	<ILDB T3,W>	;YES ROOM - GET CHARACTER
  5939	007272'	260040	013104'		PUSHJ	P,CMDTYO	;AND OUTPUT IT
  5940	007273'	367600	007267'		SOJG	P1,OUTSN1	;DO IT AGAIN, IF MORE
  5941	007274'	350001	000000		AOS	(P)		;RAN OUT - SKIP RETURN
  5942	007275'	254000	007251'		JRST	OUTPCF		;GO AWAY
  5943	007276'	260040	016077'	OUTSN2:	PUSHJ	P,SETFIO	;SO HE'LL GET ROOM AVAILABLE TRAP
  5944	007277'	254000	007251'		JRST	OUTPCF		;NO ROOM - GO AWAY
  5945
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 133
SCNSER.MAC	25-JAN-91 22:40		GETLCH - READ LINE CHARACTERISTICS

  5946				SUBTTL	GETLCH - READ LINE CHARACTERISTICS
  5947
  5948	007300'	256200	017107'	GETLIN:	XCTFU <MOVE T1,(M)>
  5949	007301'	260040	007444'		PUSHJ P,CHKLN2	;SEE IF THIS USER CAN HAVE THIS INFO
  5950	007302'	254000	007337'		 JRST GETLNZ	;NO
  5951	007303'	135300	000157'		LDB T1,LDPLNO		;GET NUMBER
  5952	007304'	500305	000031		HLL	T1,LDBDCH(U)	; GET BITS FROM LH WHICH ARE SAME
  5953	007305'	621300	276000		TLZ	T1,-1-GTLMSK	; CLEAR ALL BITS IN LH WHICH ARN'T
  5954	007306'	135400	000014'		LDB T3,LDPHDX	;GET HALF DUPLEX BIT FROM CHRS READ
  5955	007307'	332000	000010		SKIPE T3	;SEE IF ON
  5956	007310'	661300	010000		TLO T1,GTLHDX
  5957	007311'	200405	000032		MOVE	T3, LDBDCX(U)
  5958	007312'	622400	400000		TRZE	T3, LXRESC	;READ AND CLEAR "ESCAPE SEEN"
  5959	007313'	661300	004000		TLO	T1, GTLESC	;RETURN ITS OLD VALUE
  5960	007314'	622400	200000		TRZE	T3, LXROBS	;READ AND CLEAR "ORANGE BALL SEEN"
  5961	007315'	661300	020000		TLO	T1, GTLOBS	;RETURN ITS OLD VALUE
  5962	007316'	202405	000032		MOVEM	T3, LDBDCX(U)
  5963	007317'	205400	200000		MOVSI	T3, LMLPSP
  5964	007320'	612405	000030		TDNE	T3, LDBMOD(U)	;CHECK FOR UNREAD PORT-STATUS MSG
  5965	007321'	661300	040000		TLO	T1, GTLPSP	;AND SET IF THERE IS ONE
  5966	007322'	135400	000010'		LDB T3,LDPCRD	;GET RETURN DELAY BIT
  5967	007323'	332000	000010		SKIPE T3
  5968	007324'	661300	002000		TLO T1,GTLCRD
  5969	007325'	500245	000031		HLL U,LDBDCH(U)	;THE OTHERS FROM NORMAL BITS
  5970	007326'	200405	000015		MOVE T3,LDBBKC(U)	;GET BREAK COUNTER
  5971	007327'	603240	004000		TLNE U,LDLBK2	;IF IN BREAK 2 MODE
  5972	007330'	270405	000016		ADD T3,LDBBK2(U)	;ADD IN THESE
  5973	007331'	602400	777777		TRNE T3,-1
  5974	007332'	665300	000100		TLOA T1,GTLLRD		;SET LINE READY BIT
  5975	007333'	621300	000100		TLZ T1,GTLLRD		;OR TURN IT OFF
  5976	007334'	641300	000020		TLC T1,GTLLCT		;SENSE OF THIS BIT IS WRONG
  5977	007335'	256200	017110'		XCTTU <MOVEM T1,(M)>
  5978	007336'	263040	000000		POPJ P,
  5979
  5980	007337'	256200	017111'	GETLNZ:	XCTBU <SETZM (M)>
  5981	007340'	263040	000000		POPJ P,
  5982
  5983				; THE FOLLOWING BITS ARE IN THE SAME PLACE IN LDBDCH AS IN GETLCH...
  5984			501777	GTLMSK==LDLNOP!LDLDEF!LDLECS!LDLOSU!LDLNFC!LDLNEC!LDLAUX!LDLLCT!LDLTAB!LDLLCP!LDLPTP!LDLFRM
  5985
  5986			100000	GTLECS==100000	;EAT COMMAND SYNCH (CMD AVAIL FOR RESCAN)
  5987			040000	GTLPSP==40000	;PORT STATUS PENDING (UNREAD, see comment at ACPSM)
  5988			020000	GTLOBS==20000	;ORANGE BALL SEEN
  5989			010000	GTLHDX==10000	;HALF DUPLEX
  5990			004000	GTLESC==4000	;ESCAPE SEEN
  5991			002000	GTLCRD==2000	;CARRIAGE-RETURN(NOT LF) PADDING
  5992			001000	GTLDEF==1000	;DEFERRED ECHO MODE
  5993			000200	GTLNFC==200	;NO FREE CRLF (ON LONG LINES)
  5994			000100	GTLLRD==100	;LINE (BREAK) IN BUFFER
  5995			000020	GTLLCT==20	;NO CASE MAPPING
  5996			000010	GTLTAB==10	;HARDWARE HT
  5997			000002	GTLPTP==2	;PAPER TAPE MODE
  5998			000001	GTLFRM==1	;HARDWARE FF/VT
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 134
SCNSER.MAC	25-JAN-91 22:40		SETLCH - SET LINE CHARACTERISTICS

  5999				SUBTTL	SETLCH - SET LINE CHARACTERISTICS
  6000
  6001	007341'	010000	000004	SLCTAB:	GTLHDX,,TCNHDX
  6002	007342'	002000	000000		GTLCRD,,TCNCRD
  6003	007343'	000200	000027		GTLNFC,,TCNNFC
  6004	007344'	000020	000026		GTLLCT,,TCNLCT
  6005	007345'	000010	000024		GTLTAB,,TCNTAB
  6006	007346'	000002	000030		GTLPTP,,TCNPTP
  6007	007347'	000001	000025		GTLFRM,,TCNFRM
  6008			000007	SLCTBN==.-SLCTAB
  6009
  6010	007350'	256200	017112'	SETLIN:	XCTFU	<HLRZ P1,(M)>	;P1/ 0,,USER BITS
  6011	007351'	640600	000020		TRC	P1, GTLLCT	;INVERT SENSE OF CASE-MAP BIT
  6012	007352'	200640	017113'		MOVE	P2, [-SLCTBN,,SLCTAB]
  6013	007353'	500415	000000	SETLN1:	HLL	T3, (P2)	;T3/ THE BIT
  6014	007354'	607414	000000		TLNN	T3, (P1)	;SET IT OR CLEAR IT?
  6015	007355'	634340	000007		TDZA	T2, T2		;(CLEAR)
  6016	007356'	201340	000001		MOVEI	T2, 1		;(SET)
  6017	007357'	550315	000000		HRRZ	T1, (P2)	;T1/ THE TC#
  6018	007360'	260040	010375'		PUSHJ	P, SETTCN
  6019	007361'	256000	000000'		 STOPCD 		;WHAT ERROR?
  6020	007362'	253640	007353'		AOBJN	P2, SETLN1
  6021	007363'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 135
SCNSER.MAC	25-JAN-91 22:40		CHARACTER INPUT TTCALLS

  6022				SUBTTL	CHARACTER INPUT TTCALLS
  6023
  6024	007364'	702600	400000*	INCHRS:	NOCHARGE
  6025	007365'	260040	007166'		PUSHJ P,SKPINC			;CAN I GET A CHARACTER (CLEAR ^O)
  6026	007366'	254000	007171'	ICS1:	  JRST NOCTRO			;NO. GIVE NON-SKIP RETURN
  6027	007367'	260040	013401'		PUSHJ P,TWAITS
  6028	007370'	263040	000000		  POPJ	P,			;DETACHED
  6029	007371'	260040	012654'		PUSHJ P,TYI			;GET A CHARACTER
  6030	007372'	254000	007366'		  JRST ICS1			;NONE THERE. SKPINC LIED?
  6031	007373'	350001	000000		AOS 0(P)			;GIVE SKIP RETURN
  6032	007374'	254000	007417'		JRST ICW1A			;AND RETURN THE CHARACTER
  6033	007375'	702600	400000*	INCHSL:	NOCHARGE
  6034	007376'	260040	007176'		PUSHJ P,SKPINL			;IS THERE A LINE AVAILABLE?
  6035	007377'	263040	000000		  POPJ P,0			;NO. NON-SKIP RETURN TO USER
  6036	007400'	260040	013340'		PUSHJ P,TWAITL
  6037	007401'	260040	012654'		PUSHJ P,TYI		;GET THE CRH.
  6038	007402'	254000	007366'		 JRST ICS1		;REALLY NONE THERE
  6039	007403'	350001	000000		AOS (P)			;SET FOR SKIP RETURN
  6040	007404'	254000	007416'		JRST ICW1B		;GO (REMEMBER TO CHARGE
  6041
  6042	007405'	350001	000000	I1CHWL:	AOS (P)		;FROM AUXCAL
  6043	007406'	702600	400000*	INCHWL:	NOCHARGE
  6044	007407'	603240	002000	INWL1:	TLNE U,LDLIMI	;CHECK IMAGE MODE
  6045	007410'	607000	000040		TLNN S,IOEND
  6046	007411'	334000	000000		SKIPA
  6047	007412'	254000	007426'		JRST ICH0		;SEND A 0 CHRACTER
  6048	007413'	260040	013340'		PUSHJ P,TWAITL			;WAIT FOR A LINE TO APPEAR
  6049	007414'	260040	012654'		PUSHJ P,TYI			;GO GET A CHARACTER
  6050	007415'	254000	007407'		  JRST INWL1			;IMPOSSIBLE. NO CHARACTERS.
  6051	007416'	306340	000002	ICW1B:	CAIN T2,%CHBRK		;A BREAK?
  6052	007417'	260040	006430'	ICW1A:	PUSHJ P,SETBRK		;YES, CHARGE
  6053	007420'	606000	000010	ICW1:	TRNN S,10		;IF MODES 10,13,14
  6054	007421'	606000	000002		TRNN S,2		;OR 0,1
  6055	007422'	624400	000600		TRZA T3,600		;SAME AS ANDI 177 SINCE TTGETC GETS 9 BIT BYTE
  6056	007423'	405400	000377		ANDI T3,377		;8 BITS IN MODE 2
  6057	007424'	256200	017114'		XCTTU <MOVEM T3,(M)>			;GIVE HIM THE CHARACTER
  6058	007425'	254000	007171'		JRST NOCTRO			;AND NON-SKIP RETURN
  6059
  6060	007426'	201400	000000	ICH0:	MOVEI T3,0
  6061	007427'	254000	007420'		JRST ICW1
  6062
  6063	007430'	350001	000000	I1CHRW:	AOS (P)		;FROM AUXCAL
  6064	007431'	702600	400000*	INCHRW:	NOCHARGE
  6065	007432'	260040	013403'	INRW1:	PUSHJ P,TWAITC			;WAIT FOR A CHARACTER TO APPEAR
  6066	007433'	260040	012654'		PUSHJ P,TYI			;GO GET THE CHARACTER
  6067	007434'	254000	007432'		  JRST INRW1			;IMPOSSIBLE. NONE THERE
  6068	007435'	254000	007417'		JRST ICW1A			;GIVE HIM T3 AND RETURN
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 136
SCNSER.MAC	25-JAN-91 22:40		CHARACTER INPUT TTCALLS

  6069				;Get LDBLOG for GETTAB uuo
  6070	007436'	260040	007445'	GETLOG::PUSHJ	P,CHKLIN	;GETTAB to return LDBLOG.  Check if OK
  6071	007437'	263040	000000		  POPJ	P,		;Error, can not have info
  6072	007440'	334305	000026		SKIPA	T1,LDBLOG(U)
  6073	007441'	201300	000000	RETZRO:	MOVEI	T1,0		;NO LINE THERE, RETURN 0
  6074	007442'	256200	017110'	STOTC1:	UMOVEM	T1,(M)		;RETURN ARGUMENT TO USER'S AREA.
  6075	007443'	254000	007264*		JRST	CPOPJ1		;AND SKIP RETURN.
  6076
  6077	007444'	334240	000006	CHKLN2:	SKIPA	U,T1		;Line # in RH
  6078	007445'	574240	000006	CHKLIN:	HLRE	U,T1		;Line # in LH
  6079	007446'	321240	007452'		JUMPL	U,CKLN1		;-1 for own line
  6080	007447'	303240	005671*		CAILE	U,MXLIN##
  6081	007450'	263040	000000		 POPJ	P,		;Illegal line number
  6082	007451'	334245	006630*		SKIPA	U,LINTAB(U)	;Get addr of LDB
  6083	007452'	260040	014347'	CKLN1:	 PUSHJ	P,TTYFNU	;Find LDB for job
  6084	007453'	322240	007262*		JUMPE	U,CPOPJ		;NO LINE NUMBER THERE
  6085	007454'	550205	000000		HRRZ	F,LDBDDB(U)	;GET THE DDB
  6086	007455'	322200	007453*		JUMPE	F,CPOPJ		;IF NONE, NO ONE CONNECTED
  6087	007456'	135100	006655*		LDB	J,PJOBN		;GET THE JOB NUMBER
  6088	007457'	254000	000000*		JRST	CHKSEG		;AND GO CHECK
  6089
  6090	007460'	260040	007445'	LINJOB::PUSHJ	P,CHKLIN	;Return job which owns a specific line
  6091	007461'	263040	000000		  POPJ	P,
  6092	007462'	550205	000000		HRRZ	F,LDBDDB(U)
  6093	007463'	322200	007441'		JUMPE	F,RETZRO
  6094	007464'	135300	007456*		LDB	T1,PJOBN	;GET THE JOB NUMBER
  6095	007465'	254000	007442'		JRST	STOTC1
  6096
  6097	007466'	260040	007445'	GETLPS::PUSHJ	P,CHKLIN	;Return horizontal position of line
  6098	007467'	263040	000000		  POPJ	P,
  6099	007470'	135300	000175'		LDB	T1,LDPPOS
  6100	007471'	254000	007442'		JRST	STOTC1
  6101
  6102	007472'	260040	007445'	GETMOD::PUSHJ	P,CHKLIN	;Return status (DEVIOS)
  6103	007473'	263040	000000		  POPJ	P,
  6104	007474'	550205	000000		HRRZ	F,LDBDDB(U)
  6105	007475'	322200	007441'		JUMPE	F,RETZRO
  6106	007476'	200304	000002		MOVE	T1,DEVIOS(F)
  6107	007477'	254000	007442'		JRST STOTC1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 137
SCNSER.MAC	25-JAN-91 22:40		CHARACTER INPUT TTCALLS

  6108	007500'	702600	400000*	RDNXT:	NOCHARGE
  6109	007501'	337005	000014		SKIPG LDBECC(U)	;MAKE SURE A CHR IS THERE
  6110	007502'	333005	000012		SKIPLE LDBTIC(U)
  6111	007503'	354001	000000		AOSA (P)
  6112	007504'	263040	000000		POPJ P,			;NO, RETURN
  6113	007505'	200345	000011		MOVE T2,LDBTIT(U)
  6114	007506'	260040	006171'		PUSHJ P,TTGETC
  6115	007507'	255000	000000		 JFCL
  6116	007510'	606000	000010		TRNN S,10		;IF MODES 10,13,14
  6117	007511'	606000	000002		TRNN S,2		;OR 0,1
  6118	007512'	624400	000600		TRZA T3,600		;SAME AS ANDI 177 SINCE TTGETC GETS 9 BIT BYTE
  6119	007513'	405400	000377		ANDI T3,377		;8 BITS IN MODE 2
  6120	007514'	256200	017114'		XCTTU <MOVEM T3,(M)>	;GIVE IT TO HIM
  6121	007515'	263040	000000		POPJ P,
  6122
  6123	007516'	205300	010000	LEVDEF:	MOVSI T1,L2LLDF
  6124	007517'	436305	000027		IORM T1,LDBBYT(U)
  6125	007520'	260040	013510'		PUSHJ P,BPLVD	;TURN OFF BACKPRESSURE IF APPROPRIATE
  6126	007521'	201300	000001		MOVEI T1,1
  6127	007522'	137300	000102'		DPB T1,LOPECO
  6128	007523'	137305	000002		DPB T1,LDBOPB(U)
  6129	007524'	263040	000000		POPJ P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 138
SCNSER.MAC	25-JAN-91 22:40		READ TERMINAL CHARACTERISTICS

  6130				SUBTTL	READ TERMINAL CHARACTERISTICS
  6131
  6132	007525'	256200	017107'	GETMC:	UMOVE T1,(M)	;GET THE LINE HE WANTS THESE FOR
  6133	007526'	260040	007444'		PUSHJ P,CHKLN2
  6134	007527'	254000	007337'		 JRST GETLNZ	;CAN NOT HAVE THEM
  6135	007530'	402000	000006		SETZM	T1	;MAKE UNFILLED FIELDS 0 (ARE THERE ANY?)
  6136	007531'	135400	000172'		LDB T3,LDPFC1	;FILLER CLASS 1
  6137	007532'	137400	007561'		DPB T3,GEPMC1
  6138	007533'	135400	000166'		LDB T3,LDPFC2	;FILLER CLASS 2
  6139	007534'	137400	007562'		DPB T3,GEPMC2
  6140	007535'	135400	000170'		LDB T3,LDPWID	;WIDTH
  6141	007536'	137400	007563'		DPB T3,GEPMC3
  6142	007537'	135400	007564'		LDB T3,GEPMC4	;NO XON, NO TAB, TAB AS BREAK BITS
  6143	007540'	137400	007565'		DPB T3,GEPMC5
  6144	007541'	135400	000011'		LDB T3,LDPIR
  6145	007542'	137400	007566'		DPB T3,GEPMC6
  6146	007543'	135400	000012'		LDB T3,LDPOR
  6147	007544'	137400	007567'		DPB T3,GEPMC7
  6148	007545'	135400	000013'		LDB T3,LDPPAR
  6149	007546'	137400	007570'		DPB T3,GEPMC8
  6150	007547'	135400	000015'		LDB T3,LDPPA
  6151	007550'	137400	007571'		DPB T3,GEPMC9
  6152	007551'	135400	000014'		LDB T3,LDPHDX
  6153	007552'	137400	007572'		DPB T3,GEPM10
  6154	007553'	135400	000016'		LDB T3,LDPPB
  6155	007554'	137400	007573'		DPB T3,GEPM11
  6156	007555'	135400	000017'		LDB T3,LDPPC
  6157	007556'	137400	007574'		DPB T3,GEPM12
  6158	007557'	256200	017110'		UMOVEM T1,(M)
  6159	007560'	263040	000000		POPJ P,
  6160
  6161	007561'	230200	000006	GEPMC1:	POINT 2,T1,16	;FILLER CLASS 1
  6162	007562'	250200	000006	GEPMC2:	POINT 2,T1,14	;FILLER CLASS 2
  6163	007563'	271000	000006	GEPMC3:	POINT 8,T1,12	;WIDTH
  6164	007564'	370305	000027	GEPMC4:	POINT 3,LDBBYT(U),4	;GET NO XON, NO TAB, TAB AS BRK
  6165	007565'	370300	000006	GEPMC5:	POINT 3,T1,4	;LOCATION OF ABOVE IN GETTMC WORD
  6166	007566'	200300	000006	GEPMC6:	POINT 3,T1,19	;IR
  6167	007567'	150300	000006	GEPMC7:	POINT 3,T1,22	;OR
  6168	007570'	140100	000006	GEPMC8:	POINT 1,T1,23	;PAR
  6169	007571'	110300	000006	GEPMC9:	POINT 3,T1,26	;PA
  6170	007572'	100100	000006	GEPM10:	POINT 1,T1,27	;HDX
  6171	007573'	050300	000006	GEPM11:	POINT 3,T1,30	;PB
  6172	007574'	000500	000006	GEPM12:	POINT 5,T1,35	;0 BIT + PC
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 139
SCNSER.MAC	25-JAN-91 22:40		FIXIMI CALLED ON INPUT UUOS OTHER THAN AUXCALS 0,1,2 TO SET

  6173				SUBTTL	FIXIMI CALLED ON INPUT UUOS OTHER THAN AUXCALS 0,1,2 TO SET
  6174				;IMAGE STATE FROM DATA MODE
  6175
  6176	007575'	200305	000031	FIXIMI:	MOVE	T1,LDBDCH(U)
  6177	007576'	607300	000040		TLNN	T1,LDLAUX	;AUX CIRCUIT?
  6178	007577'	602000	000010		TRNE	S,I		;OR DATA MODE = I, IB, B?
  6179	007600'	665300	002000		 TLOA	T1,LDLIMI	;YES: SET IMAGE STATE
  6180	007601'	621300	002000		TLZ	T1,LDLIMI	;NO: CLEAR IMAGE STATE
  6181	007602'	316305	000031		CAMN	T1,LDBDCH(U)	;DID IT CHANGE?
  6182	007603'	263040	000000		 POPJ	P,		;NO
  6183	007604'	202305	000031		MOVEM	T1,LDBDCH(U)	;YES
  6184	007605'	324740	007622'		PJRST	SETLMD
  6185
  6186				;CLRIMI CALLED ON OUTPUT UUOS TO CLEAR IMAGE STATE IF DATA
  6187				;MODE IS NOT IMAGE AND TO TURN OFF BACKPRESSURE (IN GENERAL,
  6188				;TO NOTE THAT THE LINE IS NO LONGER SIMPLY IN INPUT WAIT)
  6189
  6190	007606'	550205	000000	CLRIMI:	HRRZ	F,LDBDDB(U)		;GET ATTACHED JOB, IF ANY
  6191	007607'	322200	007613'		JUMPE	F,CLRIM1		;IF NONE, SKIP PART OF THIS
  6192	007610'	200004	000002		MOVE	S,DEVIOS(F)		;JOB'S IO STATUS FOR TTY
  6193	007611'	602000	000010		TRNE	S,I			;IS IT STILL IN IMAGE MODE?
  6194	007612'	263040	000000		 POPJ	P,0			;YES. FORGET IT.
  6195	007613'	205300	002000	CLRIM1:	MOVSI	T1,LDLIMI		;NO. CLEAR IMAGE BIT AND TIME
  6196	007614'	607240	000040		TLNN	U,LDLAUX		;AUX ALWAYS IN IMAGE MODE
  6197	007615'	616305	000031		TDNN	T1,LDBDCH(U)		;IS IT ON?
  6198	007616'	263040	000000		 POPJ	P,			;NO
  6199	007617'	412305	000031		ANDCAM	T1,LDBDCH(U)		; ..
  6200	007620'	260040	013546'		PUSHJ	P,BPTEST		;WANT TO TURN OFF BACKPRESSURE?
  6201	007621'	260040	013535'		  PUSHJ	P,BPOFF			;YES, NOW TURN OFF BACKPRESSURE
  6202					PFALL	SETLMD
  6203
  6204	007622'	135300	000207'	SETLMD:	LDB	T1,LDPMDF		;GET LINE MODE FLAGS
  6205	007623'	200306	003136'		MOVE	T1,MDFLMD(T1)		;DO TRANSLATION INTO MODE
  6206	007624'	137300	000200'		DPB	T1,LDPLMD		;AND SET INPUT AND ECHO MODES
  6207	007625'	263040	000000		POPJ	P,0			; AND RETURN
  6208	
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 140
SCNSER.MAC	25-JAN-91 22:40		SETTBK - SET TABS AS BREAK

  6209				SUBTTL	SETTBK - SET TABS AS BREAK
  6210				;SETTBK - CALLED WITH
  6211				;	T1/ L2LTBK,,L2LTBK	SET TAB-AS-BREAK
  6212				;	T1/	 0,,L2LTBK	SET TAB-AS-PUNCTUATION
  6213				;	T1/ L2LBBP,,L2LBBP	SET BS-AS-PUNCTUATION
  6214				;	T1/	 0,,L2LBBP	SET BS-AS-BREAK
  6215				;BREAKS T1-T4
  6216
  6217	007626'	200340	000006	SETTBK:	MOVE	T2, T1
  6218	007627'	430305	000027		XOR	T1, LDBBYT(U)
  6219	007630'	607307	000000		TLNN	T1, 0(T2)	;IF THE BIT DIDN'T CHANGE,
  6220	007631'	263040	000000		POPJ	P,		;  JUST RETURN
  6221	007632'	514300	000007		HRLZ	T1, T2
  6222	007633'	432305	000027		XORM	T1, LDBBYT(U)	;INVERT THE LDB BIT
  6223	007634'	201300	000011		MOVEI	T1, 11		;(ASSUME IT'S TAB-AS-BREAK)
  6224	007635'	606340	040000		TRNN	T2, L2LBBP	;IF IT'S BS-AS-PUNCTUATION,
  6225	007636'	254000	007641'		JRST	SETTB1
  6226	007637'	201300	000010		MOVEI	T1, 10		;  CHAR := 10
  6227	007640'	641340	040000		TLC	T2, L2LBBP	;  INVERT SENSE (TO BS-AS-BREAK)
  6228	007641'	603340	777777	SETTB1:	TLNE	T2, -1		;WHICH WAY?
  6229	007642'	324740	007651'		PJRST	PNTOBK		;(PUNCTUATION = BREAK)
  6230	007643'	324740	007644'		PJRST	BKTOPN		;(BREAK = PUNCTUATION)
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 141
SCNSER.MAC	25-JAN-91 22:40		BKTOPN - CALLED WITH U/ LDB ADDR, T1/ <CHAR>

  6231				SUBTTL	BKTOPN - CALLED WITH U/ LDB ADDR, T1/ <CHAR>
  6232				;	   MAKE <CHAR> GO FROM A BREAK TO A PUNCTUATION CHARACTER
  6233				;	   BY ADJUSTING COUNTS
  6234				;	   DESTROYS T1 T2 T3 T4
  6235
  6236	007644'	260040	007662'	BKTOPN:	PUSHJ	P, CHRCNT	;T1/ #UNECHOED,,#ECHOED
  6237	007645'	272305	000016		ADDM	T1, LDBBK2(U)	;ADD TO PUNCTUATION COUNT
  6238	007646'	213000	000006		MOVNS	T1
  6239	007647'	272305	000015		ADDM	T1, LDBBKC(U)	;SUBTRACT FROM BREAK COUNT
  6240	007650'	263040	000000		POPJ	P,
  6241
  6242				;PNTOBK - CALLED WITH U/ LDB ADDR, T1/ <CHAR>
  6243				;	   MAKE <CHAR> GO FROM A PUNCTUATION TO A BREAK CHARACTER
  6244				;	   BY ADJUSTING COUNTS, LINE DELETE POINTER
  6245				;	   DESTROYS T1 T2 T3 T4
  6246
  6247	007651'	260040	007662'	PNTOBK:	PUSHJ	P, CHRCNT	;P2/ #UNECHOED,,#ECHOED
  6248	007652'	272305	000015		ADDM	T1, LDBBKC(U)	;ADD TO BREAK COUNT
  6249	007653'	213000	000006		MOVNS	T1
  6250	007654'	272305	000016		ADDM	T1, LDBBK2(U)	;SUBTRACT FROM PUNCTUATION COUNT
  6251	007655'	322300	007661'		JUMPE	T1, PNTOB1	;IF THERE ARE ANY NEW BREAK CHARACTERS,
  6252	007656'	200345	000010		MOVE	T2, LDBTIP(U)
  6253	007657'	202345	000006		MOVEM	T2, LDBBKP(U)	;  SET LINE-DELETE POINTER TO NOW
  6254	007660'	402005	000007		SETZM	LDBBKI(U)	;  (NO DELETABLE CHARACTERS)
  6255	007661'	263040	000000	PNTOB1:	POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 142
SCNSER.MAC	25-JAN-91 22:40		CHRCNT - CALLED WITH U/ LDB ADDR, T1/ CHAR

  6256				SUBTTL	CHRCNT - CALLED WITH U/ LDB ADDR, T1/ CHAR
  6257				;	   RETURNS T1/ #UNECHOED,,#ECHOED <CHAR>S IN THE INPUT BUFFER
  6258				;	   DESTROYS T1 T2 T3 T4
  6259
  6260	007662'	261040	000014	CHRCNT:	PUSH	P, P1
  6261	007663'	261040	000015		PUSH	P, P2
  6262	007664'	200600	000006		MOVE	P1, T1		;P1/ CHAR
  6263	007665'	400640	000000		SETZ	P2,		;P2/ COUNT
  6264	007666'	200345	000013		MOVE	T2, LDBECT(U)	;T2/ ECHO-TAKER BYTE POINTER
  6265	007667'	332445	000014		SKIPE	T4, LDBECC(U)	;T4/ #UNECHOED,UNREAD CHARACTERS
  6266	007670'	260040	007701'		PUSHJ	P, CNTCHR	;IF ANY, COUNT #<CHAR>S
  6267	007671'	517000	000015		HRLZS	P2		;P2/ UNECHOED,,ECHOED
  6268	007672'	200345	000011		MOVE	T2, LDBTIT(U)	;T2/ CHAR-TAKER BYTE POINTER
  6269	007673'	332445	000012		SKIPE	T4, LDBTIC(U)	;T4/ #ECHOED,UNREAD CHARACTERS
  6270	007674'	260040	007701'		PUSHJ	P, CNTCHR	;IF ANY, COUNT #<CHAR>S
  6271	007675'	200300	000015		MOVE	T1, P2		;T1/ COUNT
  6272	007676'	262040	000015		POP	P, P2
  6273	007677'	262040	000014		POP	P, P1
  6274	007700'	263040	000000		POPJ	P,
  6275
  6276				    ;T2/ BUFFERLET BYTE POINTER, T4/ COUNT
  6277				    ;P1/ <CHAR> TO LOOK FOR, P2/ COUNT TO INCREMENT
  6278
  6279	007701'	260040	006171'	CNTCHR:	PUSHJ	P, TTGETC	;T3/ NEXT CHAR
  6280	007702'	255000	000000		  JFCL			;(EH?)
  6281	007703'	405400	000177		ANDI	T3, 177		;T3/ ASCII PART OF THE CHAR
  6282	007704'	316400	000014		CAMN	T3, P1		;IF IT'S THE <CHAR>,
  6283	007705'	350000	000015		AOS	P2		;  COUNT IT
  6284	007706'	367440	007701'		SOJG	T4, CNTCHR
  6285	007707'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 143
SCNSER.MAC	25-JAN-91 22:40		SETPTP - SETS PAPER-TAPE-MODE BIT (SIMILAR CODE IN SETLIN)

  6286				SUBTTL	SETPTP - SETS PAPER-TAPE-MODE BIT (SIMILAR CODE IN SETLIN)
  6287				;	   T1/ 0 TO CLEAR PTP, LDLPTP,,0 TO SET PTP MODE
  6288				;	   (DESTROYS T1)
  6289
  6290	007710'	430305	000031	SETPTP:	XOR	T1, LDBDCH(U)
  6291	007711'	607300	000002		TLNN	T1, LDLPTP	;IF IT'S NOT CHANGING,
  6292	007712'	263040	000000		POPJ	P,		;  JUST RETURN
  6293	007713'	433305	000031		XORB	T1, LDBDCH(U)	;SET DCH BIT
  6294	007714'	603300	000002		TLNE	T1, LDLPTP	;IN PTP MODE?
  6295	007715'	634300	000006		TDZA	T1, T1		;YES: ECHO CR AS CR
  6296	007716'	201300	000001		MOVEI	T1, 1		;NO: ECHO CR AS CRLF
  6297	007717'	137300	000034'		DPB	T1, LDSECR
  6298	007720'	200300	017115'		MOVE	T1, [LTSECR]
  6299	007721'	436305	000050		IORM	T1, LDBTMT(U)
  6300	007722'	201300	000001		MOVEI	T1, 1
  6301	007723'	137300	000071'		DPB	T1, LOPSTC	;SET SEND-CHARACTERISTICS
  6302	007724'	137305	000002		DPB	T1, LDBOPB(U)	;SET WANT-OUTPUT
  6303	007725'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 144
SCNSER.MAC	25-JAN-91 22:40		PSEUDO-TTYS

  6304				SUBTTL PSEUDO-TTYS
  6305
  6306				;CREPTY UUO - CREATE A PTY
  6307				;
  6308				;	CREPTY	AC,
  6309				;	  ERROR RETURN	;AC/ ERROR CODE
  6310				;	NORMAL RETURN	;AC/ PORT1#,,PORT2#
  6311
  6312			000001	CPNPT%==1	;OUT OF PTYS (OR THERE NEVER WERE ANY)
  6313			000002	CPNRM%==2	;NO ROOM FOR PTYS (OUT OF DDBS)
  6314
  6315	007726'	260040	007750'	CREPTY::PUSHJ	P, GETPP	;GET A PORT# PAIR. T1/ EVEN SIDE #
  6316					  JRST	[MOVEI	T1,CPNPT%
  6317	007727'	254000	017116'			 JRST	CPERR	]
  6318	007730'	202300	000014		MOVEM	T1, P1
  6319	007731'	260040	007767'		PUSHJ	P, PTYLDB	;SET UP ITS LDB. U/ LDB ADDR
  6320	007732'	506240	000015		HRLM	U, P2		;P2/ EVEN-SIDE LDB,,---
  6321	007733'	260040	010023'		PUSHJ	P, PTYDDB	;SET UP ITS DDB. F/ DDB ADDR
  6322					  JRST	[MOVEI	T1, CPNRM%
  6323	007734'	254000	017120'			 JRST	CPERR	]
  6324	007735'	542200	000015		HRRM	F, P2		;P2/ EVEN-SIDE LDB,,DDB
  6325	007736'	201314	000001		MOVEI	T1, 1(P1)	;T1/ ODD-SIDE PORT#
  6326	007737'	260040	007767'		PUSHJ	P, PTYLDB	;SET UP ITS LDB. U/ LDB ADDR
  6327	007740'	260040	010023'		PUSHJ	P, PTYDDB	;SET UP ITS DDB. F/ DDB ADDR
  6328					  JRST	[HRRZ	F, P2
  6329						 PUSHJ	P, TTYKDB	;FREE EVEN DDB
  6330						 HLRZ	U, P2
  6331						 HLLZS	LDBDDB(U)	;DETACH EVEN LDB
  6332						 SETZM	LDBLOG(U)	;FREE EVEN LDB (leave LDPHST)
  6333						 MOVEI	T1,CPNRM%
  6334	007741'	254000	017122'			 JRST	CPERR	]
  6335	007742'	507000	000014		HRLS	P1		;P1/ EVEN PORT#,,EVEN PORT#
  6336	007743'	660600	000001		TRO	P1, 1		;P1/ EVEN PORT#,,ODD PORT#
  6337	007744'	256200	017131'		UMOVEM	P1, (M)		;GIVE USER THE PORT #S
  6338	007745'	254000	007443*		JRST	CPOPJ1		;SUCCESS!
  6339
  6340	007746'	256200	017110'	CPERR:	UMOVEM	T1, (M)		;GIVE USER THE ERROR CODE
  6341	007747'	263040	000000		POPJ	P,		;FAILURE!
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 145
SCNSER.MAC	25-JAN-91 22:40		GETPP - GET AN EVEN/ODD PTY PORT # PAIR

  6342				SUBTTL	GETPP - GET AN EVEN/ODD PTY PORT # PAIR
  6343				;	  NONSKIP-RETURN IF NONE
  6344				;	  SKIP-RETURN WITH T1/ THE EVEN # ON SUCCESS
  6345				;DESTROYS T2 U
  6346
  6347	007750'	334300	017132'	GETPP:	SKIPA	T1,[<<PORTN##-PPORTN##+1>&<-1-1>>]
  6348	007751'	271300	000002	GETPP1:	ADDI	T1,2		;GO ON TO THE NEXT PAIR
  6349	007752'	303300	777776*		CAILE	T1,PORTN##-2	;IF WE'RE PAST THE TOP PAIR,
  6350	007753'	263040	000000		 POPJ	P,		;  FAIL
  6351	007754'	550346	007451*		HRRZ	T2,LINTAB(T1)	;T2/ EVEN-SIDE LDB ADDR
  6352	007755'	332007	000026		SKIPE	LDBLOG(T2)	;IF IT'S LOGGED-IN,
  6353	007756'	254000	007751'		 JRST	GETPP1		;  TRY THE NEXT PAIR
  6354	007757'	550346	000001*		HRRZ	T2,LINTAB+1(T1)	;T2/ ODD-SIDE LDB ADDR
  6355	007760'	332007	000026		SKIPE	LDBLOG(T2)	;IF IT'S LOGGED-IN,
  6356	007761'	254000	007751'		 JRST	GETPP1		;  TRY THE NEXT PAIR
  6357	007762'	254000	007745*		JRST	CPOPJ1		;SUCCESS!
  6358
  6359				;PTYBUD - GET PTY BUDDY
  6360				;	CALLED WITH U/ PTY LDB
  6361				;	RETURNS U/ PTY LDB OF ITS OTHER END
  6362
  6363	007763'	135240	000157'	PTYBUD:	LDB	U,LDPLNO
  6364	007764'	640240	000001		TRC	U,1
  6365	007765'	550245	007754*		HRRZ	U,LINTAB(U)	;U/ "BUDDY" LDB ADDR
  6366	007766'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 146
SCNSER.MAC	25-JAN-91 22:40		PTYLDB - SET UP A PTY LDB

  6367				SUBTTL	PTYLDB - SET UP A PTY LDB
  6368				;	   CALLED WITH T1/ PTY PORT #
  6369				;	   RETURN WITH U/ THE LDB
  6370
  6371	007767'	550246	007765*	PTYLDB:	HRRZ	U,LINTAB(T1)	;U/ LDB ADDR
  6372	007770'	336000	000005		SKIPN	U
  6373	007771'	256000	000000'		 STOPCD
  6374	007772'	135340	000157'		LDB	T2,LDPLNO	;T2/ LDB'S IDEA OF ITS PORT #
  6375	007773'	312300	000007		CAME	T1,T2
  6376	007774'	256000	000000'		 STOPCD
  6377
  6378				    ;NOW THAT WE'VE GOT THE LDB, INITIALIZE IT
  6379				    ;THIS CODE SHOULD REMAIN ALMOST IDENTICAL WITH
  6380				    ;THE CODE AT AUXINP FOR NEW AUX CIRCUITS
  6381
  6382	007775'	205300	400000		MOVSI	T1,(1B0)	;"Logged-in" bit (term id of 0)
  6383	007776'	135340	000157'		LDB	T2,LDPLNO	;This line's number
  6384	007777'	640340	000001		TRC	T2,1		;Circuit came from its buddy
  6385	010000'	137340	017133'		DPB	T2,[POINT 8,T1,35] ;Origination line number
  6386	010001'	202305	000026		MOVEM	T1,LDBLOG(U)	;Node number gets set by LOGLDB routine
  6387	010002'	200300	000676*		MOVE	T1,SYSNUM##	;System number is
  6388	010003'	137300	000160'		DPB	T1,LDPHST	; origination host number for PTY
  6389	010004'	402005	000003		SETZM	LDBOUT(U)
  6390	010005'	402005	000027		SETZM	LDBBYT(U)
  6391	010006'	402005	000030		SETZM	LDBMOD(U)
  6392	010007'	201300	000120		MOVEI	T1,^D80		;"SET TTY WIDTH 80"
  6393	010010'	137300	000170'		DPB	T1,LDPWID
  6394	010011'	402005	000050		SETZM	LDBTMT(U)
  6395			000000		ZZN==0
  6396					REPEAT TMCSIZ, <SETZM LDBTMR+ZZN(U)
  6397					ZZN==ZZN+1>
  6398	010012'	402005	000044
  6399	010013'	402005	000045
  6400	010014'	205300	041000		MOVSI	T1,LDLDEF!LDLPTY
  6401	010015'	202305	000031		MOVEM	T1,LDBDCH(U)	;DIFFERENT FROM AUX CIRCUITS!
  6402	010016'	205300	400000		MOVSI	T1,LXL120
  6403	010017'	202305	000032		MOVEM	T1,LDBDCX(U)	;BUFFER AS A FAST LINE
  6404	010020'	402005	000004		SETZM	LDBTCB(U)	;NO CHANGED TERMINAL CHARACTERISTICS
  6405	010021'	260040	007622'		PUSHJ	P,SETLMD	;SET THE LINE MODE
  6406	010022'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 147
SCNSER.MAC	25-JAN-91 22:40		PTYDDB - ALLOCATE, LINK IN, ATTACH, INITIALIZE A PTY DDB

  6407				SUBTTL	PTYDDB - ALLOCATE, LINK IN, ATTACH, INITIALIZE A PTY DDB
  6408				;	   CALLED WITH U/ LDB ADDRESS, J/ ATTACHEE JOB #
  6409				;	   NONSKIP-RETURNS IF THERE ARE NO FREE DDBS
  6410				;	   SKIP-RETURNS WITH F/ DDB ADDR ON SUCCESS
  6411
  6412	010023'	550302	007002*	PTYDDB:	HRRZ	T1, TTYTAB(J)	;T1/ CMND PORT DDB
  6413	010024'	336000	000006		SKIPN	T1
  6414	010025'	256000	000000'		 STOPCD 		;(THERE MUST BE ONE)
  6415	010026'	260040	015510'		PUSHJ	P, DDBSR1	;F/ NEW DDB, LINKED AFTER CMND PORT
  6416	010027'	263040	000000		  POPJ	P,		;FAIL-RETURN
  6417
  6418	010030'	137100	007464*		DPB	J, PJOBN	;SET JOB # OF OWNER
  6419	010031'	260040	015554'		PUSHJ	P, SCNNAM	;SET PHYSICAL NAME
  6420	010032'	201300	400000		MOVEI	T1, ASSCON
  6421	010033'	436304	000004		IORM	T1, DEVMOD(F)	;MARK IT ASSIGNED-BY-CONSOLE
  6422	010034'	201300	020000		MOVEI	T1, TTYATC
  6423	010035'	412304	000004		ANDCAM	T1, DEVMOD(F)	;AND NOT THE COMMAND PORT
  6424
  6425	010036'	350001	000000		AOS	(P)		;SET TO SKIP-RETURN
  6426	010037'	324740	015456'		PJRST	COMATT		;AND ATTACH IT
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 148
SCNSER.MAC	25-JAN-91 22:40		AUXCAL UUO

  6427				SUBTTL AUXCAL UUO
  6428
  6429				;AUXCAL UUO
  6430
  6431	010040'	256200	017134'	AUXTUU::XCTFU	<HLRE F,(W)>	;F/ PORT DESCRIPTOR
  6432	010041'	200100	000000*		MOVE	J,JOB		;J/ JOB #
  6433	010042'	260040	016102'		PUSHJ	P,FNDPRT	;F := DDB ADDR.
  6434	010043'	263040	000000		  POPJ	P,		;(NO PORT OR NOT THIS JOB'S PORT)
  6435	010044'	550244	000013		HRRZ	U,DDBLDB(F)	;U/ LDB ADDR
  6436	010045'	322240	007455*		JUMPE	U,CPOPJ		;IF DETACHED, JUST RETURN
  6437	010046'	256200	017135'		XCTFU	<HRRZ T1,(W)>	;T1/ FUNCTION CODE
  6438	010047'	301300	000104		CAIL	T1,AXCLEN	;IF IT'S OUT OF RANGE,
  6439	010050'	263040	000000		 POPJ	P,		;  JUST RETURN
  6440	010051'	350006	010226'		AOS	AXCCNT(T1)	;Count AUXCALs by function
  6441	010052'	200406	010075'		MOVE	T3,AXCTAB(T1)
  6442	010053'	200004	000002		MOVE	S,DEVIOS(F)	;S/ FILE STATUS BITS
  6443	010054'	260040	013273'		PUSHJ	P,UUOLDB	;SET UP LDB
  6444	010055'	607400	020000		TLNN	T3,TUUROM
  6445	010056'	254000	010061'		 JRST	AUXTU0
  6446	010057'	260040	013151'		PUSHJ	P,CHKROM
  6447	010060'	254000	010040'		JRST	AUXTUU
  6448	010061'	603400	040000	AUXTU0:	TLNE	T3,TUUAIR
  6449	010062'	607240	020000		TLNN	U,LDLCOM	;INPUT NOT ALLOWED IF AT COMMAND LEVEL
  6450	010063'	334000	000000		 SKIPA
  6451	010064'	263040	000000		  POPJ	P,
  6452	010065'	603400	010000		TLNE	T3,TUUEAT
  6453	010066'	260040	013003'		 PUSHJ	P,TYIEAT
  6454				IFE OPCRET,<	; KLUDGE TIL OPERATIONS CAN WRITE 10 CODE
  6455					TLNE	T3,TUUFXI
  6456					PUSHJ	P,FIXIMI	;SET IMAGE STATE FROM DATA MODE
  6457				>;OPCRET=1 IF PROGRAMS THINK TTCALLS IGNORE IMAGE
  6458
  6459	010067'	607400	002000		TLNN	T3,TUUIMI
  6460	010070'	254000	010074'		 JRST	AUXTU1
  6461	010071'	205300	002000		MOVSI	T1,LDLIMI
  6462	010072'	436305	000031		IORM	T1,LDBDCH(U)	;SET IMAGE STATE ALWAYS
  6463	010073'	260040	007622'		PUSHJ	P,SETLMD
  6464	010074'	254010	000000	AUXTU1:	JRST	(T3)
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 149
SCNSER.MAC	25-JAN-91 22:40		AUXCAL dispatch table

  6465				SUBTTL	AUXCAL dispatch table
  6466
  6467	010075'	052000	010774'	AXCTAB:	TUUAIR!TUUEAT!TUUIMI,,ACINWC	;0 INPUT CHRS AND WAIT
  6468	010076'	052000	011004'		TUUAIR!TUUEAT!TUUIMI,,ACINSC	;1 INPUT CHRS AND SKIP
  6469	010077'	052000	011016'		TUUAIR!TUUEAT!TUUIMI,,ACINWB	;2 INPUT CHRS ELSE AWAIT BREAK
  6470	010100'	020000	007145'			      TUUROM,,IONEOU	;3 OUTPUT CHARACTER
  6471	010101'	020000	007144'			      TUUROM,,ACOTCI	;4 OUTPUT CHARACTER IMMEDIATE
  6472	010102'	020000	007210'			      TUUROM,,OUTPTR	;5 OUTPUT FROM POINTER
  6473	010103'	000000	006276'				      TSETBI	;6 CLEAR INPUT BUFFER
  6474	010104'	000000	006324'				      TSETBO	;7 CLEAR OUTPUT BUFFER
  6475	010105'	054000	007166'		TUUAIR!TUUEAT!TUUFXI,,SKPINC	;10 SKIP IF CHRS PRESENT
  6476	010106'	004000	007516'			      TUUFXI,,LEVDEF	;11 LEAVE DEFERRED ECHO MODE
  6477	010107'	000000	010742'				      ACSYL	;12 SEND YELLOW BALL
  6478	010110'	000000	010766'				      ACBRKC	;13 SET BREAK CHARACTER
  6479	010111'	000000	010730'			      TCNCRD,,ACTMC	;14 CR DELAY (NOT LF)
  6480	010112'	000001	010730'			       TCNIR,,ACTMC	;15 INPUT RATE
  6481	010113'	000002	010730'			       TCNOR,,ACTMC	;16 OUTPUT RATE
  6482	010114'	000003	010730'			      TCNPAR,,ACTMC	;17 PARITY
  6483	010115'	000004	010730'			      TCNHDX,,ACTMC	;20 HALF DUPLEX
  6484	010116'	000005	010730'			       TCNPA,,ACTMC	;21 PARAMETER A
  6485	010117'	000006	010730'			       TCNPB,,ACTMC	;22 PARAMTER B
  6486	010120'	000007	010730'			       TCNPC,,ACTMC	;23 PARAMETER C
  6487	010121'	000014	010730'			      TCNNXO,,ACTMC	;24 SET NO XON-XOFF
  6488	010122'	000000	010662'				      ACNTB	;25 SET NO SPECIAL TAB HANDLING
  6489	010123'	000000	010670'				      ACTBK	;26 SET TABS AS BREAKS
  6490	010124'	000015	010730'			      TCNWID,,ACTMC	;27 SET WIDTH
  6491	010125'	000016	010730'			      TCNFC1,,ACTMC	;30 SET FILLER CLASS 1
  6492	010126'	000017	010730'			      TCNFC2,,ACTMC	;31 SET FILLER CLASS 2
  6493	010127'	000000	000000*				      SETIO2	;32 SET FILE STATUS, DON'T FIXIMI
  6494	010130'	000000	011023'				      FRCINP	;33 FORCE INPUT
  6495	010131'	000000	012033'				      BLKIO	;34 ENABLE BLOCK INPUT/OUTPUT
  6496	010132'	050000	012123'		       TUUAIR!TUUEAT,,BLKINP	;35 INPUT A BLOCK
  6497	010133'	050000	012137'		       TUUAIR!TUUEAT,,BLKINS	;36 INPUT BLOCK &SKIP IF DATA
  6498	010134'	000000	012242'				      BLKOUT	;37 OUTPUT A BLOCK
  6499	010135'	000000	012610'				      BLKXIN	;40 REQUEST BLOCK INPUT TERMINATION
  6500	010136'	000000	012636'				      BLKXOT	;41 REQUEST BLOCK OUTPUT TERMINATION.
  6501	010137'	000000	012060'				      BLKXIO	;42 TERMINATE BLOCK I/O MODE
  6502	010140'	000000	011166'				      MAKDET	;43 TURN COMMAND PORT TO "AUX"PORT
  6503	010141'	014000	007430'		       TUUEAT!TUUFXI,,I1CHRW	;44 INPUT CHRS AND WAIT
  6504	010142'	054000	007364'		TUUAIR!TUUEAT!TUUFXI,,INCHRS	;45 INPUT CHRS AND SKIP
  6505	010143'	014000	007405'		       TUUEAT!TUUFXI,,I1CHWL	;46 INPUT CHRS AND WAIT LINE
  6506	010144'	054000	007375'		TUUAIR!TUUEAT!TUUFXI,,INCHSL	;47 INPUT CHRS AND SKIP LINE
  6507	010145'	054000	007176'		TUUAIR!TUUEAT!TUUFXI,,SKPINL	;50 SKIP IF LINE PRESENT
  6508	010146'	020000	007125'			      TUUROM,,OUTCHI	;51 OUTPUT CHR IMMEDIATE (NOT IMAGE
  6509	010147'	020000	007153'			      TUUROM,,OUTSTR	;52 OUTPUT STRING
  6510	010150'	000010	010730'			      TCNXON,,ACTMC	;53 SET XON-XOFF PARAMETER
  6511	010151'	000011	010730'			      TCNECH,,ACTMC	;54 SET ECHO CONTROL H PARAMETER
  6512	010152'	000012	010730'			      TCNRXE,,ACTMC	;55 SET REVERSE XON-XOFF PARAMTER
  6513	010153'	000013	010730'			       TCNPD,,ACTMC	;56 SET PARM D (was TCNTYP/TCNKAT)
  6514	010154'	000020	010730'			      TCNBSP,,ACTMC	;57 SEND BACKSPACE FOR RUBOUT SEQ
  6515	010155'	000000	010756'				      ACHNG	;60 SEND HANGUP
  6516	010156'	000000	010761'				      ACPSM	;61 READ PORT STATUS MESSAGE
  6517	010157'	000021	010730'			      TCNERA,,ACTMC	;62 ERASE FOR CHAR DELETE
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 149-2
SCNSER.MAC	25-JAN-91 22:40		AUXCAL dispatch table

  6518	010160'	000022	010730'			      TCNDEF,,ACTMC	;63 DEFERRED-ECHO MODE
  6519	010161'	000000	010736'				      ACSFS	;64 SET FILE STATUS, THEN FIXIMI
  6520	010162'	000023	010730'			      TCNLCO,,ACTMC	;65 SET/CLEAR LOWER CASE ONLY OUTPUT FLAG
  6521	010163'	000000	010700'				      ACBBP	;66 SET BACKSPACE AS BREAK2
  6522	010164'	020000	007231'			      TUUROM,,OUTPTC	;67 OUTPUT FROM POINTER+COUNT
  6523	010165'	000000	010745'				      ACSOB	;70 SEND ORANGE BALL
  6524	010166'	000000	010710'				      ACSOX	;71 SET/CLEAR SUPPRESS-OUTPUT-TRANSLATION
  6525	010167'	000000	011055'				      FRCRSC	;72 FORCE A RESCAN LINE (COUNT/POINTER
  6526	010170'	000000	010341'				      ACTCN	;73 SET TERMINAL CHARACTERISTIC BY NUMBER
  6527	010171'	000000	010350'				      ACTCP	;74 READ CHANGED TC #,,VAL FOR A PTY
  6528	010172'	000000	010723'				      ACNZP	;75 NO-ZAP-ON-RESET BIT
  6529	010173'	000000	007257'				      OUTSNW	;76 OUTPUT STRING, NEVER WAIT
  6530	010174'	000031	010730'			      TCNBSD,,ACTMC	;77 BACKSPACE == RUBOUT/^A
  6531	010175'	000032	010730'			      TCNCLA,,ACTMC	;100 Set/Read Terminal Class
  6532	010176'	000033	010730'			      TCNRTC,,ACTMC	;101 Set/Read LXLRTC (Special ^T Mode)
  6533	010177'	000034	010730'			      TCNKAT,,ACTMC	;102 Set/Read Katakana bit
  6534	010200'	000035	010730'			      TCNTYP,,ACTMC	;103 Set/Read Terminal Type
  6535			000104	AXCLEN==.-AXCTAB
  6536
  6537			000005	  TTNEGL==TTUUOT-TTUNEG		;Number of negative TTCALLS
  6538	010201'			TTCNEG:	BLOCK	TTNEGL+20	;Negative TTCALLs and positive TTCALLs
  6539			010206'	TTCCNT=:TTCNEG+TTNEGL		;Define address for TTCALL 0 count
  6540	010226'			AXCCNT::BLOCK	AXCLEN		;Count of AUXCALs by function
  6541	010332'	777775	000000		SYDVF	(<<TTCNEG,TTNEGL>,<TTCCNT,20>,<AXCCNT,AXCLEN>>)
  6542	010333'	646443	564547
  6543	010334'	000005	010201'
  6544	010335'	646443	435664
  6545	010336'	000020	010206'
  6546	010337'	417043	435664
  6547	010340'	000104	010226'
  6548					;3 items for SYSDVF
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 150
SCNSER.MAC	25-JAN-91 22:40		READ/SET TERMINAL CHARACTERISTICS BY NUMBER

  6549				SUBTTL	READ/SET TERMINAL CHARACTERISTICS BY NUMBER
  6550
  6551	010341'	256200	017136'	ACTCN:	XCTFU	<HLRZ T1,(M)>	;T1/ CHAR #
  6552	010342'	256200	017137'		XCTFU	<HRRE T2,(M)>	;T2/ NEW VALUE OR -1 TO READ
  6553	010343'	260040	010375'		PUSHJ	P,SETTCN	;TRY TO DO IT
  6554	010344'	263040	000000		  POPJ	P,		;(BAD TC# OR BAD NEW VALUE)
  6555	010345'	256200	017140'		XCTBU	<HRRM T3,(M)>	;GIVE USER THE OLD VALUE
  6556	010346'	350001	000000		AOS	(P)
  6557	010347'	263040	000000		POPJ	P,
  6558
  6559				;READ CHANGED TERMINAL CHARACTERISTIC FROM PTY
  6560
  6561	010350'	500245	000031	ACTCP:	HLL	U,LDBDCH(U)
  6562	010351'	607240	040000		TLNN	U,LDLPTY	;IF IT'S NOT A PTY,
  6563	010352'	263040	000000		 POPJ	P,		;  ERROR-RETURN
  6564	010353'	261040	000005		PUSH	P,U
  6565	010354'	260040	007763'		PUSHJ	P,PTYBUD
  6566	010355'	200305	000004		MOVE	T1,LDBTCB(U)	;T1/ CHANGED-TC BITS
  6567	010356'	243300	010361'		JFFO	T1,ACTCP1	;IF NONE,
  6568	010357'	256200	017141'		XCTTU	<SETOM (M)>	;  GIVE CALLER A -1 WORD
  6569	010360'	254000	010373'		JRST	ACTCP2
  6570	010361'	210300	000007	ACTCP1:	MOVN	T1,T2
  6571	010362'	205440	400000		MOVSI	T4,(1B0)
  6572	010363'	242446	000000		LSH	T4,(T1)
  6573	010364'	412445	000004		ANDCAM	T4,LDBTCB(U)	;CLEAR THE "UNREAD" BIT
  6574	010365'	200300	000007		MOVE	T1,T2		;T1/ TC#
  6575	010366'	256200	017142'		XCTBU	<HRLM T1,(M)>	;GIVE CALLER THE TC#
  6576	010367'	474340	000000		SETO	T2,		;-1 = READ TC
  6577	010370'	260040	010375'		PUSHJ	P,SETTCN
  6578	010371'	256000	000000'		 STOPCD
  6579	010372'	256200	017140'		XCTBU	<HRRM T3,(M)>	;GIVE CALLER THE TC VALUE
  6580	010373'	262040	000005	ACTCP2:	POP	P,U
  6581	010374'	254000	007762*		JRST	CPOPJ1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 151
SCNSER.MAC	25-JAN-91 22:40		SETTCN - READ/SET TERMINAL CHARACTERISTICS BY NUMBER

  6582				SUBTTL	SETTCN - READ/SET TERMINAL CHARACTERISTICS BY NUMBER
  6583				;	   CALLED WITH T1/ CHARACTERISTIC # (TCNxxx)
  6584				;		       T2/ NEW VALUE (-1 TO JUST READ)
  6585				;		       U/ LDB ADDR
  6586				;	   NONSKIP-RETURNS IF TC# OR NEW VALUE IS OUT OF BOUNDS
  6587				;	   SKIP-RETURNS WITH T3/ OLD VALUE OTHERWISE
  6588				;
  6589				;SETTC1 - ASSUMES TC# IS IN BOUNDS
  6590
  6591	010375'	305300	000036	SETTCN:	CAIGE	T1,TCNN		;IF TCNxxx OUT OF BOUNDS
  6592	010376'	313346	010475'	SETTC1:	CAMLE	T2,TCVMAX(T1)	;OR NEW VALUE TOO BIG,
  6593	010377'	263040	000000		 POPJ	P,		;  ERROR-RETURN
  6594	010400'	550406	010437'		HRRZ	T3,TCNDSP(T1)	;TYPE, one of TYMTC, BYTTC, or ACxxxC
  6595	010401'	261040	000006		PUSH	P,T1
  6596	010402'	506341	000000		HRLM	T2,(P)		;(P)/ (NEW VALUE OR -1),,TC#
  6597	010403'	260050	000000		PUSHJ	P,(T3)		;DISPATCH
  6598	010404'	254000	006064*		  JRST	TPOPJ		;  ERROR-RETURN
  6599	010405'	205300	040000		MOVSI	T1,LDLPTY
  6600	010406'	331001	000000		SKIPL	(P)		;IF WE WERE JUST READING
  6601	010407'	616305	000031		TDNN	T1,LDBDCH(U)	;OR IT'S NOT A PTY,
  6602	010410'	254000	006735*		 JRST	TPOPJ1		;  JUST SKIP-RETURN
  6603	010411'	550301	000000		HRRZ	T1,(P)
  6604	010412'	210300	000006		MOVN	T1,T1		;T1/ - TC#
  6605	010413'	205340	400000		MOVSI	T2,(1B0)
  6606	010414'	242346	000000		LSH	T2,(T1)		;T2/ LDBTCB BIT FOR THE TC
  6607	010415'	436345	000004		IORM	T2,LDBTCB(U)	;SET IT
  6608	010416'	202401	000000		MOVEM	T3,(P)
  6609	010417'	261040	000005		PUSH	P,U
  6610	010420'	261040	000004		PUSH	P,F
  6611	010421'	261040	000002		PUSH	P,J
  6612	010422'	260040	007763'		PUSHJ	P,PTYBUD	;U/ BUDDY LDB ADDR
  6613	010423'	201300	000200		MOVEI	T1,LXRTCC
  6614	010424'	436305	000032		IORM	T1,LDBDCX(U)	;NOTE THAT A TC WAS CHANGED
  6615	010425'	550205	000000		HRRZ	F,LDBDDB(U)
  6616	010426'	322200	010432'		JUMPE	F,SETTC2	;IF THE OTHER END IS ATTACHED
  6617	010427'	135300	000240'		LDB	T1,DDPTTC
  6618	010430'	322300	010432'		JUMPE	T1,SETTC2	;AND TRAPPING TC CHANGES
  6619	010431'	260040	006157*		PUSHJ	P,TAKTRJ	;  SIGNAL THE CHANGE
  6620	010432'	262040	000002	SETTC2:	POP	P,J
  6621	010433'	262040	000004		POP	P,F
  6622	010434'	262040	000005		POP	P,U
  6623	010435'	262040	000010		POP	P,T3
  6624	010436'	254000	010374*		JRST	CPOPJ1
  6625
  6626				;If TYPE=BYTTC, then ARG = name of byte pointer (LDPxxx)
  6627				;If TYPE=TYMTC, then ARG = name of host-to-base # (TMCxxx)
  6628
  6629				DEFINE Z(NAME,MAXVAL,TYPE,ARG) = <ARG,,TYPE>
  6630	010437'	000004	010540'	TCNDSP:	TCHARS
  6631	010440'	000005	010540'
  6632	010441'	000006	010540'
  6633	010442'	000007	010540'
  6634	010443'	000010	010540'
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 151-2
SCNSER.MAC	25-JAN-91 22:40		SETTCN - READ/SET TERMINAL CHARACTERISTICS BY NUMBER

  6635	010444'	000011	010540'
  6636	010445'	000012	010540'
  6637	010446'	000013	010540'
  6638	010447'	000014	010540'
  6639	010450'	000015	010540'
  6640	010451'	000016	010540'
  6641	010452'	000017	010540'
  6642	010453'	000215'	010533'
  6643	010454'	000000	010574'
  6644	010455'	000172'	010533'
  6645	010456'	000166'	010533'
  6646	010457'	000000	010603'
  6647	010460'	000000	010613'
  6648	010461'	000000	010620'
  6649	010462'	000221'	010533'
  6650	010463'	000212'	010533'
  6651	010464'	000214'	010533'
  6652	010465'	000211'	010533'
  6653	010466'	000210'	010533'
  6654	010467'	000000	010636'
  6655	010470'	000217'	010533'
  6656	010471'	000000	010656'
  6657	010472'	000222'	010533'
  6658	010473'	000020	010540'
  6659	010474'	000000	010650'
  6660
  6661				DEFINE Z(NAME,MAXVAL,TYPE,ARG) = <MAXVAL>
  6662	010475'	000000	000001	TCVMAX:	TCHARS
  6663	010476'	000000	000017
  6664	010477'	000000	000017
  6665	010500'	000000	000001
  6666	010501'	000000	000001
  6667	010502'	000000	000007
  6668	010503'	000000	000007
  6669	010504'	000000	000017
  6670	010505'	000000	000001
  6671	010506'	000000	000001
  6672	010507'	000000	000001
  6673	010510'	000000	000017
  6674	010511'	000000	000001
  6675	010512'	000000	000377
  6676	010513'	000000	000003
  6677	010514'	000000	000003
  6678	010515'	000000	000001
  6679	010516'	000000	000001
  6680	010517'	000000	000001
  6681	010520'	000000	000001
  6682	010521'	000000	000001
  6683	010522'	000000	000001
  6684	010523'	000000	000001
  6685	010524'	000000	000001
  6686	010525'	000000	000001
  6687	010526'	000000	000001
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 151-3
SCNSER.MAC	25-JAN-91 22:40		SETTCN - READ/SET TERMINAL CHARACTERISTICS BY NUMBER

  6688	010527'	377777	777777
  6689	010530'	000000	000001
  6690	010531'	000000	000001
  6691	010532'	377777	777777
  6692
  6693				;BYTTC - update byte in LDB, for things the TYMSAT does not do for us
  6694
  6695	010533'	554306	010437'	BYTTC:	HLRZ	T1,TCNDSP(T1)	;T1/ BYTE POINTER ADDR
  6696	010534'	135406	000000		LDB	T3,(T1)		;Get old value from LDB
  6697	010535'	331000	000007		SKIPL	T2		;If not -1, then
  6698	010536'	137346	000000		 DPB	T2,(T1)		; set new value in the LDB
  6699	010537'	254000	010436*		JRST	CPOPJ1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 152
SCNSER.MAC	25-JAN-91 22:40		SETTCN ROUTINES

  6700				SUBTTL	SETTCN ROUTINES
  6701
  6702				;TYMTC - READ/SET TYMNET TERMINAL CHARACTERISTICS
  6703				;	 CALLED WITH T1/ CHARACTERISTIC # (TCNxxx)
  6704				;		      T2/ -1 (TO JUST READ) OR NEW VALUE
  6705				;	  SKIP-RETURNS WITH T3/ THE OLD VALUE
  6706				;TYMTC1 - CALLED WITH T1/ TYMNET'S TC# (TMCxxx)
  6707
  6708	010540'	554306	010437'	TYMTC:	HLRZ	T1,TCNDSP(T1)	;USER TC# = TYMNET TC#
  6709	010541'	303300	000024	TYMTC1:	CAILE	T1,MAXTMC	;IF OUT-OF-RANGE,
  6710	010542'	256000	000000'		 STOPCD 		;  CRASH
  6711	010543'	135406	000004'		LDB	T3,TABTMR(T1)	;T3/ old received value
  6712	010544'	321340	010537*		JUMPL	T2,CPOPJ1	;IF JUST LOOKING, SUCCESS-RETURN
  6713	010545'	137346	000031'		DPB	T2,TABTMS(T1)	;Store new value to be sent to the TYMSAT
  6714				;Japanese customers use the command "TTY TYPE 1" and expect it to do both
  6715				;"SET TTY D 15" and "SET TTY KATAKANA".  MAGNUM expects Katakana terminals
  6716				;to have parameter D set to octal 17, ASCII terminals have D set to 0.
  6717				;NOTE: The old BASEs translated TYMNET terminal characteristic #15 (PARM-D)
  6718				;from to host to TYMNET terminal characteristic #16 (KATAKANA) before
  6719				;passing the command to the TYMSAT.  As an interim measure, set both when
  6720				;either is changed.
  6721	010546'	302300	000017		CAIE	T1,TMCPD	;"SET TTY D 1"?
  6722	010547'	306300	000020		CAIN	T1,TMCKAT	; or "SET TTY KATAKANA"?
  6723	010550'	334000	000000		 SKIPA			;Yes, set both
  6724	010551'	254000	010563'		  JRST	TYMTC2		;No
  6725				PRINTF	(<[EBUS02.J01 translates PARM-D(15.) to KATAKANA(16.) for ISIS]>)
  6726	010552'	137340	000051'		DPB	T2,TABTMS+TMCKAT;Set KATAKANA bit if parm D is odd
  6727	010553'	137340	000024'		DPB	T2,TABTMR+TMCKAT;EBUS02.J01 does not return KATAKANA bit to us
  6728	010554'	137340	000050'		DPB	T2,TABTMS+TMCPD	;Set parm D if KATAKANA bit is set
  6729	010555'	606340	000001		TRNN	T2,1		;Simulate TYMNET-I's one-bit field
  6730	010556'	634340	000007		TDZA	T2,T2		; Even = 0
  6731	010557'	201340	000017		 MOVEI	T2,17		; Odd = 17
  6732	010560'	137340	000023'		DPB	T2,TABTMR+TMCPD	;Store this value to be overwritten if the node
  6733								; does understand "parameter D"
  6734	010561'	200340	017143'		MOVE	T2,[1B<TMCPD>!1B<TMCKAT>]
  6735	010562'	436345	000050		IORM	T2,LDBTMT(U)	;Mark them both as being changed
  6736
  6737	010563'	213000	000006	TYMTC2:	MOVNS	T1		;Negative of TYMNET's TC
  6738	010564'	205340	400000		MOVSI	T2,(1B0)
  6739	010565'	242346	000000		LSH	T2,(T1)		;Position to bit (B0 thru B20)
  6740	010566'	436345	000050		IORM	T2,LDBTMT(U)	;SET TRANSMIT BIT
  6741	010567'	201300	000001		MOVEI	T1,1
  6742	010570'	137300	000071'		DPB	T1,LOPSTC	;SET SEND-CHARACTERISTICS
  6743	010571'	350001	000000		AOS	(P)		;skip return
  6744	010572'	137305	000002	SETOPB:	DPB	T1,LDBOPB(U)	;SET NEED-OUTPUT
  6745	010573'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 153
SCNSER.MAC	25-JAN-91 22:40		SETTCN ROUTINES

  6746				SUBTTL	SETTCN ROUTINES
  6747
  6748				;WIDTH
  6749
  6750	010574'	135400	000170'	ACWIDC:	LDB	T3,LDPWID
  6751	010575'	321340	010544*		JUMPL	T2,CPOPJ1
  6752	010576'	301340	000024		CAIL	T2,^D20		;IF IT'S TOO SMALL
  6753	010577'	303340	000307		CAILE	T2,^D199	;OR TOO LARGE,
  6754	010600'	263040	000000		 POPJ	P,		;  ERROR-RETURN
  6755	010601'	137340	000170'		DPB	T2,LDPWID	;ELSE SET IT
  6756	010602'	254000	010575*		JRST	CPOPJ1
  6757
  6758				;BACKSPACE FOR DELETE
  6759
  6760	010603'	135400	000220'	ACBSPC:	LDB	T3,LDPERA
  6761	010604'	626400	000001		TRZN	T3,1		;IF ERASE IS SET, SAY BS ISN'T
  6762	010605'	135400	000164'		 LDB	T3,LDPBSP
  6763	010606'	321340	010602*		JUMPL	T2,CPOPJ1
  6764	010607'	137340	000164'		DPB	T2,LDPBSP
  6765	010610'	400340	000000		SETZ	T2,
  6766	010611'	137340	000220'		DPB	T2,LDPERA	;ALWAYS CLEAR ERASE
  6767	010612'	254000	010606*		JRST	CPOPJ1
  6768
  6769				;ERASE FOR DELETE
  6770
  6771	010613'	135400	000220'	ACERAC:	LDB	T3,LDPERA
  6772	010614'	321340	010612*		JUMPL	T2,CPOPJ1
  6773	010615'	137340	000220'		DPB	T2,LDPERA
  6774	010616'	137340	000164'		DPB	T2,LDPBSP	;EITHER SET BOTH OR CLEAR BOTH
  6775	010617'	254000	010614*		JRST	CPOPJ1
  6776
  6777				;DEFERRED ECHO
  6778
  6779	010620'	135400	000216'	ACDEFC:	LDB	T3,LDPDEM
  6780	010621'	321340	010617*		JUMPL	T2,CPOPJ1
  6781	010622'	200305	000031		MOVE	T1,LDBDCH(U)
  6782	010623'	602340	000001		TRNE	T2,1
  6783	010624'	664300	040000		 TROA	T1,LDRDEM
  6784	010625'	620300	040000		  TRZ	T1,LDRDEM
  6785	010626'	250305	000031		EXCH	T1,LDBDCH(U)
  6786	010627'	312305	000031		CAME	T1,LDBDCH(U)	;IF THE BIT CHANGED
  6787	010630'	603300	000100		TLNE	T1,LDLNEC	;AND NO ECHO NOT SET,
  6788	010631'	254000	010621*		 JRST	CPOPJ1
  6789	010632'	201300	000001		MOVEI	T1,1
  6790	010633'	137300	000067'		DPB	T1,LOPSEC	;  SET SEND-ECHO
  6791	010634'	137305	000002		DPB	T1,LDBOPB(U)	;  AND NEED-OUTPUT
  6792	010635'	254000	010631*		JRST	CPOPJ1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 154
SCNSER.MAC	25-JAN-91 22:40		SETTCN ROUTINES

  6793				SUBTTL	SETTCN ROUTINES
  6794
  6795				;PAPER TAPE MODE
  6796
  6797	010636'	135400	000213'	ACPTPC:	LDB	T3,LDPPTP
  6798	010637'	321340	010635*		JUMPL	T2,CPOPJ1
  6799	010640'	137340	000213'		DPB	T2,LDPPTP	;SET PAPER-TAPE BIT TO USER VALUE
  6800	010641'	261040	000010		PUSH	P,T3
  6801	010642'	640340	000001		TRC	T2,1
  6802	010643'	201300	000003		MOVEI	T1,TMCECR
  6803	010644'	260040	010541'		PUSHJ	P,TYMTC1	;AND CR-AS-CRLF TO ITS COMPLEMENT
  6804	010645'	256000	000000'		 STOPCD
  6805	010646'	262040	000010		POP	P,T3
  6806	010647'	254000	010637*		JRST	CPOPJ1
  6807
  6808				;[JMS] Terminal Type - Must be a valid type
  6809
  6810	010650'	135400	000224'	ACTTYP:	LDB	T3,LDPTYP	;T3 := old value
  6811	010651'	316340	017144'		CAMN	T2,[-1]		;Setting or reading?
  6812	010652'	254000	010647*		 JRST	CPOPJ1		;Just reading
  6813	010653'	137340	000223'		DPB	T2,LDPCLA	;Set TTY CLASS to this value
  6814				;Need to verify that this type is valid (such as VT100, HP2621, TYM444, etc)
  6815	010654'	137340	000224'		DPB	T2,LDPTYP	;Valid type, set it
  6816				PRINTF (<[Need to set WIDTH, ERASE, etc at ACTTYP]>)
  6817	010655'	254000	010652*		JRST	CPOPJ1
  6818
  6819				;[dws] Terminal Class - can be any SIXBIT value
  6820
  6821	010656'	135400	000223'	ACTCLA:	LDB	T3,LDPCLA	; T3 := old value
  6822	010657'	312340	017144'		CAME	T2,[-1]		; Don't store if only reading
  6823	010660'	137340	000223'		 DPB	T2,LDPCLA	;  new valued := T2
  6824	010661'	254000	010655*		JRST	CPOPJ1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 155
SCNSER.MAC	25-JAN-91 22:40		NO SPECIAL TAB HANDLING

  6825				SUBTTL	NO SPECIAL TAB HANDLING
  6826
  6827	010662'	135340	000163'	ACNTB:	LDB	T2, LDPNTB
  6828	010663'	256200	017145'		XCTBU	<EXCH T2,(M)>
  6829	010664'	321340	010045*		JUMPL	T2, CPOPJ
  6830	010665'	137340	000243'		DPB	T2, DDPNTB
  6831	010666'	137340	000163'		DPB	T2, LDPNTB
  6832	010667'	263040	000000		POPJ	P,
  6833
  6834				;TABS AS BREAKS
  6835
  6836	010670'	135340	000161'	ACTBK:	LDB	T2, LDPTBK
  6837	010671'	256200	017145'		XCTBU	<EXCH T2,(M)>
  6838	010672'	321340	010664*		JUMPL	T2, CPOPJ
  6839	010673'	137340	000242'		DPB	T2, DDPTBK
  6840	010674'	201300	100000		MOVEI	T1, L2LTBK
  6841	010675'	602340	000001		TRNE	T2, 1		;CHECK LOW ORDER BIT
  6842	010676'	505300	100000		HRLI	T1, L2LTBK
  6843	010677'	324740	007626'		PJRST	SETTBK		;GO SET IT
  6844
  6845				;BACKSPACE AS PUNCTUATION
  6846
  6847	010700'	135340	000162'	ACBBP:	LDB	T2, LDPBBP
  6848	010701'	256200	017145'		XCTBU	<EXCH T2,(M)>
  6849	010702'	321340	010672*		JUMPL	T2, CPOPJ
  6850	010703'	137340	000241'		DPB	T2, DDPBBP
  6851	010704'	201300	040000		MOVEI	T1, L2LBBP
  6852	010705'	602340	000001		TRNE	T2, 1		;CHECK LOW ORDER BIT
  6853	010706'	505300	040000		HRLI	T1, L2LBBP
  6854	010707'	324740	007626'		PJRST	SETTBK		;GO SET IT
  6855
  6856				;SUPPRESS-OUTPUT-TRANSLATION (FOR PTYS ONLY)
  6857
  6858	010710'	500245	000031	ACSOX:	HLL	U, LDBDCH(U)
  6859	010711'	607240	040000		TLNN	U, LDLPTY	;IF IT'S NOT A PTY,
  6860	010712'	263040	000000		POPJ	P,		;  JUST RETURN
  6861	010713'	261040	000005		PUSH	P, U
  6862	010714'	260040	007763'		PUSHJ	P, PTYBUD	;U/ "BUDDY" LDB ADDR
  6863	010715'	135300	000205'		LDB	T1, LDPSOX	;T1/ CURRENT SOX VALUE
  6864	010716'	256200	017146'		XCTBU	<EXCH T1,(M)>	;SWAP WITH ARGUMENT
  6865	010717'	321300	010721'		JUMPL	T1, .+2		;IF USER SUPPLIED A NEW VALUE,
  6866	010720'	137300	000205'		DPB	T1, LDPSOX	;  SET IT
  6867	010721'	262040	000005		POP	P, U
  6868	010722'	263040	000000		POPJ	P,
  6869
  6870				;READ/SET DVNZP BIT
  6871
  6872	010723'	135300	000247'	ACNZP:	LDB	T1, DDPNZP	;T1/ CURRENT VALUE
  6873	010724'	256200	017146'		XCTBU	<EXCH T1, (M)>	;SWAP WITH USER'S
  6874	010725'	321300	010702*		JUMPL	T1, CPOPJ	;(JUST READING)
  6875	010726'	137300	000247'		DPB	T1, DDPNZP	;SET IT
  6876	010727'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 156
SCNSER.MAC	25-JAN-91 22:40		OLD AUXCAL TERMINAL-CHARACTERISTICS DISPATCH

  6877				SUBTTL	OLD AUXCAL TERMINAL-CHARACTERISTICS DISPATCH
  6878
  6879	010730'	554300	000010	ACTMC:	HLRZ	T1,T3		;T1/ CHARACTERISTIC #  (TCNxxx)
  6880	010731'	256200	017147'		XCTFU	<MOVE T2,(M)>	;T2/ USER'S ARGUMENT
  6881	010732'	260040	010376'		PUSHJ	P,SETTC1	;T3 := OLD VALUE
  6882	010733'	255000	000000		  JFCL			;(NEW VALUE WAS BAD)
  6883	010734'	256200	017114'		XCTTU	<MOVEM T3,(M)>	;STORE IT
  6884	010735'	263040	000000		POPJ	P,
  6885
  6886				;SET FILE STATUS BITS, THEN FIX IMAGE STATE
  6887
  6888	010736'	260040	010127*	ACSFS:	PUSHJ	P,SETIO2
  6889	010737'	540244	000013		HRR	U,DDBLDB(F)
  6890	010740'	200004	000002		MOVE	S,DEVIOS(F)
  6891	010741'	324740	007575'		PJRST	FIXIMI
  6892
  6893				;SEND YELLOW BALL
  6894
  6895	010742'	201300	000001	ACSYL:	MOVEI T1,1
  6896	010743'	137300	000077'		DPB T1,LOPSYL		;SET SEND-YELLOW
  6897	010744'	324740	010572'		PJRST SETOPB
  6898
  6899				;SEND ORANGE BALL
  6900
  6901	010745'	200305	000032	ACSOB:	MOVE	T1, LDBDCX(U)
  6902	010746'	627300	004000		TLZN	T1, LXLOOK	;IF IT'S OK TO SEND 1,
  6903	010747'	263040	000000		  POPJ	P,
  6904	010750'	202305	000032		MOVEM	T1, LDBDCX(U)	;  (NOT 2, JUST 1)
  6905	010751'	205300	010000		MOVSI	T1, L2LLDF
  6906	010752'	436305	000027		IORM	T1, LDBBYT(U)	;  FAKE INPUT WAIT SO BALL'LL GO
  6907	010753'	201300	000001		MOVEI	T1, 1
  6908	010754'	137300	000104'		DPB	T1, LOPSOG	;  SET SEND-ORANGE
  6909	010755'	324740	010572'		PJRST	SETOPB
  6910
  6911				;SEND HANGUP (SOFT ZAPPER)
  6912
  6913	010756'	201300	000001	ACHNG:	MOVEI	T1, 1
  6914	010757'	137300	000100'		DPB	T1, LOPHNG	;SET SEND-HANG
  6915	010760'	324740	010572'		PJRST	SETOPB
  6916
  6917				;Read last PORT STATUS message (AUXCAL function .AXPSM=61)
  6918				;From the YAMM dated July 1980: "The port status returned is 4 bits for
  6919				;which there is no documentation.  This operation was implemented for the
  6920				;initial TYMNET-I Dial-Out facility."  The current code in the base,
  6921				;EBUS02.J01, does not have any code for passing this message to the PDP-10.
  6922
  6923	010761'	135300	000176'	ACPSM:	LDB	T1, LDPPSM	; GET LAST PORT STATUS MSG
  6924	010762'	256200	017110'		UMOVEM	T1, (M)		; GIVE IT TO HIM
  6925	010763'	205300	200000		MOVSI	T1, LMLPSP
  6926	010764'	412305	000030		ANDCAM	T1, LDBMOD(U)	; AND NOTE IT'S BEEN READ
  6927	010765'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 157
SCNSER.MAC	25-JAN-91 22:40		SET IMAGE BREAK CHARACTER

  6928				SUBTTL	SET IMAGE BREAK CHARACTER
  6929
  6930	010766'	256200	017107'	ACBRKC:	UMOVE	T1, (M)
  6931	010767'	606300	000400		TRNN	T1, 400		;IF IMAGE BIT NOT ON,
  6932	010770'	400300	000000		SETZ	T1,		;  CLEAR THE CHARACTER
  6933	010771'	137300	000203'		DPB	T1, LDPIMB
  6934	010772'	137300	000244'		DPB	T1, DDPIMB
  6935	010773'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 158
SCNSER.MAC	25-JAN-91 22:40		IMAGE-STATE INPUT AUXCALS

  6936				SUBTTL	IMAGE-STATE INPUT AUXCALS
  6937
  6938	010774'	702600	400000*	ACINWC:	NOCHARGE
  6939	010775'	260040	013403'	ACIN1:	PUSHJ P,TWAITC	;THIS WILL SET MODE TO IMAGE
  6940	010776'	260040	012654'		PUSHJ P,TYI
  6941	010777'	254000	010775'		 JRST ACIN1	;TRY AGAIN
  6942	011000'	405400	000377	ACIN2:	ANDI T3,377
  6943	011001'	256200	017114'		UMOVEM T3,(M)
  6944	011002'	350001	000000		AOS (P)		;SKIP RETURN (AS OPPOSED TO NO PORT)
  6945	011003'	254000	007171'		JRST NOCTRO
  6946
  6947	011004'	702600	400000*	ACINSC:	NOCHARGE
  6948	011005'	337005	000014		SKIPG LDBECC(U)	;ANY CHRS?
  6949	011006'	333005	000012		SKIPLE LDBTIC(U)
  6950	011007'	334000	000000		SKIPA		;YES
  6951	011010'	254000	007622'		JRST SETLMD	;NO, SET TO IMAGE ANYWAY
  6952	011011'	260040	013401'		PUSHJ P,TWAITS
  6953	011012'	263040	000000		  POPJ	P,	;DETACHED
  6954	011013'	260040	012654'		PUSHJ P,TYI
  6955	011014'	254000	007171'		 JRST NOCTRO	;NONE THERE
  6956	011015'	254000	011000'		JRST ACIN2	;GIVE IT TO HIM
  6957
  6958	011016'	702600	400000*	ACINWB:	NOCHARGE
  6959	011017'	260040	013340'		PUSHJ P,TWAITL	;WAIT FOR IMAGE-MODE BREAK CHARACTER OR TIMEOUT
  6960	011020'	260040	012654'		PUSHJ P,TYI
  6961	011021'	263040	000000		 POPJ P,	;PROBABLY END OF FILE SET
  6962	011022'	254000	011000'		JRST ACIN2	;GIVE HIM CHR
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 159
SCNSER.MAC	25-JAN-91 22:40		AUXCAL -- .AXSI=33 - Simulate input

  6963				SUBTTL	AUXCAL -- .AXSI=33 - Simulate input
  6964
  6965	011023'	256200	017062'	FRCINP:	UMOVE	M,(M)		;GET BYTE POINTER
  6966	011024'	621540	000037		TLZ	M,37		;GET RID OF INDEX AND INDIRECT
  6967	011025'	200300	000013		MOVE	T1,M		;Check the string before forcing input
  6968	011026'	201340	000000		MOVEI	T2,0
  6969	011027'	256040	017150'	FRCLP0:	XCTFU <ILDB T3,T1>	;Get char
  6970	011030'	405400	000377		ANDI	T3,377		;Watch out for strange byte sizes
  6971	011031'	332000	000010		SKIPE	T3
  6972	011032'	344340	011027'		 AOJA	T2,FRCLP0	;Loop until null
  6973	011033'	270345	000012		ADD	T2,LDBTIC(U)	;Add to count of chars already input
  6974	011034'	270345	000014		ADD	T2,LDBECC(U)	; and chars not yet echoed
  6975	011035'	311340	016476'		CAML	T2,TIHLTN	;If it would exceed the limit
  6976	011036'	263040	000000		 POPJ	P,		; then do nothing and give error return
  6977
  6978	011037'	256040	017076'	FRCLP1:	XCTFU <ILDB T3,M>
  6979	011040'	405400	000377		ANDI	T3,377		; USE ONLY THE RIGHT 8 BITS
  6980	011041'	322400	010661*		JUMPE	T3,CPOPJ1	;FINISHED
  6981	011042'	260040	001607'		PUSHJ	P,MOVCHR	;PUT CHR IN INPUT BUFFER
  6982	011043'	254000	011037'		  JRST	FRCLP1		;NO ECHO REQUIRED
  6983	011044'	201300	000001		MOVEI	T1,1		;LAST CHAR SWITCHED TO DEFERED ECHO
  6984	011045'	137300	000102'		DPB	T1,LOPECO	;SET NEED-ECHO
  6985	011046'	137305	000002		DPB	T1,LDBOPB(U)	;AND NEED-OUTPUT
  6986	011047'	256040	017076'	FRCLP2:	XCTFU <ILDB T3,M>	;LOOP HERE FOR DEFERED ECHO MODE
  6987	011050'	405400	000377		ANDI	T3,377		; USE ONLY THE RIGHT 8 BITS
  6988	011051'	322400	011041*		JUMPE	T3,CPOPJ1	;FINISHED
  6989	011052'	260040	001607'		PUSHJ	P,MOVCHR	;PUT CHAR IN OTHER INPUT BUFFER
  6990	011053'	255000	000000		  JFCL			;SHOULD ALWAYS SKIP NOW
  6991	011054'	254000	011047'		JRST	FRCLP2		;LOOP IN EITHER CASE
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 160
SCNSER.MAC	25-JAN-91 22:40		FORCE A RESCAN LINE

  6992				SUBTTL	FORCE A RESCAN LINE
  6993
  6994			000000	%FROK==0	;NO ERROR
  6995			000001	%FRAUX==1	;PORT IS AN AUX CIRCUIT
  6996			000002	%FRBIG==2	;COMMAND STRING IS TOO BIG
  6997			000003	%FRCMD==3	;PORT IS IN COMMAND STATE
  6998			000004	%FRBRK==4	;BREAK BEFORE END OF COMMAND STRING (BYTE PTR UPDATED)
  6999			000005	%FRNBK==5	;NO BREAK ENCOUNTERED IN STRING
  7000			000006	%FRFUL==6	;RESCAN COMMAND ALREADY PRESENT
  7001
  7002	011055'	500245	000031	FRCRSC:	HLL	U, LDBDCH(U)
  7003	011056'	603240	000040		TLNE	U, LDLAUX	;IF PORT IS AN AUX CIRCUIT,
  7004					 JRST	[
  7005						MOVEI	P1, %FRAUX
  7006						JRST	FRCRSX	;  ERROR-RETURN
  7007	011057'	254000	017151'		]
  7008	011060'	603240	020000		TLNE	U, LDLCOM	;IF PORT IS IN COMMAND STATE,
  7009					 JRST	[
  7010						MOVEI	P1, %FRCMD
  7011						JRST	FRCRSX	;  ERROR-RETURN
  7012	011061'	254000	017153'		]
  7013	011062'	256200	017155'		XCTFU	<MOVE P1, 0(M)>	;P1/ COUNT
  7014	011063'	301600	000110		CAIL	P1, TIWKC	;IF IT'S TOO BIG,
  7015					 JRST	[
  7016						MOVEI	P1, %FRBIG
  7017						JRST	FRCRSX	;  ERROR-RETURN
  7018	011064'	254000	017156'		]
  7019	011065'	200300	000014	FRCRS1:	MOVE	T1, P1
  7020	011066'	271300	000013		ADDI	T1, <<<TTCHKS-1>*4>-1>
  7021	011067'	231300	000014		IDIVI	T1, <<TTCHKS-1>*4>	;T1/ # CHUNKS NEEDED
  7022	011070'	200340	016375'		MOVE	T2, TTFREN
  7023	011071'	275340	000003		SUBI	T2, TIRSVD	;T2/ # CHUNKS AVAILABLE
  7024	011072'	317300	000007		CAMG	T1, T2		;IF THERE AREN'T ENOUGH,
  7025	011073'	254000	011105'		 JRST	FRCRS2
  7026	011074'	205000	200000		MOVSI	S, TWTSPC
  7027	011075'	437004	000002		IORB	S, DEVIOS(F)	;  NOTE THAT WE NEED MORE ROOM
  7028	011076'	135300	000230'		LDB	T1, DDPTTI	;  T1/ IOW-INTERRUPT ASSIGNMENT
  7029	011077'	260040	000000*		PUSHJ	P, TSTKTJ	;  IF HE TRAPPED IT,
  7030					JRST	[
  7031						PUSHJ	P, SETFIO	;SET TO GIVE I/O DONE TRAP
  7032						PJRST	ABTUUO		;AND GET OUT
  7033	011100'	254000	017160'		]
  7034	011101'	261040	000014		PUSH	P, P1
  7035	011102'	260040	013455'		PUSHJ	P, TOWAT1	;  GO INTO OUTPUT WAIT
  7036	011103'	262040	000014		POP	P, P1
  7037	011104'	254000	011065'		JRST	FRCRS1		;  THEN TRY AGAIN
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 161
SCNSER.MAC	25-JAN-91 22:40		FORCE A RESCAN LINE

  7038	011105'	260040	006276'	FRCRS2:	PUSHJ	P, TSETBI	;CLEAR THE INPUT BUFFER (!)
  7039	011106'	500245	000031		HLL	U, LDBDCH(U)
  7040	011107'	332000	016561'		SKIPE	FRSFLG
  7041	011110'	256000	000000'		 STOPCD
  7042	011111'	476000	016561'		SETOM	FRSFLG		;SET FLAG FOR CMDPGAK
  7043	011112'	661240	020000		TLO	U, LDLCOM	;SET COMMAND STATE
  7044	011113'	402000	016562'		SETZM	FRSDEF
  7045	011114'	623240	001000		TLZE	U, LDLDEF	;CLEAR DEFERRED-ECHO
  7046	011115'	476000	016562'		SETOM	FRSDEF		;(REMEMBER PGHAT IT PGAS)
  7047	011116'	502245	000031		HLLM	U, LDBDCH(U)
  7048	011117'	260040	007622'		PUSHJ	P, SETLMD	;FIX LINE-MODE FIELD
  7049
  7050				    ;HERE TO ACTUALLY FORCE THE INPUT
  7051				    ;P1/ COUNT
  7052
  7053	011120'	256200	017162'		XCTFU	<MOVE PG, 1(M)>	;PG/ BYTE POINTER
  7054	011121'	621140	000037		TLZ	PG, 37		;CLEAR INDEX AND INDIRECT BITS
  7055	011122'	261040	000014		PUSH	P, P1		;0(P)/ COUNT
  7056
  7057	011123'	375001	000000	FRCRS3:	SOSGE	0(P)		;DONE?
  7058	011124'	254000	011140'		JRST	FRCRS4		;(YES)
  7059	011125'	256040	017163'		XCTFU	<ILDB T3, PG>	;T3/ NEXT CHARACTER
  7060	011126'	405400	000377		ANDI	T3, 377		;(ONLY 8 BITS)
  7061	011127'	260040	001607'		PUSHJ	P, MOVCHR	;DEPOSIT IT
  7062	011130'	254000	011131'		JRST	.+1		;(REMOTE-ECHO RETURN)
  7063	011131'	332000	016561'		SKIPE	FRSFLG		;IF CMDPGAK NOT CALLED YET,
  7064	011132'	254000	011123'		JRST	FRCRS3		;  TRY THE NEXT CHARACTER
  7065
  7066				    ;HERE WHEN A "COMMAND LINE" HAS BEEN FORCED
  7067
  7068	011133'	262040	000006		POP	P, T1		;T1/ COUNT LEFT
  7069	011134'	322300	011144'		JUMPE	T1, FRCRS5	;IF THERE'RE CHARS AFTER THE BREAK,
  7070	011135'	256200	017164'		XCTTU	<MOVEM PG, 1(M)>;  STORE BACK THE MODIFIED BYTE POINTER
  7071	011136'	201600	000004		MOVEI	P1, %FRBRK	;  ERROR-RETURN
  7072	011137'	254000	011145'		JRST	FRCRS6
  7073
  7074				    ;HERE WHEN WE RAN OUT OF CHARACTERS BEFORE A "COMMAND LINE"
  7075				    ;WAS FINISHED
  7076
  7077	011140'	262040	000006	FRCRS4:	POP	P, T1
  7078	011141'	402000	016561'		SETZM	FRSFLG		;CLEAR FLAG
  7079	011142'	201600	000005		MOVEI	P1, %FRNBK	;ERROR-RETURN
  7080	011143'	254000	011145'		JRST	FRCRS6
  7081
  7082				    ;HERE WHEN THINGS WERE JUST RIGHT
  7083
  7084	011144'	201600	000000	FRCRS5:	MOVEI	P1, %FROK
  7085					PFALL	FRCRS6
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 162
SCNSER.MAC	25-JAN-91 22:40		FORCE A RESCAN LINE

  7086				    ;CLEAN THINGS UP
  7087
  7088	011145'	336000	016562'	FRCRS6:	SKIPN	FRSDEF		;IF PORT WAS IN DEFERRED ECHO MODE,
  7089	011146'	254000	011151'		JRST	FRCRS7
  7090	011147'	205300	001000		MOVSI	T1, LDLDEF
  7091	011150'	436305	000031		IORM	T1, LDBDCH(U)	;  SET DEFERRED-ECHO AGAIN
  7092	011151'	205300	020000	FRCRS7:	MOVSI	T1, LDLCOM
  7093	011152'	412305	000031		ANDCAM	T1, LDBDCH(U)	;CLEAR COMMAND MODE
  7094	011153'	205300	100000		MOVSI	T1, LDLECS
  7095	011154'	436305	000031		IORM	T1, LDBDCH(U)	;SET EAT-COMMAND-SYNC
  7096	011155'	260040	007622'		PUSHJ	P, SETLMD	;FIX LINE-MODE FIELD
  7097
  7098	011156'	336000	000014	FRCRSX:	SKIPN	P1		;IF NO ERROR OCCURRED,
  7099	011157'	354001	000000		AOSA	(P)		;  PREPARE FOR SKIP-RETURN, ELSE
  7100	011160'	256200	017165'		XCTTU	<MOVEM P1, (W)>	;  USER AC := RETURN CODE
  7101	011161'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 163
SCNSER.MAC	25-JAN-91 22:40		AUXILIARY CIRCUITS

  7102				SUBTTL AUXILIARY CIRCUITS
  7103
  7104				;ONLY ONE AUXILIARY CIRCUIT IS IN THE PROCESS OF BEING BUILT
  7105				;AT ANY ONE TIME. JOBS WANTING TO BUILD AN AUX.
  7106				;CIRCUIT ARE QUEUED ON THE AX QUE. ONCE A CIRCUIT IS READY TO
  7107				;BE BUILT, THE COMMUNICATION WITH THE SUPERVISOR IS
  7108				;CONTROLED BY A STATE CELL (AUXSTA). THE FOLLOWING ARE THE STATES
  7109
  7110			000000	.ASIDL==0	;NOT BUILDING A CIRCUIT
  7111			000001	.ASRQ1==1	;READY TO SEND SUPERVISOR REQUEST
  7112			000002	.ASWR1==2	;WAITING FOR SUPERVISOR RESOPNSE
  7113			000003	.ASRQ2==3	;READY TO RE-SEND SUPERVISOR REQUEST
  7114						;(BECAUSE OF ERROR ON FIRST TRY - PROBABLY
  7115						;COMMUNICATION IS OUT OF SYNC)
  7116			000004	.ASWR2==4	;WAITING FOR SUPERVISOR RESPONSE TO RE-SEND
  7117			000005	.ASLOG==5	;SENDING LOGIN STRING TO SUPERVISOR
  7118			000006	.ASWPT==6	;WAITING FOR A PORT AND A SUPERVISOR RESPONSE
  7119			000007	.ASWTP==7	;RECEIVED AN AUX CIRCUIT (MSG TYPE 7) FOR A PORT PENDING A
  7120						; ZAPPER, SO NOW WAITING FOR SUPERVISOR RESPONSE SO WE CAN
  7121						; RE-SEND A SUPERVISOR REQUEST WITHOUT GETTING OUT OF SYNC
  7122						;( ** NOT SUPPOSED TO HAPPEN ** SEE TTYZNE & ZAPBUG ** )
  7123
  7124				;ERROR NUMBERS FROM THE PDP-10
  7125
  7126			000001	CX2AX%==1	;TOO MANY AUX CIRCUITS FOR THIS JOB AND NO AC LICENSE
  7127			000002	CXLOG%==2	;USER NAMES DO NOT MATCH AND NO AC LICENSE
  7128			000003	CXDCB%==3	;NO DDB'S AVAILABLE
  7129			000004	CXNRR%==4	;NO RESPONSE TO FIRST REQUEST
  7130			000005	CXNRL%==5	;NO RESPONSE AFTER STRING SENT
  7131			000006	CXNCH%==6	;NO PORT RECEIVED
  7132			000007	CXERR%==7	;ERROR FROM FIRST RESPONSE
  7133
  7134				;SPECIAL ROUTINE WHEN COMMING OUT OF IO WAIT FINDS
  7135				;AN AUX CIRCUIT ZAPPED
  7136
  7137	011162'	201300	600000	AUXRID:	MOVEI	T1,ASSCON!ASSPRG
  7138	011163'	616304	000004		TDNN	T1,DEVMOD(F)		;STILL ASSIGNED?
  7139	011164'	260040	015044'		 PUSHJ	P,TTYKDB		;NO, REMOVE DDB
  7140	011165'	254000	007250*		JRST	ABTUUO			;IN ANY CASE, ABORT
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 164
SCNSER.MAC	25-JAN-91 22:40		TURN THE COMMAND PORT INTO SOMETHING LIKE AN "AUX" PORT

  7141				SUBTTL	TURN THE COMMAND PORT INTO SOMETHING LIKE AN "AUX" PORT
  7142
  7143	011166'	205300	020000	MAKDET:	MOVSI	T1,TTYATC	;MUST BE COMMAND PORT
  7144	011167'	616304	000004		TDNN	T1,DEVMOD(F)
  7145	011170'	263040	000000		 POPJ	P,
  7146	011171'	322240	010725*		JUMPE	U,CPOPJ		;DO NOT ALLOW IF NOT COMMAND OR DET
  7147	011172'	205300	200000		MOVSI	T1,LLLZAP
  7148	011173'	612305	000026		TDNE	T1,LDBLOG(U)
  7149	011174'	263040	000000		 POPJ	P,		;OR IF WAITING TO LOG OUT
  7150	011175'	205300	000400		MOVSI	T1,LICAC
  7151	011176'	612302	007011*		TDNE	T1,JBTLIC(J)
  7152	011177'	254000	011207'		 JRST	MAKDLC		;MUST HAVE LIC OR ONLY ONE OTHER PORT
  7153	011200'	260040	015700'		PUSHJ	P,FRSTTY
  7154	011201'	254000	011207'		  JRST	MAKDLC
  7155	011202'	260040	015702'		PUSHJ	P,NXTTTY
  7156	011203'	254000	011207'		  JRST	MAKDLC
  7157	011204'	260040	015702'		PUSHJ	P,NXTTTY
  7158	011205'	254000	011207'		  JRST	MAKDLC
  7159	011206'	263040	000000		POPJ	P,		;ERROR, ALREADY HAVE TWO PORTS
  7160	011207'	550202	010023*	MAKDLC:	HRRZ	F,TTYTAB(J)
  7161	011210'	554304	000013		HLRZ	T1,DDBBLK(F)
  7162	011211'	260040	015510'		PUSHJ	P,DDBSR1	;GET ONE AND LINK IT IN
  7163	011212'	263040	000000		  POPJ	P,		;CAN NOT
  7164	011213'	550342	011207*		HRRZ	T2,TTYTAB(J)
  7165	011214'	542202	011213*		HRRM	F,TTYTAB(J)	;MAKE A NEW COMMAND PORT
  7166	011215'	205300	010000		MOVSI	T1,DVNZP
  7167	011216'	436307	000004		IORM	T1,DEVMOD(T2)	;DO NOT ALLOW TTY TO BE ZAPPED
  7168	011217'	205300	020000		MOVSI	T1,TTYATC
  7169	011220'	412307	000004		ANDCAM	T1,DEVMOD(T2)	;NO LONGER THE COMMAND PORT
  7170	011221'	541300	400000		HRRI	T1,ASSCON
  7171	011222'	436304	000004		IORM	T1,DEVMOD(F)	;MARK AS ASSIGNED BY CONSOLE (FOR RESET)
  7172	011223'	137100	010030*		DPB	J,PJOBN
  7173	011224'	260040	015554'		PUSHJ	P,SCNNAM	;THAT SHOULD BE ENOUGH
  7174	011225'	553004	000000		  HRRZS	DEVNAM(F)	;SO LOOKS DETACHED
  7175	011226'	550200	000007		HRRZ	F,T2
  7176	011227'	200004	000002		MOVE	S,DEVIOS(F)
  7177	011230'	550244	000013		HRRZ	U,DDBLDB(F)
  7178	011231'	205340	020000		MOVSI	T2,LDLCOM
  7179	011232'	412345	000031		ANDCAM	T2,LDBDCH(U)
  7180	011233'	350001	000000		AOS	(P)
  7181	011234'	135300	000157'		LDB	T1,LDPLNO
  7182	011235'	256200	017110'		UMOVEM	T1,(M)
  7183	011236'	324740	013273'		PJRST	UUOLDB
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 165
SCNSER.MAC	25-JAN-91 22:40		HERE FROM HANG UUO WHEN HANGING AN AUX CIRCUIT

  7184				SUBTTL	HERE FROM HANG UUO WHEN HANGING AN AUX CIRCUIT
  7185
  7186	011237'	550205	000000	HNGAUX:	HRRZ	F,LDBDDB(U)
  7187	011240'	322200	011245'		JUMPE	F,HNGAXD	;IF IT'S ATTACHED,
  7188	011241'	135300	000234'	HNGAX1:	LDB	T1,DDPTZP
  7189	011242'	260040	010431*		PUSHJ	P,TAKTRJ	;  INTERRUPT ITS OWNER
  7190	011243'	201340	400000		MOVEI	T2,ASSCON
  7191	011244'	324740	006764*		PJRST	RELEA6		;  AND CLEAR ASSIGNED-BY-CONSOLE
  7192
  7193				    ;HERE WHEN PORT IS ALREADY DETACHED
  7194
  7195	011245'	260040	015162'	HNGAXD:	PUSHJ	P,TTYZAP	;SET TO SEND A ZAPPER BACK
  7196	011246'	553000	000005		HRRZS	U		;CLEAR LDBDCH BITS
  7197	011247'	312240	016426'		CAME	U,AUXRCP	;IF IT'S THE RECEIVED AUX PORT,
  7198	011250'	254000	011253'		 JRST	HNGAX4
  7199	011251'	476000	016426'		SETOM	AUXRCP		;  SAY WE HAVEN'T RECEIVED ONE
  7200	011252'	350000	016450'		AOS	ZRPCNT		;  AND NOTE THAT WE DID SO
  7201	011253'	263040	000000	HNGAX4:	POPJ	P,
  7202
  7203				;HERE WHEN A ZAPPER IS RECEIVED ON AN AUX PORT
  7204
  7205	011254'	550205	000000	ZAPAUX:	HRRZ	F,LDBDDB(U)	;F/ DDB ADDR
  7206	011255'	322200	011245'		JUMPE	F,HNGAXD	;IF DETACHED, JUST CHECK "RECEIVED" PORT
  7207	011256'	260040	015162'		PUSHJ	P,TTYZAP	;SET TO SEND ZAPPER
  7208	011257'	513004	000013		HLLZS	DDBLDB(F)	;DETACH IT
  7209	011260'	513005	000000		HLLZS	LDBDDB(U)
  7210	011261'	254000	011241'		JRST	HNGAX1		;INTERRUPT JOB, CLEAR ASSCON
  7211
  7212				;HERE FROM RELEA6 WHEN BOTH ASSCON AND ASSPRG GO OFF
  7213
  7214	011262'	550244	000013	AUXZAP:	HRRZ	U,DDBLDB(F)
  7215	011263'	322240	011273'		JUMPE	U,AXZP1		;IF DDB HAS A PORT ATTACHED,
  7216	011264'	260040	015162'		PUSHJ	P,TTYZAP	;  SET TO SEND ZAPPER
  7217	011265'	513004	000013		HLLZS	DDBLDB(F)
  7218	011266'	513005	000000		HLLZS	LDBDDB(U)	;  DETACH IT
  7219	011267'	402005	000034		SETZM	LDBSTR(U)	;  CLEAR PREVIOUS CIRCUIT NAME
  7220	011270'	551305	000035		HRRZI	T1,LDBSTR+1(U)	;  GET ADDRESS
  7221	011271'	505306	777777		HRLI	T1,-1(T1)	;    STR,,STR+1
  7222	011272'	251305	000043		BLT	T1,LDBSTR+AUXSTL-1(U)
  7223	011273'	553004	000000	AXZP1:	HRRZS	DEVNAM(F)	;MARK NAME AS DETACHED
  7224	011274'	205300	020000		MOVSI	T1,TIOUSE
  7225	011275'	616304	000002		TDNN	T1,DEVIOS(F)	;IF NO UUO IS IN PROGRESS,
  7226	011276'	324740	015044'		 PJRST	TTYKDB		;  KILL THE DDB
  7227	011277'	200004	000002		MOVE	S,DEVIOS(F)	;OTHERWISE,
  7228	011300'	324740	006027'		PJRST	TIWAKE		;  JUST WAKE THE JOB
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 166
SCNSER.MAC	25-JAN-91 22:40		ON RECEIPT OF A TAKEOVER MESSAGE, RESET AND TRY AGAIN

  7229				SUBTTL	ON RECEIPT OF A TAKEOVER MESSAGE, RESET AND TRY AGAIN
  7230
  7231	011301'	200300	001502*	RCVNSP:	MOVE	T1,DATE##	;Remember the date/time of when
  7232	011302'	202300	001503*		MOVEM	T1,SUPTIM##	; the new Supervisor took over
  7233	011303'	336000	016427'		SKIPN	AUXSTA
  7234	011304'	344740	000756'		 AOJA	P4,SCNIN1	;IN IDLE STATE, JUST IGNORE
  7235	011305'	331240	016426'		SKIPL	U,AUXRCP	;PORT RECEIVED?
  7236	011306'	260040	015162'		 PUSHJ	P,TTYZAP	;YES, ZAP IT
  7237	011307'	201300	000001		MOVEI	T1,.ASRQ1
  7238	011310'	202300	016427'		MOVEM	T1,AUXSTA
  7239	011311'	344740	000756'		AOJA	P4,SCNIN1	;READY TO SEND FIRST REQUEST
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 167
SCNSER.MAC	25-JAN-91 22:40		SUPERVISOR RESPONSE RECIVED

  7240				SUBTTL	SUPERVISOR RESPONSE RECIVED
  7241
  7242	011312'	200300	016427'	RCVSUR:	MOVE	T1,AUXSTA
  7243	011313'	256006	011314'		XCT	ARSTAB(T1)
  7244
  7245	011314'	344740	000756'	ARSTAB:	AOJA	P4,SCNIN1	;.ASIDL IGNORE
  7246	011315'	344740	000756'		AOJA	P4,SCNIN1	;.ASRQ1 IGNORE
  7247	011316'	254000	011324'		JRST	RCVS2		;.ASWR1 RESPONSE TO 1ST REQUEST
  7248	011317'	344740	000756'		AOJA	P4,SCNIN1	;.ASRQ2 IGNORE
  7249	011320'	254000	011333'		JRST	RCVS4		;.ASWR2 RESPONSE TO 2ND REQUEST
  7250	011321'	344740	000756'		AOJA	P4,SCNIN1	;.ASLOG IGNORE
  7251	011322'	254000	011340'		JRST	RCVS6		;.ASWPT RESPONSE TO LOGIN
  7252	011323'	254000	011344'		JRST	RCVSP		;.ASWTP RESPONSE TO LOGIN (BAD RCVAUX)
  7253
  7254				    ;SUPERVISOR RESPONSE TO FIRST REQUEST
  7255
  7256	011324'	135300	000270'	RCVS2:	LDB	T1,INPCHR	;GET ERROR CODE
  7257					JUMPN	T1,[AOS AUXSTA	;ON ERROR, STATE:=.AXRQ2 (RETRY)
  7258	011325'	326300	017166'			AOJA P4,SCNIN1]
  7259	011326'	200300	017170'	RCVS2A:	MOVE	T1,[POINT 7,AUXSTR]
  7260	011327'	202300	016441'		MOVEM	T1,AUXSTP
  7261	011330'	201300	000005		MOVEI	T1,.ASLOG
  7262	011331'	202300	016427'		MOVEM	T1,AUXSTA	;SUCCESSFUL RESPONSE: SEND LOGIN STRING
  7263	011332'	344740	000756'		AOJA	P4,SCNIN1
  7264
  7265				  ;SUPERVISOR RESPONSE TO RE-REQUEST
  7266
  7267	011333'	135300	000270'	RCVS4:	LDB	T1,INPCHR	;LIKE 1ST REQUEST BUT ERROR IS FATAL
  7268	011334'	322300	011326'		JUMPE	T1,RCVS2A	;NO ERROR
  7269	011335'	505300	000007		HRLI	T1,CXERR%	;SET ERROR TYPE
  7270	011336'	260040	011351'		PUSHJ	P,ERRXIT	;AND CLEAN UP
  7271	011337'	344740	000756'		AOJA	P4,SCNIN1
  7272
  7273				    ;SUPERVISOR RESPONSE TO LOGIN STRING
  7274
  7275	011340'	135300	000270'	RCVS6:	LDB	T1,INPCHR
  7276					JUMPN	T1,[PUSHJ P,ERRXIT	;ERROR, TELL USER
  7277	011341'	326300	017171'			AOJA P4,SCNIN1]	;AND CLEAN UP
  7278	011342'	260040	011354'		PUSHJ	P,AUXWAK	;WAKE UP THE USER
  7279	011343'	344740	000756'		AOJA	P4,SCNIN1
  7280
  7281	011344'	135300	000270'	RCVSP:	LDB	T1,INPCHR
  7282					JUMPN	T1,[PUSHJ P,ERRXIT	;ERROR, TELL USER
  7283	011345'	326300	017171'			AOJA P4,SCNIN1]	;AND CLEAN UP
  7284	011346'	201300	000001		MOVEI	T1,.ASRQ1	;SHOULDN'T GIVE ERROR TO USER,
  7285	011347'	202300	016427'		MOVEM	T1,AUXSTA	;SO SETUP FOR RETRY
  7286	011350'	344740	000756'		AOJA	P4,SCNIN1
  7287
  7288	011351'	202300	016442'	ERRXIT:	MOVEM	T1,AUXERR	;SAVE ERROR
  7289	011352'	331240	016426'		SKIPL	U,AUXRCP	;IS THERE A PORT
  7290	011353'	260040	015162'		 PUSHJ	P,TTYZAP	;YES, ZAP IT
  7291	011354'	402000	016427'	AUXWAK:	SETZM	AUXSTA		;STATE:=.ASIDL (IDLE)
  7292	011355'	200100	016443'		MOVE	J,AUXJOB	;JOB WAITING
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 167-2
SCNSER.MAC	25-JAN-91 22:40		SUPERVISOR RESPONSE RECIVED

  7293	011356'	201300	001437*		MOVEI	T1,RNQ
  7294	011357'	137300	001440*		DPB	T1,PJBSTS##
  7295	011360'	324740	001441*		PJRST	SETRUN		;RESTART HIM FOM MLOWQ
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 168
SCNSER.MAC	25-JAN-91 22:40		MESSAGE 7 - AN AUX CIRCUIT HAS BEEN BUILT TO <U> FOR

  7296				SUBTTL	 MESSAGE 7 - AN AUX CIRCUIT HAS BEEN BUILT TO <U> FOR
  7297				;	       THE JOB WHOSE COMMAND PORT IS <INPCHR>
  7298
  7299	011361'	200305	000001	RCVAUX:	MOVE	T1,LDBLIN(U)
  7300	011362'	603300	400000		TLNE	T1,LNLZIN		;IF THERE'S AN UNECHOED ZAPPER,
  7301					 JRST	[MOVEI	T1,NZAPAX
  7302						 PUSHJ	P,ZAPBUG	;NOTE IT
  7303	011363'	254000	017173'			 JRST	.+1]
  7304	011364'	332005	000026		SKIPE	LDBLOG(U)		; LOGGING OR LOGGED IN?
  7305									;  TREAT AS CIRCUIT ZAPPER
  7306					  JRST	[PUSHJ	P,ZAPLOG	; NOTE THE ZAP (increment P4)
  7307						 MOVE	T1,AUXSTA	; Make sure that we were
  7308						 CAIE	T1,.ASWPT	;  expecting a type 7 msg.
  7309						  SOJA	P4,AUXWST	; No? decrement & handle error
  7310						 AOS	AUXSTA		; Yes, State:= .ASWTP, keep waiting!
  7311	011365'	254000	017176'			 JRST	SCNIN1]		; Return to loop
  7312
  7313	011366'	200300	016427'		MOVE	T1,AUXSTA		; T1/ STATE
  7314	011367'	306300	000006		CAIN	T1,.ASWPT		; IF WE'RE NOT EXPECTING A TYPE 7,
  7315	011370'	254000	011377'		 JRST	AUXINP
  7316					PFALL	AUXWST			;   NOTE THE ERROR
  7317
  7318	011371'			AUXWST:	; MESSAGE RECEIVED IN WRONG STATE
  7319	011371'	350000	016444'		AOS	AUXWSC			; NOTE THE FACT
  7320	011372'	254000	011375'		JRST	AUXZPT			; TREAT MSG AS A ZAPPER
  7321
  7322	011373'			AUXWPN:	; MESSAGE RECEIVED BUT WITH THE WRONG PORT NUMBER
  7323	011373'	350000	016445'		AOS	AUXWPC			; NOTE THE FACT
  7324	011374'	202300	016446'		MOVEM	T1,AUXWPT		; SAVE THE (BAD) PORT'S LDB ADDR
  7325					PFALL	AUXZPT			; TREAT MSG AS A ZAPPER
  7326
  7327	011375'	260040	015162'	AUXZPT:	PUSHJ	P,TTYZAP		; ARRANGE TO SEND ZAPPER
  7328	011376'	344740	000756'		AOJA	P4,SCNIN1
  7329
  7330	011377'	135300	000270'	AUXINP:	LDB	T1,INPCHR		; T1/ CREATING JOB'S PORT #
  7331	011400'	550340	016452'		HRRZ	T2,AUXPRT
  7332	011401'	312300	000007		CAME	T1,T2			; IS IT CORRECT?
  7333	011402'	254000	011373'		 JRST	AUXWPN			; NO
  7334	011403'	552240	016426'		HRRZM	U,AUXRCP		; SAVE THE LINE POINTER
  7335	011404'	205300	400000		MOVSI	T1,(1B0)
  7336	011405'	202305	000026		MOVEM	T1,LDBLOG(U)		; SET LOGGED-IN BIT
  7337
  7338					; INITIALIZE THE LINE
  7339	011406'	402005	000003		SETZM	LDBOUT(U)
  7340	011407'	402005	000027		SETZM	LDBBYT(U)
  7341	011410'	402005	000030		SETZM	LDBMOD(U)
  7342	011411'	402005	000050		SETZM	LDBTMT(U)
  7343			000000		ZZN==0
  7344				REPEAT TMCSIZ,<
  7345					SETZM LDBTMR+ZZN(U)
  7346					ZZN==ZZN+1
  7347				> ; End REPEAT TMCSIZ
  7348	011412'	402005	000044
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 168-2
SCNSER.MAC	25-JAN-91 22:40		MESSAGE 7 - AN AUX CIRCUIT HAS BEEN BUILT TO <U> FOR

  7349	011413'	402005	000045
  7350	011414'	205300	003340		MOVSI	T1,LDLDEF!LDLIMI!LDLAUX!LDLNEC!LDLNFC
  7351	011415'	202305	000031		MOVEM	T1,LDBDCH(U)
  7352	011416'	205300	400000		MOVSI	T1,LXL120
  7353	011417'	202305	000032		MOVEM	T1,LDBDCX(U)
  7354	011420'	505300	016430'		HRLI	T1,AUXSTR		; Copy string sent to
  7355	011421'	541305	000034		HRRI	T1,LDBSTR(U)		;  supervisor for tracking
  7356	011422'	251305	000043		BLT	T1,LDBSTR+AUXSTL-1(U)
  7357
  7358	011423'	260040	007622'		PUSHJ	P,SETLMD		; SET THE INPUT MODE
  7359	011424'	344740	000756'		AOJA	P4,SCNIN1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 169
SCNSER.MAC	25-JAN-91 22:40		CALLED ONCE A TICK FROM SCNINT TO PROCESS AUX CIRCUIT BUILDS

  7360				SUBTTL	CALLED ONCE A TICK FROM SCNINT TO PROCESS AUX CIRCUIT BUILDS
  7361
  7362	011425'	200300	016427'	SNDAUX:	MOVE	T1,AUXSTA	;SEE WHAT WE SHOULD DO
  7363	011426'	256006	011431'		XCT	AXSNTB(T1)
  7364	011427'	254000	011513'		 JRST	AUXTOV		;TIME OUT
  7365	011430'	254000	011051*		JRST	CPOPJ1		;JUST RETURN
  7366
  7367	011431'	254000	011430*	AXSNTB:	JRST	CPOPJ1		;.ASIDL  DO NOTHING
  7368	011432'	254000	011443'		JRST	SNDSRQ		;.ASRQ1  SEND 1ST REQUEST
  7369	011433'	377000	016453'		SOSG	AUXTIM		;.ASWR1  TIME THE RESPONSE
  7370	011434'	254000	011443'		JRST	SNDSRQ		;.ASRQ2  SEND 2ND REQUEST
  7371	011435'	377000	016453'		SOSG	AUXTIM		;.ASWR2  TIME THE RESPONSE
  7372	011436'	254000	011456'		JRST	AUXCHR		;.ASLOG  SEND LOGIN STRING
  7373	011437'	377000	016453'		SOSG	AUXTIM		;.ASWPT  TIME THE RESPONSE
  7374	011440'	377000	016453'		SOSG	AUXTIM		;.ASWTP  TIME THE RESPONSE
  7375
  7376	011441'	000000	021450	AUXTMR:	^D150*^D60		;REQUEST RESPONSE TIMEOUT
  7377	011442'	000000	021450	AUXTMP:	^D150*^D60		;PORT RESPONSE TIMEOUT
  7378
  7379				    ;HERE TO SEND A SUPERVISOR REQUEST
  7380
  7381	011443'	260040	004114'	SNDSRQ:	PUSHJ	P,CLSCHR
  7382	011444'	263040	000000		  POPJ	P,		;NOT REALLY ANY ROOM
  7383	011445'	205700	054000		MOVSI	P3,TYPI TYPSUP	;SEND REQUEST
  7384	011446'	200300	016452'		MOVE	T1,AUXPRT	;GET THE PORT NUMBER
  7385	011447'	137300	000276'		DPB	T1,WRPLIN
  7386	011450'	554300	016452'		HLRZ	T1,AUXPRT	;Get NETID number
  7387	011451'	137300	000301'		DPB	T1,WRP3N4	;Store 16 bits
  7388	011452'	200300	011441'		MOVE	T1,AUXTMR	;SET TIMER
  7389	011453'	202300	016453'		MOVEM	T1,AUXTIM
  7390	011454'	350000	016427'		AOS	AUXSTA		;ADVANCE STATE (.ASRQX = .ASWTX)
  7391	011455'	254000	004162'		JRST	WRDOUT		;AND SEND REQUEST
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 170
SCNSER.MAC	25-JAN-91 22:40		HERE TO SEND CHARACTERS FROM THE LOGIN STRING

  7392				SUBTTL	HERE TO SEND CHARACTERS FROM THE LOGIN STRING
  7393
  7394	011456'	260040	004114'	AUXCHR:	PUSHJ	P,CLSCHR
  7395	011457'	263040	000000		  POPJ	P,		;NO ROOM
  7396	011460'	205700	060000		MOVSI	P3,TYPI TYPAXC
  7397	011461'	200300	016452'		MOVE	T1,AUXPRT
  7398	011462'	137300	000276'		DPB	T1,WRPLIN	;SET UP TO SEND
  7399	011463'	200340	016423'	AXCLP1:	MOVE	T2,MXMCNT	;SPACE LEFT
  7400	011464'	271340	000002		ADDI	T2,2
  7401	011465'	242340	777776		LSH	T2,-2
  7402	011466'	134300	016441'	AUXCLP:	ILDB	T1,AUXSTP
  7403	011467'	322300	011506'		JUMPE	T1,AXCDON	;FINISHED
  7404	011470'	137300	000277'		DPB	T1,WRPCHR
  7405	011471'	202717	004605*		MOVEM	P3,ORING(P4)	;PUT IN RING
  7406	011472'	260040	016267'		PUSHJ	P,ORPLOG	;Put message into ORING log
  7407	011473'	363340	011475'		SOJLE	T2,AXCLP2	;RAN OUT OF ROOM
  7408	011474'	344740	011466'		 AOJA	P4,AUXCLP	;ADVANCE POINTER AND CONTINUE
  7409
  7410	011475'	271740	000001	AXCLP2:	ADDI	P4,1		;ADVANCE POINTER
  7411	011476'	405740	004610*		ANDI	P4,MSKORG
  7412	011477'	200300	016441'		MOVE	T1,AUXSTP
  7413	011500'	134300	000006		ILDB	T1,T1		;GET NEXT CHARACTER
  7414	011501'	322300	011506'		JUMPE	T1,AXCDON	;HAVE REALLY SENT THEM ALL
  7415	011502'	202740	004573*		MOVEM	P4,ORPPDP	;SAVE POINTER FOR 620
  7416	011503'	260040	004141'		PUSHJ P,SETOUT
  7417	011504'	263040	000000		  POPJ	P,		;OUT OF ROOM
  7418	011505'	254000	011463'		JRST	AXCLP1		;MORE ROOM, SEND MORE
  7419
  7420	011506'	202740	011502*	AXCDON:	MOVEM	P4,ORPPDP
  7421	011507'	200300	011442'		MOVE	T1,AUXTMP
  7422	011510'	202300	016453'		MOVEM	T1,AUXTIM	;SET TIMER
  7423	011511'	350000	016427'		AOS	AUXSTA		;STATE:=.ASWPT (WAIT FOR PORT RESPONSE)
  7424	011512'	324740	004141'		PJRST	SETOUT		;RESET ROOM COUNTERS AND EXIT
  7425
  7426				;HERE ON ANY TIMEOUT
  7427
  7428	011513'	350001	000000	AUXTOV:	AOS	(P)		;SET FOR SKIP RETURN
  7429	011514'	200300	016427'		MOVE	T1,AUXSTA
  7430	011515'	256006	011516'		XCT	AXTOTB(T1)	;RESPOND ACCORDING TO WHAT GOT TIMED-OUT
  7431
  7432	011516'	256000	000000'	AXTOTB:	 STOPCD			;.ASIDL  CAN'T TIME OUT
  7433	011517'	256000	000000'		 STOPCD			;.ASRQ1  CAN'T TIME OUT
  7434	011520'	254000	011526'		JRST	AXNRR		;.ASWT1  1ST REQUEST TIMED OUT
  7435	011521'	256000	000000'		 STOPCD			;.ASRQ2  CAN'T TIME OUT
  7436	011522'	254000	011526'		JRST	AXNRR		;.ASWT2  2ND RESPONSE TIMED OUT
  7437	011523'	256000	000000'		 STOPCD			;.ASLOG  CAN'T TIME OUT
  7438	011524'	254000	011530'		JRST	AXNRL		;.ASWPT  PORT RESPONSE TIMED OUT
  7439	011525'	254000	011530'		JRST	AXNRL		;.ASWTP  PORT RESPONSE TIMED OUT (BAD RCVAUX)
  7440
  7441	011526'	205300	000004	AXNRR:	MOVSI	T1,CXNRR%	;SET ERROR CODE
  7442	011527'	324740	011351'		PJRST	ERRXIT
  7443
  7444	011530'	205300	000005	AXNRL:	MOVSI	T1,CXNRL%
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 170-2
SCNSER.MAC	25-JAN-91 22:40		HERE TO SEND CHARACTERS FROM THE LOGIN STRING

  7445	011531'	324740	011351'		PJRST	ERRXIT
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 171
SCNSER.MAC	25-JAN-91 22:40		CODE TO HANDLE THE CREAT AUX CIR UUO

  7446				SUBTTL	CODE TO HANDLE THE CREAT AUX CIR UUO
  7447				;Call:	MOVEI	AC,[ASCIZ/USERNAME:HOST/]
  7448				;	HRLI	AC,FLAGS	;Bits 1-2 are DR # on KS, Bit 17 is NOZAP,
  7449				;				;Bits 1-16 are for NETID (new in P035/D07)
  7450				;	CREAUX	AC,		;CALLI AC,-144
  7451				;	  error return
  7452
  7453			000000	IFCPU(<KI,KL>),<CXDTP==0>	;Use port 0 for detached jobs
  7454				IFCPU(<KS,F3>),<CXDTP==1>	;Always user port 001 (or 101 or 201 or 301)
  7455
  7456	011532'	352000	000000*	CREAUX::AOSE	AXREQ
  7457	011533'	260040	000000*		 PUSHJ	P,AXWAIT	;WAIT FOR RESOURCE
  7458	011534'	402000	000000*		SETZM	AXSWT
  7459	011535'	201340	011723'		MOVEI	T2,AXGIV
  7460	011536'	202342	000000*		MOVEM	T2,JBTABT(J)	;SET ERROR LOCATION
  7461	011537'	402000	016442'		SETZM	AUXERR		;NO ERROR YET
  7462	011540'	476000	016426'		SETOM	AUXRCP		;AND NO PORT
  7463	011541'	550202	011214*		HRRZ	F,TTYTAB(J)
  7464	011542'	322200	011552'		JUMPE	F,AUXDET	;IF NO JOB (!)
  7465	011543'	550244	000013		HRRZ	U,DDBLDB(F)
  7466	011544'	322240	011552'		JUMPE	U,AUXDET	;OR NOT ATTACHED
  7467	011545'	205340	040000		MOVSI	T2,LDLPTY
  7468	011546'	612345	000031		TDNE	T2,LDBDCH(U)	;OR CONTROLLED BY A PTY,
  7469	011547'	254000	011552'		 JRST	AUXDET
  7470				IFNKMC<
  7471	011550'	135240	000157'		LDB	U,LDPLNO	; Use CMD port as index!!
  7472	011551'	334000	000000		SKIPA			;  ** not done if KMC **
  7473				> ; End IFNKMC
  7474	011552'	201240	000000	AUXDET:	MOVEI	U,CXDTP		;  FAKE A PORT NUMBER
  7475	011553'	202240	016452'		MOVEM	U,AUXPRT	;Send to SUP on this port number
  7476	011554'	202100	016443'		MOVEM	J,AUXJOB	;SET JOB NUMBER
  7477	011555'	200600	000006		MOVE	P1,T1		;SAVE ARGUMENT
  7478	011556'	505300	440700		HRLI	T1,(POINT 7,0)	;GET POINTER TO THE STRING
  7479	011557'	200740	017170'		MOVE	P4,[POINT 7,AUXSTR]	;SET TO SAVE IT
  7480	011560'	201700	000035		MOVEI	P3,AUXSTM	;MAX WE CAN HAVE
  7481	011561'	200440	017204'		MOVE	T4,[POINT 6,AUXUNM]	;SET TO ACCUMULATE A USER NAME
  7482	011562'	201640	000014		MOVEI	P2,^D12		;MAX CHRS IN USER NAME
  7483	011563'	402000	016454'		SETZM	AUXUNM
  7484	011564'	402000	016455'		SETZM	AUXUNM+1
  7485	011565'	402000	016430'		SETZM	AUXSTR		;Clear out accumulated string
  7486	011566'	200340	017205'		MOVE	T2,[AUXSTR,,AUXSTR+1]
  7487	011567'	251340	016437'		BLT	T2,AUXSTR+AUXSTL-1
  7488
  7489	011570'	256040	017206'	AUXSLP:	XCTFU	<ILDB	T2,T1>	;GET 7-BIT CHAR FROM USER
  7490	011571'	322340	011605'		JUMPE	T2,AXSFN1	;END OF STRING
  7491	011572'	136340	000017		IDPB	T2,P4		;PUT IT AWAY
  7492	011573'	302340	000015		CAIE	T2,15
  7493	011574'	306340	000073		CAIN	T2,";"		;TERMINATE ON RETURN OR ;
  7494	011575'	254000	011607'		 JRST	AXSFIN
  7495	011576'	306340	000072		CAIN	T2,":"		;TERMINATE USER NAME ON :
  7496	011577'	400640	000000		 SETZ	P2,0		;BY ZAPPING COUNT
  7497	011600'	275340	000040		SUBI	T2,40		;CONVERT TO SIXBIT
  7498	011601'	321340	011604'		JUMPL	T2,AUXNSB	;Don't put control chars in username
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 171-2
SCNSER.MAC	25-JAN-91 22:40		CODE TO HANDLE THE CREAT AUX CIR UUO

  7499	011602'	361640	011604'		SOJL	P2,AUXNSB	;ALREADY TOO MANY CHRS IN USER NAME
  7500	011603'	136340	000011		IDPB	T2,T4		;AND SAVE IT
  7501	011604'	367700	011570'	AUXNSB:	SOJG	P3,AUXSLP	;SEE IF ROOM FOR MORE
  7502
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 172
SCNSER.MAC	25-JAN-91 22:40		CODE TO HANDLE THE CREAT AUX CIR UUO

  7503	011605'	201340	000015	AXSFN1:	MOVEI	T2,15
  7504	011606'	136340	000017		IDPB	T2,P4		;TOO MANY, FINISH WITH RETURN
  7505	011607'	201340	000000	AXSFIN:	MOVEI	T2,0
  7506	011610'	136340	000017		IDPB	T2,P4		;TERMINATE STRING WITH 0
  7507	011611'	552740	016440'		HRRZM   P4,AUXEND	;SAVE POINTER TO LAST WORD OF LOGIN STRING
  7508	011612'	550400	000017		HRRZ    T3,P4           ;ZERO OUT LAST WORD OF LOGIN
  7509	011613'	136340	000017		IDPB    T2,P4           ; STRING TO RIGHT OF NULL
  7510	011614'	306417	000000		CAIN    T3,(P4)         ; SO THAT CREAUX STREAM
  7511	011615'	254000	011613'		 JRST	.-2             ; RECORDS LOOK GOOD
  7512	011616'	205340	000400		MOVSI	T2,LICAC
  7513	011617'	612342	011176*		TDNE	T2,JBTLIC(J)	;SEE IF HE HAS LICENSE
  7514	011620'	254000	011636'		 JRST	AUXGAN		;YES, NOW CHECK LIST
  7515	011621'	200340	016454'		MOVE	T2,AUXUNM
  7516	011622'	200400	016455'		MOVE	T3,AUXUNM+1
  7517	011623'	316342	000000*		CAMN	T2,JBTUNM(J)	;CHECK USER NAME MATCH
  7518	011624'	312402	000000*		CAME	T3,JBTUN1(J)
  7519					 JRST	[MOVSI T2,CXLOG%
  7520	011625'	254000	017207'			JRST AXERGV]	;ERROR
  7521	011626'	260040	015700'		PUSHJ	P,FRSTTY	;NOW SEE HOW MANY CIRCUITS
  7522	011627'	254000	011651'		  JRST	AUXLIC
  7523	011630'	260040	015702'		PUSHJ	P,NXTTTY
  7524	011631'	254000	011651'		  JRST	AUXLIC		;NONE
  7525	011632'	260040	015702'		PUSHJ	P,NXTTTY
  7526	011633'	254000	011651'		  JRST	AUXLIC		;ONE
  7527	011634'	205340	000001		MOVSI	T2,CX2AX%
  7528	011635'	254000	011713'		JRST	AXERGV		;ERROR, already have 2 circuits in use
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 173
SCNSER.MAC	25-JAN-91 22:40		CODE TO HANDLE THE CREAT AUX CIR UUO

  7529	011636'	554442	000000*	AUXGAN:	HLRZ	T4,JBTAUN##(J)	; Check gan
  7530	011637'	306440	000003		CAIN	T4,3		;  for lower class
  7531	011640'	254000	011651'		 JRST	AUXLIC		; Yes, it works here
  7532	011641'	120340	016454'		DMOVE	T2,AUXUNM	; Otherwize check list
  7533	011642'	505440	777706		HRLI	T4,-AUXNTL	; * Length is 2x # of entries
  7534	011643'	541440	016301'		HRRI	T4,AUXNTB
  7535	011644'	316351	016301'	AUXGA1:	CAMN	T2,AUXNTB(T4)	; Check user name match
  7536	011645'	316411	016302'		 CAMN	T3,AUXNTB+1(T4)
  7537					  JRST	[MOVSI T2,CXLOG%
  7538	011646'	254000	017207'			JRST AXERGV]	; Give error as if no AC to say
  7539	011647'	253440	011650'		AOBJN	T4,.+1		;  that AC doesn't work on this
  7540	011650'	253440	011644'		AOBJN	T4,AUXGA1	; Check ALL names
  7541								; No match, allow AC license
  7542
  7543	011651'			AUXLIC:
  7544				IFKMC<
  7545					LDB	T3,[POINT 2,P1,2]	;GET TYMBASE NUMBER
  7546					PUSHJ	P,KMCGUP	;T1/ TYMBASE "UP" BITS
  7547					MOVSI	T2,^D8		;TYMBASE DOWN MESSAGE
  7548					XCT	TSTDRU(T3)	;SKIP IF IT'S UP
  7549					  JRST	AXERGV		;ELSE RETURN TYMBASE DOWN MESSAGE
  7550					JRST	AUXDRU
  7551				
  7552				TSTDRU:	TRZN	T1,DR1BIT
  7553					TRZN	T1,DR2BIT
  7554					TRZN	T1,DR3BIT
  7555					TRZN	T1,DR4BIT
  7556				
  7557				AUXDRU:	LSH	T3,6		;Request circuit on DR# * 64.
  7558					IORM	T3,AUXPRT
  7559				> ; END IFKMC
  7560	011651'	135300	017211'	IFNKMC<	LDB	T1,[POINT 16,P1,16]	;All but 1B0 and 1B17
  7561	011652'	506300	016452'		HRLM	T1,AUXPRT	;Store NETID number
  7562	011653'	322300	011660'		JUMPE	T1,AUXDRU	;OK if asking for default
  7563	011654'	205340	000010		MOVSI	T2,^D8		;TYMBASE DOWN = illegal NETID
  7564	011655'	205300	400000		MOVSI	T1,LICWCR	;Must have WRITE CORE to build an
  7565	011656'	616302	011617*		TDNN	T1,JBTLIC(J)	; aux circuit to other net
  7566	011657'	254000	011713'		 JRST	AXERGV		;(error code 8 means problems with LH of AC)
  7567	011660'			AUXDRU: > ;END IFNKMC
  7568	011660'	201300	000000*		MOVEI	T1,MLOWQ
  7569	011661'	137300	011357*		DPB	T1,PJBSTS##
  7570	011662'	350000	016427'		AOS	AUXSTA		;SET STATE TO 1
  7571	011663'	260040	006513*		PUSHJ	P,WSCHED	;AND RESCHEDULE
  7572	011664'	332340	016442'		SKIPE	T2,AUXERR	;ANY ERRORS
  7573	011665'	254000	011713'		 JRST	AXERGV
  7574	011666'	335000	016426'		SKIPGE	AUXRCP	;PORT THERE?
  7575					 JRST	[
  7576						AOS	NRPCNT	;BUMP COUNT
  7577						MOVSI	T2, CXNCH%
  7578						JRST	AXERGV	;ERROR-RETURN
  7579	011667'	254000	017212'		]
  7580	011670'	550302	011541*		HRRZ	T1,TTYTAB(J)	;WHERE TO LINK. REALLY SHOULD BE A DDB
  7581	011671'	332000	000006		SKIPE	T1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 173-2
SCNSER.MAC	25-JAN-91 22:40		CODE TO HANDLE THE CREAT AUX CIR UUO

  7582	011672'	260040	015510'		 PUSHJ	P,DDBSR1
  7583					  JRST	[MOVSI T2,CXDCB%	;NO DDB SPACE
  7584	011673'	254000	017215'			JRST AXERGV]
  7585	011674'	137100	011223*		DPB	J,PJOBN
  7586	011675'	201300	400000		MOVEI	T1,ASSCON
  7587	011676'	603600	000001		TLNE	P1,(1B17)
  7588	011677'	661300	010000		 TLO	T1,DVNZP	;SET NO ZAP BIT
  7589	011700'	436304	000004		IORM	T1,DEVMOD(F)
  7590	011701'	200240	016426'		MOVE	U,AUXRCP
  7591	011702'	135300	000157'		LDB	T1,LDPLNO	;GET LINE NUMBER
  7592	011703'	256200	017217'		UMOVEM	T1,(W)
  7593	011704'	542244	000013		HRRM	U,DDBLDB(F)
  7594	011705'	542205	000000		HRRM	F,LDBDDB(U)
  7595	011706'	260040	015554'		PUSHJ	P,SCNNAM
  7596	011707'	201300	000022		MOVEI	T1,22		;WRITE CREAUX
  7597	011710'	260040	000000*		PUSHJ	P,ACTWRT##	; STREAM RECORD
  7598	011711'	350001	000000		AOS	(P)
  7599	011712'	254000	011725'		JRST	AUXGV1		;FINISHED
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 174
SCNSER.MAC	25-JAN-91 22:40		CODE TO HANDLE THE CREAT AUX CIR UUO

  7600	011713'	256200	017220'	AXERGV:	UMOVEM	T2,(W)
  7601	011714'	254000	011723'	AXELOG:	JRST	AXGIV		;JFCL IF WANT ACT REC FOR ERRS
  7602	011715'	202340	016442'		MOVEM	T2,AUXERR	;SAVE ERR TYPE FOR ACTSER
  7603	011716'	201300	000022		MOVEI	T1,22		;CREAUX REC TYPE
  7604	011717'	557000	000007		HLRZS	T2		;WRITE REC ONLY
  7605	011720'	332000	000007		SKIPE	T2		; FOR EXTRA
  7606	011721'	306340	000006		CAIN	T2,CXNCH%	; HOST ERRORS
  7607	011722'	260040	011710*		 PUSHJ	P,ACTWRT##
  7608	011723'	331240	016426'	AXGIV:	SKIPL	U,AUXRCP
  7609	011724'	260040	015162'		 PUSHJ	P,TTYZAP
  7610	011725'	402002	011536*	AUXGV1:	SETZM	JBTABT(J)
  7611	011726'	402000	016427'		SETZM	AUXSTA
  7612	011727'	371000	011532*		SOSL	AXREQ
  7613	011730'	476000	000000*		 SETOM	AXAVAL
  7614	011731'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 175
SCNSER.MAC	25-JAN-91 22:40		READ INFO ON PORTS IN USE

  7615				SUBTTL	READ INFO ON PORTS IN USE
  7616
  7617	011732'	201340	000000	AUXRED::MOVEI	T2,0		;NUMBER OF PORTS SO FAR
  7618					JUMPGE	T1,[XCTTU <SETOM (W)>
  7619	011733'	325300	017222'			POPJ P,]	;FLAG ERROR
  7620	011734'	253300	011735'		AOBJN	T1,.+1
  7621	011735'	260040	015700'		PUSHJ	P,FRSTTY	;THIS WILL GET COMMAND PORT
  7622	011736'	254000	011753'		  JRST	AUXRN1		;OH WELL
  7623	011737'	205440	000010		MOVSI	T4,DVTTY	;TO TEST FOR TTY
  7624	011740'	260040	015702'	AUXRL1:	PUSHJ	P,NXTTTY	;NEXT IN CHAIN
  7625	011741'	254000	011753'		   JRST	AUXRN1		;FINISHED
  7626	011742'	616444	000004		TDNN	T4,DEVMOD(F)
  7627	011743'	254000	011740'		 JRST	AUXRL1		;IGNORE ALL BUT TTYS
  7628	011744'	550244	000013		HRRZ	U,DDBLDB(F)	;GET LINE
  7629	011745'	322240	011740'		JUMPE	U,AUXRL1	;IGNORE IF NO LINE
  7630	011746'	325300	011752'		JUMPGE	T1,AUXRL2	;NO ROOM TO PUT IT
  7631	011747'	135400	000157'		LDB	T3,LDPLNO
  7632	011750'	256200	017224'		UMOVEM	T3,-1(T1)
  7633	011751'	253300	011752'		AOBJN	T1,.+1
  7634	011752'	344340	011740'	AUXRL2:	AOJA	T2,AUXRL1	;COUNT 1
  7635	011753'	256200	017225'	AUXRN1:	XCTTU	<SETOM -1(T1)>	;FLAG END OF LIST
  7636	011754'	256200	017220'		UMOVEM	T2,(W)
  7637	011755'	254000	011431*		JRST	CPOPJ1		;FINISHED
  7638
  7639				;ZAP AUX CIRCUITS
  7640
  7641	011756'	321300	011766'	ZAPCIR::JUMPL	T1,ZAPALL	;ALL OF THEM
  7642	011757'	200200	000006		MOVE	F,T1
  7643	011760'	260040	016102'		PUSHJ	P,FNDPRT	;FIND THE PORT
  7644	011761'	263040	000000		  POPJ	P,		;NOT THERE
  7645	011762'	550244	000013		HRRZ	U,DDBLDB(F)
  7646	011763'	322240	011171*		JUMPE	U,CPOPJ		;NO LINE, IGNORE
  7647	011764'	400300	000000		SETZ	T1,		;Don't cause any confusion
  7648	011765'	254000	006636'		JRST	HNGPRT		;GO HANG HIM
  7649
  7650	011766'	260040	015700'	ZAPALL:	PUSHJ	P,FRSTTY
  7651	011767'	263040	000000		  POPJ	P,		;NOT COMMAND
  7652	011770'	260040	015702'	ZAPAL1:	PUSHJ	P,NXTTTY
  7653	011771'	263040	000000		  POPJ	P,		;DONE
  7654	011772'	205300	000010		MOVSI	T1,DVTTY
  7655	011773'	616304	000004		TDNN	T1,DEVMOD(F)
  7656	011774'	254000	011770'		 JRST	ZAPAL1		;NOT A TTY
  7657	011775'	550244	000013		HRRZ	U,DDBLDB(F)
  7658	011776'	322240	011770'		JUMPE	U,ZAPAL1
  7659	011777'	400300	000000		SETZ	T1,
  7660	012000'	260040	006636'		PUSHJ	P,HNGPRT
  7661	012001'	254000	011770'		JRST	ZAPAL1		;ON TO NEXT
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 176
SCNSER.MAC	25-JAN-91 22:40		POLL PORTS UUO

  7662				SUBTTL  POLL PORTS UUO
  7663
  7664				; POLPRT - POLL PORTS FOR INTERRUPT-CAUSING EVENTS
  7665				;
  7666				;	MOVE	AC, [BITS,,ADDR]
  7667				;	POLPRT	AC,
  7668				;	  ERROR RETURN (TABLE TOO SMALL)
  7669				;	NORMAL RETURN
  7670				;
  7671				;	(AC/ # OF PORTS RETURNED ON EITHER RETURN)
  7672				;
  7673				; ADDR:	WORD COUNT (# WORDS, INCLUDING THIS ONE)
  7674				;	BITS,,PORT (SET BY UUO)
  7675				;	...
  7676				;
  7677				; WHERE <BITS> IS A MASK FOR THE EVENT BITS IN RH(LDBDCX)
  7678
  7679	012002'	256200	017226'	POLPRT::XCTFU	<MOVN T2, (T1)>
  7680	012003'	207000	000007		MOVSS	T2
  7681	012004'	540340	000006		HRR	T2, T1		; T2/ AOBJN POINTER
  7682	012005'	400440	000000		SETZ	T4,		; T4/ COUNT OF PORTS RETURNED
  7683	012006'	260040	015700'		PUSHJ	P, FRSTTY
  7684	012007'	254000	012030'		  JRST POLPT4
  7685
  7686					; GOT A PORT
  7687	012010'	200404	000004	POLPT1:	MOVE	T3, DEVMOD(F)
  7688	012011'	603400	000010		TLNE	T3, DVTTY
  7689	012012'	336244	000013		SKIPN	U, DDBLDB(F)
  7690	012013'	254000	012025'		JRST	POLPT3		; NOT TTY OR NO LDB
  7691
  7692					; CHECK THE EVENTS FOR THIS PORT
  7693	012014'	554400	000006		HLRZ	T3, T1		; T3/ 0,,MASK BITS
  7694	012015'	404405	000032		AND	T3, LDBDCX(U)	; T3/ 0,,MASKED EVENTS
  7695	012016'	412405	000032		ANDCAM	T3, LDBDCX(U)	; TURN OFF WHAT WE'VE READ
  7696	012017'	322400	012025'		JUMPE	T3, POLPT3	; NOTHING HAPPENED: TRY NEXT PT
  7697	012020'	252340	012031'		AOBJP	T2, POLPT5	; NO ROOM: ERROR-RETURN
  7698	012021'	350000	000011		AOS	T4		; T4/ COUNT OF PORTS RETURNED
  7699	012022'	256200	017227'		XCTBU	<HRLM T3, (T2)>	; STORE THE EVENT BITS
  7700	012023'	135400	000157'		LDB	T3, LDPLNO
  7701	012024'	256200	017230'		XCTBU	<HRRM T3, (T2)>	; AND THE PORT NUMBER
  7702
  7703					; GET ANOTHER PORT
  7704	012025'	260040	015702'	POLPT3:	PUSHJ	P, NXTTTY
  7705	012026'	254000	012030'		  JRST POLPT4
  7706	012027'	254000	012010'		JRST	POLPT1
  7707	012030'	350001	000000	POLPT4:	AOS	(P)		; NORMAL RETURN: PORTS EXHAUSTED
  7708	012031'	256200	017231'	POLPT5:	UMOVEM	T4, (W)		; AC := COUNT OF PORTS RETURNED
  7709	012032'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 177
SCNSER.MAC	25-JAN-91 22:40		BLOCK INPUT/OUTPUT (BIO) ROUTINES

  7710				SUBTTL BLOCK INPUT/OUTPUT (BIO) ROUTINES
  7711
  7712				;THE FORMAT OF A BLOCK I/O BUFFER IS:
  7713
  7714			000000	BIOLNK==0	;PTR TO LINKED LIST OF BIO BUFFERS.
  7715			000001	BIOCSH==1	;CACHE SWEEP NUMBER AT TIME REQUEST WAS QUEUED.
  7716			000002	BIOPBP==2	;PTY BLOCK I/O: ILDB/IDPB POINTER FOR NEXT BYTE
  7717			000003	BIOPBC==3	;PTY BLOCK I/O: # BYTES LEFT TO TRANSFER
  7718			000004	BIOREQ==4	;CHAR COUNT OF LAST INPUT REQUEST BY THIS PORT.
  7719			000005	BIOCHR==5	;COUNT OF CHARACTERS TO TRANSFER. (IN OR OUT).
  7720			000006	BIODAT==6	;BEGINNING OF USER DATA.
  7721
  7722				;HERE FROM ENABLE BLOCK I/O AUXCAL
  7723
  7724	012033'	205300	001000	BLKIO:	MOVSI	T1,LMLBIO
  7725	012034'	612305	000030		TDNE	T1,LDBMOD(U)	;IF ALREADY IN BLOCK MODE,
  7726	012035'	263040	000000		 POPJ	P,		;  ERROR-RETURN
  7727	012036'	336405	000005		SKIPN	T3,LDBBIO(U)	;DOES THE BIO PORT HAVE ANY
  7728	012037'	254000	012052'		 JRST	BLKIO2		;ACTIVE BUFFERS?
  7729	012040'	554300	000010		HLRZ	T1,T3		;YES.  OUTPUT ACTIVE?
  7730	012041'	322300	012045'		JUMPE	T1,BLKIO1	;NO - GO CHECK FOR INPUT.
  7731	012042'	260040	012572'		PUSHJ	P,OQUEUE	;YES. QUEUE JOB UNTIL DONE.
  7732	012043'	263040	000000		  POPJ	P,		;LINE IS GONE.  HE LOSES.
  7733	012044'	254000	012033'		JRST BLKIO
  7734
  7735	012045'	550300	000010	BLKIO1:	HRRZ	T1,T3		;INPUT BUFFER ACTIVE?
  7736	012046'	332000	000006		SKIPE	T1		;
  7737	012047'	260040	012563'		 PUSHJ	P,IQUEUE	;YES. WAIT FOR CH7 TO RELEASE IT
  7738	012050'	263040	000000		  POPJ P,		;NO.  DON'T WORRY ABOUT IT.
  7739	012051'	254000	012033'		JRST BLKIO
  7740
  7741				;HERE IF NO ACTIVE BUFFERS
  7742	012052'	260040	012302'	BLKIO2:	PUSHJ	P,INCBC		;SET UP FOR 1 MORE JOB. IF CAN'T,
  7743	012053'	263040	000000		  POPJ	P,		;  NONSKIP-RETURN
  7744	012054'	205300	001000		MOVSI	T1,LMLBIO	;SET FLAG IN THE LDB INDICATING
  7745	012055'	436305	000030		IORM	T1,LDBMOD(U)	;PORT IS IN BIO MODE.
  7746	012056'	350001	000000		AOS	(P)		;MADE IT!  SKIP RETURN TO USER
  7747	012057'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 178
SCNSER.MAC	25-JAN-91 22:40		BLKXIO - HERE FROM THE LEAVE BLOCK MODE AUXCAL

  7748				SUBTTL	BLKXIO - HERE FROM THE LEAVE BLOCK MODE AUXCAL
  7749
  7750	012060'	200305	000030	BLKXIO:	MOVE	T1,LDBMOD(U)
  7751	012061'	607300	001000		TLNN	T1,LMLBIO	;IF PORT'S NOT IN BLOCK MODE,
  7752	012062'	263040	000000		 POPJ	P,		;  JUST RETURN
  7753	012063'	336405	000005		SKIPN	T3,LDBBIO(U)	;IF THERE'S NOTHING IN PROGRESS,
  7754	012064'	254000	012120'		 JRST	BIORES		;  GET OUT NOW
  7755	012065'	554300	000010		HLRZ	T1,T3
  7756	012066'	322300	012072'		JUMPE	T1,BLKX1	;IF THERE'S OUTPUT IN PROGRESS,
  7757	012067'	260040	012572'		PUSHJ	P,OQUEUE	;  WAIT FOR IT. IF ZAPPED,
  7758	012070'	263040	000000		  POPJ	P,		;    JUST RETURN
  7759	012071'	254000	012060'		JRST	BLKXIO
  7760
  7761				    ;HERE FROM BLKXIO AND BIOREL - TERMINATE/DISCARD CURRENT BLK INPUT
  7762
  7763	012072'	550300	000010	BLKX1:	HRRZ	T1,T3
  7764	012073'	322300	012100'		JUMPE	T1,BLKX2	;IF THERE'S INPUT IN PROGRESS,
  7765	012074'	260040	012610'		PUSHJ	P,BLKXIN	;  REQUEST INPUT TERMINATION
  7766	012075'	550305	000005		HRRZ	T1,LDBBIO(U)
  7767	012076'	331006	000005		SKIPL	BIOCHR(T1)	;  IF THE BASE IS DONE WITH THE BUFFER,
  7768	012077'	260040	012364'		 PUSHJ	P,RELBI		;    THROW IT AWAY NOW
  7769	012100'	336005	000005	BLKX2:	SKIPN	LDBBIO(U)	;IF NO BUFFERS,
  7770	012101'	324740	012120'		 PJRST	BIORES		;  GET OUT NOW
  7771	012102'	205300	001000		MOVSI	T1,LMLBIO
  7772	012103'	412305	000030		ANDCAM	T1,LDBMOD(U)	;ELSE, CLEAR THE BLOCK MODE BIT
  7773	012104'	263040	000000		POPJ	P,		;  CH7 WILL DO THE REST
  7774
  7775				;BIOREL - HERE FROM RESET UUO FOR EACH PORT IN BLOCK MODE
  7776				;	   TERMINATE BLOCK INPUT AND OUTPUT
  7777
  7778	012105'	336405	000005	BIOREL:	SKIPN	T3,LDBBIO(U)	;IF NO ACTIVE I OR O,
  7779	012106'	324740	012120'		 PJRST	BIORES		;  GET OUT NOW
  7780	012107'	554300	000010		HLRZ	T1,T3
  7781	012110'	322300	012072'		JUMPE	T1,BLKX1	;IF OUTPUT ACTIVE,
  7782	012111'	260040	012636'		PUSHJ	P,BLKXOT	;  REQUEST OUTPUT TERMINATION
  7783	012112'	254000	012072'		JRST	BLKX1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 179
SCNSER.MAC	25-JAN-91 22:40		BIOZAP - CALLED WHEN A CIRCUIT IN BLOCK MODE IS ZAPPED

  7784				SUBTTL	BIOZAP - CALLED WHEN A CIRCUIT IN BLOCK MODE IS ZAPPED
  7785
  7786	012113'	205300	400000	BIOZAP:	MOVSI	T1,LMLTBI
  7787	012114'	412305	000030		ANDCAM	T1,LDBMOD(U)	;CLEAR "TERMINATE PENDING" FLAG
  7788	012115'	137300	000065'		DPB	T1,LOPBOP	;Clear PTY "Block-output-in-progress"
  7789	012116'	260040	012364'		PUSHJ	P,RELBI		;MUST BE DONE WITH INPUT
  7790	012117'	260040	012370'		PUSHJ	P,RELBO		;MUST BE DONE WITH OUTPUT
  7791					PFALL	BIORES		;MUST BE DONE WITH BLOCK I/O
  7792
  7793				;BIORES - CLEAR BLKIO BIT AND FLAG NEGOTIATOR THAT WE'RE DONE
  7794
  7795	012120'	205300	001000	BIORES:	MOVSI	T1,LMLBIO	;TAKE PORT OUT OF BLKIO MODE
  7796	012121'	412305	000030		ANDCAM	T1,LDBMOD(U)	;
  7797	012122'	324740	012325'		PJRST	DECBC		;ONE FEWER PORT DOING BLOCK I/O
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 180
SCNSER.MAC	25-JAN-91 22:40		BLKINP - BLOCK INPUT-AND-WAIT AUXCAL

  7798				SUBTTL	 BLKINP - BLOCK INPUT-AND-WAIT AUXCAL
  7799
  7800	012123'	260040	012154'	BLKINP:	PUSHJ	P,BIOCHK	; EVERYTHING OK?
  7801	012124'	263040	000000		  POPJ	P,		; NO
  7802	012125'	550305	000005		HRRZ	T1,LDBBIO(U)	; T1/ INPUT BUFFER ADDRESS
  7803					JUMPE	T1,[		; NO INPUT BUFFER
  7804						TLNE	S,IOEND		; IOEND SET?
  7805						 JRST	BLKEOF		; RETURN EOF
  7806						MOVE	T2,LDBMOD(U)
  7807						TLNE	T2,LMLTBI	; TERMINATE PENDING?
  7808						 JRST	BLKIP1		; WAIT FOR IT
  7809						PUSHJ	P,REQBUF	; GET BUF & REQ. INPUT
  7810						  POPJ	P,		; FAILED (PORT ZAPPED)
  7811						JRST	BLKIP1		; MADE REQ.: NOW WAIT
  7812	012126'	322300	017232'		]
  7813	012127'	200346	000005		MOVE	T2,BIOCHR(T1)	; T2/ IN-PROGRESS FLAG,,COUNT
  7814	012130'	321340	012134'		JUMPL	T2,BLKIP1	; IN-PROGRESS: WAIT FOR IT
  7815	012131'	260040	012164'		PUSHJ	P,GOTBUF	; COMPLETE: TRANSFER DATA
  7816	012132'	255000	000000		  JFCL			; COUNT=0
  7817	012133'	254000	011755*		JRST	CPOPJ1		; OR COUNT .gt. 0: SKIP-RETURN
  7818
  7819				    ; HERE TO WAIT FOR "BLOCK INPUT TERMINATED" MESSAGE
  7820				    ; OF SOME SORT
  7821
  7822	012134'	260040	012563'	BLKIP1:	PUSHJ	P,IQUEUE
  7823	012135'	263040	000000		  POPJ	P,		; PORT GONE
  7824	012136'	254000	012123'		JRST	BLKINP		; RETRY
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 181
SCNSER.MAC	25-JAN-91 22:40		BLKINS - BLOCK INPUT-AND-SKIP AUXCAL

  7825				SUBTTL	 BLKINS - BLOCK INPUT-AND-SKIP AUXCAL
  7826
  7827	012137'	260040	012154'	BLKINS:	PUSHJ	P,BIOCHK	; EVERYTHING OK?
  7828	012140'	263040	000000		  POPJ	P,		; NO
  7829	012141'	550305	000005		HRRZ	T1,LDBBIO(U)	; T1/ INPUT BUFFER ADDRESS
  7830					JUMPE	T1,[		; NO INPUT BUFFER
  7831						TLNE	S,IOEND		; IOEND SET?
  7832						 JRST	BLKEOF		; RETURN EOF
  7833						MOVE	T2,LDBMOD(U)
  7834						TLNE	T2,LMLTBI	; TERMINATE PENDING?
  7835						 POPJ	P,		; NONSKIP-RETURN
  7836						PUSHJ	P,REQBUF	; GET BUF & REQ. INPUT
  7837						  POPJ	P,		; FAILED (PORT ZAPPED)
  7838						POPJ	P,		; MADE REQ.: NOW RETURN
  7839	012142'	322300	017242'		]
  7840	012143'	200346	000005		MOVE	T2,BIOCHR(T1)	; T2/ IN-PROGRESS FLAG,,COUNT
  7841	012144'	321340	011763*		JUMPL	T2,CPOPJ	; IN-PROGRESS: NONSKIP-RETURN
  7842	012145'	260040	012164'		PUSHJ	P,GOTBUF	; INPUT COMPLETE: TRANSFER DATA
  7843	012146'	263040	000000		  POPJ	P,		; COUNT=0: NONSKIP-RETURN
  7844	012147'	254000	012133*		JRST	CPOPJ1		; COUNT.gt.0: SKIP-RETURN
  7845
  7846				; BLKEOF - COMMON CODE TO SET IO.END
  7847				;	    FOR BLOCK INPUT AUXCALS
  7848
  7849	012150'	430000	017252'	BLKEOF:	XOR	S,[IOEND,,IODEND]
  7850	012151'	202004	000002		MOVEM	S,DEVIOS(F)	; SET IO.EOF, CLEAR IOEND
  7851	012152'	350001	000000		AOS	(P)
  7852	012153'	324740	012364'		PJRST	RELBI		; DONE WITH INPUT BUFFER
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 182
SCNSER.MAC	25-JAN-91 22:40		BIOCHK - COMMON SETUP CODE FOR BLOCK INPUT AUXCALS

  7853				SUBTTL	 BIOCHK - COMMON SETUP CODE FOR BLOCK INPUT AUXCALS
  7854
  7855	012154'	200305	000030	BIOCHK:	MOVE	T1,LDBMOD(U)
  7856	012155'	607300	001000		TLNN	T1,LMLBIO	; BLOCK I/O ENABLED?
  7857	012156'	263040	000000		 POPJ	P,		; NO -- FAIL
  7858	012157'	602000	020000		TRNE	S,IODEND	; IO.EOF SET?
  7859	012160'	263040	000000		 POPJ	P,		; YES -- FAIL
  7860	012161'	260040	013534'		PUSHJ	P,BPXOFF	; IS THIS NECESSARY?
  7861	012162'	702600	400000*		NOCHARGE		; TURN OFF THE CLOCK
  7862	012163'	254000	012147*		JRST	CPOPJ1		; SUCCEED
  7863
  7864				; GOTBUF - COMMON BUFFER-TRANSFER CODE FOR BLOCK INPUT AUXCALS
  7865				;	    ENTER WITH T1/ INPUT BUFFER ADDRESS
  7866				;		       T2/ CHARACTER COUNT
  7867
  7868	012164'			GOTBUF:
  7869	012164'	261040	000014		PUSH	P,P1		;Needed in one irritating place
  7870	012165'	261040	000007		PUSH	P,T2		; SAVE CHARACTER COUNT
  7871	012166'	272342	000000*		ADDM	T2,JBTBIO(J)	; CHARGE JOB FOR CHARACTERS
  7872	012167'	272340	012166*		ADDM	T2,JBTBIO	; RECORD TOTAL CHARACTERS
  7873	012170'	271340	000003		ADDI	T2,3
  7874	012171'	242340	777776		LSH	T2,-2		; T2/ # OF WORDS
  7875	012172'	505406	000005		HRLI	T3,BIOCHR(T1)	; T3/ START OF MON DATA,,
  7876	012173'	540400	000013		HRR	T3,M		; T3/ ",,START OF USER BUFFER
  7877				IFNKMC<
  7878	012174'	271350	000000		ADDI	T2,(T3)		; T2/ STOP LOCATION
  7879	012175'	256200	017253'		XCTTU <BLT T3,(T2)>	; TRANSFER THE COUNT&DATA
  7880				>;END IFNKMC
  7881				IFKMC<
  7882					;T2/# OF WORDS
  7883					;T3/MONITOR BUFFER,,USER BUFFER
  7884					PUSH	P,T1		;SAVE T1
  7885					PUSH	P,T4		;TO HOLD DESTINATION BYTEPOINTER
  7886					LSH	T2,1		;T2/# OF HALF WORDS
  7887					HRRZ	T4,T3		;T4/0,,USER BUFFER
  7888					HLRZ	T3,T3		;T3/0,,MONITOR BUFFER
  7889					MOVE	T1,(T3)		;GET FIRST WORD FOR USER BUFFER
  7890					XCT 4,[MOVEM T1,(T4)]	;PUT IT IN USER BUF
  7891					ADDI	T4,1
  7892					ADDI	T3,1
  7893					HRLI	T3,(POINT 18,0)	;PACK HALFWORD BYTES INTO
  7894					HRLI	T4,(POINT 16,0)	;	FULLWORD BYTES
  7895				GBXLUP:	ILDB	T1,T3		;GET MONITOR HALF WORD
  7896					XCT	1,[IDPB T1,T4]	;PUT TWO BYTES IN USER BUF
  7897					SOJG	T2,GBXLUP
  7898					POP	P,T4		;RESTORE THEM REGISTERS
  7899					POP	P,T1		;RESTORE T1
  7900				>;END IFKMC
  7901	012176'	200345	000030		MOVE	T2,LDBMOD(U)
  7902	012177'	607340	400000		TLNN	T2,LMLTBI	; TERMINATE-INPUT PENDING?
  7903	012200'	603000	000040		TLNE	S,IOEND		; IOEND SET?
  7904					 JRST	[
  7905						PUSHJ	P,RELBI		; DONE WITH INPUT BUFFER
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 182-2
SCNSER.MAC	25-JAN-91 22:40		BIOCHK - COMMON SETUP CODE FOR BLOCK INPUT AUXCALS

  7906						JRST	GOTBF1		; GO FINISH UP
  7907	012201'	254000	017254'		]
  7908	012202'	260040	012376'		PUSHJ	P,KEPBI		; IF SOMEONE ELSE WANTS A BUFFER,
  7909	012203'	334000	000000		  SKIPA			;By all means let 'em have it
  7910	012204'	254000	012212'		 JRST	GOTBF0		;No competition
  7911	012205'	200606	000004		MOVE	P1,BIOREQ(T1)	;Save count in a safe place (!)
  7912	012206'	260040	012364'		PUSHJ	P,RELBI		;Give up the buffer/port
  7913	012207'	260040	012354'		PUSHJ	P,GETBI		;Get a new one
  7914	012210'	254000	012214'		  JRST	GOTBF1		;Not needed...
  7915	012211'	202606	000004		MOVEM	P1,BIOREQ(T1)	;Set count in new buffer
  7916	012212'			GOTBF0:
  7917	012212'	200346	000004		MOVE	T2,BIOREQ(T1)	; T2/ OLD REQUEST COUNT
  7918	012213'	260040	012230'		PUSHJ	P,BLKIRQ	; REQUEST INPUT
  7919	012214'	262040	000006	GOTBF1:	POP	P,T1		; T1/ COUNT BLT'ED
  7920	012215'	262040	000014		POP	P,P1		;Remember him?
  7921	012216'	326300	012163*		JUMPN	T1,CPOPJ1	; SKIP IF .GT. 0
  7922	012217'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 183
SCNSER.MAC	25-JAN-91 22:40		REQBUF - ALLOCATE A BUFFER FOR BLOCK INPUT

  7923				SUBTTL	 REQBUF - ALLOCATE A BUFFER FOR BLOCK INPUT
  7924				;	    STORE ITS ADDRESS IN RH(LDBBIO(U))
  7925				;	    SAVE THE USER'S BYTE COUNT IN BIOREQ(RH(LDBBIO(U)))
  7926				;	    AND SEND AN INPUT REQUEST
  7927				;	    SKIP-RETURN NORMALLY
  7928				;	    NONSKIP-RETURN IF ZAPPED WHILE IN "EXTRA" WAIT
  7929
  7930	012220'	260040	012354'	REQBUF:	PUSHJ	P,GETBI		; SET UP FOR BLOCK INPUT
  7931	012221'	263040	000000		  POPJ	P,		; FAILED (ZAPPED)
  7932
  7933					; SUCCEEDED: T1/ INPUT BUFFER ADDRESS
  7934
  7935	012222'	256200	017256'		XCTFU <HRRZ T2, (M)>	; T2/ USER'S BYTE COUNT
  7936	012223'	303340	000620		CAILE	T2, ^D400
  7937	012224'	201340	000620		MOVEI	T2, ^D400	; T2/ USER'S COUNT .MIN. 400
  7938	012225'	202346	000004		MOVEM	T2, BIOREQ(T1)	; SAVE FOR READAHEAD CODE
  7939	012226'	350001	000000		AOS	(P)		; PREPARE FOR SKIP-RETURN
  7940	012227'	324740	012230'		PJRST	BLKIRQ		; REQUEST INPUT
  7941
  7942				; BLKIRQ - REQUEST BLOCK INPUT
  7943				;	    ENTER WITH T1/ BUFFER ADDRESS
  7944				;		       T2/ CHARACTER COUNT
  7945
  7946	012230'			BLKIRQ:
  7947				IFCPU (KL),<
  7948	012230'	200400	004536*		MOVE	T3,CSUCNT##	;WHEN I/O STARTS, SWEEP NUMBER
  7949								;MUST BE DIFFERENT THAN THIS.
  7950	012231'	202406	000001		MOVEM	T3,BIOCSH(T1)>
  7951	012232'	200405	000030		MOVE	T3,LDBMOD(U)
  7952	012233'	603400	400000		TLNE	T3,LMLTBI	; TERMINATE PENDING?
  7953	012234'	256000	000000'		 STOPCD			; IMPOSSIBLE!
  7954	012235'	562346	000005		HRROM	T2,BIOCHR(T1)	; IN-PROG := -1, COUNT := T2.RH
  7955	012236'	201300	000001		MOVEI	T1,1
  7956	012237'	137300	000061'		DPB	T1,LOPBIN	;SET BLOCK INPUT
  7957	012240'	137305	000002		DPB	T1,LDBOPB(U)	;AND NEED-OUTPUT
  7958	012241'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 184
SCNSER.MAC	25-JAN-91 22:40		BLKOUT - HERE FROM BLOCK OUTPUT AUXCAL.  SKIPS ON SUCCESS.

  7959				SUBTTL	BLKOUT - HERE FROM BLOCK OUTPUT AUXCAL.  SKIPS ON SUCCESS.
  7960
  7961	012242'	200305	000030	BLKOUT:	MOVE T1,LDBMOD(U)	;TEST TO SEE IF BLOCK I/O
  7962	012243'	607300	001000		TLNN T1,LMLBIO		;MODE HAS BEEN SET.
  7963	012244'	263040	000000		 POPJ P,		;ERROR RETURN IF NOT.
  7964	012245'	702600	400000*		NOCHARGE		;TURN OFF THE CLOCK.
  7965	012246'	554305	000005		HLRZ T1,LDBBIO(U)	;IS THERE A BLOCK OUTPUT
  7966	012247'	322300	012253'		JUMPE T1,BLKOT1		; ALREADY IN PROGRESS?
  7967	012250'	260040	012572'		PUSHJ P,OQUEUE		;I/O WAIT OR INTERRUPT
  7968	012251'	263040	000000		 POPJ P,		;NO.  ERROR RETURN TO THE USER.
  7969	012252'	254000	012242'		JRST BLKOUT		;MAKE SURE BUFFER WAS RELEASED.
  7970	012253'	260040	012360'	BLKOT1:	PUSHJ	P, GETBO	;SET UP FOR BLOCK OUTPUT
  7971	012254'	263040	000000		  POPJ	P,		;  ZAPPED
  7972	012255'	256200	017256'		XCTBU <HRRZ T2,(M)>	;GET USER'S WORD COUNT
  7973	012256'	307340	000620		CAIG	T2,^D400	;IF < 0 OR > 400
  7974	012257'	336000	000007		SKIPN	T2		;OR = 0
  7975	012260'	324740	012370'		 PJRST	RELBO		;  GET OUT AND ERROR-RETURN
  7976	012261'	303340	000120		CAILE T2,^D80		;MIN. NO. OF CHARS FOR CHARGING
  7977	012262'	334400	000007		 SKIPA T3,T2		;PURPOSES IS EIGHTY.
  7978	012263'	201400	000120		MOVEI T3,^D80
  7979	012264'	272402	012167*		ADDM T3,JBTBIO(J)	;ADD TO BIO CHRS XFER'D FOR JOB.
  7980	012265'	272400	012264*		ADDM T3,JBTBIO		;ADD TO TOTAL BIO CHARS XFERRED.
  7981	012266'	271340	000003		ADDI T2,3
  7982	012267'	242340	777776		LSH T2,-2
  7983	012270'	256200	017257'		XCTBU <MOVSI T3,(M)>	;GET ADDRESS OF USER BUFFER
  7984	012271'	541406	000005		HRRI T3,BIOCHR(T1)	;PREPARE FOR BLT TO MONITOR
  7985				IFNKMC<
  7986	012272'	271346	000005		ADDI T2,BIOCHR(T1)	;ADD IN BASE LOC FOR XFER
  7987	012273'	256040	017253'		XCTFU <BLT T3,(T2)>	;BUFFER.
  7988				IFCPU (KL),<
  7989	012274'	200340	004561*		MOVE	T2,CSVCNT##	;MUST DO ONE VALIDATE BEFORE CAN START
  7990	012275'	202346	000001		MOVEM	T2,BIOCSH(T1)>	;I/O.
  7991				>;END IFNKMC
  7992				IFKMC<
  7993					;T2/# OF WORDS
  7994					;T3/USER BUFFER,,MONITOR BUFFER
  7995					PUSH	P,T4		;TO HOLD DESTINATION BYTEPOINTER
  7996					LSH	T2,1		;T2/# OF HALF WORDS
  7997					HRRZ	T4,T3		;T4/0,,MONITOR BUFFER
  7998					HLRZ	T3,T3		;T3/0,,USER BUFFER
  7999					XCT	4,[MOVE T1,(T3)]	;GET FIRST WORD OF USER BUFFER
  8000					MOVEM	T1,(T4)		;PUT IT IN MON BUF
  8001					ADDI T4,1
  8002					ADDI T3,1
  8003					HRLI	T3,(POINT 16,0)	;UNPACK FULLWORD BYTES INTO
  8004					HRLI	T4,(POINT 18,0)	;		HALFWORD BYTES
  8005				XCTLUP:	XCT 1,[ILDB T1,T3]	;GET TW0 USER BYTES
  8006					IDPB	T1,T4
  8007					SOJG	T2,XCTLUP
  8008					POP	P,T4		;RESTORE THEM REGISTERS
  8009				>;END IFKMC
  8010	012276'	201300	000001		MOVEI T1,1
  8011	012277'	137300	000076'		DPB T1,LOPBOT		;SET BLOCK OUTPUT
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 184-2
SCNSER.MAC	25-JAN-91 22:40		BLKOUT - HERE FROM BLOCK OUTPUT AUXCAL.  SKIPS ON SUCCESS.

  8012	012300'	137305	000002		DPB T1,LDBOPB(U)	;AND NEED-OUTPUT
  8013	012301'	254000	012216*		JRST CPOPJ1		;AND SUCCESS-RETURN
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 185
SCNSER.MAC	25-JAN-91 22:40		BLKOUT - HERE FROM BLOCK OUTPUT AUXCAL.  SKIPS ON SUCCESS.

  8014				COMMENT %
  8015
  8016				There are (presently) three block i/o mechanisms, one for
  8017				620 bases, one for PTYs, and one, as yet uncoded, for Nexilis
  8018				bases. For the sake of everyone's sanity, there must be a
  8019				level in the block i/o code at which the distinction between
  8020				these three becomes invisible.
  8021
  8022				In particular, the UUOs should use only the following routines,
  8023				which will acquire and release the appropriate resources
  8024				regardless of the mechanism being used:
  8025
  8026					GETBI	sets up a port to do block input
  8027					RELBI	called when a port's done with block input
  8028					KEPBI	skips if it's ok for this port to keep
  8029						its block-input resources; if it nonskips,
  8030						caller should do a RELBI/GETBI sequence
  8031					GETBO	sets up a port for block output
  8032					RELBO	called when a port's done with block output
  8033					INCBC	enables the block i/o mechanism for 1 more
  8034						job (1 more PDP10 port), and skip-returns
  8035						if 1 more is ok
  8036					DECBC	called when a port is disabled for block i/o
  8037
  8038				%
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 186
SCNSER.MAC	25-JAN-91 22:40		INCBC - CALLED WHEN 1 MORE PORT IS TO BE ENABLED FOR BLOCK I/O

  8039				SUBTTL	INCBC - CALLED WHEN 1 MORE PORT IS TO BE ENABLED FOR BLOCK I/O
  8040				;	  SKIP-RETURNS IF 1 MORE IS OK
  8041				;	  CALLED WITH U/ LDB ADDR, J/ JOB #
  8042
  8043	012302'	500245	000031	INCBC:	HLL	U, LDBDCH(U)
  8044	012303'	603240	040000		TLNE	U, LDLPTY	;IF IT'S A PTY,
  8045	012304'	254000	012323'		JRST	INCPBC		;  THINGS ARE SIMPLER
  8046
  8047				    ;HERE FOR REAL TTYS
  8048
  8049	012305'	702600	400000*		NOCHARGE		;TURN OFF THE CLOCK.
  8050				IFCPU (<KI,KL>), <
  8051	012306'	352000	011727*		AOSE	AXREQ		;INC REQUEST COUNT FOR AUX QUEUE
  8052	012307'	260040	011533*		 PUSHJ	P,AXWAIT	;QUEUE JOB IF REQ IN PROGRESS
  8053	012310'	350000	016457'		AOS	BIOCNT+0	;INCREMENT COUNT OF BIO JOBS
  8054	012311'	563000	016457'		HRROS	BIOCNT+0	;FLAG FOR CH7 TO SEND REQUEST.
  8055	012312'	202100	016451'		MOVEM	J,BIOJOB	;BIOJOB_JOB NO W REQ IN PROGRESS
  8056	012313'	201300	011660*		MOVEI	T1,MLOWQ	;PLACE THIS JOB IN THE ML QUEUE
  8057	012314'	137300	011661*		DPB	T1,PJBSTS##	;AND WAIT UNTIL AN ANSWER IS
  8058	012315'	260040	011663*		PUSHJ	P,WSCHED	;RECEIVED FROM THE BASE.
  8059	012316'	333000	016461'		SKIPLE	BIOPRT		;IF THERE'S AT LEAST ONE SLOT,
  8060	012317'	350001	000000		 AOS	(P)		;  SET TO SKIP-RETURN
  8061	012320'	371000	012306*		SOSL	AXREQ
  8062	012321'	476000	011730*		 SETOM	AXAVAL
  8063	012322'	263040	000000		POPJ	P,
  8064				> ;END IFCPU (<KI,KL>)
  8065				IFNCPU (<KI,KL>), <
  8066					AOS	BIOCNT		;ONE MORE BIO JOB
  8067					SOSL	BPREQ		;AND ONE MORE BUFFER
  8068					 SETOM	BPAVAL		;ACTIVATE JOB WAITING FOR A BUFFER
  8069					JRST	CPOPJ1
  8070				> ;END IFNCPU (<KI,KL>)
  8071
  8072				    ;HERE FOR PTYS
  8073
  8074	012323'	350000	016460'	INCPBC:	AOS	BIOCNT+1	;1 MORE BLOCK-MODE PTY
  8075	012324'	254000	012301*		JRST	CPOPJ1		;SKIP-RETURN
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 187
SCNSER.MAC	25-JAN-91 22:40		DECBC - CALLED WHEN A PORT HAS BEEN DISABLED FOR BLOCK I/O

  8076				SUBTTL	DECBC - CALLED WHEN A PORT HAS BEEN DISABLED FOR BLOCK I/O
  8077				;	  AND ALL BLOCK I/O ACTIVITY FOR IT HAS STOPPED
  8078				;	  CALLED WITH U/ LDB ADDR
  8079
  8080	012325'	500245	000031	DECBC:	HLL	U,LDBDCH(U)
  8081	012326'	603240	040000		TLNE	U,LDLPTY	;IF IT'S A PTY,
  8082	012327'	254000	012336'		 JRST	DECPBC		;  THINGS ARE A BIT EASIER
  8083
  8084				    ;HERE FOR A REAL TTY
  8085
  8086	012330'	570300	016457'		HRRE	T1,BIOCNT+0	;T1/ REAL TTY BLOCK I/O USER COUNT
  8087	012331'	365300	012333'		SOJGE	T1,.+2
  8088	012332'	256000	017260'		 STOPCD (CPOPJ,INFO,TTYBCN,,<Block I/O count negative>);;DECBC+5
  8089				IFCPU (<KI,KL>), <
  8090	012333'	562300	016457'		HRROM	T1,BIOCNT+0	;BIOCNT+0/ "CHANGED",,NEW COUNT
  8091				> ;END IFCPU (<KI,KL>)
  8092				IFNCPU (<KI,KL>), <
  8093					MOVEM	T1,BIOCNT+0	;ONE LESS BIO JOB
  8094					AOS	BPREQ		;ONE LESS BUFFER
  8095				> ;END IFNCPU (<KI,KL>)
  8096	012334'	270300	016460'		ADD	T1,BIOCNT+1	;T1/ TOTAL BLOCK USER COUNT
  8097	012335'	254000	012342'		JRST	DECBC1
  8098
  8099				    ;HERE FOR A PTY
  8100
  8101	012336'	375300	016460'	DECPBC:	SOSGE	T1,BIOCNT+1	;T1/ PTY BLOCK USER COUNT
  8102	012337'	256000	012332'		 STOPCD (,XCT,TTYBCN)
  8103	012340'	570340	016457'		HRRE	T2,BIOCNT+0
  8104	012341'	270300	000007		ADD	T1,T2		;T1/ TOTAL BLOCK USER COUNT
  8105					PFALL	DECBC1
  8106
  8107				    ;HERE FOR EITHER - FREE UP UNNECESSARY BUFFERS
  8108
  8109	012342'	240300	000001	DECBC1:	ASH	T1,1		;T1/ MAX # OF BUFFERS NEEDED (2*PORTS)
  8110	012343'	274300	016462'		SUB	T1,BIOBUF	;T1/ -# OF UNNEEDED BUFFERS IN POOL
  8111	012344'	261040	000006		PUSH	P,T1
  8112	012345'	353001	000000	DECBC2:	AOSLE	(P)
  8113	012346'	254000	012352'		JRST	DECBC3
  8114	012347'	260040	012455'		PUSHJ	P,GETBBP	;GET A BUFFER FROM THE BLOCK I/O POOL
  8115	012350'	260040	012471'		PUSHJ	P,RELBBF	;RELEASE IT TO FREECORE
  8116	012351'	254000	012345'		JRST	DECBC2
  8117	012352'	262040	000006	DECBC3:	POP	P,T1
  8118	012353'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 188
SCNSER.MAC	25-JAN-91 22:40		GETBI - SET UP A PORT FOR BLOCK INPUT

  8119				SUBTTL	GETBI - SET UP A PORT FOR BLOCK INPUT
  8120				;	  NONSKIP IF LEFT BLOCK MODE
  8121				;	  ELSE SKIP WITH T1 AND LDBBIO(U).RH SET TO BUFFER
  8122
  8123	012354'	260040	012412'	GETBI:	PUSHJ	P,GETBIO
  8124	012355'	263040	000000		  POPJ	P,
  8125	012356'	542305	000005		HRRM	T1,LDBBIO(U)
  8126	012357'	254000	012324*		JRST	CPOPJ1
  8127
  8128				;GETBO - SET UP A PORT FOR BLOCK OUTPUT
  8129
  8130	012360'	260040	012412'	GETBO:	PUSHJ	P,GETBIO
  8131	012361'	263040	000000		  POPJ	P,
  8132	012362'	506305	000005		HRLM	T1,LDBBIO(U)
  8133	012363'	254000	012357*		JRST	CPOPJ1
  8134
  8135				;RELBI - CALLED WHEN A PORT'S DONE WITH BLOCK INPUT
  8136				;	  RETURNS T1/ LDBBIO(U)
  8137
  8138	012364'	550305	000005	RELBI:	HRRZ	T1,LDBBIO(U)
  8139	012365'	322300	012374'		JUMPE	T1,RELB0
  8140	012366'	513005	000005		HLLZS	LDBBIO(U)
  8141	012367'	324740	012433'		PJRST	RELBIO
  8142
  8143				;RELBO - CALLED WHEN A PORT'S DONE WITH BLOCK OUTPUT
  8144				;	  RETURNS T1/ LDBBIO(U)
  8145
  8146	012370'	554305	000005	RELBO:	HLRZ	T1,LDBBIO(U)
  8147	012371'	322300	012374'		JUMPE	T1,RELB0
  8148	012372'	553005	000005		HRRZS	LDBBIO(U)
  8149	012373'	324740	012433'		PJRST	RELBIO
  8150
  8151	012374'	200305	000005	RELB0:	MOVE	T1,LDBBIO(U)
  8152	012375'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 189
SCNSER.MAC	25-JAN-91 22:40		KEPBI - SKIP-RETURNS IF IT'S OK FOR THIS PORT (U/ LDB ADDRESS)

  8153				SUBTTL	KEPBI - SKIP-RETURNS IF IT'S OK FOR THIS PORT (U/ LDB ADDRESS)
  8154				;	  TO KEEP ITS BLOCK INPUT RESOURCES, NONSKIPS IF
  8155				;	  SOMEBODY ELSE WANTS THEM
  8156
  8157	012376'	261040	000006	KEPBI:	PUSH	P,T1
  8158	012377'	205300	040000		MOVSI	T1,LDLPTY
  8159	012400'	612305	000031		TDNE	T1,LDBDCH(U)	;IF IT'S NOT A PTY
  8160	012401'	254000	012405'		 JRST	KEPBI1
  8161	012402'	200305	000005		MOVE	T1,LDBBIO(U)
  8162	012403'	333000	001427*		SKIPLE	BPREQ		;AND SOMEONE'S WAITING FOR PORTS
  8163	012404'	603300	777777		 TLNE	T1,777777	;AND WE CAN FREE ONE,
  8164	012405'	333000	000000*	KEPBI1:	SKIPLE	FCREQ		;OR IF SOMEONE'S WAITING FOR FREECORE,
  8165	012406'	254000	012410'		 JRST	.+2		;  DON'T SKIP
  8166	012407'	350001	777777		AOS	-1(P)
  8167	012410'	262040	000006		POP	P,T1
  8168	012411'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 190
SCNSER.MAC	25-JAN-91 22:40		GETBIO - GET A BLOCK I/O BUFFER FOR LINE

  8169				SUBTTL	GETBIO - GET A BLOCK I/O BUFFER FOR LINE
  8170				;	   NONSKIP-RETURN IF PORT LEFT BIO MODE WHILE WAITING
  8171				;	   SKIP-RETURN WITH T1/ THE BUFFER ADDRESS OTHERWISE
  8172
  8173	012412'	205300	400000	GETBIO:	MOVSI	T1,LNLZIN	;Was a zapper seen on this line?
  8174	012413'	612305	000001		TDNE	T1,LDBLIN(U)	; ...
  8175	012414'	263040	000000		 POPJ	P,		;Pretend there are no more buffers for now
  8176	012415'	205300	040000		MOVSI	T1,LDLPTY
  8177	012416'	616305	000031		TDNN	T1,LDBDCH(U)	;IF IT'S NOT A PTY
  8178	012417'	332005	000005		SKIPE	LDBBIO(U)	;AND THERE'S NO BLOCK I/O IN PROGRESS,
  8179	012420'	254000	012423'		 JRST	GTBIO1
  8180	012421'	353000	012403*		AOSLE	BPREQ
  8181	012422'	260040	000000*		PUSHJ	P,BPWAIT	;  GET A BASE PORT
  8182	012423'	260040	012445'	GTBIO1:	PUSHJ	P,GETBB		;T1/ BUFFER ADDRESS
  8183				IFCPU (KL),<;P035/D05 - make sure page containing buffer is uncached.
  8184	012424'	261040	000006		PUSH	P,T1		;Save pointer
  8185	012425'	505300	000000*		HRLI	T1,BIOCOR	;Size of buffer in LH
  8186	012426'	260040	000000*		PUSHJ	P,CSHCLR##	;Clear cache bit in EPT
  8187	012427'	262040	000006		POP	P,T1
  8188				>
  8189	012430'	200345	000030		MOVE	T2,LDBMOD(U)
  8190	012431'	603340	001000		TLNE	T2,LMLBIO	;IF PORT'S STILL IN BLOCK MODE,
  8191	012432'	254000	012363*		 JRST	CPOPJ1		;  SKIP-RETURN
  8192					PFALL	RELBIO
  8193
  8194				;RELBIO - RELEASE A BLOCK I/O BUFFER FOR U
  8195				;	   CALLED WITH T1/ THE BUFFER ADDRESS
  8196				;	   FREES THE PORT IF NO BUFFERS REMAIN
  8197				;	   RETURNS T1/ LDBBIO(U)
  8198
  8199	012433'	260040	012467'	RELBIO:	PUSHJ	P,RELBB		;FREE THE BUFFER
  8200	012434'	205300	040000		MOVSI	T1,LDLPTY
  8201	012435'	612305	000031		TDNE	T1,LDBDCH(U)	;IF IT'S NOT A PTY
  8202	012436'	254000	012443'		 JRST	RLBIO1
  8203	012437'	336305	000005		SKIPN	T1,LDBBIO(U)	;AND NO BLOCK I OR O IN PROGRESS,
  8204	012440'	371000	012421*		SOSL	BPREQ		;  FREE THE BASE PORT
  8205	012441'	476000	001432*		 SETOM	BPAVAL
  8206	012442'	263040	000000		POPJ	P,
  8207
  8208	012443'	200305	000005	RLBIO1:	MOVE	T1, LDBBIO(U)	;T1/ LDBBIO
  8209	012444'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 191
SCNSER.MAC	25-JAN-91 22:40		GETBB - GET A BLOCK I/O BUFFER AND RETURN ITS ADDRESS IN T1

  8210				SUBTTL	GETBB - GET A BLOCK I/O BUFFER AND RETURN ITS ADDRESS IN T1
  8211				;GETBBP - GET ONE FROM THE POOL (NOT FREECORE) OR CRASH
  8212
  8213	012445'	332000	016463'	GETBB:	SKIPE	BBFREE		;IF NO FREE BLOCK BUFFERS,
  8214	012446'	254000	012457'		 JRST	GETBB1
  8215	012447'	201340	012425*		MOVEI	T2,BIOCOR
  8216	012450'	335000	012405*		SKIPGE	FCREQ		;  GET ANOTHER. IF OTHER JOBS IN FC WAIT
  8217	012451'	260040	000000*		 PUSHJ	P,GET4WD	;  OR NO FREE CORE,
  8218					  JRST	[
  8219						AOS  FCREQ
  8220						PUSHJ P,FCWAIT
  8221						SOS  FCREQ
  8222						JRST GETBB	;    WAIT, THEN TRY AGAIN
  8223	012452'	254000	017263'		]
  8224				IFKMC<
  8225					PUSH	P,T1		;SAVE UNMAPPED T1
  8226					PUSHJ	P,SCANBB	;RETURNS T2 WITH UBA PAGE # OF T1
  8227					  JRST [CAILE T2,UBAEND-<UBABIO&777> ;GUESS WE DIDN'T MATCH. ANY ROOM LEFT?
  8228						 STOPCD 	;GIVE UP IF NO ROOM.
  8229						HRLI T2,3	;T2/3,,AVAILABLE PAGE #
  8230						LSH T1,-9	;T1/HIGH 11 BITS OF MAPPED ADDRESS
  8231						TRO T1,1B21	;SET VALID BIT
  8232						WRIO T1,UBABIO(T2)
  8233						MOVEM T1,BBPAGE(T2)
  8234						ADDI T1,1	;ALSO INIT NEXT PAGE
  8235						WRIO T1,UBABIO+1(T2)
  8236						MOVEM T1,BBPAGE+1(T2)
  8237						HRRZ T2,T2	;T2/0,,PAGE #
  8238						AOS  BBCRE	;;;COUNT BIO BUFFERS CREATED
  8239						JRST .+1]	;CONTINUE
  8240					LSH	T2,-1		;T2/PAGE PAIR #
  8241					AOS	BBCNTS(T2)	;BUMP THE USE COUNT
  8242					POP	P,T1		;RESTORE UNMAPPED T1
  8243				>;END IFKMC
  8244	012453'	350000	016462'		AOS	BIOBUF		;  1 MORE BUFFER IN POOL
  8245	012454'	263040	000000		POPJ	P,		;  RETURN THE BUFFER
  8246
  8247				    ;HERE IF THERE ARE FREE BUFFERS IN THE BLOCK I/O POOL
  8248
  8249	012455'	336000	016463'	GETBBP:	SKIPN	BBFREE
  8250	012456'	256000	017267'	TTYNFB:: STOPCD (.,STOP,TTYNFB,,<No Free Buffrers>)
  8251				     ;;GETBBP+1
  8252	012457'	370000	016463'	GETBB1:	SOS	BBFREE
  8253	012460'	350000	016466'		AOS	BBPOOL		;COUNT USE OF FREE BIO BUFFERS
  8254	012461'	550300	016456'		HRRZ	T1,BUFLST
  8255	012462'	336000	000006		SKIPN	T1
  8256	012463'	256000	012456'		 STOPCD (,XCT,TTYNFB)
  8257				   ;No Free Buffers        ;;GETBB1+5
  8258	012464'	550346	000000		HRRZ	T2,(T1)
  8259	012465'	542340	016456'		HRRM	T2,BUFLST	;MAKE NEXT-LINK THE NEW HEADER
  8260	012466'	263040	000000		POPJ	P,
  8261
  8262				;RELBB - RELEASE THE BLOCK I/O BUFFER POINTED TO BY T1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 191-2
SCNSER.MAC	25-JAN-91 22:40		GETBB - GET A BLOCK I/O BUFFER AND RETURN ITS ADDRESS IN T1

  8263				;RELBBF - ALWAYS RETURN IT TO FREECORE
  8264
  8265	012467'	335000	012450*	RELBB:	SKIPGE	FCREQ		;IF OTHER JOBS ARE WAITING FOR FREECORE,
  8266	012470'	254000	012476'		 JRST	RELBB1
  8267	012471'	336340	000006	RELBBF:	SKIPN	T2,T1
  8268	012472'	256000	000000'		 STOPCD
  8269	012473'	370000	016462'		SOS	BIOBUF
  8270	012474'	201300	012447*		MOVEI	T1, BIOCOR
  8271				IFKMC<	PUSHJ P,RELKMC>		;RELEASE UBA SLOT
  8272	012475'	324740	000000*		PJRST	GIV4WD		;  JUST RELEASE THE BUFFER
  8273
  8274				    ;HERE TO ADD THE BUFFER TO THE BLOCK I/O POOL
  8275
  8276	012476'	336000	000006	RELBB1:	SKIPN	T1
  8277	012477'	256000	000000'		 STOPCD
  8278	012500'	550340	016456'		HRRZ	T2,BUFLST	;T2/ HEAD OF FREE CHAIN
  8279	012501'	202346	000000		MOVEM	T2,(T1)
  8280	012502'	202300	016456'		MOVEM	T1,BUFLST	;MAKE T1 THE NEW HEAD
  8281	012503'	350000	016463'		AOS	BBFREE
  8282	012504'	263040	000000		POPJ	P,
  8283
  8284				IFKMC<
  8285				RELKMC:	PUSH	P,T1		;SAVE T1
  8286					PUSH	P,T2		;SAVE UNMAPPED T2
  8287					MOVE	T1,T2		;T1/BUFFER ADDRESS
  8288					PUSHJ	P,SCANBB	;RETURNS T2 WITH UBA PAGE # OF T1
  8289					  STOPCD		;NO MATCH IS BAD NEWS!
  8290					LSH	T2,-1		;T2/PAGE PAIR NUMBER
  8291					SOSN	BBCNTS(T2)	;DEC PAGE PAIR USE COUNT
  8292					 JRST  [LSH T2,1	;;IF COUNT WENT TO 0 RESTORE T2 &
  8293						SETZ T1,	;;INVALIDATE THE PAGE PAIR
  8294						HRLI T2,3	;;UBA #3,,EVEN PAGE #
  8295						WRIO T1,UBABIO(T2)
  8296						WRIO T1,UBABIO+1(T2)
  8297						HRROS BBPAGE(T2)	;;;;DEBUG
  8298						HRROS BBPAGE+1(T2)	;;;;DEBUG CODE
  8299						AOS BBREL		;;;;INFO
  8300						JRST .+1]
  8301					POP	P,T2		;RESTORE UNMAPPED T2
  8302					POP	P,T1		;RESTORE T1
  8303					POPJ	P,		;RETURN
  8304				
  8305				
  8306				;RETURNS T1 MAPPED
  8307				;SKIP RETURNS WHEN T2/0,,MATCHED UBA PAGE
  8308				;NON-SKIP RETURNS WITH T2/0,,-1 OR T2/0,,AVAILABLE UBA PAGE #
  8309				SCANBB:	MAP	T1,(T1)
  8310					PUSH	P,T1		;SAVE MAPPED T1 FOR RETURN
  8311					PUSH	P,T3
  8312					PUSH	P,T4
  8313					AND	T1,[3777B26]	;MASK OUT ALL BUT HIGH 11 BITS
  8314					TLO	T1,(1B8)	;SET VALID BIT
  8315					MOVEI	T4,-1		;T4/0,,-1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 191-3
SCNSER.MAC	25-JAN-91 22:40		GETBB - GET A BLOCK I/O BUFFER AND RETURN ITS ADDRESS IN T1

  8316					HRLZI	T2,3		;T2/3,,0
  8317				SBBLUP:	RDIO	T3,UBABIO(T2)	;T3/EVEN PAGE # CONTENTS
  8318					AND T3,[<1B8!3777B26>]	;MASK OUT ALL BUT VALID BIT & HIGH 11
  8319					CAMN	T1,T3		;DOES IT MATCH?
  8320					 JRST  [POP P,T4	;IF IT DOES THEN SKIP RETURN
  8321						POP P,T3
  8322						POP P,T1	;RESTORE MAPPED T1
  8323						HRRZ T2,T2	;T2/0,,MATCHED PAGE #
  8324						JRST CPOPJ1	;DO SKIP RETURN
  8325						]
  8326					TLZN	T3,(1B8)	;IS THE VALID BIT ON?
  8327					 MOVEI	T4,(T2)		;T4/0,,LATEST AVAILABLE PAGE #
  8328					ADDI	T2,2		;T2/3,,NEXT PAGE PAIR
  8329					CAMGE	T2,[3,,UBAEND-<UBABIO&777>]	;ARE WE STILL LESS THAN 30?
  8330					 JRST	SBBLUP		;IF SO GO BACK TO SBB LOOP
  8331					MOVE	T2,T4		;T2/0,,-1 OR 0,,AVAILABLE SLOT NUMBER
  8332					POP	P,T4
  8333					POP	P,T3
  8334					POP	P,T1		;RESTORE MAPPED T1
  8335					POPJ	P,		;NON-SKIP RETURN
  8336				
  8337				
  8338				;MISC KMC RELATED ROUTINES
  8339				
  8340				
  8341				SCNMIN: PUSHJ	P,MDRUP		;T1/ FLAG DRs WE THINK ARE UP
  8342					MOVEM	T1,DRMBRK	;FLAG TO SEND DR PILLS
  8343					POPJ	P,
  8344				
  8345				SCNDRD:			;WILL SKIP A MINUTE WHEN KMCRES IS CALLED
  8346					SKIPE	T1,DRDOW
  8347					 JRST	SCNMI2		;SET DRMHSI ON 2ND MINUTE
  8348					PUSHJ	P,KMCRST##	;T1/ DOWN DR BITS
  8349					PUSHJ	P,DRFLAG	;T1/ 3-BIT DR NUMBERS NEEDING TYPHSI MSG
  8350					MOVEM	T1,DRDOW	;START DELAY FOR 41 TO NODE(S)
  8351					MOVEI	T1,^D60
  8352					MOVEM	T1,TIMDRD
  8353					POPJ	P,
  8354				SCNMI2:	MOVEM	T1,DRMHSI	;SET DRMHSI FLAG WITH DOWN DR NUMBERS
  8355					SETZM	DRDOW		;CLEAR DRDOW
  8356					POPJ	P,		;ACTUAL MESSAGES GET SENT FROM SNDHSI
  8357				
  8358				SNDHSI:	SKIPN	T1,DRMHSI	;T1/DOWN DR NUMBERS
  8359					 JRST	MDRSHT		;CHECK NEXT MULTI DR MESSAGE
  8360					SETZM	DRMHSI
  8361					MOVSI	P3,TYPI TYPHSI
  8362					PUSHJ	P,MDRMSG	;SEND TO ALL DR NUMs IN T1
  8363					JUMPN	T1,[		;IF NO ROOM IN THE RING TO FINISH THEN
  8364						MOVEM T1,DRMHSI ; SET DRMHSI TO DO THE REST NEXT TIME
  8365						POPJ	P,]   	; AND NON-SKIP RETURN
  8366				MDRSHT:	SKIPN	T1,DRMSHT	;T1/DRs THAT NEED A SHUT MESSAGE
  8367					  JRST	MDRBRK		;CHECK NEXT MULTI DR MESSAGE
  8368					SETZM	DRMSHT
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 191-4
SCNSER.MAC	25-JAN-91 22:40		GETBB - GET A BLOCK I/O BUFFER AND RETURN ITS ADDRESS IN T1

  8369					MOVSI	P3,TYPI TYPSHT
  8370					PUSHJ	P,MDRMSG
  8371					JUMPN	T1,[		;IF WE COULDN'T FINISH THEN
  8372						MOVEM T1,DRMSHT	; SET DRMSHT TO DO THE REST NEXT TIME
  8373						POPJ P,]	; AND NON-SKIP RETURN
  8374				MDRBRK:	SKIPN	T1,DRMBRK	;T1/DRs THAT NEED A 57 PILL
  8375					  JRST	MDRCLP		;CHECK NEXT MULTI DR MESSAGE
  8376					SETZM	DRMBRK
  8377					MOVSI	P3,TYPI TYPBRK	;WE USE A 51 "BRK" MSG FOR THE PILL
  8378					PUSHJ	P,MDRMSG
  8379					JUMPN	T1,[		;IF WE COULDN'T FINISH THEN
  8380						MOVEM T1,DRMBRK	; SET DRMBRK TO DO THE REST NEXT TIME
  8381						POPJ P,]	; AND NON-SKIP RETURN
  8382				MDRCLP:	SKIPN	T1,DRMCLP	;T1/DRs THAT NEED A CLOCK REQ MSG
  8383					  JRST	MDRANS		;CHECK NEXT MULTI DR MESSAGE
  8384					SETZM	DRMCLP
  8385					MOVSI	P3,TYPI TYPCLP
  8386					PUSHJ	P,MDRMSG
  8387					JUMPN	T1,[		;IF WE COULDN'T FINISH THEN
  8388						MOVEM T1,DRMCLP	; SET DRMCLP TO DO THE REST NEXT TIME
  8389						POPJ P,]	; AND NON-SKIP RETURN
  8390				MDRANS:	SKIPN	T1,DRMANS	;T1/DRs TO SEND AN ANSWERED MSG TO
  8391					  JRST	MDRNXT		;CHECK NEXT MULTI DR MESSAGE
  8392					SETZM	DRMANS
  8393					MOVSI	P3,TYPI TYPANS
  8394					PUSHJ	P,MDRMSG
  8395					JUMPN	T1,[		;IF WE COULDN'T FINISH THEN
  8396						MOVEM T1,DRMANS	; SET UP FOR NEXT TIME
  8397						POPJ P,]	; AND NON-SKIP RETURN
  8398				MDRNXT:	
  8399					MOVE	T1,DRMTIM	;;;;;;;START KMC DEBUG CODE
  8400					SUBI	T1,1
  8401					JUMPE	T1,CPOPJ1	;IGNORE FOR THE FIRST SECOND
  8402					PUSHJ	P,KMCGAV##
  8403					MOVE	T2,T1
  8404					ANDI	T2,377
  8405					LSH	T2,8
  8406					PUSHJ	P,KMCGAC##
  8407					ANDI	T1,377
  8408					IOR	T1,T2
  8409					CAMN	T1,KMCLAS	;SAME AS LAST TIME?
  8410					 JRST	CPOPJ1		;YES, BYE...
  8411					MOVEM	T1,KMCLAS
  8412					HRL	T1,DRMTIM
  8413					MOVE	T2,KMCPDP
  8414					MOVEM	T1,KMCFLG(T2)
  8415					ADDI	T2,1
  8416					ANDI	T2,77
  8417					MOVEM	T2,KMCPDP	;;;;;;;;END KMC DEBUG CODE
  8418					JRST	CPOPJ1	;END OF MDR CHAIN FOR NOW. SKIP RET
  8419				
  8420				MDRMSG:	;MSG TO ALL UP DRs	;P3/ MOVSI P3,TYPI TYPmsg
  8421					;T1/ 3-BIT UP DR NUMBERS;RET:T1/0 or DRs NOT SENT TO
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 191-5
SCNSER.MAC	25-JAN-91 22:40		GETBB - GET A BLOCK I/O BUFFER AND RETURN ITS ADDRESS IN T1

  8422				;;;;;;;	MOVE	T2,SYSNUM##	;PUT THE SYSNUM IN THE MESSAGES JUST
  8423					MOVE	T2,DRMTIM	;USE UP TIME FOR NOW
  8424				;;;;;;;	ANDI	T2,377		;INCASE THE NODE WANTS IT IN THE FUTURE
  8425					ANDI	T2,1777		;SHOW 10 BITS FOR NOW
  8426					LSH	T2,8		; OFCOURSE WE CAN ONLY SEND 8 BITS OF IT
  8427					ANDCM	P3,[377,,-1]	;LEAVE ONLY MESSAGE TYPE IN BITS 2-9
  8428					IOR	T2,P3		;T2 HOLDS THE MESSAGE
  8429				MDRLUP:	SKIPN	P3,T1
  8430					 JRST	CPOPJ		;RETURN WHEN T1=0
  8431					ANDI	P3,3		;ISOLATE A DR NUMBER
  8432					JUMPE	P3,MDRL1	;IF IT'S 0 GO TRY THE NEXT ONE
  8433					SUBI	P3,1		;1-4 GOES TO 0-3
  8434					CAILE	P3,MAXDR	;P3 MUST BE .LE. PORTS/LINES PER DR
  8435					 JRST	MDRL1
  8436					LSH	P3,6		;MAKE IT A PORT NUMBER
  8437					IORI	P3,LPERDR&77	;P3/(DRNUM*100) ! LINES PER DR
  8438					CAILE	P3,<MAXDR*100>!<RPORTN##-<MAXDR*LPERDR>>
  8439					 JRST	[ANDCMI P3,77
  8440						IORI	P3,RPORTN##-<MAXDR*LPERDR>
  8441						JRST	.+1]
  8442					ANDCMI	P3,3		;MUST BE A MULTIPLE OF 4
  8443					HRL	P3,P3		;P3/MAX PORT NUM,,MAX PORT NUM
  8444					ANDCMI	P3,77		;P3/MAX PORT NUM,,DR NUM
  8445					HLRZ	T3,T2		;TEST FOR TYPHSI
  8446					CAIE	T3,TYPI TYPHSI	;TYPHSI USES MAX PORT,,DRNUM
  8447					 HRLZ	P3,P3		;TYPE A MESSAGES DON'T USE MAX PORT
  8448					IOR	P3,T2		;OR IN THE MESSAGE AND SYS NUMBER
  8449					PUSH	P,T1
  8450					PUSH	P,T2
  8451					PUSHJ	P,CLSCHR	;MAKE SURE THE RING IS READY
  8452					  JRST MDRRET		;IF NOT DO A NON-SKIP RETURN
  8453					PUSHJ	P,WRDOUT	;PUT THE MESSAGE IN THE RING
  8454					  JRST MDRRET		;THIS SHOULDN'T HAPPEN!
  8455					POP	P,T2
  8456					POP	P,T1
  8457					HLRZ	T3,T2		;TEST FOR TYPHSI
  8458					CAIE	T3,TYPI TYPHSI
  8459					 JRST	MDRL1		;IF NOT HSI THEN SKIP TO MDRL1
  8460					MOVE	T3,T1
  8461					ANDI	T3,3
  8462					SUBI	T3,1
  8463					SETOM	SENT41(T3)	;FLAG THAT WE SENT A 41 TO THAT DR
  8464				MDRL1:	LSH	T1,-3		;THROW OUT 3-BIT DR NUM JUST PROCESSED
  8465					JRST	MDRLUP		;GO DO THE NEXT ONE
  8466				MDRRET:	POP	P,T2
  8467					POP	P,T1
  8468					JRST	CPOPJ
  8469				
  8470				DR1BIT==1B35
  8471				DR2BIT==1B34
  8472				DR3BIT==1B31
  8473				DR4BIT==1B28
  8474				
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 191-6
SCNSER.MAC	25-JAN-91 22:40		GETBB - GET A BLOCK I/O BUFFER AND RETURN ITS ADDRESS IN T1

  8475				MDRUP:	PUSHJ	P,KMCGUP##
  8476				DRFLAG: HRLZ	T1,T1		;MOVE FLAGS TO LEFT HALF
  8477					TLZE	T1,DR1BIT	;TEST AND CLEAR THE FIRST FLAG
  8478					 IORI	T1,0001		;IF A DRs FLAG IS SET PUT ONE PLUS IT'S
  8479					TLZE	T1,DR2BIT	;    NUMBER IN A 3-BIT OCTAL DIGIT SLOT
  8480					 IORI	T1,0020
  8481					TLZE	T1,DR3BIT
  8482					 IORI	T1,0300
  8483					TLZE	T1,DR4BIT
  8484					 IORI	T1,4000
  8485					HRRZ	T1,T1		;T1/ 0,,3-BIT DR NUMBERS FLAGGED
  8486					POPJ	P,		;RETURN
  8487				>;END IFKMC
  8488
  8489				;BASVER definitions: BYTE(8)TYPE,FLAGS,VERSION,RELEASE
  8490		000004	000000		BV.DBG==<BYTE(8)0,001,0,0>	;Debugging if lsb of 2nd byte set
  8491		001000	000000		BV.HDN==<BYTE(8)0,200,0,0>	;EBUS says host was down (we went away)
  8492	012505'	200317	001555*	RCVRAK:	MOVE	T1,IRING(P4)	;TYPRAK=4 - Reset Acknowlege
  8493	012506'	202300	005617*		MOVEM	T1,BASVER##	;Store BYTE(8)CODE,DEBUG,VERSION,RELEASE
  8494	012507'	256000	017272'	BASEOK:: STOPCD (.+1,EVENT,BASEOK,PRTBVR,<Base is up>)
  8495	012510'	344740	000756'		AOJA	P4,SCNIN1
  8496
  8497				IFCPU (<KI,KL>),<
  8498	012511'	260040	005635*	PRTBVR:	PUSHJ	P,INLMES##	;Called from STOPCD(BASEOK)
  8499	012512'	417374	462500		 ASCIZ /Code in base is version /
	012513'	647344	061302
	012514'	717124	064746
	012515'	203554	571346
	012516'	647375	620000
  8500	012517'	135300	017276'		LDB	T1,[POINT 8,BASVER,23]
  8501	012520'	260040	000000*		PUSHJ	P,PRTDEC##
  8502	012521'	260040	000000*		PUSHJ	P,PRPER##	;Period
  8503	012522'	135300	017277'		LDB	T1,[POINT 8,BASVER,31]
  8504	012523'	260040	000000*		PUSHJ	P,PRT2##	;2 decimal digits
  8505				;	PUSHJ	P,INLMES##
  8506				;	 ASCIZ / - debug flag is /
  8507				;	MOVEI	T1,[ASCIZ /OFF/]
  8508				;	MOVSI	T2,(BV.DBG)
  8509				;	TDNE	T2,BASVER	;Is it set?
  8510				;	 MOVEI	T1,[ASCIZ /ON/]	;Yes
  8511				;	PUSHJ	P,CONMES##	;STOPCD processor will provide CRLF
  8512	012524'	263040	000000		POPJ	P,
  8513				>
  8514				IFNCPU(<KI,KL>),<PRTBVR==CPOPJ##> ;PDP-11 bases do not report version #
  8515
  8516				IFNKMC<				;TYPRES=3 - Reset interface
  8517	012525'	476000	005633*	RCVRES:	SETOM	BASDWN##	;Set flag to call DETALL and send TYPRAK
  8518	012526'	200317	012505*		MOVE	T1,IRING(P4)	;Get the message
  8519	012527'	250300	012506*		EXCH	T1,BASVER##	;Store BYTE(8)CODE,DEBUG,VERSION,RELEASE
  8520	012530'	312300	012527*		CAME	T1,BASVER##	;Don't mumble about 2 in a row
  8521	012531'	256000	012507'		 STOPCD	(,XCT,BASEOK)
  8522					;Print "base is up" message
  8523	012532'	260040	012541'		PUSHJ	P,DETALL	;Detach all ports
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 191-7
SCNSER.MAC	25-JAN-91 22:40		GETBB - GET A BLOCK I/O BUFFER AND RETURN ITS ADDRESS IN T1

  8524	012533'	135300	016632'		LDB	T1,[POINT 16,BASVER,31];Get 3rd and 4th bytes
  8525	012534'	303300	001000		CAILE	T1,<02_^D8>+00	;Is it version 02.00 ?
  8526	012535'	344740	000756'		 AOJA	P4,SCNIN1	;No, done
  8527	012536'	402000	001016*		SETZM	IRPPDP		;Yes, EBUS has set IRP620 to zero
  8528	012537'	402000	011506*		SETZM	ORPPDP		; and ORP620 to zero
  8529	012540'	263040	000000		POPJ	P,		;Return from SCNTIC - no more to do
  8530				>  ;End IFNKMC
  8531
  8532				IFKMC<		;Here when KMC detects problem with a DR11C
  8533				RCVRES:	SETZM	BASVER##	;Store BYTE(8)0,0,0,0 instead of EBUS version
  8534					MOVEI	T1,^D60
  8535					MOVEM	T1,TIMDRD	;RESET KMC CHECKUP TIMER
  8536					MOVE	T1,DRMTIM ;;;;;;;TEMP STUFF UP TIME IN IRING 3 MSG
  8537					DPB	T1,INPDL2 ;;;;;;;  "    "    "   "   "   "   "  "
  8538					LDB	U,INPLIN
  8539					ANDI	U,300		;U/FIRST PORT NUMBER OF FAILING DR
  8540					CAIL	U,RPORTN##	;THIS TEST WORKS ONLY WHEN LPERDR=^D64
  8541					 AOJA	P4,SCNIN1	;IGNORE BAD PORT NUMBERS
  8542					MOVE	T1,U		;(if RPORTN=200, then only 0-177 are legal)
  8543					LSH	T1,-6		;T1/DR NUMBER
  8544					SETZM	SENT41(T1)	;RESET "WAITING FOR RESPONSE TO 41"
  8545					PUSHJ	P,KMCCAC##	;CLEAR DR'S ACTIVE BIT & UP BIT
  8546				DRZAP:	PUSHJ	P,DETONE	;Detach one port on this particular DR11
  8547					ADDI	U,1
  8548					MOVE	T1,U
  8549				IFN LPERDR-^D64,<?Logic at DRZAP needs to be modified>
  8550					ANDI	T1,LPERDR-1	;ONE OF 77, 37, or 17
  8551					CAIGE	U,RPORTN##	;THIS TEST ONLY WORKS FOR LPERDR=64.
  8552					 JUMPN	T1,DRZAP	;GO DO THE NEXT PORT
  8553					AOJA	P4,SCNIN1	;EXIT
  8554				>;END IFKMC
  8555
  8556				;DETALL - Mark all lines as being detached
  8557
  8558	012541'	201240	777777*	DETALL:	MOVEI	U,RPORTN##-1	;Do all real ports (not PTY ports)
  8559	012542'	260040	012545'		PUSHJ	P,DETONE	;Detach one
  8560	012543'	365240	012542'		SOJGE	U,.-1		;Loop for all
  8561	012544'	324740	014746'		PJRST	SETSHT		;Set UPSHUT to the right value
  8562
  8563				;DETONE - Mark one line as being detached, port number in U preserved
  8564
  8565	012545'	261040	000005	DETONE:	PUSH	P,U		;SAVE U
  8566	012546'	200245	007767*		MOVE	U,LINTAB(U)	;U/ PORT LDB
  8567	012547'	500245	000031		HLL	U,LDBDCH(U)	;U/DEVICE CHARARTERISTICS,,PORT LDB
  8568	012550'	331005	000026		SKIPL	LDBLOG(U)	;SKIP IF PORT NOT LOGGED IN
  8569	012551'	254000	012554'		 JRST	DETON1
  8570	012552'	260040	001526'		PUSHJ	P,FRCZAP	;ZAP THE PORT
  8571	012553'	260040	004422'		PUSHJ	P,CLRTTY	;CANCEL THE "SEND ZAPPER" FLAG
  8572	012554'	262040	000005	DETON1:	POP	P,U		;RESTORE PORT NUMBER
  8573	012555'	263040	000000		POPJ	P,
  8574
  8575	012556'			RCVANS:				;CALLED WHEN KMC/DR RESPONDS TO A 41 WE SENT IT
  8576	012556'	200317	012526*	IFNKMC<	MOVE	T1,IRING(P4)	;Get the message
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 191-8
SCNSER.MAC	25-JAN-91 22:40		GETBB - GET A BLOCK I/O BUFFER AND RETURN ITS ADDRESS IN T1

  8577	012557'	250300	012530*		EXCH	T1,BASVER##	;Store BYTE(8)CODE,DEBUG,VERSION,RELEASE
  8578	012560'	312300	012557*		CAME	T1,BASVER##	;Don't mumble about 2 in a row
  8579	012561'	256000	012507'		 STOPCD	(,XCT,BASEOK)
  8580					;Print "base is up" message
  8581	012562'	344740	000756'		AOJA	P4,SCNIN1>	;IGNORE ANS MESSAGE ON KI/KL/F3
  8582				IFKMC<	MOVE	T1,DRMTIM ;;;;;;;TEMP PUT TIME IN IRING 1 MSG
  8583					DPB	T1,INPDL2 ;;;;;;;  "   "    "   "   "   "  "
  8584					LDB	T1,INPLIN	;T1/ PORT LDB
  8585					LSH	T1,-6		;T1/DR NUMBER
  8586					SKIPN	SENT41(T1)	;DON'T SET ANSWERED BIT UNLESS WE SENT 41
  8587					 AOJA	P4,SCNIN1
  8588					SETZM	SENT41(T1)	;RESET "WAITING FOR RESPONSE TO 41"
  8589					PUSH	P,T1
  8590					PUSHJ	P,KMCSUP##	;SET DR'S ANSWERED BIT
  8591					POP	P,T1
  8592					ANDI	T1,3
  8593					ADDI	T1,1
  8594					MOVE	T2,DRMCLP
  8595					LSH	T2,3
  8596					IOR	T2,T1
  8597					MOVEM	T2,DRMCLP
  8598					MOVEI	T2,STSHUT	;400000
  8599					TDNE	T2,STATES	;ARE WE SHUT?
  8600					 JRST	KMCSHT		;YES, GO SET UP DRMSHT
  8601					MOVE	T2,DRMANS	;NO, SET UP DRMANS INSTEAD
  8602					LSH	T2,3
  8603					IOR	T2,T1
  8604					MOVEM	T2,DRMANS
  8605					AOJA	P4,SCNIN1	;EXIT
  8606				KMCSHT:	MOVE	T2,DRMSHT
  8607					LSH	T2,3
  8608					IOR	T2,T1
  8609					MOVEM	T2,DRMSHT
  8610					AOJA	P4,SCNIN1
  8611				>;END IFKMC
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 192
SCNSER.MAC	25-JAN-91 22:40		IQUEUE - TAKES AN INPUT WAIT TRAP IF SET, OTHERWISE PLACES

  8612				SUBTTL	IQUEUE - TAKES AN INPUT WAIT TRAP IF SET, OTHERWISE PLACES
  8613				; THE JOB IN TTY INPUT WAIT.
  8614
  8615	012563'	135300	000230'	IQUEUE:	LDB T1,DDPTTI		;CHECK FOR TRAP WANTED.
  8616	012564'	260040	011077*		PUSHJ	P, TSTKTJ	;IF INPUT WAIT INTERRUPT WANTED
  8617	012565'	254000	011165*		 JRST ABTUUO		;YES, ABORT.
  8618	012566'	335002	000000*		SKIPGE	JBTAWQ(J)	;IF INTERRUPT PENDING
  8619	012567'	254000	012565*		 JRST ABTUUO		; ABORT
  8620	012570'	260040	013437'		PUSHJ P,TIWAIT		;NO.  QUEUE JOB FOR TIO WAIT.
  8621	012571'	324740	012600'		PJRST BIOATT
  8622
  8623				;OQUEUE - TAKES AN OUTPUT WAIT TRAP IF SET, OTHERWISE PLACES
  8624				; THE JOB IN TTY OUTPUT WAIT.
  8625
  8626	012572'	135300	000230'	OQUEUE:	LDB T1,DDPTTI		;CHECK FOR TRAP WANTED.
  8627	012573'	260040	012564*		PUSHJ P,TSTKTJ		;SEE IF INTERRUPT ON IOW
  8628	012574'	260040	016077'		 PUSHJ P,SETFIO		;NEEDS WAKUP LATER
  8629	012575'	335002	012566*		SKIPGE JBTAWQ(J)	;CHECK FOR TRAPS WAITING
  8630	012576'	254000	012567*		 JRST ABTUUO		;AND ABORT IF ANY.
  8631	012577'	260040	013455'		PUSHJ P,TOWAT1		;NO.  QUEUE JOB FOR TIO WAIT.
  8632
  8633				;HERE TO CHECK IF LINE FOR THIS PORT IS STILL ATTACHED.
  8634
  8635	012600'	332002	012575*	BIOATT:	SKIPE JBTAWQ(J)
  8636	012601'	254000	012576*		JRST ABTUUO
  8637	012602'	550244	000013		HRRZ U,DDBLDB(F)	;IS LINE STILL ATTACHED?
  8638	012603'	326240	012432*		JUMPN U,CPOPJ1		;YES.  HE WINS.
  8639	012604'	205300	020000		MOVSI T1,TTYATC		;IS THIS THE CONTROLLING TTY
  8640	012605'	616304	000004		TDNN T1,DEVMOD(F)	;OR AN AUXILIARY CIRCUIT?
  8641	012606'	254000	011162'		 JRST AUXRID		;AN AUXCIR ... HE LOSES.
  8642	012607'	263040	000000		POPJ P,			;CONTROLLING TTY: HE STILL LOSES
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 193
SCNSER.MAC	25-JAN-91 22:40		BLKXIN - TERMINATE BLOCK INPUT AUXCAL

  8643				SUBTTL	 BLKXIN - TERMINATE BLOCK INPUT AUXCAL
  8644
  8645	012610'	200305	000030	BLKXIN:	MOVE	T1,LDBMOD(U)
  8646	012611'	607300	001000		TLNN	T1,LMLBIO	; BLOCK I/O ENABLED?
  8647	012612'	263040	000000		 POPJ	P,
  8648	012613'	550305	000005		HRRZ	T1,LDBBIO(U)	; T1/ INPUT BUFFER ADDRESS
  8649	012614'	322300	012623'		JUMPE	T1,BLKXI1	; NO BUFFER
  8650	012615'	260040	012626'		PUSHJ	P,BLKTRQ	; REQUEST INPUT TERMINATION
  8651	012616'	550305	000005		HRRZ	T1,LDBBIO(U)
  8652	012617'	335006	000005		SKIPGE	BIOCHR(T1)	; CHECK IN-PROGRESS FLAG
  8653	012620'	263040	000000		 POPJ	P,		; IN-PROGRESS: DO NOTHING NOW
  8654	012621'	205000	000040		MOVSI	S,IOEND		; COMPLETE: SET IOEND
  8655	012622'	334000	000000		SKIPA
  8656	012623'	201000	020000	BLKXI1:	MOVEI	S,IODEND	; NO BUFFER: SET IO.EOF
  8657	012624'	437004	000002		IORB	S,DEVIOS(F)
  8658	012625'	263040	000000		POPJ	P,
  8659
  8660				; BLKTRQ - ROUTINE TO REQUEST BLOCK INPUT TERMINATION
  8661
  8662	012626'	205300	400000	BLKTRQ:	MOVSI	T1,LMLTBI
  8663	012627'	612305	000030		TDNE	T1,LDBMOD(U)	; TERMINATION PENDING?
  8664	012630'	263040	000000		 POPJ	P,		; YES: DO NOTHING
  8665	012631'	436305	000030		IORM	T1,LDBMOD(U)	; NO: SET THE FLAG
  8666	012632'	201300	000001		MOVEI	T1,1
  8667	012633'	137300	000062'		DPB	T1,LOPTRI	;    SET TERMINATE-INPUT
  8668	012634'	137305	000002		DPB	T1,LDBOPB(U)	;    AND NEED-OUTPUT
  8669	012635'	263040	000000		POPJ	P,
  8670
  8671				;BLKXOT - HERE TO TERMINATE BLOCK OUTPUT FOR A PORT IN BIO MODE
  8672
  8673	012636'	200305	000030	BLKXOT:	MOVE	T1,LDBMOD(U)
  8674	012637'	607300	001000		TLNN	T1,LMLBIO	;IF BLKIO NOT ENABLED,
  8675	012640'	263040	000000		 POPJ	P,		;  JUST RETURN
  8676	012641'	510305	000005		HLLZ	T1,LDBBIO(U)
  8677	012642'	322300	012144*		JUMPE	T1,CPOPJ	;IF NO BLK OUTPUT IN PROGRESS, RETURN
  8678	012643'	205300	400000		MOVSI	T1,LDLNOP
  8679	012644'	412305	000031		ANDCAM	T1,LDBDCH(U)	;IGNORE BACKPRESSURE
  8680	012645'	135300	000076'		LDB	T1,LOPBOT
  8681	012646'	361300	012651'		SOJL	T1,BLKXT1	;IF WE'RE ABOUT TO REQUEST BLK OUTPUT,
  8682	012647'	137300	000076'		DPB	T1,LOPBOT	;  FORGET IT (T1/ 0)
  8683	012650'	324740	001371'		PJRST	FRCOHR		;  BUT SIMULATE THE OUTPUT-COMPLETE
  8684								;ELSE
  8685	012651'	137300	000057'	BLKXT1:	DPB	T1,LOPTRO	;  SET TO SEND BLKO-TERMINATE (T1/ -1)
  8686	012652'	137305	000002		DPB	T1,LDBOPB(U)	;  AND NEED-OUTPUT
  8687	012653'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 194
SCNSER.MAC	25-JAN-91 22:40		INPUT AND OUTPUT SUBROUTINES

  8688				SUBTTL INPUT AND OUTPUT SUBROUTINES
  8689
  8690	012654'	260040	013003'	TYI:	PUSHJ	P,TYIEAT	;GET RID OF COMMAND LINE (CAN'T RESCAN ANYMORE)
  8691	012655'	375005	000012		SOSGE LDBTIC(U)	;ANY INPUT CHRS LEFT?
  8692					JRST	[SETZM LDBTIC(U)
  8693	012656'	254000	017300'			POPJ P,]	;NO, NON-SKIP RETURN
  8694	012657'	260040	013522'		PUSHJ P,BPFTYI		;RESET BACKPREASURE
  8695	012660'	200345	000011		MOVE T2,LDBTIT(U)
  8696	012661'	260040	006171'		PUSHJ P,TTGETC
  8697	012662'	260040	006252'		 PUSHJ P,FRECHK
  8698	012663'	202345	000011		MOVEM T2,LDBTIT(U)
  8699	012664'	336305	000006		SKIPN T1,LDBBKP(U)	;ANYTHING IN ^U POINTER
  8700	012665'	370005	000007		SOS LDBBKI(U)		;YES, 1 FEWER CHRS
  8701	012666'	316300	000007		CAMN T1,T2		;IS THIS THE POINTER NOW
  8702	012667'	402005	000006		SETZM LDBBKP(U)		;YES, NOTHING THERE NOW
  8703	012670'	602400	000400		TRNE T3,400
  8704	012671'	254000	012603*		JRST CPOPJ1		;IMAGE CHR
  8705	012672'	606400	000200		TRNN T3,200
  8706	012673'	334710	000312'		SKIPA P3,CHRTAB(T3)
  8707	012674'	200710	000112'		MOVE P3,CHRTAB-200(T3)	;GET INFORMATION BITS
  8708	012675'	135340	000305'		LDB T2,CHPRED	;GET READ CODE
  8709	012676'	256007	012701'	TYIRPT:	XCT TYIATB(T2)		;AND DO IT
  8710	012677'	275400	000040		SUBI T3,40		;HERE IN LOWER CASE, CONVERT TO UPPER
  8711	012700'	254000	012671*		JRST CPOPJ1		;DONE
  8712
  8713	000000			TYIATB:	PHASE 0
  8714	012701'	254000	012716'		JRST SPRTYI	;SPECIAL ACTION NEEDED
  8715	012702'	254000	012700*		JRST CPOPJ1	;NORMAL CHR
  8716	012703'	374005	000015	%CHBRK:! SOSA LDBBKC(U)	;BREAK, FLAGGED SO CALLERS KNOW
  8717	012704'	254000	012706'		JRST TYIC	;BREAK2
  8718	012705'	603240	000020		TLNE U,LDLLCT	;LOWER CASE, SHOULD WE CONVERT?
  8719	012706'				DEPHASE
  8720
  8721	012706'	603240	004000	TYIC:	TLNE U,LDLBK2	;IN BREAK2 MODE?
  8722	012707'	200340	000002		MOVE T2,%CHBRK	;YES, FLAG AS BREAK FOR CALLERS
  8723	012710'	350001	000000		AOS (P)
  8724	012711'	370005	000016	TYID:	SOS LDBBK2(U)
  8725	012712'	326300	012642*		JUMPN T1,CPOPJ	;DON'T WORRY IF NO ^U POINTER
  8726	012713'	205300	777777		MOVSI T1,-1
  8727	012714'	272305	000007		ADDM T1,LDBBKI(U)
  8728	012715'	263040	000000		POPJ P,
  8729
  8730	012716'	135340	000307'	SPRTYI:	LDB T2,CHPSPR	;GET ACTION CODE
  8731	012717'	135700	000165'		LDB P3,LDPMOD	;AND LINE MODE
  8732	012720'	256036	012721'		XCT @SPRTTB(P3)
  8733
  8734	012721'	256007	012725'	SPRTTB:	XCT TYIPDP(T2)
  8735	012722'	256007	012734'		XCT TYI940(T2)
  8736	012723'	256007	012734'		XCT TYI940(T2)
  8737	012724'	256007	012725'		XCT TYIPDP(T2)
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 195
SCNSER.MAC	25-JAN-91 22:40		INPUT AND OUTPUT SUBROUTINES

  8738	012725'	254000	012771'	TYIPDP:	JRST TYICC	;^C
  8739	012726'	254000	012756'		JRST TYIALT	;33
  8740	012727'	254000	012746'		JRST TYIBRK	;^_
  8741	012730'	254000	012762'		JRST TYICZ	;^Z
  8742	012731'	254000	012754'		JRST TYIPAL	;175-176
  8743	012732'	254000	012743'		JRST TYITAB	;TAB
  8744	012733'	254000	012750'		JRST TYIBSP	;BACKSPACE
  8745
  8746	012734'	254000	012746'	TYI940:	JRST TYIBRK	;^C
  8747	012735'	254000	012771'		JRST TYICC	;33 POSSIBLE ESCAPE
  8748	012736'	254000	012771'		JRST TYICC	;^_
  8749	012737'	254000	012746'		JRST TYIBRK	;^Z
  8750	012740'	254000	012767'		JRST TYICCP	;175-176
  8751	012741'	254000	012743'		JRST TYITAB	;TAB
  8752	012742'	254000	012750'		JRST TYIBSP	;BACKSPACE
  8753
  8754	012743'	205340	100000	TYITAB:	MOVSI T2,L2LTBK
  8755	012744'	616345	000027		TDNN T2,LDBBYT(U)	;TREAT TAB AS BREAK?
  8756	012745'	254000	012706'		JRST TYIC	;NO AS BREAK2
  8757	012746'	201340	000002	TYIBRK:	MOVEI T2,%CHBRK	;YES, TREAT AS BREAK
  8758	012747'	254000	012676'		JRST TYIRPT
  8759
  8760	012750'	205340	040000	TYIBSP:	MOVSI T2,L2LBBP
  8761	012751'	612345	000027		TDNE T2,LDBBYT(U)	;TREAT BSP AS BREAK
  8762	012752'	254000	012706'		JRST TYIC	;NO, AS BREAK2
  8763	012753'	254000	012746'		JRST TYIBRK	;YES
  8764
  8765	012754'	607240	000020	TYIPAL:	TLNN U,LDLLCT	;IN TTY LC
  8766	012755'	254000	012746'		JRST TYIBRK	;YES, JUST A BREAK CHARACTER
  8767	012756'	201340	020000	TYIALT:	MOVEI T2,LDRFCS	;ALTMODE. IN FULL CHR SET MODE?
  8768	012757'	616345	000031		TDNN T2,LDBDCH(U)
  8769	012760'	201400	000033		MOVEI T3,STDALT	;NO, STANDARD
  8770	012761'	254000	012746'		JRST TYIBRK
  8771
  8772	012762'	550205	000000	TYICZ:	HRRZ F,LDBDDB(U)
  8773	012763'	322200	012746'		JUMPE F,TYIBRK	;NO DDB, JUST BREAK CHR
  8774	012764'	205440	000040		MOVSI T4,IOEND
  8775	012765'	436444	000002		IORM T4,DEVIOS(F)	;SET END OF FILE
  8776	012766'	254000	012746'		JRST TYIBRK
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 196
SCNSER.MAC	25-JAN-91 22:40		INPUT AND OUTPUT SUBROUTINES

  8777	012767'	607240	000020	TYICCP:	TLNN U,LDLLCT	;IN TTY LC
  8778	012770'	254000	012746'		JRST TYIBRK	;YES, TRAT AS BREAK
  8779	012771'	370005	000015	TYICC:	SOS LDBBKC(U)
  8780	012772'	200100	010041*		MOVE J,JOB	;ALSO FALL HERE FROM ABOVE
  8781	012773'	260040	015640'		PUSHJ P,ESCTR1	;TRY TRAPPING
  8782	012774'	260040	006051'		PUSHJ P,CNCCHK	;CHECK SPECAIL CONDITIONS
  8783					JRST [
  8784						LDB	P3, LDPMOD	; GET MONITOR MODE
  8785						MOVEI	T3, 3		; ^C FOR 10'S
  8786						CAIE	P3, 1		; GE MODE?
  8787						CAIN	P3, 2		; TYMEX MODE?
  8788						MOVEI	T3, 33		; ESC FOR 940'S
  8789						AOS	LDBBKC(U)	; SOS'D IN TYIBRK
  8790						JRST	TYIBRK		; PASS TO PROGRAM
  8791	012775'	254000	017302'		]
  8792	012776'	260040	013437'		PUSHJ P,TIWAIT	;HALT COMMAND ALREADY SET
  8793	012777'	260040	013216'		PUSHJ	P, CKATTI	;MAKE SURE IT'S STILL ATTACHED
  8794	013000'	254000	012601*		JRST	ABTUUO		;(S)HE WANTS AN INTERRUPT
  8795	013001'	326240	012654'		JUMPN	U, TYI		;TRY AGAIN (FOR CONTINUE)
  8796	013002'	256000	000000'		 STOPCD 		;HORRORS! NOT A COMMAND PORT!
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 197
SCNSER.MAC	25-JAN-91 22:40		GET RID OF COMMAND LINE

  8797				SUBTTL	GET RID OF COMMAND LINE
  8798
  8799	013003'	607240	100000	TYIEAT:	TLNN U,LDLECS	;ALREADY DONE THIS?
  8800	013004'	263040	000000		 POPJ P,		;YES
  8801	013005'	261040	000010		PUSH P,T3
  8802	013006'	261040	000016		PUSH P,P3	;ALSO SAVE THIS (TTYSTR AND FRIENDS)
  8803	013007'	375005	000012	TYIL:	SOSGE LDBTIC(U)
  8804					JRST [SETZM LDBTIC(U)
  8805	013010'	254000	017311'			JRST TYIET2]
  8806	013011'	200345	000011		MOVE T2,LDBTIT(U)
  8807	013012'	260040	006171'		PUSHJ P,TTGETC
  8808	013013'	260040	006252'		 PUSHJ P,FRECHK
  8809	013014'	202345	000011		MOVEM T2,LDBTIT(U)
  8810	013015'	336305	000006		SKIPN T1,LDBBKP(U)
  8811	013016'	370005	000007		SOS LDBBKI(U)	;SAME AS IN TYI
  8812	013017'	316300	000007		CAMN T1,T2
  8813	013020'	402005	000006		SETZM LDBBKP(U)
  8814	013021'	602400	000400		TRNE T3,400
  8815	013022'	254000	013007'		JRST TYIL	;IMAGE, TRY NEXT
  8816	013023'	606400	000200		TRNN T3,200
  8817	013024'	334710	000312'		SKIPA P3,CHRTAB(T3)
  8818	013025'	200710	000112'		MOVE P3,CHRTAB-200(T3)
  8819	013026'	135340	000305'		LDB T2,CHPRED
  8820	013027'	256007	013031'		XCT EATTAB(T2)
  8821	013030'	254000	013007'		JRST TYIL	;TRY NEXT
  8822
  8823	013031'	254000	013036'	EATTAB:	JRST SPREAT	;SPECIAL ACTION
  8824	013032'	254000	013007'		JRST TYIL	;NOMAL CHR
  8825	013033'	254000	013053'		JRST TYIET3	;BREAK CHR, FINISHED
  8826	013034'	260040	012711'		PUSHJ P,TYID	;BREAK2
  8827	013035'	254000	013007'		JRST TYIL	;LOWER CASE, JUST LIKE NORMAL
  8828
  8829	013036'	135340	000307'	SPREAT:	LDB T2,CHPSPR
  8830	013037'	256007	013044'		XCT SPRETB(T2)	;SAME IN ALL MODES
  8831					XCT -5+[TDNE T3,LDBBYT(U)	;FROM TAB
  8832	013040'	256007	017306'		        TDNN T3,LDBBYT(U)](T2)	;FROM BACKSPACE
  8833	013041'	254000	013053'		JRST TYIET3	;TREAT AS BREAK
  8834	013042'	260040	012711'		PUSHJ P,TYID	;TREAT AS BREAK2
  8835	013043'	254000	013007'		JRST TYIL
  8836
  8837	013044'	254000	013053'	SPRETB:	JRST TYIET3	;^C
  8838	013045'	254000	013053'		JRST TYIET3	;33
  8839	013046'	254000	013053'		JRST TYIET3	;^_
  8840	013047'	254000	013053'		JRST TYIET3	;^Z
  8841	013050'	254000	013053'		JRST TYIET3	;175-176
  8842	013051'	205400	100000		MOVSI T3,L2LTBK	;TAB, CHECK BREAK OR BREAK2
  8843	013052'	205400	040000		MOVSI T3,L2LBBP	;BACKSPACE, CHECK BREAK OR BREAK2
  8844
  8845	013053'	370005	000015	TYIET3:	SOS LDBBKC(U)	;A BREAK CHR FINISHED
  8846	013054'	205300	100000	TYIET2:	MOVSI T1,LDLECS	;FINISHED BECAUSE OUT OF CHRS
  8847	013055'	412305	000031		ANDCAM T1,LDBDCH(U)	;TURN OFF FLAG IN ANY CASE
  8848	013056'	262040	000016		POP P,P3
  8849	013057'	262040	000010		POP P,T3
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 197-2
SCNSER.MAC	25-JAN-91 22:40		GET RID OF COMMAND LINE

  8850	013060'	500245	000031		HLL U,LDBDCH(U)
  8851	013061'	263040	000000		POPJ P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 198
SCNSER.MAC	25-JAN-91 22:40		TYO, CMDTYO - Put characters in TTY output buffer

  8852				SUBTTL	TYO, CMDTYO - Put characters in TTY output buffer
  8853				COMMENT %
  8854				@@SUBROUTINE TYO, CMDTYO
  8855				@@PURPOSE TYO -- CHECK FOR SPACE, PLACE CHAR IN OUTPUT BUFFER
  8856					  CMDTYO -- ASSUME SPACE, PLACE CHAR IN OUTPUT BUFFER
  8857				@@ENTRY	T3/ CHAR, F/ DDB ADDR, U/ (NONZERO) LDB ADDR
  8858				@@ACCUM	T1-T2 DESTROYED
  8859				@@EXIT	ON A SKIP-RETURN, THE CHARACTER HAS BEEN DEPOSITED.
  8860				THE NONSKIP-RETURN IS NOT ACTUALLY A RETURN BUT RATHER A
  8861				PUSHJ TO ITS CALLER. IT IS TAKEN WHEN THERE IS NO ROOM FOR
  8862				THE CHARACTER AND THE JOB WANTS A TRAP. THE CALLER HAS
  8863				THREE CHOICES:
  8864					1) ABORT THE UUO, GIVING THE JOB ITS TRAP
  8865					2) MAKING ROOM FOR THE CHARACTER, THEN POPJ-ING,
  8866					   CAUSING TYO TO RETRY THE DEPOSIT
  8867					3) AOS (P) / POPJ -ING, CAUSING TYO TO GO INTO
  8868					   OUTPUT WAIT
  8869				%
  8870
  8871	013062'	200300	016375'	TYO:	MOVE	T1,TTFREN	;T1/ # FREE CHUNKS
  8872	013063'	301300	000003		CAIL	T1,TIRSVD	;IF #FREE .lt. #SAVED,
  8873	013064'	254000	013070'		 JRST	TYO1
  8874	013065'	205300	200000		MOVSI	T1,TWTSPC
  8875	013066'	436304	000002		IORM	T1,DEVIOS(F)	;  MARK NO-CHUNKS WAIT
  8876	013067'	254000	013127'		JRST	TYOW2		;  AND GO WAIT
  8877
  8878	013070'	200305	000021	TYO1:	MOVE	T1,LDBTOC(U)	;T1/ # CHARS LEFT TO OUTPUT
  8879	013071'	335005	000032		SKIPGE	LDBDCX(U)	;IF IT'S FAST
  8880	013072'	311300	016504'		CAML	T1,OMX120	;AND UNDER THE FAST MAXIMUM,
  8881	013073'	315300	016502'		CAMGE	T1,OMX30	;OR IF IT'S UNDER THE SLOW MAXIMUM,
  8882	013074'	254000	013100'		 JRST	TYO2		;  CONTINUE OUTPUT.
  8883	013075'	335005	000027		SKIPGE	LDBBYT(U)	;IF IT'S NOT EXTENDED-MODE
  8884	013076'	311300	016506'		CAML	T1,TOEMAX	;OR IT'S OVER THAT LIMIT,
  8885	013077'	254000	013116'		 JRST	TYOW		;  GO TRAP OR WAIT
  8886	013100'	350001	000000	TYO2:	AOS	(P)		;PREPARE FOR SKIP-RETURN
  8887	013101'	500245	000031		HLL	U,LDBDCH(U)
  8888	013102'	603240	000400		TLNE	U,LDLOSU	;IF SUPPRESSING OUTPUT,
  8889	013103'	263040	000000		 POPJ	P,		;  JUST (SKIP-)RETURN
  8890
  8891				;CMDTYO - put character in output chunk.  Caller must check for room
  8892
  8893	013104'	332345	000017	CMDTYO:	SKIPE	T2,LDBTOP(U)	;IF NO CHUNK ALLOCATED,
  8894	013105'	254000	013112'		 JRST	TYO3
  8895	013106'	260040	006262'		PUSHJ	P,GETCHK	;  T2/ CHUNK BYTE POINTER
  8896	013107'	202345	000017		MOVEM	T2,LDBTOP(U)	;  SET OUTPUT PUTTER
  8897	013110'	202345	000020		MOVEM	T2,LDBTOT(U)	;  SET OUTPUT TAKER
  8898	013111'	402005	000021		SETZM	LDBTOC(U)	;  SET OUTPUT COUNT
  8899	013112'	260040	006216'	TYO3:	PUSHJ	P,TTPUTC	;STORE CHAR.; T2 := NEW PUTTER
  8900	013113'	202345	000017		MOVEM	T2,LDBTOP(U)	;STORE NEW PUTTER
  8901	013114'	350005	000021		AOS	LDBTOC(U)	;UPDATE COUNT
  8902	013115'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 199
SCNSER.MAC	25-JAN-91 22:40		TYO, CMDTYO - Put characters in TTY output buffer

  8903	013116'	135300	000230'	TYOW:	LDB	T1,DDPTTI	;T1/ IOW TRAP CHANNEL
  8904	013117'	260040	012573*		PUSHJ	P,TSTKTJ	;SETUP TRAP IF ENABLED. IF IT WAS,
  8905	013120'	260040	016077'		  PUSHJ	P,SETFIO	;  MARK DDB FOR OUTPUT-DONE TRAP
  8906	013121'	135300	011674*		LDB	T1,PJOBN
  8907	013122'	331002	012600*		SKIPL	JBTAWQ(J)	;IF AWAITING A TRAP,
  8908	013123'	254000	013126'		 JRST	TYOW1
  8909	013124'	260061	000000		PUSHJ	P,@(P)		;  RETURN TO CALLER AS COROUTINE
  8910	013125'	254000	013062'		JRST	TYO		;  (NONSKIP FROM RECALLED CALLER)
  8911
  8912	013126'	322240	013132'	TYOW1:	JUMPE	U,TYOW3		;IF ATTACHED,
  8913	013127'	201300	000001	TYOW2:	MOVEI	T1,1
  8914	013130'	137300	000075'		DPB	T1,LOPOUT	;  SET CHARACTER-OUTPUT
  8915	013131'	137305	000002		DPB	T1,LDBOPB(U)	;  AND NEED-OUTPUT
  8916	013132'	260040	013455'	TYOW3:	PUSHJ	P,TOWAT1	;GO INTO OUTPUT WAIT
  8917	013133'	550244	000013	TYOW4:	HRRZ	U,DDBLDB(F)
  8918	013134'	326240	013062'		JUMPN	U,TYO		;IF STILL ATTACHED, TRY AGAIN
  8919	013135'	205300	020000		MOVSI	T1,TTYATC
  8920	013136'	616304	000004		TDNN	T1,DEVMOD(F)	;IF IT'S NOT THE COMMAND PORT,
  8921	013137'	324740	011162'		PJRST	AUXRID		;  DISCARD DDB AND ABORT UUO
  8922	013140'	254000	013116'		JRST	TYOW		;OTHERWISE, WAIT FOR ATTACH
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 200
SCNSER.MAC	25-JAN-91 22:40		MAKE SURE TTY IS ATTACHED, NO CHANCE FOR INTERRUPT

  8923				SUBTTL	MAKE SURE TTY IS ATTACHED, NO CHANCE FOR INTERRUPT
  8924
  8925	013141'	200004	000002	CKATTF:	MOVE	S,DEVIOS(F)
  8926	013142'	550244	000013		HRRZ	U,DDBLDB(F)
  8927	013143'	326240	013273'		JUMPN	U,UUOLDB
  8928	013144'	205300	020000		MOVSI	T1,TTYATC
  8929	013145'	616304	000004		TDNN	T1,DEVMOD(F)
  8930	013146'	254000	011162'		 JRST	AUXRID		;CAN GET RID OF DDB FOR AUX CIRCUIT
  8931	013147'	260040	014403'		PUSHJ	P,TOWATA
  8932	013150'	254000	013141'		JRST	CKATTF		;TRY AGAIN
  8933
  8934				;CHECK TO SEE THAT THERE IS ROOM FOR AT LEAST ONE CHARACTER TO BE OUTPUT
  8935
  8936	013151'	554305	000005	CHKROM:	HLRZ	T1,LDBBIO(U)	;BLOCK OUTPUT NOW IN PROGRESS?
  8937	013152'	326300	013163'		JUMPN	T1,CHKRM1	;YES. QUEUE JOB FOR OUTPUT WAIT.
  8938	013153'	200300	016375'		MOVE	T1,TTFREN
  8939	013154'	305300	000003		CAIGE	T1,TIRSVD	;IS THERE BUFFER SPACE?
  8940	013155'	254000	013174'		 JRST	CHKRM3
  8941	013156'	200305	000021		MOVE	T1,LDBTOC(U)	;NUMBER NOW IN OUTPUT BUFFER
  8942	013157'	335005	000032		SKIPGE	LDBDCX(U)	;IF IT'S FAST
  8943	013160'	311300	016504'		CAML	T1,OMX120	;AND UNDER THE FAST MAXIMUM,
  8944	013161'	315300	016502'		 CAMGE	T1,OMX30	;OR IF IT'S UNDER THE SLOW MAXIMUM,
  8945	013162'	254000	012702*		  JRST	CPOPJ1		;  SAY THERE'S ROOM
  8946	013163'	135100	013121*	CHKRM1:	LDB	J,PJOBN
  8947	013164'	335002	013122*		SKIPGE	JBTAWQ(J)	;ABORT UUO IF TRAP IS PENDING
  8948	013165'	254000	013000*		 JRST	ABTUUO
  8949	013166'	135300	000230'		LDB	T1,DDPTTI
  8950	013167'	260040	000000*		PUSHJ	P,TSTKTP	;SEE IF WE CAN TAKE AN INTERRUPT
  8951	013170'	334000	000000		  SKIPA			;YES, MUST MAKE SURE WE SET OUTPUT ROOM FLAG
  8952	013171'	254000	013455'		JRST	TOWAT1		;QUEUE JOB FOR OUTPUT WAIT.
  8953
  8954	013172'	260040	016077'	CHKRM2:	PUSHJ	P,SETFIO
  8955	013173'	254000	013165*		JRST	ABTUUO		;NOW GET OUT OF UUO
  8956
  8957				;HERE WHEN THERE'RE NO BUFFERLETS AVAILABLE FOR THE OUTPUT
  8958
  8959	013174'	135300	000230'	CHKRM3:	LDB	T1,DDPTTI
  8960	013175'	260040	013117*		PUSHJ	P,TSTKTJ	;DOES HE GET AN I/O WAIT TRAP?
  8961	013176'	254000	013172'		  JRST	CHKRM2		;YES: DO IT
  8962	013177'	205300	200000		MOVSI	T1,TWTSPC
  8963	013200'	436304	000002		IORM	T1,DEVIOS(F)	;NO: MARK REASON FOR WAIT
  8964	013201'	324740	013455'		PJRST	TOWAT1		;    AND DO IT
  8965
  8966
  8967				; CALL TO SEE IF ROOM FOR A CHARACTER
  8968				; U/LDB
  8969				; PUSHJ P,IFROOM
  8970				;  <NO ROOM>
  8971				; <ROOM>
  8972
  8973	013202'	200300	016375'	IFROOM:	MOVE	T1,TTFREN	;Number of buffer chunks
  8974	013203'	305300	000003		CAIGE	T1,TIRSVD	;Is there buffer space?
  8975	013204'	263040	000000		 POPJ	P,		;No, last 3 chunks reserved for emergencies
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 200-2
SCNSER.MAC	25-JAN-91 22:40		MAKE SURE TTY IS ATTACHED, NO CHANCE FOR INTERRUPT

  8976	013205'	550300	000005		HRRZ	T1,U		;Get LDB address
  8977	013206'	306300	000105'		CAIN	T1,CTYLDB	;Sending to the CTY?
  8978					 JRST	[MOVE	T1,TTFREN
  8979						 CAIL	T1,TIRSVD+5
  8980						  AOS	(P)	;CTY can use all but the last 10 chunks
  8981	013207'	254000	017315'			 POPJ	P,]	
  8982	013210'	200305	000021		MOVE	T1,LDBTOC(U)	;Number of characters currently in buffer
  8983	013211'	335005	000032		SKIPGE	LDBDCX(U)	;If it's fast
  8984	013212'	311300	016504'		CAML	T1,OMX120	; and under the fast maximum,
  8985	013213'	315300	016502'		 CAMGE	T1,OMX30	; or if it's under the slow maximum,
  8986	013214'	350001	000000		  AOS	(P)		;  say there's room
  8987	013215'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 201
SCNSER.MAC	25-JAN-91 22:40		SUBROUTINES TO SET UP LINE AND MAKE SURE ATTACHED.

  8988				SUBTTL	SUBROUTINES TO SET UP LINE AND MAKE SURE ATTACHED.
  8989				;CALL WITH F SET UP, FROM M LEVEL ONLY.
  8990				;RETURN WHEN ATTACHED AND AT USER LEVEL, WITH U SET UP.
  8991
  8992				;ONE ROUTINE FOR INPUT, ONE FOR OUTPUT.
  8993
  8994	013216'	200004	000002	CKATTI:	MOVE	S,DEVIOS(F)	;SET UP STATUS WORD
  8995	013217'	550244	000013		HRRZ	U,DDBLDB(F)	;GET LINE BLOCK ADDR
  8996	013220'	326240	013224'		JUMPN	U,CKATI2	;IF THERE, GO ON
  8997	013221'	205300	020000		MOVSI	T1,TTYATC
  8998	013222'	616304	000004		TDNN	T1,DEVMOD(F)
  8999	013223'	254000	013162*		 JRST	CPOPJ1		;AUX CIRCUIT, SPECIAL
  9000	013224'	135300	013163*	CKATI2:	LDB	T1,PJOBN	;NOW CHECK IF JOB WAITING FOR
  9001	013225'	335006	013164*		SKIPGE	JBTAWQ(T1)	;AN INTERRUPT
  9002	013226'	263040	000000		 POPJ	P,		;YES
  9003	013227'	326240	013243'		JUMPN	U,CKATI1
  9004	013230'	332000	016563'	CKATIW:	SKIPE	SKPFLG		;DON'T WAIT FOR ATTACH IF INC AND SKP AUXCAL
  9005	013231'	263040	000000		 POPJ	P,
  9006	013232'	135300	000230'		LDB	T1,DDPTTI
  9007	013233'	260040	013175*		PUSHJ	P,TSTKTJ	;IS THIS AN IOW INTERRUPT
  9008	013234'	263040	000000		 POPJ P,		;YES
  9009	013235'	205000	400020		MOVSI	S,IO+TTYOUW	;MUST WAIT FOR ATTACH
  9010	013236'	412004	000002		ANDCAM	S,DEVIOS(F)	;CLEAR DIRECTION BIT
  9011	013237'	201000	010000		MOVEI	S,IOACT		;AND SET WAIT BIT FOR INPUT
  9012	013240'	437004	000002		IORB	S,DEVIOS(F)	; ..
  9013	013241'	260040	013457'		PUSHJ	P,WSYNCS	;WAIT FOR ATTACH
  9014	013242'	254000	013216'		JRST	CKATTI		;GET U SET UP AND RETURN.
  9015
  9016	013243'	500245	000031	CKATI1:	HLL	U,LDBDCH(U)		;GET DEVICE BITS
  9017	013244'	603240	020000		TLNE	U,LDLCOM		;AT COMMAND LEVEL?
  9018	013245'	254000	013230'		 JRST	CKATIW			;YES. CAN'T1 DO INPUT.
  9019	013246'	260040	013003'		PUSHJ	P,TYIEAT		;NO. SKIP ANY COMMANDS
  9020	013247'	350001	000000		AOS	(P)
  9021	013250'	324740	013273'		PJRST	UUOLDB			;AND GO ADJUST LINE BITS.
  9022
  9023	013251'	200004	000002	CKATTO:	MOVE	S,DEVIOS(F)		;SET UP STATUS WORD
  9024	013252'	550244	000013		HRRZ	U,DDBLDB(F)		;GET LINE ADDR IF ANY
  9025	013253'	326240	013257'		JUMPN	U,CKATO2		;IF HAVE ONE, SEE IF TOP LEVEL
  9026	013254'	205300	020000		MOVSI	T1,TTYATC
  9027	013255'	616304	000004		TDNN	T1,DEVMOD(F)
  9028	013256'	254000	013223*		 JRST	CPOPJ1
  9029	013257'	135300	013224*	CKATO2:	LDB	T1,PJOBN
  9030	013260'	335006	013225*		SKIPGE	JBTAWQ(T1)
  9031	013261'	263040	000000		 POPJ	P,			;WAITING FOR INTERRUPT
  9032	013262'	326240	013270'		JUMPN	U,CKATO1
  9033	013263'	135300	000230'		LDB	T1,DDPTTI
  9034	013264'	260040	013233*		PUSHJ	P,TSTKTJ
  9035	013265'	324740	016077'		  PJRST	SETFIO			; INTERRUPT ON IOW
  9036	013266'	260040	014403'		PUSHJ	P,TOWATA		;WAIT FOR OUTPUT DONE. (WHICH
  9037									; IS FORCED ON ATTACH)
  9038	013267'	254000	013251'		JRST	CKATTO			;AND SET UP U, TO RETURN.
  9039	013270'	350001	000000	CKATO1:	AOS	(P)
  9040	013271'	205300	400000		MOVSI	T1,L2LOEX
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 201-2
SCNSER.MAC	25-JAN-91 22:40		SUBROUTINES TO SET UP LINE AND MAKE SURE ATTACHED.

  9041	013272'	412305	000027		ANDCAM	T1,LDBBYT(U)		;TURN OFF EXTENDED OUTPUT
  9042					PFALL	UUOLDB			;FALL INTO UUOLDB
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 202
SCNSER.MAC	25-JAN-91 22:40		UUOLDB - MAKE LDB (ADDR IN U) AGREE WITH FILE STATUS BITS (IN S)

  9043				SUBTTL	UUOLDB - MAKE LDB (ADDR IN U) AGREE WITH FILE STATUS BITS (IN S)
  9044
  9045	013273'	322240	012712*	UUOLDB:	JUMPE	U,CPOPJ		;JUST IN CASE
  9046	013274'	500245	000031		HLL	U,LDBDCH(U)	;MAKE SURE LEFT HALF SET
  9047	013275'	603240	000040		TLNE	U,LDLAUX
  9048	013276'	263040	000000		 POPJ	P,		;DO NOTHING FOR AN AUX CIRCUIT
  9049
  9050				    ;SET MONITOR MODE BITS
  9051
  9052	013277'	261040	000002		PUSH	P,J
  9053	013300'	135100	013257*		LDB	J,PJOBN
  9054	013301'	135440	000000*		LDB	T4,PVYMOD
  9055	013302'	137440	000165'		DPB	T4,LDPMOD
  9056	013303'	262040	000002		POP	P,J		;SET MODE
  9057
  9058				    ;SET LDBDCX BITS
  9059
  9060	013304'	200305	000032		MOVE	T1,LDBDCX(U)
  9061	013305'	602000	000400		TRNE	S,DLRSUP
  9062	013306'	665300	020000		TLOA	T1,LXLDLR	;SUPPRESS-$
  9063	013307'	621300	020000		 TLZ	T1,LXLDLR	;DON'T SUPPRESS $
  9064	013310'	202305	000032		MOVEM	T1,LDBDCX(U)
  9065
  9066				    ;GET LDB BITS FROM FILE STATUS BITS
  9067
  9068	013311'	400300	000000		SETZ	T1,
  9069	013312'	602000	000100		TRNE	S,FCS
  9070	013313'	660300	020000		 TRO	T1,LDRFCS
  9071	013314'	602000	000200		TRNE	S,NOECHO
  9072	013315'	661300	000100		 TLO	T1,LDLNEC
  9073	013316'	603000	100000		TLNE	S,IOSBKA
  9074	013317'	661300	010000		 TLO	T1,LDLBKA
  9075	013320'	602000	001000		TRNE	S,BK2IOS
  9076	013321'	661300	004000		 TLO	T1,LDLBK2
  9077
  9078				    ;SET THE LDBDCH BITS
  9079
  9080	013322'	200440	000006		MOVE	T4,T1
  9081	013323'	430445	000031		XOR	T4,LDBDCH(U)	;T4/ THE BITS THAT CHANGED
  9082	013324'	436305	000031		IORM	T1,LDBDCH(U)
  9083	013325'	650300	017321'		TDC	T1,[LDLNEC!LDLBKA!LDLBK2,,LDRFCS]
  9084	013326'	413305	000031		ANDCAB	T1,LDBDCH(U)
  9085	013327'	500240	000006		HLL	U,T1		;UPDATE LH(U)
  9086
  9087				    ;FINISH UP
  9088
  9089	013330'	200004	000002		MOVE	S,DEVIOS(F)	;UPDATE S
  9090	013331'	603440	000100		TLNE	T4,LDLNEC	;IF WE'RE CHANGING ECHO MODE
  9091	013332'	602300	040000		TRNE	T1,LDRDEM	;AND LDRDEM NOT SET,
  9092	013333'	324740	007622'		 PJRST	SETLMD
  9093	013334'	201300	000001		MOVEI	T1,1		;  SET TO CHANGE ECHO MODE
  9094	013335'	137300	000067'		DPB	T1,LOPSEC
  9095	013336'	137305	000002		DPB	T1,LDBOPB(U)
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 202-2
SCNSER.MAC	25-JAN-91 22:40		UUOLDB - MAKE LDB (ADDR IN U) AGREE WITH FILE STATUS BITS (IN S)

  9096	013337'	324740	007622'		PJRST	SETLMD		;AND GO SET LINE MODE
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 203
SCNSER.MAC	25-JAN-91 22:40		UUOLDB - MAKE LDB (ADDR IN U) AGREE WITH FILE STATUS BITS (IN S)

  9097	013340'	205000	100000	TWAITL:	MOVSI S,IOSBKA
  9098	013341'	413004	000002		ANDCAB S,DEVIOS(F)
  9099	013342'	205300	010000		MOVSI T1,LDLBKA
  9100	013343'	412305	000031		ANDCAM T1,LDBDCH(U)	;SET FOR LINE MODE INPUT
  9101	013344'	260040	007622'		PUSHJ P,SETLMD
  9102	013345'	200305	000012		MOVE T1,LDBTIC(U)
  9103	013346'	500245	000031		HLL U,LDBDCH(U)	;MAKE SURE LINE IS OK
  9104	013347'	200445	000015		MOVE T4,LDBBKC(U)	;GET BREAK COUNT
  9105	013350'	603240	004000		TLNE U,LDLBK2	;IF IN BREAK2 MODE
  9106	013351'	270445	000016		 ADD T4,LDBBK2(U)	;NUMBER IS SUM
  9107	013352'	305300	000110		CAIGE T1,TIWKC
  9108	013353'	602440	777777		TRNE T4,-1		;IF A BREAK OR ENOUGH CHRS
  9109	013354'	263040	000000		 POPJ P,			;GO NOW
  9110	013355'	607240	002000		TLNN U,LDLIMI	;IN IMAGE MODE?
  9111	013356'	254000	013365'		 JRST TWTL1		;NO, MUST WAIT
  9112	013357'	336005	000012		SKIPN LDBTIC(U)	;YES, ANY CHRS?
  9113	013360'	603000	000040		TLNE S,IOEND		;OR END OF FILE SET
  9114	013361'	263040	000000		 POPJ P,			;IF END FLAGGED, THEN DONE
  9115	013362'	332005	000014		SKIPE LDBECC(U)	;ARE THERE ANY CHRS THERE AT ALL?
  9116	013363'	254000	013374'		 JRST TWTL2	;YES, I/O WAIT BUT NO TRAP
  9117	013364'	254000	013371'		JRST TWTL3	;NO, I/O WAIT WITH POSSIBLE TRAP
  9118	013365'	326440	013374'	TWTL1:	JUMPN T4,TWTL2	;IF UNECHOED BREAK CHRS, I/O WAIT NO TRAP
  9119	013366'	270305	000014		ADD T1,LDBECC(U)
  9120	013367'	301300	000110		CAIL T1,TIWKC	;OR POSSIBLEY TOO MANY TOTAL
  9121	013370'	254000	013374'		 JRST TWTL2	;I/O WAIT NO TRAP
  9122	013371'	135300	000230'	TWTL3:	LDB T1,DDPTTI	;CHECK FOR TRAP WANTED
  9123	013372'	260040	013264*		PUSHJ P,TSTKTJ		;SEE IF INTERRUPT ON IOW
  9124	013373'	254000	013173*		 JRST ABTUUO		;YES, ABORT
  9125	013374'	260040	013437'	TWTL2:	PUSHJ P,TIWAIT
  9126	013375'	260040	013216'		PUSHJ P,CKATTI
  9127	013376'	254000	013373*		 JRST ABTUUO
  9128	013377'	326240	013340'		JUMPN U,TWAITL
  9129	013400'	254000	011162'		JRST AUXRID	;ZAPPED AUX CIRCUIT
  9130
  9131	013401'			TWAITS:	;AOS	SKPFLG	;CALLED BY AN INPUT AND SKIP AUXCAL
  9132	013401'	255000	000000		JFCL		;FOR NOW UNTIL CAN FIND OUT WHY SKPFLG STAYS SET
  9133							;WHEN SHOULDN'T
  9134	013402'	350001	000000		AOS	(P)	;SET TO SKIP RETURN
  9135	013403'	205000	100000	TWAITC:	MOVSI S,IOSBKA
  9136	013404'	437004	000002		IORB S,DEVIOS(F)
  9137	013405'	205300	010000		MOVSI T1,LDLBKA
  9138	013406'	436305	000031		IORM T1,LDBDCH(U)
  9139	013407'	260040	007622'		PUSHJ P,SETLMD
  9140	013410'	500245	000031		HLL U,LDBDCH(U)	;MAKE SURE LINE OK FOR CALLERS
  9141	013411'	333005	000012		SKIPLE LDBTIC(U)	;ANY CHARACTERS PRESENT?
  9142	013412'	263040	000000		POPJ P,
  9143	013413'	332005	000014		SKIPE LDBECC(U)
  9144	013414'	254000	013420'		JRST TWTC1	;SOME CHRS SO NO I/O TRAP
  9145	013415'	135300	000230'		LDB T1,DDPTTI
  9146	013416'	260040	013372*		PUSHJ P,TSTKTJ		;CHECK IOW WAIT INTERRUPT
  9147	013417'	254000	013435'		 JRST 	TWABT		;GET OUT
  9148	013420'	260040	013437'	TWTC1:	PUSHJ P,TIWAIT
  9149	013421'	260040	013216'		PUSHJ P,CKATTI
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 203-2
SCNSER.MAC	25-JAN-91 22:40		UUOLDB - MAKE LDB (ADDR IN U) AGREE WITH FILE STATUS BITS (IN S)

  9150	013422'	254000	013435'		 JRST 	TWABT	;WAITING FOR INTERRUPT
  9151	013423'	200300	016563'		MOVE	T1,SKPFLG
  9152	013424'	402000	016563'		SETZM	SKPFLG
  9153	013425'	326240	013433'		JUMPN	U,TWTC2		;JUMP IF LINE ATTACHED
  9154	013426'	205300	020000		MOVSI	T1,TTYATC
  9155	013427'	616304	000004		TDNN	T1,DEVMOD(F)
  9156	013430'	254000	011162'		JRST	AUXRID		;ZAPPED AUX CIRCUIT
  9157	013431'	370001	000000		SOS	(P)		;ZAPPED CMD PORT FROM INC AND SKP AUXCAL
  9158	013432'	263040	000000		POPJ	P,
  9159	013433'	325300	013403'	TWTC2:	JUMPGE	T1,TWAITC	;GET ENOUGH INPUT CHARS?
  9160	013434'	263040	000000		POPJ	P,		;NO
  9161
  9162	013435'	402000	016563'	TWABT:	SETZM	SKPFLG
  9163	013436'	254000	013376*		JRST	ABTUUO
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 204
SCNSER.MAC	25-JAN-91 22:40		UUOLDB - MAKE LDB (ADDR IN U) AGREE WITH FILE STATUS BITS (IN S)

  9164	013437'	205000	400020	TIWAIT:	MOVSI S,IO!TTYOUW
  9165	013440'	412004	000002		ANDCAM S,DEVIOS(F)	;SET DIRECTION
  9166	013441'	201000	010000		MOVEI S,IOACT
  9167	013442'	437004	000002		IORB S,DEVIOS(F)	;SET WAIT BIT
  9168	013443'	201300	000012		MOVEI T1,IMGTIM
  9169	013444'	603240	002000		TLNE U,LDLIMI
  9170	013445'	137300	000174'		DPB T1,LDPTIM		;SET TIMER IF IN IMAGE MODE
  9171	013446'	201300	000001		MOVEI T1,1
  9172	013447'	137300	000102'		DPB T1,LOPECO		;SET ECHO-NEEDED
  9173	013450'	137305	000002		DPB T1,LDBOPB(U)	;AND NEED-OUTPUT
  9174	013451'	254000	013457'		JRST WSYNCS
  9175
  9176				;ROUTINE TO WAIT FOR NEARLY EMPTY OUTPUT BUFFER. CALL ONLY AT UUO LEVEL
  9177	013452'	200305	000021	TOWAIT:	MOVE T1,LDBTOC(U)		;GET COUNT OF TYPE-OUT CHARACTERS WAITING.
  9178	013453'	305300	000010		CAIGE T1,10			;OVER 7?
  9179	013454'	263040	000000		POPJ P,0			;NO. JUST RETURN.
  9180	013455'	200000	017322'	TOWAT1:	MOVE S,[XWD TTYOUW+IO,IOACT]	;FLAG OUTPUT WAIT ACTIVITY
  9181	013456'	436004	000002		IORM S,DEVIOS(F)		;IN THE DEVICE DATA BLOCK
  9182	013457'	205000	020000	WSYNCS:	MOVSI S,TIOUSE
  9183	013460'	437004	000002		IORB S,DEVIOS(F)
  9184	013461'	261040	000014		PUSH P,P1			;HAVE TO SAVE AC'S TO WAIT
  9185	013462'	261040	000015		PUSH P,P2			; BECAUSE WSYNC USES THESE
  9186	013463'	261040	000010		PUSH P,T3
  9187	013464'	261040	000004		PUSH P,F
  9188	013465'	261040	000012		PUSH P,W
  9189	013466'	260040	000627'		PUSHJ P,SCNINT		;GIVE HIM A CHANCE TO ECHO BEFORE PUTTING HIM IN WAIT
  9190	013467'	262040	000012		POP P,W
  9191	013470'	262040	000004		POP P,F
  9192	013471'	262040	000010		POP P,T3
  9193	013472'	200004	000002		MOVE	S,DEVIOS(F)	
  9194	013473'	606000	010000		TRNN	S,IOACT		;DO WE NEED TO GO INTO WAIT?
  9195	013474'	254000	013503'		JRST	WSYNC1		;NO
  9196	013475'	336000	016563'		SKIPN	SKPFLG		;INPUT AND SKIP CALL IN PROGRESS?
  9197	013476'	254000	013502'		JRST	WSYNC2		;NO
  9198	013477'	476000	016563'		SETOM	SKPFLG		;COULDN'T GET ENOUGH INPUT CHARS
  9199	013500'	260040	006041'		PUSHJ	P,TIWAKN	;DON'T BLOCK
  9200	013501'	334000	000000		SKIPA
  9201	013502'	260040	000000*	WSYNC2:	PUSHJ P,WSYNC			;WAIT
  9202	013503'	262040	000015	WSYNC1:	POP P,P2			;RESTORE AC'S
  9203	013504'	262040	000014		POP P,P1			; ..
  9204	013505'	205000	020000		MOVSI S,TIOUSE
  9205	013506'	413004	000002		ANDCAB S,DEVIOS(F)
  9206	013507'	263040	000000		POPJ P,0			;AND RETURN FROM TOWAIT
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 205
SCNSER.MAC	25-JAN-91 22:40		BACKPRESSURE ADJUSTERS

  9207				SUBTTL BACKPRESSURE ADJUSTERS
  9208
  9209				;BPLVD - CALLED BY LEVDEF UUO
  9210
  9211	013510'	201300	600000	BPLVD:	MOVEI	T1, LDRXOS!LDRBPS
  9212	013511'	612305	000031		TDNE	T1, LDBDCH(U)	;IF WE'VE SENT BACKPRESSURE OR AN XOFF
  9213	013512'	254000	013515'		 JRST	BPLVD1
  9214	013513'	135300	000063'		LDB	T1, LOPBPN
  9215	013514'	322300	013273*		JUMPE	T1, CPOPJ	;OR WE'RE PLANNING TO,
  9216	013515'	200305	000014	BPLVD1:	MOVE	T1, LDBECC(U)
  9217	013516'	270305	000012		ADD	T1, LDBTIC(U)
  9218	013517'	301300	000110		CAIL	T1, TIWKC	;AND WE DON'T HAVE GOBS OF CHARACTERS,
  9219	013520'	263040	000000		 POPJ	P,
  9220	013521'	254000	013542'		JRST	BPFCOM		;  SET TO CLEAR BACKPRESSURE
  9221
  9222				;BPFTYI - CALLED AT THE START OF TYI
  9223
  9224	013522'	201300	600000	BPFTYI:	MOVEI	T1, LDRXOS!LDRBPS
  9225	013523'	612305	000031		TDNE	T1, LDBDCH(U)	;IF WE'VE SENT BACKPRESSURE OR AN XOFF
  9226	013524'	254000	013527'		 JRST	.+3
  9227	013525'	135300	000063'		LDB	T1, LOPBPN
  9228	013526'	322300	013514*		JUMPE	T1, CPOPJ	;OR WE'RE PLANNING TO,
  9229	013527'	200305	000014		MOVE	T1, LDBECC(U)
  9230	013530'	270305	000012		ADD	T1, LDBTIC(U)
  9231	013531'	301300	000010		CAIL	T1, 10		;AND WE HAVE HARDLY ANY CHARACTERS,
  9232	013532'	263040	000000		 POPJ	P,
  9233	013533'	254000	013542'		JRST	BPFCOM		;  SET TO CLEAR BACKPRESSURE
  9234
  9235				;BPXOFF - CALLED WHEN DONE ECHOING, ON CLRBFI, BEFORE DOING
  9236				;	   BLOCK INPUT, AFTER READING COMMAND LINE
  9237				;BPOFF - CALLED WHEN ENTERING COMMAND LEVEL, WHEN FORCED
  9238				;	  OUT OF IMAGE STATE BY SCNSEC OR CLRIMI
  9239
  9240	013534'	334300	017323'	BPXOFF:	SKIPA	T1, [LDRBPS!LDRXOS]
  9241	013535'	201300	400000	BPOFF:	MOVEI	T1, LDRBPS
  9242	013536'	612305	000031		TDNE	T1, LDBDCH(U)	;IF WE'VE SEND BACKPRESSURE (OR XOFF)
  9243	013537'	254000	013542'		JRST	BPFCOM
  9244	013540'	135300	000063'		LDB	T1, LOPBPN	;OR WE'RE ABOUT TO,
  9245	013541'	322300	013526*		JUMPE	T1, CPOPJ
  9246					PFALL	BPFCOM		;  SET TO CLEAR BACKPRESSURE
  9247
  9248	013542'	201300	000001	BPFCOM:	MOVEI	T1, 1
  9249	013543'	137300	000064'		DPB	T1, LOPBPF	;SET BACKPRESSURE-OFF
  9250	013544'	137305	000002		DPB	T1, LDBOPB(U)	;AND NEED-OUTPUT
  9251	013545'	263040	000000		POPJ	P,
  9252
  9253				;ROUTINE TO CHECK TO SEE IF BACKPRESSURE SHOULD BE TURNED OFF.  SKIP RETURNS
  9254				;IF SHOULD NOT BE TURNED OFF ELSE NON-SKIP RETURNS
  9255				;
  9256	013546'	261040	000006	BPTEST:	PUSH	P,T1
  9257	013547'	200305	000012		MOVE	T1,LDBTIC(U)	;COMPUTE TOTAL NUMBER
  9258	013550'	270305	000014		ADD	T1,LDBECC(U)	; OF CHARACTERS WAITING
  9259	013551'	317300	016475'		CAMG	T1,TIWRNN	;GREATER THAN BACKPRESSURE ON THRESHOLD?
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 205-2
SCNSER.MAC	25-JAN-91 22:40		BACKPRESSURE ADJUSTERS

  9260	013552'	254000	010404*		 JRST	TPOPJ		;NO, TURN OFF BACKPRESSURE
  9261	013553'	254000	010410*		JRST	TPOPJ1		;YES, LEAVE BACKPRESSURE ON
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 206
SCNSER.MAC	25-JAN-91 22:40		COMMAND ROUTINES

  9262				SUBTTL COMMAND ROUTINES
  9263
  9264				;ROUTINE TO MAKE THIS TTY VISIBLE TO COMMAND DECODER, IF AT COM LEVEL
  9265				;CALL WITH U SET UP
  9266
  9267	013554'	336000	016561'	CMDWAK:	SKIPN	FRSFLG		;IF IT'S JUST THE RESCAN-STUFFER,
  9268	013555'	254000	013560'		 JRST	CMDWK1
  9269	013556'	402000	016561'		SETZM	FRSFLG		;  TELL IT WE GOT HERE
  9270	013557'	263040	000000		POPJ	P,
  9271	013560'	607240	020000	CMDWK1:	TLNN	U,LDLCOM	;IS LINE AT COMMAND LEVEL?
  9272	013561'	263040	000000		 POPJ	P,0		;NO. JUST RETURN
  9273	013562'	205300	010000		MOVSI	T1,L2LLDF
  9274	013563'	412305	000027		ANDCAM	T1,LDBBYT(U)	;RESET FLAG, USER AWAKE
  9275	013564'	400300	000000		SETZ	T1,		;Indicate to COMWCM that command comes
  9276								;from terminal
  9277				; Enter here with command index in T1 (or 0 if not forced command)
  9278	013565'	261040	000004	TTFORC:	PUSH	P,F		;Preserve
  9279	013566'	135200	000101'		LDB	F,LOPZAP	;If we're going to ZAP it,
  9280	013567'	326200	013577'		JUMPN	F,FPOPJ		; ignore the command
  9281	013570'	550205	000000		HRRZ	F,LDBDDB(U)	;Set up DDB pointer
  9282	013571'	322200	013577'		JUMPE	F,FPOPJ		;None there, just exit
  9283	013572'	261040	000002		PUSH	P,J
  9284	013573'	135100	013300*		LDB	J,PJOBN		;Find job/frame number
  9285	013574'	332000	000002		SKIPE	J		;None there...
  9286	013575'	260040	000000*		PUSHJ	P,COMWCM##	;Set command request for this job/frame
  9287	013576'	262040	000002		POP	P,J
  9288	013577'	262040	000004	FPOPJ:	POP	P,F
  9289	013600'	263040	000000		POPJ	P,
  9290
  9291				;;
  9292				;; Routine to set up command input pointer to accept command
  9293				;;  input from TTY.  Clobbers T2.
  9294				;;
  9295	013601'	200345	000011	TRESCN::MOVE	T2,LDBTIT(U)	;TTY input buffer pointer
  9296	013602'	202340	016404'		MOVEM	T2,TTCMCA	;Copy into command input pointer
  9297	013603'	201400	000040		MOVEI	T3,40		;Delimiter
  9298	013604'	202400	016403'		MOVEM	T3,TTCMCH
  9299	013605'	263040	000000		POPJ	P,
  9300
  9301				;COMTYO - Output character in T3, preserving T2, uses T1
  9302
  9303	013606'	261040	000007	COMTYO::PUSH	P,T2		;Save T2 as advertised
  9304	013607'	260060	000000*		PUSHJ	P,@.CPTOA##	;Call CCTYO or routine in ONCE
  9305	013610'	254000	000000*		JRST	T2POPJ##	;Restore T2 and return
  9306
  9307				;CCTYO - usual output routine for .CPTOA
  9308
  9309	013611'	550300	000005	CCTYO::	HRRZ	T1,U		;Just the LDB address
  9310	013612'	322300	013541*		JUMPE	T1,CPOPJ	;Ignore if line not set up
  9311	013613'	306300	000105'		CAIN	T1,CTYLDB	;If output is going to the CTY,
  9312	013614'	260040	014175'		 PUSHJ	P,MSGLOG	;Log char in MSGBUF (high phys mem)
  9313	013615'	260040	013202'		PUSHJ	P,IFROOM	;Space in this guy's area?
  9314	013616'	263040	000000		  POPJ	P,		;No, ignore further attempts at output
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 206-2
SCNSER.MAC	25-JAN-91 22:40		COMMAND ROUTINES

  9315	013617'	260040	013104'		PUSHJ	P,CMDTYO	;Put character in output chunks
  9316	013620'	324740	007140'		PJRST	ONEOU3		;And start output
  9317
  9318
  9319	013621'	332340	016404'	CCTYI::	SKIPE T2,TTCMCA		;REAL INPUT ROUTINE FOR COMMAND
  9320	013622'	316345	000010		CAMN T2,LDBTIP(U)	;NOTHING OR AT END OF BUFFER
  9321	013623'	254000	013630'		 JRST CCTYI1		;GO FAKE A BREAK
  9322	013624'	260040	006171'		PUSHJ P,TTGETC
  9323	013625'	255000	000000		  JFCL
  9324	013626'	202340	016404'		MOVEM T2,TTCMCA
  9325	013627'	263040	000000		POPJ P,
  9326
  9327	013630'	201400	000012	CCTYI1:	MOVEI T3,12
  9328	013631'	263040	000000		POPJ P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 207
SCNSER.MAC	25-JAN-91 22:40		COMMAND INPUT ROUTINE

  9329				SUBTTL	COMMAND INPUT ROUTINE
  9330
  9331	013632'	260040	013635'	COMTYI::PUSHJ P,COMTYT	;FETCH A CHARACTER
  9332	013633'	275400	000040		 SUBI T3,40	;UPSHIFT LOWER CASE
  9333	013634'	263040	000000		POPJ P,
  9334
  9335	013635'	200400	016403'	COMTYT::MOVE T3,TTCMCH
  9336	013636'	302400	000003		CAIE T3,3
  9337	013637'	306400	000012		CAIN T3,12	;THESE ARE FINISHED FLAGS
  9338	013640'	254000	013256*		 JRST CPOPJ1	;DO NOT TRY TO READ FURTHER
  9339	013641'	261040	000007		PUSH P,T2
  9340	013642'	261040	000016		PUSH P,P3	;SAVE REGISTERS FOR CALLERS
  9341	013643'	500245	000031		HLL U,LDBDCH(U)
  9342	013644'	260060	000000*	COMTI1:	PUSHJ P,@.CPTIA	;GET A CHR
  9343	013645'	405400	000177		ANDI T3,177	;NOT INTERESTED IN EXTRA BITS
  9344	013646'	200710	000312'		MOVE P3,CHRTAB(T3)
  9345	013647'	135300	000305'		LDB T1,CHPRED
  9346	013650'	256006	013657'		XCT COMATB(T1)
  9347	013651'	306400	000015		CAIN T3,15	;RETURN IS SPECAIL
  9348	013652'	254000	013644'		 JRST COMTI1	;GO GET LF AND SAY NOTHING ABOUT RETURN
  9349	013653'	202400	016403'	COMTI2:	MOVEM T3,TTCMCH	;REMEMBER CHR FOR REREAD
  9350	013654'	262040	000016		POP P,P3
  9351	013655'	262040	000007		POP P,T2
  9352	013656'	254000	013640*		JRST CPOPJ1
  9353
  9354	013657'	254000	013664'	COMATB:	JRST SPRCOM	;SPECIAL ACTION
  9355	013660'	255000	000000		JFCL		;NORMAL CHR
  9356	013661'	201400	000012		MOVEI T3,12	;TURN ALL BREAKS TO LINE FEEDS
  9357	013662'	255000	000000		JFCL		;BREAK2
  9358	013663'	370001	777776		SOS -2(P)	;NON-SKIP RETURN ON LOWER CASE CHAR
  9359
  9360	013664'	135300	000307'	SPRCOM:	LDB T1,CHPSPR	;GET CHR TYPE
  9361	013665'	135340	000165'		LDB T2,LDPMOD	;AND LINE MODE
  9362	013666'	256027	013670'		XCT @SPRCTB(T2)
  9363	013667'	254000	013653'		JRST COMTI2	;FINISH UP
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 208
SCNSER.MAC	25-JAN-91 22:40		COMMAND INPUT ROUTINE

  9364	013670'	256006	013674'	SPRCTB:	XCT COMPDP(T1)
  9365	013671'	256006	013703'		XCT COM940(T1)
  9366	013672'	256006	013703'		XCT COM940(T1)
  9367	013673'	256006	013674'		XCT COMPDP(T1)
  9368
  9369	013674'	201400	000003	COMPDP:	MOVEI T3,3	;^C
  9370	013675'	201400	000012		MOVEI T3,12	;33
  9371	013676'	201400	000012		MOVEI T3,12	;^_
  9372	013677'	201400	000012		MOVEI T3,12	;^Z
  9373	013700'	201400	000012		MOVEI T3,12	;175-176
  9374	013701'	254000	013712'		JRST COMTAB	;TAB
  9375	013702'	254000	013716'		JRST COMBSP	;BACKSPACE
  9376
  9377	013703'	201400	000012	COM940:	MOVEI T3,12	;^C
  9378	013704'	201400	000003		MOVEI T3,3	;33
  9379	013705'	201400	000003		MOVEI T3,3	;^_
  9380	013706'	201400	000012		MOVEI T3,12	;^Z
  9381	013707'	254000	013722'		JRST COMPA	;175-176
  9382	013710'	254000	013712'		JRST COMTAB	;TAB
  9383	013711'	254000	013716'		JRST COMBSP	;BACKSPACE
  9384
  9385	013712'	205300	100000	COMTAB:	MOVSI T1,L2LTBK
  9386	013713'	612305	000027		TDNE T1,LDBBYT(U)
  9387	013714'	201400	000012		MOVEI T3,12	;TREAT AS BREAK
  9388	013715'	254000	013653'		JRST COMTI2	;TREAT AS BREAK2
  9389
  9390	013716'	205300	040000	COMBSP:	MOVSI T1,L2LBBP
  9391	013717'	616305	000027		TDNN T1,LDBBYT(U)
  9392	013720'	201400	000012		MOVEI T3,12	;TREAT AS BREAK
  9393	013721'	254000	013653'		JRST COMTI2	;TREAT AS BREAK2
  9394
  9395	013722'	201400	000003	COMPA:	MOVEI T3,3
  9396	013723'	607240	000020		TLNN U,LDLLCT
  9397	013724'	201400	000012		MOVEI T3,12
  9398	013725'	254000	013653'		JRST COMTI2	;EITHER AN ESCAPE OR JUST A BREAK CHR
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 209
SCNSER.MAC	25-JAN-91 22:40		ROUTINE TO SWITCH TTY TO USER PROGRAM LEVEL AND START USER RUNNING

  9399				SUBTTL	ROUTINE TO SWITCH TTY TO USER PROGRAM LEVEL AND START USER RUNNING
  9400
  9401	013726'	634000	000000	TTYUSW::TDZA S,S			;DON'T1 CLEAR WAIT BITS
  9402	013727'	200000	017017'	TTYUSR:: MOVE S,[XWD IOW,IOACT]		;CLEAR WAIT BITS
  9403	013730'	260040	013733'		PUSHJ P,TTYUS0			;PUT TTY IN USER
  9404	013731'	324740	011360*		PJRST SETRUN			;MAKE HIM RUN AND RETURN
  9405
  9406				;CALL TTYUSM TO SIMPLY PUT TERM IN USER MODE
  9407
  9408	013732'	400000	000000	TTYUSM::SETZ S,				;DON'T CLEAR WAIT BITS
  9409	013733'	322240	013612*	TTYUS0:	JUMPE	U,CPOPJ			;Exit if no LDB
  9410	013734'	550205	000000		HRRZ F,LDBDDB(U)		;GET ATTACHED F IF ANY
  9411	013735'	322200	013740'		JUMPE F,TTYUS1			;JUMP IF NOT ATTACHED
  9412	013736'	413004	000002		ANDCAB S,DEVIOS(F)		; ..
  9413	013737'	260040	013273'		PUSHJ P,UUOLDB			;MAKE U AND DEVIOS AGREE
  9414	013740'	205300	020000	TTYUS1:	MOVSI T1,LDLCOM			;PUT TTY IN USER MODE
  9415	013741'	412305	000031		ANDCAM T1,LDBDCH(U)		;MAY BE DETACHED, BUT WILL WAIT
  9416									; AT UUO LEVEL IF NEEDED
  9417	013742'	260040	007622'		PUSHJ P,SETLMD
  9418	013743'	263040	000000		POPJ P,
  9419
  9420				;; Here when terminal-originated command has completed
  9421
  9422	013744'	205300	100000	TTYCMR::MOVSI	T1,LDLECS		;Set EAT-COMMAND-SYNC bit
  9423	013745'	436305	000031		IORM	T1,LDBDCH(U)		; in Line Data Block
  9424	013746'	263040	000000		POPJ	P,
  9425
  9426	013747'	322240	013733*	TTYSTC::JUMPE	U,CPOPJ
  9427	013750'	205300	002000		MOVSI	T1,LDLIMI		;FORCE OUT OF IMAGE MODE
  9428	013751'	260040	013770'		PUSHJ	P,CNCMD1		;WILL ALSO SET COMMAND BIT
  9429
  9430	013752'	322240	013747*	TTYSTR::JUMPE	U,CPOPJ			;Exit if no LDB
  9431	013753'	500245	000031		HLL	U,LDBDCH(U)
  9432	013754'	607240	020000		TLNN	U,LDLCOM		;AT COMMAND LEVEL?
  9433	013755'	324740	007171'		 PJRST	NOCTRO			;NO. JUST CLEAR ^O BIT
  9434	013756'	260040	013003'		PUSHJ	P,TYIEAT		;CLEAR THE COMMAND IN CASE MORE
  9435	013757'	550305	000015		HRRZ	T1,LDBBKC(U)		;NUMBER OF DEF ECHO BREAK CHARS
  9436	013760'	322300	013776'		JUMPE	T1,CKSXON		;NO BREAKS WAITING
  9437	013761'	260040	013554'		PUSHJ	P,CMDWAK		;SET FOR COMMAND
  9438	013762'	324740	007171'		PJRST	NOCTRO			;AND GO CLEAR BIT
  9439
  9440	013763'	505300	000003	MONHNG::HRLI	T1,3
  9441	013764'	260040	006621'		PUSHJ	P,HNGMON
  9442	013765'	255000	000000		  JFCL
  9443	013766'	263040	000000		POPJ	P,
  9444
  9445	013767'			TTYHLT::		;Global entry point to put TTY in cmd mode
  9446	013767'	205300	102000	CNCMOD:	MOVSI T1,LDLIMI!LDLECS
  9447	013770'	412305	000031	CNCMD1:	ANDCAM T1,LDBDCH(U)	;FORCE USER TO COMMAND LEVEL, RESET
  9448	013771'	260040	013546'		PUSHJ	P,BPTEST	;WANT TO TURN OFF BACKPRESSURE?
  9449	013772'	260040	013535'		  PUSHJ P,BPOFF		;YES, MAKE SURE BACKPRESSURE OFF
  9450	013773'	205300	020000		MOVSI T1,LDLCOM
  9451	013774'	436305	000031		IORM T1,LDBDCH(U)
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 209-2
SCNSER.MAC	25-JAN-91 22:40		ROUTINE TO SWITCH TTY TO USER PROGRAM LEVEL AND START USER RUNNING

  9452	013775'	324740	007622'		PJRST SETLMD
  9453
  9454	013776'	260040	013546'	CKSXON:	PUSHJ	P,BPTEST	;WANT TO TURN BACKPRESSURE OFF?
  9455	013777'	260040	013534'		  PUSHJ P,BPXOFF	;YES
  9456	014000'	254000	007171'		JRST NOCTRO
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 210
SCNSER.MAC	25-JAN-91 22:40		OPRCTY - Remove chars from CTY's LDB and send to CTY

  9457				SUBTTL	OPRCTY - Remove chars from CTY's LDB and send to CTY
  9458
  9459	014001'	000000	000000	CTYBLF::EXP 0	;0,,-1 to ding next minute, -1,,-1 to ding this tick
  9460	014002'	000000	000000	OPRTIC::EXP 0	;Number of ticks before OPRCTY is allowed to continue
  9461
  9462	014003'	201240	000105'	OPRCTY:	MOVEI	U,CTYLDB	;Called by once-per-tick code
  9463	014004'	335000	014002'		SKIPGE	OPRTIC		;If CTYSIM is not doing anything,
  9464	014005'	476000	014002'		 SETOM	OPRTIC		; make sure this doesn't overflow to positive
  9465	014006'	377000	014002'			SOSG  OPRTIC	;Don't output if CTYSIM output recently
  9466				IFCPU(<KI,F3>),<CONSZ TTY,TT.OB>;Skip if output is done
  9467				IFCPU (KS),<	SKIPE CTYOWD##>	;Skip if output is done
  9468	014007'	336000	000455*	IFCPU(KL),<	SKIPN EPT##+SPCMTD>; "     "         "
  9469	014010'	263040	000000			 POPJ P,	;Output in progress - try again later
  9470				;*;	MOVEI	T3,ALRCTY	;SET ALARM
  9471				;*;	IORM	T3,ALR620	;11 NODES DON'T CARE TO KNOW ABOUT ALRCTY
  9472	014011'	331000	014001'		SKIPL	CTYBLF		;AAA. IF -1 RING BELL THIS TIME
  9473	014012'	254000	014016'		 JRST	OPRCT2
  9474	014013'	553000	014001'		HRRZS	CTYBLF		;RESET TO 0,,-1
  9475	014014'	201400	000007		MOVEI	T3,7
  9476	014015'	324740	014214'		PJRST	CTYCHR		;RING BELL (not sent to CTYBUF nor MSGBUF)
  9477
  9478	014016'	333000	016473'	OPRCT2:	SKIPLE	CTYFLN		;ARE THERE FILLS NEEDED
  9479	014017'	254000	014042'		 JRST	OPRFIL		;YES
  9480	014020'	200345	000020		MOVE	T2,LDBTOT(U)
  9481	014021'	260040	006171'		PUSHJ	P,TTGETC	;Get character from CTY's LDB
  9482	014022'	260040	006252'		  PUSHJ	P,FRECHK
  9483	014023'	202345	000020		MOVEM	T2,LDBTOT(U)
  9484	014024'	260040	014127'		PUSHJ	P,CTYLOG	;Log it in CTYBUF (MSGLOG called already)
  9485	014025'	260040	000000*		PUSHJ	P,PEVEN8	;Generate parity (smashes T1)
  9486	014026'	260040	014214'		PUSHJ	P,CTYCHR	;Send it to the CTY
  9487	014027'	405400	000177		ANDI	T3,177
  9488	014030'	302400	000014		CAIE	T3,14
  9489	014031'	306400	000013		CAIN	T3,13		;HANDLE FF AND VTB
  9490	014032'	254000	014040'		 JRST	CTYFRM
  9491	014033'	306400	000015		CAIN	T3,15
  9492	014034'	336400	016472'		SKIPN	T3,CTYFIL	;CR AND NEED FILLS?
  9493	014035'	254000	014046'		 JRST	CTYNFL		;NO
  9494	014036'	202400	016473'	CTYSFL:	MOVEM	T3,CTYFLN	;YES, SET COUNT (DO NOT DEC CHR CNT)
  9495	014037'	263040	000000		POPJ	P,
  9496
  9497	014040'	201400	000050	CTYFRM:	MOVEI	T3,^D40
  9498	014041'	254000	014036'		JRST	CTYSFL		;SET LARGE NUMBER OF FILLS
  9499
  9500	014042'	201400	000377	OPRFIL:	MOVEI	T3,377		;Filler is RUBOUT with even parity
  9501	014043'	260040	014214'		PUSHJ	P,CTYCHR	;Go to CTY (not CTYLOG, not MSGLOG)
  9502	014044'	373000	016473'		SOSLE	CTYFLN
  9503	014045'	263040	000000		 POPJ	P,		;Come back next tick
  9504	014046'	373005	000021	CTYNFL:	SOSLE	LDBTOC(U)
  9505	014047'	263040	000000		 POPJ	P,		;NOT ALL OUTPUT YET
  9506	014050'	260040	014527'		PUSHJ	P,OPRFRE	;RESTART SETUUO WAITERS
  9507	014051'	260040	006324'		PUSHJ	P,TSETBO	;RESET OUTPUT BUFFER
  9508	014052'	263040	000000		POPJ	P,		;DONE
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 211
SCNSER.MAC	25-JAN-91 22:40		CTYTYP, CTYTYO - output character to the CTY (no interrupts)

  9509				SUBTTL	CTYTYP, CTYTYO - output character to the CTY (no interrupts)
  9510
  9511				;OPROUT - co-routine to set output to the CTY or the OPR terminal.
  9512				;Call with T1/0 = No LDB - Use CTYTYO to go directly to the CTY, no interrupts
  9513				;          T1/1 = One LDB - Use CTYLDB to put in the TTY chunks, CTY only
  9514				;          T1/2 = Two LDBs - Use both CTYLDB and OPRLDB, put in chunks
  9515				;Preserves all ACs but T1.  Note that U is not changed.
  9516
  9517	014053'	200306	017324'	OPROUT::MOVE	T1,[EXP OP0TYO,OP1TYO,OP2TYO](T1) ;Get new address
  9518	014054'	250300	013607*		EXCH	T1,.CPTOA##	;Set new typout address for COMTYO
  9519	014055'	250301	000000		EXCH	T1,(P)		;Save old address, get resume PC
  9520	014056'	260046	000000		PUSHJ	P,(T1)		;Call caller as coroutine
  9521	014057'	370001	777777		  SOS	-1(P)		;Propagate non-skip return
  9522	014060'	262040	014054*		POP	P,.CPTOA##	;Restore typeout routine when caller POPJs
  9523	014061'	254000	013656*		JRST	CPOPJ1
  9524
  9525				;Here during INFO or EVENT stopcodes - use normal buffered output to OPR+CTY
  9526
  9527	014062'	506401	000000	OP2TYO:	HRLM	T3,(P)		;Save char
  9528	014063'	261040	000005		PUSH	P,U
  9529	014064'	332240	016405'		SKIPE	U,OPRLDB	;If there is an OPR terminal
  9530	014065'	260040	013611'		 PUSHJ	P,CCTYO		;Output to it
  9531	014066'	262040	000005		POP	P,U
  9532	014067'	554401	000000		HLRZ	T3,(P)		;Do same character to the CTY
  9533					PFALL	OP1TYO
  9534
  9535				;Here to output to the CTY's LDB only (buffer emptied at clock level)
  9536
  9537	014070'	261040	000005	OP1TYO:	PUSH	P,U		;Routine to output to the CTY's LDB
  9538	014071'	201240	000105'		MOVEI	U,CTYLDB	;Point to the CTY
  9539	014072'	260040	013611'		PUSHJ	P,CCTYO		;Put char in CTY's LDB (this calls MSGLOG)
  9540	014073'	254000	003553'		JRST	UPOPJ	 	;Restore U and continue
  9541
  9542				;OP0TYO updates the key, then calls CTYTYO (called from continuable STOPCD).
  9543
  9544	014074'	261040	000006	OP0TYO::PUSH	P,T1		;Routine to output char in T3 to the CTY
  9545	014075'	200300	000512'		MOVE	T1,KEY10	;Magic number for the base
  9546	014076'	331000	000000*		SKIPL	.CPDWD##	;STOPCD in progress?
  9547	014077'	256000	000514'		 XCT	KEYSET		;Yes, update KEY620 if not in CONSOLE mode
  9548	014100'	262040	000006		POP	P,T1
  9549					PFALL	CTYTYO
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 212
SCNSER.MAC	25-JAN-91 22:40		CTYTYP, CTYTYO - output character to the CTY (no interrupts)

  9550				;Output character directly to the CTY.  Called via PUSHJ P,@COMTYO from DIE.
  9551				;CTYTYO outputs to CTY, logs output, generates even parity, and does fillers.
  9552				;  This routine will wait in a loop if output is busy, which may mean a delay
  9553				;  of several milliseconds (more if CTYFIL is nonzero).
  9554				;Call with 7-bit character in T3 (8 data bits if 9th bit it set).
  9555				;Caller is expected to create free CRLF at column 80 (for now).
  9556
  9557	014101'	261040	000006	CTYTYO::PUSH	P,T1		;Called from ONCE, CTYSIM, ERRCON, etc
  9558	014102'	260040	014175'		PUSHJ	P,MSGLOG	;Log it in MSGBUF (high phys mem)
  9559	014103'	260040	014127'		PUSHJ	P,CTYLOG	;Log it in CTYBUF (T3 has 7-bit character)
  9560	014104'	626400	000400		TRZN	T3,400		;If image flag set, char is 8 bits
  9561	014105'	260040	014025*		 PUSHJ	P,PEVEN8	;Generate even parity (smashes T1)
  9562	014106'	260040	014214'		PUSHJ	P,CTYCHR	;Output it to the CTY, loop if busy
  9563				PRINTF(<[CTYTYO should to free CRLF at column 80]>)
  9564	014107'	302400	000015		CAIE	T3,015		;Carriage return?
  9565	014110'	306400	000215		CAIN	T3,215		;(with or without parity)
  9566	014111'	336000	016472'		 SKIPN	CTYFIL		;Yes, have to do fillers?
  9567	014112'	254000	013552*		  JRST	TPOPJ		;No, return
  9568	014113'	261040	000010		PUSH	P,T3		;Save the character
  9569	014114'	200300	016472'		MOVE	T1,CTYFIL	;Number of rubouts to do
  9570	014115'	201400	000377	CTYTY1:	MOVEI	T3,377		;Fill character is rubout
  9571	014116'	260040	014214'		PUSHJ	P,CTYCHR	;CTYCHR loops waiting for output done
  9572	014117'	367300	014115'		SOJG	T1,CTYTY1	;Do multiple fillers
  9573	014120'	262040	000010		POP	P,T3		;Get 8-bit character back
  9574	014121'	254000	014112*		JRST	TPOPJ		;End of CTYTYO
  9575
  9576
  9577				;Output string to CTY.  Called from MONBTS and COMMON when loading BOOTS
  9578				;	MOVEI	T1,[ASCIZ /string/]
  9579				;	PUSHJ	P,CTYTYP
  9580				;	 <only return>
  9581
  9582	014122'	505300	440700	CTYTYP::HRLI	T1,440700	;POINTER FOR ASCIZ
  9583	014123'	134400	000006	CTYTYL:	ILDB	T3,T1		;GET CHARACTER
  9584	014124'	322400	013752*		JUMPE	T3,CPOPJ	;RETURN
  9585	014125'	260040	014101'		PUSHJ	P,CTYTYO
  9586	014126'	254000	014123'		JRST	CTYTYL
  9587
  9588				;Routine to log all CTY output in CTYBUF.  Preserves all ACs
  9589
  9590	014127'	302400	000007	CTYLOG::CAIE	T3,007		;Ignore bells
  9591	014130'	306400	000207		CAIN	T3,207
  9592	014131'	263040	000000		 POPJ	P,
  9593	014132'	261040	000006		PUSH	P,T1
  9594	014133'	133000	000000*		IBP	CTYPTR##	;Increment byte pointer
  9595	014134'	200300	014133*		MOVE	T1,CTYPTR##	;Get it
  9596	014135'	620300	000000*		TRZ	T1,-1-CTYMSK##	;Use only 9 bits of offset within CTYBUF
  9597	014136'	271300	000000*		ADDI	T1,CTYBUF##	;Full address
  9598	014137'	137400	000006		DPB	T3,T1		;Store all CTY output in CTYBUF
  9599	014140'	262040	000006		POP	P,T1
  9600	014141'	263040	000000		POPJ	P,
  9601
  9602			774000		MSGLG.=:%MS0+0	;SIXBIT /MSGLOG/
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 212-2
SCNSER.MAC	25-JAN-91 22:40		CTYTYP, CTYTYO - output character to the CTY (no interrupts)

  9603			774001		MSGLGS=:%MS0+1	;EXP <1777-4>*5 = size of MSGBUF in bytes = 11747
  9604			774002		MSGLGI=:%MS0+2	;EXP 0          = number of bytes put in by MSGLOG
  9605			774003		MSGLGO=:%MS0+3	;EXP 0          = number of bytes removed by SYSDAT
  9606			774004		MSGBUF=:%MS0+4	;ASCII text     = message log buffer
  9607			775777		MSG777=:%MS1+777;ASCIZ /<><>/   = end of buffer marker
  9608
  9609				;Programs need a 2004 word buffer to read MSGLG.+MSGBUF with SYSDVF function 6
  9610	014142'	777776	000000		SYDVF (<<MSGLG.,MSGBUF-MSGLG.>,<MSGBUF,MSG777+1-MSGBUF>>)
  9611	014143'	556347	544716
  9612	014144'	000004	774000
  9613	014145'	556347	426546
  9614	014146'	001774	774004
  9615				;Set up MSGBUF in high memory.  ONCE has made %MS0 and %MS1 addressable
  9616
  9617	014147'	200300	017327'	MSGINI::MOVE	T1,['MSGBUF']	;Name of buffer in SIXBIT
  9618	014150'	201340	011747		MOVEI	T2,<MSG777-MSGBUF>*5 ;Size in bytes (^D5095)
  9619	014151'	200400	017330'		MOVE	T3,[ASCIZ/<><>/];End of buffer marker
  9620	014152'	316300	774000		CAMN	T1,MSGLG.	;Check 1st and 2nd words
  9621	014153'	312340	774001		CAME	T2,MSGLGS	; for valid data from previous load
  9622	014154'	254000	014162'		 JRST	MSGIN1		;Bad
  9623	014155'	312400	775777		CAME	T3,MSG777	;Check last word
  9624	014156'	254000	014162'		 JRST	MSGIN1		;Bad
  9625				IFCPU (<KI,F3>),<		;OK, calculate offset into buffer
  9626					MOVE	T1,MSGLGI	;Count of bytes already logged to buffer
  9627					IDIV	T1,MSGLGS	;Modulo buffer size
  9628					MOVE	T3,[POINT 7,MSGBUF,6
  9629						    POINT 7,MSGBUF,13
  9630						    POINT 7,MSGBUF,20
  9631						    POINT 7,MSGBUF,27
  9632						    POINT 7,MSGBUF,34](T2)
  9633					ADD	T1,T3		;Combine byte pointer with address
  9634				>  ;End KI,F3
  9635	014157'	200300	017331'	IFNCPU(<KI,F3>),<MOVE T1,[POINT 7,MSGBUF,6]> ;Prototype for ADJBP
  9636	014160'	202300	016574'		MOVEM	T1,MSGLGP	;Byte pointer will be incremented before use
  9637	014161'	263040	000000		POPJ	P,		;Buffer has valid data from previous crash
  9638
  9639	014162'	402000	774004	MSGIN1:	SETZM	MSGBUF		;Zero out both pages
  9640	014163'	200440	017332'		MOVE	T4,[MSGBUF,,MSGBUF+1]
  9641	014164'	251440	775777		BLT	T4,MSG777
  9642	014165'	202300	774000		MOVEM	T1,MSGLG.	;Make header valid
  9643	014166'	202340	774001		MOVEM	T2,MSGLGS
  9644	014167'	202400	775777		MOVEM	T3,MSG777	;And end marker
  9645	014170'	476000	774002		SETOM	MSGLGI		;These will be inc'ed to 0 for 1st char
  9646	014171'	476000	774003		SETOM	MSGLGO
  9647	014172'	200300	017331'		MOVE	T1,[POINT 7,MSGBUF,6] ;Prototype for ADJBP
  9648	014173'	202300	016574'		MOVEM	T1,MSGLGP	;Byte pointer will be incremented before use
  9649	014174'	263040	000000		POPJ	P,
  9650
  9651				;Routine to log all CTY output in MSGBUF.  Preserves all ACs
  9652				;Called when characters go into the CTYLDB chunks (INFO and EVENT stopcodes)
  9653				; and when CTYTYO is bypassing the CTYLDB (ONCE dialog, serious stopcodes).
  9654
  9655	014175'	336000	016574'	MSGLOG::SKIPN	MSGLGP		;If byte pointer is not set up yet,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 212-3
SCNSER.MAC	25-JAN-91 22:40		CTYTYP, CTYTYO - output character to the CTY (no interrupts)

  9656	014176'	263040	000000		 POPJ	P,		; ignore until MSGINI sets it
  9657	014177'	302400	000007		CAIE	T3,007		;Ignore bells
  9658	014200'	306400	000207		CAIN	T3,207
  9659	014201'	263040	000000		 POPJ	P,
  9660	014202'	261040	000006		PUSH	P,T1
  9661	014203'	261040	000007		PUSH	P,T2
  9662	014204'	355300	774002		AOSGE	T1,MSGLGI	;Increment to new byte position
  9663	014205'	403300	774002		 SETZB	T1,MSGLGI	;(should never exceed 35 bits)
  9664				IFCPU(<KL,KS>),<
  9665	014206'	230300	774001		IDIV	T1,MSGLGS	;Modulo MSGBUF size (remainder in T2)
  9666	014207'	133340	016574'		ADJBP	T2,MSGLGP	;Convert to byte pointer
  9667	014210'	137400	000007		DPB	T3,T2		;Store byte in MSGBUF
  9668				>  ;End if KL,KS
  9669				IFCPU(<KI,F3>),<
  9670					IBP	MSGLGP		;Increment byte pointer
  9671					HRRZ	T2,MSGLGP
  9672					CAIL	T2,MSG777	;If EA has hit end of MSGBUF
  9673					 MOVEI	T2,MSGBUF	; wrap to beginning
  9674					HRRM	T2,MSGLGP
  9675					DPB	T3,MSGLGP	;Store byte in MSGBUF
  9676				>  ;End if KI,F3
  9677	014211'	262040	000007		POP	P,T2
  9678	014212'	262040	000006		POP	P,T1
  9679	014213'	263040	000000		POPJ	P,
  9680
  9681				SUBTTL	CTYCHR - Output 8-bit character to the console teletype
  9682				;Caller is responsible for parity generation and free CRLF at column 80.
  9683				;Returns immediately if caller has waited for output-done to be true.
  9684				ENTRY	CTYCHR			;Called from CTYSIM
  9685
  9686				IFCPU (<KI,F3>),< ;Output to KI/F3 console
  9687				CTYCHR:	CONSZ	TTY,TT.OB	;Wait for Output Busy to go off
  9688					 JRST	.-1		;(no timeout for this hardware flag)
  9689					DATAO	TTY,T3		;Send character as it (all 8 bits)
  9690					POPJ	P,		;The DATAO sets TT.OB in hardware
  9691				
  9692				SVPPC::	POPJ	P,	;There is no other processor to do Keep-Alive on KI,F3
  9693				>;END IFCPU (<KI,F3>)
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 213
SCNSER.MAC	25-JAN-91 22:40		CTYCHR - Output 8-bit character to the console teletype

  9694				PRINTF([Need to make SVPPC work on KS])
  9695
  9696				IFCPU (KS),<	;Output to the KS console via the 8080
  9697				CTYCHR:	HRLM	T3,(P)		;Save character in T3
  9698					MOVSI	T3,1		;Number of times to try
  9699					SKIPE	CTYOWD##	;Previous CTY output done?
  9700					 SOJG	T3,.-1		;No, wait for it
  9701					HLRZ	T3,(P)	
  9702					ANDI	T3,CTYOCH	;Get just the character
  9703					TRO	T3,CTYOVL	;Add the Output Valid flag
  9704					MOVEM	T3,CTYOWD##	;Store in location 33 in low memory
  9705					RDAPR	T3		;Get program states
  9706					ANDI	T3,LP.PIA	;Leave only the PIA
  9707					WRAPR	LP.SSF+LP.I8C(T3);Whap the 8080
  9708					HLRZ	T3,(P)		;Restore char in T3
  9709					POPJ	P,
  9710				
  9711				SVPPC::	JFCL			;Determine if Keep-Alive is active
  9712					PUSH	P,T1		;Save flag on stack
  9713					JFCL			;Disable Keep-Alive checking
  9714					PUSHJ	P,@-1(P)	;Return to caller (co-routine)
  9715					POP	P,T1		;Get flag back
  9716					JFCL			;Resume Keep-Alive if needed
  9717					POP	P,(P)		;Clean up stack
  9718					POPJ	P,		;End of SVPPC
  9719				>  ;End of IFCPU(KS)
  9720
  9721				IFCPU (KL),<	;Output to the KL console via the PDP-11 on the master DTE
  9722	014214'	506401	000000	CTYCHR:	HRLM	T3,(P)		;Save character in T3
  9723	014215'	205400	000001		MOVSI	T3,1		;Number of times to try
  9724	014216'	336000	000455*		SKIPN	EPT##+SPCMTD	;Previous CTY output done?
  9725	014217'	367400	014216'		 SOJG	T3,.-1		;No, wait for it
  9726	014220'	554401	000000		HLRZ	T3,(P)	
  9727	014221'	405400	000377		ANDI	T3,377		;Just 8 bits of character
  9728	014222'	201410	004000		MOVEI	T3,.DTCTO(T3)	;Make DTE command word
  9729	014223'	202400	000451*		MOVEM	T3,EPT##+SPCCMW	;Store in command word
  9730	014224'	402000	000455*		SETZM	EPT##+SPCMTD	;Zero to indicate output not done
  9731	014225'	720200	020000		CONO	DTE,TO11DB	;Ring doorbell
  9732	014226'	554401	000000		HLRZ	T3,(P)		;Restore char in T3
  9733	014227'	263040	000000		POPJ	P,		;SPCMTD will be set nonzero when output done
  9734
  9735				;Routine to save Primary Protocol Condition (See DTESER.703)
  9736				;Called by DIE when processing a STOPCODE.
  9737
  9738	014230'	255000	000000	SVPPC::	JFCL			;Determine if running primary or secondary protocol
  9739	014231'	261040	000006		PUSH	P,T1		;Save flag on stack
  9740				;*;	JSR	SPCINI		;Set to secondary protocol
  9741	014232'	260061	777777		PUSHJ	P,@-1(P)	;Return to caller (co-routine)
  9742	014233'	262040	000006		POP	P,T1		;Get flag back
  9743	014234'	255000	000000		JFCL			;Restart primary protocol if needed
  9744	014235'	262041	000000		POP	P,(P)		;Clean up stack
  9745	014236'	263040	000000		POPJ	P,		;End of SVPPC
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 214
SCNSER.MAC	25-JAN-91 22:40		CTYCHR - Output 8-bit character to the console teletype

  9746				;KL CTY output, continued
  9747
  9748	014237'	000000	000000	SPHNGI:	0	;INSTRUCTION TO XCT IF DTE HANGS UP
  9749	014240'	000000	000000	SPCST1:	0	;FOR SAVING T1
  9750	014241'	000000	000000	SPCTRY:	0	;# OF REMAINING TRIES
  9751			000010	SPCTRN==10	;# TO INIT SPCTRY TO
  9752
  9753	014242'	000000	000000	SPCINI::0			;ENTER SECONDARY PROTOCOL
  9754	014243'	202300	014240'		MOVEM	T1,SPCST1	;SAVE T1
  9755	014244'	200300	017333'		MOVE	T1,[EPT##+SPCDBG,,EPT##+SPCDBG+1]
  9756	014245'	402000	000444*		SETZM	EPT##+SPCDBG
  9757	014246'	251300	000457*		BLT	T1,EPT##+SPCDND	;INIT COMM AREA TO ZEROES
  9758	014247'	700640	014273'		RDPI	SPCCMD		;SAVE PI STATE
  9759	014250'	700600	000400		WRPI	LI.PIF
  9760	014251'	200300	017334'		MOVE	T1,[JSR DTEHLT]
  9761	014252'	202300	000142*		MOVEM	T1,EPT##+EPTDT0+DTEDII
  9762	014253'	202300	014237'		MOVEM	T1,SPHNGI
  9763	014254'	200300	017335'		MOVE	T1,[EPT##+EPTDT0+DTEEPW,,EPT##+EPTDT0+DTEEPW+1]
  9764	014255'	402000	000144*		SETZM	EPT##+EPTDT0+DTEEPW
  9765	014256'	251300	000147*		BLT	T1,EPT##+EPTDT0+DTEDRW
  9766	014257'	720200	001000		CONO	DTE,CL11PT	;CLEAR INTERRUPT JUST IN CASE
  9767	014260'	200300	014273'		MOVE	T1,SPCCMD	;RESTORE PI
  9768	014261'	602300	000200		TRNE	T1,LI.PIN
  9769	014262'	700600	000200		 WRPI	LI.PIN
  9770	014263'	201300	004400		MOVEI	T1,.DTESP
  9771	014264'	264000	014273'		JSR	SPCCMD
  9772	014265'	200300	014240'		MOVE	T1,SPCST1
  9773	014266'	254020	014242'		JRST	@SPCINI
  9774
  9775				;READ SWITCHES.
  9776	014267'	201300	001400	SPCGSW::MOVEI	T1,.DTRSW
  9777	014270'	264000	014273'		JSR	SPCCMD
  9778	014271'	200300	000450*		MOVE	T1,EPT##+SPCF11
  9779	014272'	263040	000000		POPJ	P,
  9780
  9781				;SEND SECONDARY PROTOCOL COMMAND
  9782	014273'	000000	000000	SPCCMD:	0			;JSR HERE
  9783	014274'	402000	000444*		SETZM	EPT##+SPCFLG	;CLEAR FLAG FIRST.
  9784	014275'	202300	000451*		MOVEM	T1,EPT##+SPCCMW	;STUFF COMMAND
  9785	014276'	201300	000010		MOVEI	T1,SPCTRN	;GET # OF TIMES TO TRY
  9786	014277'	202300	014241'		MOVEM	T1,SPCTRY
  9787	014300'	720200	020000	SPCCM1:	CONO	DTE,TO11DB	;RING DOORBELL
  9788	014301'	201300	040000		MOVEI	T1,40000
  9789	014302'	336000	000444*		SKIPN	EPT##+SPCFLG
  9790	014303'	367300	014302'		 SOJG	T1,.-1
  9791	014304'	327320	014273'		JUMPG	T1,@SPCCMD	;WORKED, RETURN.
  9792	014305'	371000	014241'		SOSL	SPCTRY
  9793	014306'	254000	014300'		JRST	SPCCM1
  9794	014307'	256000	014237'		XCT	SPHNGI
  9795
  9796	014310'	000000	000000	DTEHLT:	0
  9797	014311'	256000	000000'		 STOPCD		;;DTEHLT+1
  9798				>;END IFCPU (KL)
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 215
SCNSER.MAC	25-JAN-91 22:40		SETUUO TO SET INITIA ON LINES MARKED

  9799				SUBTTL	SETUUO TO SET INITIA ON LINES MARKED
  9800
  9801	014312'	000000	000000	NOXEXE::0			;Set nonzero by ONCE to not run XEXEC
  9802
  9803	014313'	205300	000001	INISET::MOVSI	T1,(STAUTO)	;Enter here from UUOCON (DSKCLN does this)
  9804	014314'	616300	006723*		TDNN	T1,STATES	;Check if still in auto-restart mode
  9805	014315'	263040	000000		 POPJ	P,		;Don't do this more than once
  9806	014316'	201240	000105'		MOVEI	U,CTYLDB	;Output to the CTY
  9807	014317'	332000	014312'		SKIPE	NOXEXE		;If set to not run XEXEC,
  9808					 JRST	[MOVEI T1,STSUPR   ;Change super-shut (600000)
  9809						 ANDCAM T1,STATES  ; to shut (400000) so OPER can login
  9810						 SETZM NOXEXE	   ;Allow INITIA to be run later
  9811						 MOVEI T1,[ASCIZ /INITIALIZATION complete
  9812				please log in: /]
  9813	014320'	254000	017347'			 PJRST CONMES##]
  9814					MOVEI	T1,[ASCIZ /SETUUO forcing INITIA on TTY1,TTY2,TTY3,TTY4,TTY5
  9815	014321'	201300	017354'	/]
  9816	014322'	260040	002062*		PUSHJ	P,CONMES##	;TELL OPERATOR WHAT IS HAPPENING
  9817	014323'	205700	000000*		MOVSI	P3,-PORTN##	;CHECK ALL LINES
  9818	014324'	200256	012546*	INISLP:	MOVE	U,LINTAB(P3)
  9819	014325'	336005	000026		SKIPN	LDBLOG(U)	;NOT IF LOGGED IN
  9820	014326'	607240	000000*		TLNN	U,TTVIN2	;OR NOT MARKED
  9821	014327'	254000	014345'		 JRST	INISL2
  9822	014330'	200340	017367'		MOVE	T2,[LLLNLN,,LDLCOM]	;FOR LDBLOG AND LDBDCH
  9823	014331'	512345	000026		HLLZM	T2,LDBLOG(U)	;MARK IN (BUT UNKNOWN TO THE BASE)
  9824	014332'	516345	000031		HRLZM	T2,LDBDCH(U)	;AND COMMAND MODE
  9825	014333'	200300	010002*		MOVE	T1,SYSNUM##	;Our host number
  9826	014334'	137300	000160'		DPB	T1,LDPHST	; for job running INITIA part 2 (XEXEC)
  9827	014335'	402005	000032		SETZM	LDBDCX(U)	;NO EXTENDED BITS ON
  9828	014336'	260040	007622'		PUSHJ	P,SETLMD
  9829	014337'	260040	002050*		PUSHJ	P,FRMASN##	;Assign a frame slot
  9830	014340'	263040	000000		  POPJ	P,		;None there? Quit loop now, why bother?
  9831	014341'	260040	015206'		PUSHJ	P,TTYATI	;Attach TTY DDB to this LDB
  9832	014342'	324740	002063*		  PJRST	FRMKJF##	;No DDB's - free up frame slot,kill TTY
  9833	014343'	201300	000000*		MOVEI	T1,CMFCXI##
  9834	014344'	260040	013565'		PUSHJ	P,TTFORC	;MARK FORCED COMMAND
  9835	014345'	253700	014324'	INISL2:	AOBJN	P3,INISLP
  9836	014346'	254000	014061*		JRST	CPOPJ1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 216
SCNSER.MAC	25-JAN-91 22:40		SOME ROUTINES TO FIND TELETYPES FOR VARIOUS PURPOSES

  9837				SUBTTL	SOME ROUTINES TO FIND TELETYPES FOR VARIOUS PURPOSES
  9838
  9839				;SUBROUTINE TO FIND TTY FOR A JOB IN J (TTYFND) OR FOR
  9840				; CURRENT JOB (TTYFNU)
  9841				;RETURN WITH F AND U SET UP.
  9842				;GOES TO ERROR IF NO TTY F FOR THE JOB.
  9843
  9844	014347'	200100	012772*	TTYFNU::MOVE	J,JOB		;GET CURRENT UUO LEVEL JOB NUMBER
  9845	014350'	260040	014353'	TTYFND::PUSHJ	P,TTYSRC	;FIND THE JOB'S TTY F, ALSO U AND S
  9846	014351'	256000	000000'		 STOPCD 		;JOB ZERO, OR OTHERWISE NO DDB. COMPLAIN.
  9847	014352'	263040	000000		POPJ	P,0		;SUCCESS. RETURN.
  9848
  9849				;ROUTINE TO FIND A TTY F WHICH IS ATTACHED TO, I.E.
  9850				;CONTROLLING, A PARTICULAR JOB NUMBER.
  9851
  9852				;CALLED AT COMMAND LEVEL BY ATTACH COMMAND, AND AT M LEVEL
  9853				;BY REFERENCES TO DEVICE "TTY" OR TTCALLS, ETC.
  9854
  9855				;CALL:	MOVE J,JOB NUMBER DESIRED
  9856				;	PUSHJ P,TTYSRC
  9857				;	  ERROR RETURN.	;NOT FOUND. AC'S U,F,S NOT GUARANTEED
  9858				;	NORMAL RETURN	;U, S AND F SET UP. NOTE THAT THIS DOES
  9859				;			;!NOT! IMPLY THAT ANYONE IS ATTACHED. THAT IS,
  9860				;			; U MAY CONTAIN A ZERO
  9861
  9862
  9863	014353'	322100	014124*	TTYSRC::JUMPE	J,CPOPJ		;NOBODY CONTROLS JOB ZERO. YOU ARE CONFUSED.
  9864	014354'	550202	011670*		HRRZ	F,TTYTAB(J)	;REALLY MUST BE HERE
  9865	014355'	322200	014353*		JUMPE	F,CPOPJ
  9866	014356'	550244	000013		HRRZ	U,DDBLDB(F)
  9867	014357'	200004	000002		MOVE	S,DEVIOS(F)	;SET UP I/O STATUS AND LINE
  9868	014360'	254000	014346*		JRST	CPOPJ1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 217
SCNSER.MAC	25-JAN-91 22:40		SUBROUTINE TTYERP TO FIND TTY DDB FOR A MONITOR ERROR MSG

  9869				SUBTTL	SUBROUTINE TTYERP TO FIND TTY DDB FOR A MONITOR ERROR MSG
  9870				;CALL WITH J SET TO JOB NUMBER. IF JOB IS ZERO OR JOB
  9871				;IS DETACHED USER OPRLDB. IF NOT EVEN THAT IS THERE,
  9872				;GIVE RETURN. NORMAL RETURN IS SKIP.  (called from ERRCON)
  9873
  9874	014361'	260040	014353'	TTYERP::PUSHJ	P,TTYSRC	;FIND DDB OF JOB'S TTY (SET F, U, AND S)
  9875	014362'	254000	014364'		  JRST	GETCTY		;CAN'T FIND IT
  9876	014363'	326240	014360*		JUMPN	U,CPOPJ1	;SKIP RETURN IF ATTACHED
  9877								;Nonskip means should use OPROUT with 2
  9878
  9879				;GETCTY USED BY PICON TO REPORT PARITY ERROR IN USER CORE
  9880				;Output buffer flushed if too many messages queued up.
  9881				;Changes U and F only.
  9882
  9883	014364'	201240	000105'	GETCTY::MOVEI	U,CTYLDB	;GET CTY'S LDB
  9884	014365'	261040	000006		PUSH	P,T1
  9885	014366'	261040	000007		PUSH	P,T2
  9886	014367'	200305	000021		MOVE	T1,LDBTOC(U)	;CHECK CURRENT COUNT
  9887	014370'	303300	000214		CAILE	T1,^D140
  9888	014371'	260040	006324'		 PUSHJ	P,TSETBO	;TOO BIG, CLEAR
  9889	014372'	262040	000007		POP	P,T2
  9890	014373'	262040	000006		POP	P,T1
  9891	014374'	550205	000000		HRRZ	F,LDBDDB(U)
  9892	014375'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 218
SCNSER.MAC	25-JAN-91 22:40		FIND A USER AND WAIT FOR ATTACH OR OUTPUT WAIT TO FINISH

  9893				SUBTTL	FIND A USER AND WAIT FOR ATTACH OR OUTPUT WAIT TO FINISH
  9894
  9895	014376'	260040	014347'	TTYFUW::PUSHJ P,TTYFNU
  9896	014377'	260040	013141'	TTYFW1:	PUSHJ P,CKATTF		;WAIT FOR ATTACH
  9897	014400'	200305	000021		MOVE T1,LDBTOC(U)	;HAVE TO PUT IT IN HERE SO
  9898	014401'	307300	000010		CAIG T1,10		;DOES OT CALL SCNINT
  9899	014402'	263040	000000		POPJ P,
  9900	014403'	200000	017370'	TOWATA:	MOVE S,[XWD TTYOUW+IO+TIOUSE,IOACT]
  9901	014404'	437004	000002		IORB S,DEVIOS(F)
  9902	014405'	261040	000014		PUSH P,P1
  9903	014406'	261040	000015		PUSH P,P2
  9904	014407'	260040	013502*		PUSHJ P,WSYNC
  9905	014410'	262040	000015		POP P,P2
  9906	014411'	262040	000014		POP P,P1
  9907	014412'	205000	020000		MOVSI S,TIOUSE
  9908	014413'	413004	000002		ANDCAB S,DEVIOS(F)
  9909	014414'	263040	000000		POPJ P,
  9910
  9911	014415'	200000	017322'	TTYSOW::MOVE S,[XWD TTYOUW+IO,IOACT]
  9912	014416'	437004	000002		IORB S,DEVIOS(F)
  9913	014417'	263040	000000		POPJ P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 219
SCNSER.MAC	25-JAN-91 22:40		SUBROUTINE TO FIND LDB FOR A PHYSICAL NAME, IF ITS A TTY

  9914				SUBTTL	SUBROUTINE TO FIND LDB FOR A PHYSICAL NAME, IF ITS A TTY
  9915				;AND LOAD F WITH LINKED DATA BLOCK, IF ANY, BUT DONT MAKE ONE IF NONE YET
  9916				;SKIP RETURN IF ITS A TTY
  9917
  9918	014420'	316300	017371'	TTYPHY::CAMN	T1,[SIXBIT /OPR/]	;TALK TO OPERATOR?
  9919	014421'	200300	004426*		 MOVE	T1,DEVOPR		;YES. GET REAL DEVICE NAME
  9920	014422'	510240	000006		HLLZ	U,T1			;GET FIRST THREE CHARACTERS
  9921	014423'	316240	017372'		CAMN	U,[SIXBIT /TTY/]	;ARE THEY TTY?
  9922	014424'	606300	770000		TRNN	T1,770000		;AND ALSO IS FOURTH CHAR NON-BLANK?
  9923	014425'	263040	000000		 POPJ	P,			;NO. NOT A LEGAL NAME.
  9924	014426'	261040	000006		PUSH	P,T1			;YES. MAY BE LEGAL.
  9925	014427'	517001	000000		HRLZS	0(P)			;PUT THE RIGHT THREE CHARS ON STACK
  9926	014430'	261040	017373'		PUSH	P,[POINT 6,-1(P)]	;POINTER TO READ CHARS
  9927	014431'	201240	000000		MOVEI	U,0			;INITIALIZE U TO 0
  9928	014432'	134301	000000	TTYPH4:	ILDB	T1,0(P)			;GET A SIXBIT CHARACTER FROM NAME
  9929	014433'	322300	014444'		JUMPE	T1,TTYPH2		;JUMP IF END OF NAME.
  9930	014434'	640300	000020		TRC	T1,'0'			;CONVERT SIXBIT TO BINARY
  9931	014435'	303300	000007		CAILE	T1,7			;IS IT AN OCTAL DIGIT?
  9932	014436'	254000	014442'		 JRST	TTYPH3			;NO. BAD CHAR IN NAME
  9933	014437'	240240	000003		ASH	U,3			;MULTIPLY BY 8
  9934	014440'	271246	000000		ADDI	U,0(T1)			;ADD IN THIS DIGIT
  9935	014441'	254000	014432'		JRST	TTYPH4			;LOOP FOR MORE DIGITS
  9936
  9937	014442'	262040	000006	TTYPH3:	POP	P,T1			;HERE ON BAD CHAR. CLEAR OUT STACK
  9938	014443'	254000	014121*		JRST	TPOPJ			;AND RETURN TO ERR RET
  9939
  9940	014444'	262040	000006	TTYPH2:	POP	P,T1			;HAVE AN OCTAL NUMBER. DISCARD
  9941	014445'	262040	000006		POP	P,T1			; TWO ITEMS FROM STACK
  9942	014446'	301240	000000*		CAIL	U,PORTN##		;IS IT A LEGAL HARDWARE LINE #
  9943	014447'	263040	000000		 POPJ	P,			;NO. TOO BAD.
  9944	014450'	550245	014324*		HRRZ	U,LINTAB(U)		;GET LINE DATA BLOCK ADDRESS
  9945	014451'	550205	000000		HRRZ	F,LDBDDB(U)		;GET ATTACHED F, IF ANY.
  9946	014452'	254000	014363*		JRST	CPOPJ1			;GOOD RETURN
  9947
  9948				;ROUTINE TO GET A DDB. CALLED IN DEVSRCH ROUTINES
  9949
  9950	014453'	260040	014420'	GETDDB::PUSHJ	P,TTYPHY	;FIND THE TELETYPE BY NUMBER
  9951	014454'	263040	000000		  POPJ	P,		;NOT A REAL TTY
  9952	014455'	322200	014355*		JUMPE	F,CPOPJ		;NOT REALLY THERE YET
  9953	014456'	200304	000000		MOVE	T1,DEVNAM(F)	;IF SOMEONE ELSES WILL BE
  9954	014457'	254000	014452*		JRST	CPOPJ1		;ASSIGNED BY CONSOLE SO CAN'T HAVE IT ANYWAY
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 220
SCNSER.MAC	25-JAN-91 22:40		SUBROUTINE TO PUT PHYSICAL NAME INTO T2 FOR LINE WHOSE LDB IS IN U

  9955				SUBTTL	SUBROUTINE TO PUT PHYSICAL NAME INTO T2 FOR LINE WHOSE LDB IS IN U
  9956				;EVEN THOUGH THERE MAY BE NOTHING IN F OR LDBDDB
  9957
  9958	014460'	135300	000157'	TTYNAM::LDB	T1,LDPLNO		;GET LINE NUMBER
  9959	014461'	261040	017372'		PUSH	P,[SIXBIT /TTY/]	;PUT NAME ON STACK
  9960	014462'	201401	000000		MOVEI	T3,0(P)			;PREPARE ARG FOR SCNNMR
  9961	014463'	505400	220600		HRLI	T3,220600		;POINT 6,0,17
  9962	014464'	260040	014467'		PUSHJ	P,SCNNMR		;AND CALL SAME ROUTINE AS SCNNAM DOES
  9963	014465'	262040	000007		POP	P,T2			;PUT ANSWER IN T2
  9964	014466'	263040	000000		POPJ	P,			;AND RETURN FROM TTYNAM
  9965
  9966				;SUBSIDIARY ROUTINE TO DO RADIX PRINT TO CORE.
  9967
  9968	014467'	231300	000010	SCNNMR:	IDIVI	T1,10			;DEVICE NAMES ARE OCTAL
  9969	014470'	506341	000000		HRLM	T1+1,0(P)		;STORE A DIGIT ON STACK
  9970	014471'	332000	000006		SKIPE	T1			;NEED MORE DIGITS?
  9971	014472'	260040	014467'		 PUSHJ	P,SCNNMR		;YES. GO MAKE THEM.
  9972	014473'	554301	000000		HLRZ	T1,0(P)			;RETRIEVE A DIGIT FROM STACK
  9973	014474'	271300	000020		ADDI	T1,'0'			;CONVERT TO SIXBIT
  9974	014475'	136300	000010		IDPB	T1,T3			;STORE IN OBJECT WORD (DEVNAM)
  9975	014476'	263040	000000		POPJ	P,0			;POP UP TO SCNNMR OR BACK TO SCNNAM
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 221
SCNSER.MAC	25-JAN-91 22:40		SETUUO OUTPUT MESSAGE TO OPR TTY & CTY *BOTH*, IF POSSIBLE.

  9976				SUBTTL	SETUUO OUTPUT MESSAGE TO OPR TTY & CTY *BOTH*, IF POSSIBLE.
  9977				;OTHERWISE JUST TO CTY.
  9978
  9979	014477'	550540	000006	OPRSND::HRRZ	M,T1
  9980	014500'	505540	440700		HRLI	M,(POINT 7,0)
  9981	014501'	336240	016405'	OPRSN2:	SKIPN	U,OPRLDB	;GET OPR
  9982	014502'	201240	000105'		 MOVEI	U,CTYLDB	;NONE, GO TO CTY ONLY
  9983	014503'	200305	000021		MOVE	T1,LDBTOC(U)
  9984	014504'	434300	000126'		IOR	T1,CTYLDB+LDBTOC;WAIT IF EITHER OPR TTY OR CTY
  9985	014505'	326300	014520'		JUMPN	T1,OPRWAT	;IS BUSY (OUTPUT BUFF NOT-EMPTY)
  9986								;UNWAIT WHEN ONE OR THE OTHER
  9987								;BECOMES EMPTY
  9988	014506'	256040	017076'	OPSND1:	XCTFU	<ILDB T3,M>
  9989	014507'	322400	014457*		JUMPE	T3,CPOPJ1	;DONE
  9990	014510'	260040	013611'		PUSHJ	P,CCTYO		;SAME OUTPUT RESTRICTIONS AS COMMAND
  9991	014511'	336000	016405'		SKIPN	OPRLDB		;SKIP IF GOING TO BOTH
  9992	014512'	254000	014506'		 JRST	OPSND1		;JUST TO CTY, ALREADY DONE
  9993	014513'	201240	000105'		MOVEI	U,CTYLDB
  9994	014514'	256040	017374'		XCTFU	<LDB T3,M>	;GET SAME CHAR JUST SENT,
  9995	014515'	260040	013611'		PUSHJ	P,CCTYO		;& PUT IT ON CTY
  9996	014516'	200240	016405'		MOVE	U,OPRLDB	;RESTORE U
  9997	014517'	254000	014506'		JRST	OPSND1
  9998
  9999	014520'	201300	012313*	OPRWAT:	MOVEI	T1,MLOWQ	;WAIT FOR OPR BUFFER TO EMPTY
 10000	014521'	137300	012314*		DPB	T1,PJBSTS##	;SET TO MON WAIT QUE
 10001	014522'	550300	016474'		HRRZ	T1,OPRWJB	;GET WAITING JOB IF ANY
 10002	014523'	202302	000000*		MOVEM	T1,QUEPCB(J)	;PUT ON QUE
 10003	014524'	552100	016474'		HRRZM	J,OPRWJB	;AND SET CURRENT
 10004	014525'	260040	012315*		PUSHJ	P,WSCHED
 10005	014526'	254000	014501'		JRST	OPRSN2		;RESTARTED. ONE OF THEM JUST BECAME
 10006								;FREE. GO CHECK AGAIN MAKE SURE BOTH FREE.
 10007
 10008				;Here when the OPR terminal is free to do more output
 10009				;Uses T1 and T2 only
 10010
 10011	014527'	336340	016474'	OPRFRE::SKIPN	T2,OPRWJB
 10012	014530'	263040	000000		 POPJ	P,		;NONE WAITING
 10013	014531'	402000	016474'		SETZM	OPRWJB		;RESTART ALL WAITERS
 10014	014532'	261040	000002		PUSH	P,J
 10015	014533'	200100	000007	OPRFR1:	MOVE	J,T2
 10016	014534'	201300	011356*		MOVEI	T1,RNQ
 10017	014535'	137300	014521*		DPB	T1,PJBSTS##
 10018	014536'	260040	013731*		PUSHJ	P,SETRUN
 10019	014537'	550342	014523*		HRRZ	T2,QUEPCB(J)
 10020	014540'	402002	014537*		SETZM	QUEPCB(J)	;ZERO OLD ENTRY
 10021	014541'	326340	014533'		JUMPN	T2,OPRFR1	;ANY MORE?
 10022	014542'	262040	000002		POP	P,J
 10023	014543'	263040	000000		POPJ	P,		;DONE
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 222
SCNSER.MAC	25-JAN-91 22:40		SUBROUTINE FOR THE TTY COMMAND

 10024				SUBTTL	SUBROUTINE FOR THE TTY COMMAND
 10025
 10026				;ON ENTRY P1 HAS LDB TO DO THINGS FOR, T2 HAS COMMAND
 10027
 10028	014544'	205300	777743	SCNTCD::MOVSI	T1,-TTCWDN	;GET LENGTH OF COMMAND TABLE
 10029	014545'	312346	014552'		CAME	T2,TTCWDT(T1)
 10030	014546'	253300	014545'		 AOBJN	T1,.-1
 10031	014547'	327300	014507*		JUMPG	T1,CPOPJ1	;NOT FOUND, TAKE ERROR RETURN
 10032	014550'	550346	014607'		HRRZ	T2,TTCWDD(T1)	;GET DISPATCH
 10033	014551'	254007	000000		JRST	(T2)		;AND GO
 10034
 10035
 10036	014552'	565700	000000	TTCWDT:	SIXBIT /NO/
 10037	014553'	644142	000000	TTYTBL::SIXBIT /TAB/
 10038	014554'	465762	550000		SIXBIT /FORM/
 10039	014555'	544300	000000		SIXBIT /LC/
 10040	014556'	465154	540000		SIXBIT /FILL/
 10041	014557'	454350	570000		SIXBIT /ECHO/
 10042	014560'	436254	460000		SIXBIT /CRLF/
 10043	014561'	675144	645000		SIXBIT /WIDTH/
 10044	014562'	705756	000000		SIXBIT /XON/
 10045	014563'	644160	450000		SIXBIT /TAPE/
 10046	014564'	465154	542100		SIXBIT /FILL1/
 10047	014565'	465154	542200		SIXBIT /FILL2/
 10048	014566'	515600	000000		SIXBIT /IN/
 10049	014567'	576564	000000		SIXBIT /OUT/
 10050	014570'	410000	000000		SIXBIT /A/
 10051	014571'	420000	000000		SIXBIT /B/
 10052	014572'	430000	000000		SIXBIT /C/
 10053	014573'	440000	000000		SIXBIT /D/		;Was /TYPE/
 10054	014574'	424143	536360		<SIXBIT /BACKSPACE/>
 10055	014575'	456241	634500		SIXBIT /ERASE/
 10056	014576'	627045	000000		SIXBIT /RXE/
 10057	014577'	444546	000000		SIXBIT /DEF/
 10058	014600'	654357	000000		SIXBIT /UCO/
 10059	014601'	426344	000000		SIXBIT /BSD/
 10060	014602'	624263	000000		SIXBIT /RBS/
 10061	014603'	435441	636300		SIXBIT /CLASS/		; [dws]
 10062	014604'	626443	575560		SIXBIT /RTCOMP/		;[Darren]
 10063	014605'	534164	415341		SIXBIT /KATAKA/		;KATAKANA (JIS-8 ASCII) mode
 10064	014606'	647160	450000		SIXBIT /TYPE/		;Type of terminal
 10065			000035	TTCWDN==.-TTCWDT
 10066			033000	TTYMXL==:<TTCWDN-1-1>_^D9
 10067
 10068	014607'	000000	014644'	TTCWDD:	XWD 0,TTCNO		;LH MAY HAVE A BIT TO SET/RESET
 10069	014610'	000024	014647'		XWD TCNTAB,TTCSET
 10070	014611'	000025	014647'		XWD TCNFRM,TTCSET
 10071	014612'	000026	014646'		XWD TCNLCT,TTCCLR
 10072	014613'	000000	014731'		XWD 0,TTCFIL
 10073	014614'	000004	014646'		XWD TCNHDX,TTCCLR
 10074	014615'	000027	014646'		XWD TCNNFC,TTCCLR
 10075	014616'	000015	014662'		XWD TCNWID,TTCVAL
 10076	014617'	000030	014647'		XWD TCNPTP,TTCSET
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 222-2
SCNSER.MAC	25-JAN-91 22:40		SUBROUTINE FOR THE TTY COMMAND

 10077	014620'	000030	014647'		XWD TCNPTP,TTCSET
 10078	014621'	000016	014662'		XWD TCNFC1,TTCVAL
 10079	014622'	000017	014662'		XWD TCNFC2,TTCVAL
 10080	014623'	000001	014662'		XWD TCNIR,TTCVAL
 10081	014624'	000002	014662'		XWD TCNOR,TTCVAL
 10082	014625'	000005	014662'		XWD TCNPA,TTCVAL
 10083	014626'	000006	014662'		XWD TCNPB,TTCVAL
 10084	014627'	000007	014662'		XWD TCNPC,TTCVAL
 10085	014630'	000013	014662'		XWD TCNPD,TTCVAL	;Parameter D (formerly TCNTYP)
 10086	014631'	000020	014647'		XWD TCNBSP,TTCSET
 10087	014632'	000021	014647'		XWD TCNERA,TTCSET
 10088	014633'	000012	014647'		XWD TCNRXE,TTCSET
 10089	014634'	000022	014647'		XWD TCNDEF,TTCSET
 10090	014635'	000023	014646'		XWD TCNLCO,TTCCLR
 10091	014636'	000031	014647'		XWD TCNBSD,TTCSET
 10092	014637'	000011	014647'		XWD TCNECH,TTCSET
 10093	014640'	000032	014676'		XWD TCNCLA,TTCSIX	;Class
 10094	014641'	000033	014647'		XWD TCNRTC,TTCSET	;RTcompatibility
 10095	014642'	000034	014647'		XWD TCNKAT,TTCSET	;Katakana mode
 10096	014643'	000035	014704'		XWD TCNTYP,TTCTYP	;TYPE is a number or a sixbit value
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 223
SCNSER.MAC	25-JAN-91 22:40		SET TTY routines

 10097				SUBTTL	SET TTY routines
 10098
 10099	014644'	641600	777777	TTCNO:	TLC	P1, -1		;COMPLEMENT YES-NO FLAG
 10100	014645'	263040	000000		POPJ	P,
 10101
 10102				;BIT-VALUED CHARACTERISTICS
 10103
 10104	014646'	641600	777777	TTCCLR:	TLC	P1,-1		;OPPOSITE OF SET
 10105	014647'	554306	014607'	TTCSET:	HLRZ	T1,TTCWDD(T1)	;T1/ TC# FOR SETTCN
 10106	014650'	321600	014655'		JUMPL	P1,TTCDO1	;RESETTING THE BIT
 10107	014651'	201340	000001		MOVEI	T2,1
 10108	014652'	260040	014721'		PUSHJ	P,TTCGO
 10109	014653'	350001	000000		  AOS	(P)
 10110	014654'	263040	000000		POPJ	P,
 10111	014655'	400340	000000	TTCDO1:	SETZ	T2,
 10112	014656'	260040	014721'		PUSHJ	P,TTCGO
 10113	014657'	350001	000000		  AOS (P)
 10114	014660'	553000	000014	TTCFIN:	HRRZS	P1		;Clear "NO" flag
 10115	014661'	263040	000000		POPJ	P,
 10116
 10117				;DECIMAL-VALUED CHARACTERISTICS
 10118
 10119	014662'	261040	000006	TTCVAL:	PUSH	P,T1
 10120	014663'	321600	014670'		JUMPL	P1,TTCVL0	;"NO" = 0
 10121	014664'	260040	000000*		PUSHJ	P,DECIN1##	;T2 := DECIMAL NUMBER
 10122	014665'	254000	013553*		  JRST	TPOPJ1	
 10123	014666'	254000	014665*		  JRST	TPOPJ1		;NO NUMBER OR BAD NUMBER
 10124	014667'	254000	014671'		JRST	TTCVL1
 10125	014670'	400340	000000	TTCVL0:	SETZ	T2,
 10126	014671'	262040	000006	TTCVL1:	POP	P,T1		;T1/ VALUE FROM DISPATCH
 10127	014672'	554306	014607'	TTCVL2:	HLRZ	T1,TTCWDD(T1)	;T1/ TC# FOR SETTCN
 10128	014673'	260040	014721'	TTCVL3:	PUSHJ	P,TTCGO
 10129	014674'	350001	000000		  AOS	(P)
 10130	014675'	263040	000000		POPJ	P,
 10131
 10132				;[dws] Sixbit-valued characteristics
 10133
 10134	014676'	261040	000006	TTCSIX:	PUSH	P,T1		; save T1
 10135	014677'	335000	000014		SKIPGE	P1		; skip if "No" not seen
 10136	014700'	634340	000007		 TDZA	T2,T2		;  "No" = blanks
 10137	014701'	260040	000000*		PUSHJ	P,CTEXT1##	; T2 := sixbit text
 10138	014702'	262040	000006		POP	P,T1		; T1/ value from dispatch
 10139	014703'	254000	014672'		JRST	TTCVL2		; Go set it
 10140
 10141				;Treat SET TTY TYPE specially for Japanese customers
 10142
 10143	014704'	261040	000006	TTCTYP:	PUSH	P,T1		; save T1
 10144	014705'	335000	000014		SKIPGE	P1		; skip if "No" not seen
 10145	014706'	634340	000007		 TDZA	T2,T2		;  "No" = blanks
 10146	014707'	260040	014701*		PUSHJ	P,CTEXT1##	; T2 := sixbit text
 10147	014710'	262040	000006		POP	P,T1		; T1/ value from dispatch
 10148	014711'	312340	017375'		CAME	T2,[SIXBIT /0/]	;Old "TTY TYPE 0" command?
 10149	014712'	316340	017376'		CAMN	T2,[SIXBIT /1/]	;Old "TTY TYPE 1" command?
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 223-2
SCNSER.MAC	25-JAN-91 22:40		SET TTY routines

 10150	014713'	334000	000000		 SKIPA			;Yes
 10151	014714'	254000	014672'		  JRST	TTCVL2		;No, just store value
 10152	014715'	242340	777742		LSH	T2,^D<5-35>	;Yes, right justify number
 10153	014716'	405340	000007		ANDI	T2,7		;Keep as 0 or 1
 10154	014717'	201300	000013		MOVEI	T1,TCNPD	;Act like "SET TTY D 1" command
 10155	014720'	254000	014673'		JRST	TTCVL3		;Go set parameter "D" for KATAKANA
 10156
 10157	014721'	261040	000005	TTCGO:	PUSH	P,U		;T1/ TCNxxx (PDP-10 TC number)
 10158	014722'	540240	000014		HRR	U,P1		;U/ LDB ADDR
 10159	014723'	500245	000031		HLL	U,LDBDCH(U)
 10160	014724'	260040	010376'		PUSHJ	P,SETTC1	;GO SET THE TC
 10161	014725'	254000	014727'		  JRST	.+2
 10162	014726'	350001	777777		AOS	-1(P)		;TRANSFER THE SKIP-RETURN
 10163	014727'	262040	000005		POP	P,U
 10164	014730'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 224
SCNSER.MAC	25-JAN-91 22:40		FOR OLD TIME'S SAKE (SET FC1 AND FC2 FROM THE SAME VALUE)

 10165				SUBTTL	FOR OLD TIME'S SAKE (SET FC1 AND FC2 FROM THE SAME VALUE)
 10166
 10167	014731'	321600	014736'	TTCFIL:	JUMPL	P1,TTCFL0
 10168	014732'	260040	014664*		PUSHJ	P,DECIN1##
 10169	014733'	254000	014547*		  JRST	CPOPJ1
 10170	014734'	254000	014733*		  JRST	CPOPJ1
 10171	014735'	254000	014737'		JRST	TTCFL1
 10172	014736'	400340	000000	TTCFL0:	SETZ	T2,
 10173	014737'	201300	000016	TTCFL1:	MOVEI	T1, TCNFC1
 10174	014740'	260040	014721'		PUSHJ	P, TTCGO
 10175	014741'	254000	014734*		  JRST	CPOPJ1
 10176	014742'	201300	000017		MOVEI	T1, TCNFC2
 10177	014743'	260040	014721'		PUSHJ	P, TTCGO
 10178	014744'	350001	000000		  AOS	(P)
 10179	014745'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 225
SCNSER.MAC	25-JAN-91 22:40		CALLED FROM COMCON TO SET TO SEND SHUT OR ANSWERED MESSAGE

 10180				SUBTTL	CALLED FROM COMCON TO SET TO SEND SHUT OR ANSWERED MESSAGE
 10181
 10182	014746'	205300	004000	SETSHT::MOVSI	T1,TYPI TYPSHT	;SET TO SAY SHUT
 10183	014747'	201340	400000		MOVEI	T2,STSHUT	;400000
 10184	014750'	616340	014314*		TDNN	T2,STATES	;IS THAT THE STATE
 10185	014751'	205300	002000		 MOVSI	T1,TYPI TYPANS	;YES, SO SAY ANSWERED
 10186	014752'	202300	016406'		MOVEM	T1,UPSHUT
 10187	014753'	616340	014750*		TDNN	T2,STATES	;UP OR DOWN?
 10188	014754'	254000	014761'		 JRST	CKOPR		;UP, SEE IF DEVOPR SET
 10189	014755'	402000	016413'		SETZM	OPRTIM		;DOWN, TURN OFF TIMER
 10190	014756'	201340	000020		MOVEI	T2,ALROPR
 10191	014757'	412340	005664*		ANDCAM	T2,ALR620	;AND ALARM
 10192	014760'	263040	000000		POPJ	P,
 10193
 10194	014761'	332000	014421*	CKOPR:	SKIPE	DEVOPR
 10195	014762'	263040	000000		 POPJ	P,		;DEVOPR SET, ALL OK
 10196	014763'	201340	000132		MOVEI	T2,^D90		;SET FOR 90 SEC TILL ALARM
 10197	014764'	202340	016413'		MOVEM	T2,OPRTIM
 10198	014765'	263040	000000		POPJ	P,
 10199
 10200				;CALLED TO SEE IF WAITING FOR LOGOUT SO CAN NOT SET JACCT2
 10201
 10202	014766'	550202	014354*	CKLGO::	HRRZ F,TTYTAB(J)
 10203	014767'	322200	014741*		JUMPE F,CPOPJ1		;NO DDB, SAY OK TO SET
 10204	014770'	550244	000013		HRRZ U,DDBLDB(F)
 10205	014771'	322240	014767*		JUMPE U,CPOPJ1		;NO LINE, CAN NOT BE WAITING
 10206	014772'	205440	200000		MOVSI T4,LLLZAP
 10207	014773'	616445	000026		TDNN T4,LDBLOG(U)	;SEE IF ZAPPER RECEIVED FLAG SET
 10208	014774'	350001	000000		 AOS (P)		;NO, OK
 10209	014775'	263040	000000		POPJ P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 226
SCNSER.MAC	25-JAN-91 22:40		SEND A SAD MESSGE

 10210				SUBTTL	SEND A SAD MESSGE
 10211
 10212	014776'	200300	014757*	SNDSAD:	MOVE	T1,ALR620
 10213	014777'	316300	016425'		CAMN	T1,ALRSNT
 10214	015000'	254000	014771*		  JRST	CPOPJ1		;NOT SENT
 10215	015001'	261040	000006		PUSH	P,T1		;SAVE T1 FROM BEING CLOBBERED.
 10216	015002'	260040	004114'		PUSHJ	P,CLSCHR	;FINISH UP CHARACTER OUTPUT.
 10217	015003'	254000	014443*		 JRST	TPOPJ		;NO MORE ROOM.
 10218	015004'	200340	012537*		MOVE	T2,ORPPDP	;PICK UP THE OUTPUT RING POINTER.
 10219	015005'	271340	000002		ADDI	T2,2		;THIS OPERATION REQUIRES 2 WORDS.
 10220	015006'	405340	011476*		ANDI	T2,MSKORG	;MASK FOR WRAP AROUND.
 10221	015007'	316340	004576*		CAMN	T2,ORP620	;MAKE SURE THERE'S ROOM.
 10222	015010'	254000	015003*		  JRST	TPOPJ		;NO MORE ROOM.  FINISH SCANNING LINE.
 10223	015011'	262040	000006		POP	P,T1		;RESTORE T1
 10224	015012'	202300	016425'		MOVEM	T1,ALRSNT	;SAY WE SENT THAT ONE
 10225	015013'	205700	066000		MOVSI	P3,TYPI TYPSAD
 10226	015014'	135300	017377'		LDB	T1,[POINT 16,ALR620,15]
 10227	015015'	137300	016751'		DPB	T1,[POINT 16,P3,BYP4]
 10228	015016'	202717	011471*		MOVEM	P3,ORING(P4)
 10229	015017'	260040	016267'		PUSHJ	P,ORPLOG	;Put message into ORING log
 10230	015020'	271740	000001		ADDI	P4,1
 10231	015021'	405740	015006*		ANDI	P4,MSKORG	;POINT TO CORRECT LOCATION (POSSIBLE WRAP)
 10232	015022'	135300	017400'		LDB	T1,[POINT 16,ALR620,31]
 10233	015023'	137300	017401'		DPB	T1,[POINT 16,P3,BYP2]
 10234	015024'	260040	004200'		PUSHJ	P,WRDOT2	;WRITE 2ND WORD AND CLEAN UP
 10235	015025'	263040	000000		  POPJ	P,		;NO MORE ROOM.  CALL FINOUT.
 10236	015026'	254000	015000*		JRST	CPOPJ1		;CONTINUE SCAN.
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 227
SCNSER.MAC	25-JAN-91 22:40		ATTACH/DETACH

 10237				SUBTTL ATTACH/DETACH
 10238
 10239				;TTYKIL - ACTUALLY TWO ROUTINES
 10240				;
 10241				;1)	CALLED WITH F/ 0, U/ LDB ADDR TO ZAP LINE WHENEVER A
 10242				;	COMMAND HAS JUST BEEN FORCED ON A NON-JOB (E.G.,
 10243				;	WHEN JOB CAPACITY IS EXCEEDED), AND, BY SOME QUIRK
 10244				;	OF FATE, AFTER EVERY DETACH COMMAND (BECAUSE COMCON
 10245				;	RELOADS F FROM LDBDDB(U) AND INCORRECTLY THINKS
 10246				;	F/ 0 = NO JOB)
 10247				;
 10248				;2)	CALLED WITH F/ DDB ADDR, U/ ANYTHING TO ZAP THE
 10249				;	ATTACHED PORT, IF ANY, AND FREE THE COMMAND PORT DDB
 10250				;	OF A JOB BEING KILLED.
 10251
 10252	015027'	322200	015162'	TTYKIL::JUMPE	F,TTYZAP	;IF THERE'S NO JOB (CASE 1): ZAP IT
 10253
 10254				;(CASE 2) FREE THE DDB, THEN ZAP THE CIRCUIT
 10255
 10256	015030'	402004	000000		SETZM	DEVNAM(F)
 10257	015031'	402004	000005		SETZM	DEVLOG(F)
 10258	015032'	135300	013573*		LDB	T1,PJOBN
 10259	015033'	332000	000006		SKIPE	T1
 10260	015034'	402006	014766*		SETZM	TTYTAB(T1)	;MAKE SURE MARKED AS NO DDB
 10261	015035'	205300	000004		MOVSI	T1,IOFST
 10262	015036'	202304	000002		MOVEM	T1,DEVIOS(F)
 10263	015037'	137300	015032*		DPB	T1,PJOBN	;THIS WILL SET TO JOB 0
 10264	015040'	550244	000013		HRRZ	U,DDBLDB(F)	;CHECK FOR A LINE ATTACHED
 10265	015041'	322240	015044'		JUMPE	U,TTYKDB	;DETACHED ALREADY?
 10266
 10267				    ; U/ 0,,LDB ADDR
 10268				    ;HERE WHEN WE'RE TTYKILLING AN ATTACHED DDB
 10269
 10270	015042'	513005	000000		HLLZS	LDBDDB(U)	;DISCONNECT LINE FROM F
 10271	015043'	260040	015162'		PUSHJ	P,TTYZAP	;ELSE ZAP THE CIRCUIT
 10272					PFALL	TTYKDB
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 228
SCNSER.MAC	25-JAN-91 22:40		TTYKDB - CLEAR LDB PTR AND ASSIGNMENT & USE BITS FOR A TTY DDB

 10273				SUBTTL	TTYKDB - CLEAR LDB PTR AND ASSIGNMENT & USE BITS FOR A TTY DDB
 10274				;	   (ADDR IN F), AND RETURN IT TO THE FREE POOL
 10275
 10276	015044'	322200	014455*	TTYKDB:	JUMPE	F,CPOPJ
 10277	015045'	513004	000013		HLLZS	DDBLDB(F)	;NO F FROM U
 10278	015046'	200300	017402'		MOVE	T1,[XWD TTYATC,ASSCON!ASSPRG]
 10279	015047'	412304	000004		ANDCAM	T1,DEVMOD(F)	;CLEAR OUT ALL USE AND ASSIGN BITS
 10280	015050'	554344	000013		HLRZ	T2,DDBBLK(F)	;GET BACK LINK
 10281	015051'	554304	000003		HLRZ	T1,DEVSER(F)	;AND FORWARD LINK
 10282				;;Start of debug code;;
 10283	015052'	202200	015112'		MOVEM	F,XXCDDB	;Current DDB pointer
 10284	015053'	202300	015115'		MOVEM	T1,XXNDDB	;Next DDB pointer
 10285	015054'	202340	015120'		MOVEM	T2,XXPDDB	;Previous DDB pointer
 10286	015055'	261044	000003		PUSH	P,DEVSER(F)	;Current forward link
 10287	015056'	262040	015113'		POP	P,XXCSER
 10288	015057'	261044	000013		PUSH	P,DDBBLK(F)	;Current backward link
 10289	015060'	262040	015114'		POP	P,XXCBLK
 10290	015061'	261046	000003		PUSH	P,DEVSER(T1)	;Next forward link
 10291	015062'	262040	015116'		POP	P,XXNSER
 10292	015063'	261046	000013		PUSH	P,DDBBLK(T1)	;Next backward link
 10293	015064'	262040	015117'		POP	P,XXNBLK
 10294	015065'	261047	000003		PUSH	P,DEVSER(T2)	;Previous forward link
 10295	015066'	262040	015121'		POP	P,XXPSER
 10296	015067'	261047	000013		PUSH	P,DDBBLK(T2)	;Previous backward link
 10297	015070'	262040	015122'		POP	P,XXPBLK
 10298				;;End of debug code;;
 10299	015071'	506307	000003		HRLM	T1,DEVSER(T2)	;LINK AROUND DDB
 10300	015072'	261040	000010		PUSH	P,T3
 10301	015073'	200406	000004		MOVE	T3,DEVMOD(T1)	;IS NEW DEST. ALSO A TTY?
 10302	015074'	603400	004010		TLNE	T3,DVTTY!DVRMT
 10303	015075'	506346	000013		 HRLM	T2,DDBBLK(T1)	;YES, SET ITS BACK POINTER
 10304	015076'	262040	000010		POP	P,T3
 10305	015077'	200300	016414'		MOVE	T1,FRETTY
 10306	015100'	506304	000003		HRLM	T1,DEVSER(F)	;AND LINK INTO FREE POOL
 10307	015101'	552200	016414'		HRRZM	F,FRETTY
 10308	015102'	550200	000007		HRRZ	F,T2		;POINT TO PRED FOR LINKING
 10309				;Check that the DDB chain ends properly
 10310	015103'	554300	000000*		HLRZ	T1,DEVLST##	;Beginning of DDB chain
 10311	015104'	201340	023420		MOVEI	T2,^D10000	;Paranoid loop counter
 10312	015105'	322300	015044*	TTYKD1:	JUMPE	T1,CPOPJ	;Quit when end of chain is found
 10313	015106'	554306	000003		HLRZ	T1,DEVSER(T1)	;Point to next DDB
 10314	015107'	367340	015105'		SOJG	T2,TTYKD1	;Look for end
 10315	015110'	256000	017403'	DDBCNE:: STOPCD (.,STOP,DDBCNE,,<DDB chain has no end>)
 10316				 ;;TTYKDB+many
 10317	015111'	263040	000000		POPJ	P,
 10318
 10319	015112'	000000	000000	XXCDDB:	0			;Current DDB pointer
 10320	015113'	000000	000000	XXCSER:	0			;DEVSER word with forward pointer
 10321	015114'	000000	000000	XXCBLK:	0			;DDBBLK word with backward pointer
 10322	015115'	000000	000000	XXNDDB:	0
 10323	015116'	000000	000000	XXNSER:	0			;Ditto for next DDB
 10324	015117'	000000	000000	XXNBLK:	0
 10325	015120'	000000	000000	XXPDDB:	0
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 228-2
SCNSER.MAC	25-JAN-91 22:40		TTYKDB - CLEAR LDB PTR AND ASSIGNMENT & USE BITS FOR A TTY DDB

 10326	015121'	000000	000000	XXPSER:	0			;Ditto for previous DDB
 10327	015122'	000000	000000	XXPBLK:	0
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 229
SCNSER.MAC	25-JAN-91 22:40		TDTUUO - HERE FROM ATTACH UUO WHEN DETACHING THE COMMAND PORT

 10328				SUBTTL	TDTUUO - HERE FROM ATTACH UUO WHEN DETACHING THE COMMAND PORT
 10329				;	   (J/ JOB NUMBER)
 10330
 10331	015123'	260040	014353'	TDTUUO::PUSHJ	P,TTYSRC	;FIND F
 10332	015124'	263040	000000		 POPJ	P,		;NONE THERE
 10333	015125'	322240	015105*		JUMPE	U,CPOPJ		;MUST NOT BE WAITING FOR LOGOUT
 10334	015126'	205300	200000		MOVSI	T1,LLLZAP
 10335	015127'	612305	000026		TDNE	T1,LDBLOG(U)
 10336	015130'	263040	000000		 POPJ	P,
 10337					PFALL	TTYDET
 10338
 10339				;TTYDET - DETACH A TTY DDB (ADDR IN F)
 10340
 10341	015131'	550244	000013	TTYDET::HRRZ U,DDBLDB(F)	;GET LDB ADDR
 10342	015132'	513004	000013		HLLZS DDBLDB(F)		;AND CLEAR LINK
 10343	015133'	553004	000000		HRRZS DEVNAM(F)		;SAVE PORT # BUT CLEAR "TTY"
 10344								;SO DEVICE SEARCH DOESN'T FIND IT
 10345	015134'	201300	000001		MOVEI	T1, 1
 10346	015135'	137300	000246'		DPB	T1, DDPCOM	;SHOULD RE-ATTACH IN CMND MODE
 10347	015136'	322240	015125*		JUMPE U,CPOPJ		;NO LINE TO SEND ZAPPER ON
 10348	015137'	513005	000000		HLLZS LDBDDB(U)		;CLEAR LDB TO DDB LINK
 10349	015140'	324740	015162'		PJRST TTYZAP		;  SEND A ZAPPER ON IT
 10350
 10351				;TYCIOS - called by CLOCK1 to clear ALL tty's IOS
 10352
 10353	015141'	260040	015700'	TYCIOS::PUSHJ P,FRSTTY
 10354	015142'	263040	000000		  POPJ P,	
 10355	015143'	254000	015146'		JRST TYIOS2		;include command port
 10356
 10357	015144'	260040	015702'	TYIOS1:	PUSHJ P,NXTTTY	;THIS WILL BE AUX CIR OR RMT
 10358	015145'	263040	000000		  POPJ P,	;FINISHED, NONE THERE
 10359	015146'	205300	004000	TYIOS2:	MOVSI T1,DVRMT
 10360	015147'	612304	000004		TDNE T1,DEVMOD(F)
 10361					JRST	[MOVE S,[IOW,,IOACT]	;RESET BITS FOR RMT
 10362						ANDCAM S,DEVIOS(F)
 10363	015150'	254000	017406'			JRST TYIOS1]	;NEXT
 10364	015151'	200000	017411'		MOVE S,[IOW+TIOUSE,,IOACT]
 10365	015152'	412004	000002		ANDCAM S,DEVIOS(F)	;RESET ALL BITS INCLUDING USE
 10366	015153'	200300	017402'		MOVE T1,[TTYATC,,ASSCON+ASSPRG]
 10367	015154'	616304	000004		TDNN T1,DEVMOD(F)	;ANY REASON TO KEEP IT
 10368	015155'	260040	015044'		PUSHJ P,TTYKDB		;NO, GET RID OF IT
 10369	015156'	254000	015144'		JRST TYIOS1
 10370
 10371				;IFDET - CALLED FROM EXIT UUO: IF DETACHED, SKIP, ELSE DO A
 10372				;	  TTYFUW AND NONSKIP-RETURN
 10373
 10374	015157'	260040	014350'	IFDET::	PUSHJ P,TTYFND
 10375	015160'	322240	015026*		JUMPE U,CPOPJ1	;IS DETACHED
 10376	015161'	254000	014377'		JRST TTYFW1	;FINISH THE TTYFUW
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 230
SCNSER.MAC	25-JAN-91 22:40		TTYZAP - ZAP A CIRCUIT (U/ LDB ADDR).

 10377				SUBTTL	TTYZAP - ZAP A CIRCUIT (U/ LDB ADDR).
 10378
 10379				;Whenever a zapper originates from the PDP-10, then a yellow ball is
 10380				;sent out first to make sure that the zapper does not gobble any of the
 10381				;logout messages.  In this case, a 20-second timer is started and the
 10382				;zapper is not sent until an orange ball is reflected by the TYMSAT.
 10383				;
 10384				;Whenever a zapper originates from TYMNET, the base has already given up
 10385				;on the port and marks is as being "in clean up" until we return the zapper.
 10386				;
 10387				;In either case, the line is marked as "not in use" when we send a zapper.
 10388				;We must respond to incoming zappers, but the base sends no response to
 10389				;an outgoing zapper.
 10390
 10391				;Change in P035/D05 - don't send yellow ball if line is not marked in use,
 10392				;because base will ignore it and we will be waiting 20 seconds for an orange
 10393				;ball that will never come in.  However, if a login just happens to come in
 10394				;while we are waiting, it used to cause TTYZNE and/or a base crash.
 10395				;Also: EBUS version 2.0 did not range-check zappers.  When B39 was configured
 10396				;for 128 ports and its base for 127, the base would crash when a zapper
 10397				;was sent out on TTY177.
 10398
 10399	015162'	201340	000001	TTYZAP:	MOVEI	T2,1
 10400	015163'	200305	000026		MOVE	T1,LDBLOG(U)	;Get TYMNET status of line
 10401	015164'	325300	015167'		JUMPGE	T1,TTYZP1	;No yellow/orange if port not in use
 10402	015165'	607300	100000		TLNN	T1,LLLNLN	;Send yellow ball and wait for orange to be
 10403	015166'	137340	000077'		 DPB	T2,LOPSYL	; reflected (unless zap came from base)
 10404	015167'	137340	000101'	TTYZP1:	DPB	T2,LOPZAP	;Set flag to send zapper
 10405	015170'	137345	000002		DPB	T2,LDBOPB(U)	;Mark line as needing output
 10406	015171'	205300	400000		MOVSI	T1,LDLNOP
 10407	015172'	412305	000031		ANDCAM	T1,LDBDCH(U)	;Ignore backpressure
 10408	015173'	205300	001000		MOVSI	T1,LMLBIO
 10409	015174'	612305	000030		TDNE	T1,LDBMOD(U)	;If it's in block I/O mode,
 10410	015175'	260040	012105'		 PUSHJ	P,BIOREL	; get it out
 10411	015176'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 231
SCNSER.MAC	25-JAN-91 22:40		TTYATT - ATTACH LDB TO JOB

 10412				SUBTTL	TTYATT - ATTACH LDB TO JOB
 10413				;	   U/ LDB  J/ JOB#
 10414				;	   SKIP-RETURNS ON SUCCESS WITH F/ CMND PORT DDB
 10415				;	   NONSKIP-RETURNS ON FAILURE WITH F/ 0
 10416
 10417	015177'	261040	000005	TTYATT::PUSH	P,U
 10418	015200'	201200	000000		MOVEI	F,0		;RET 0 IN CASE DONT FIND TTY DDB
 10419	015201'	260040	014353'		PUSHJ	P,TTYSRC	;FIND THE F FOR THAT JOB
 10420	015202'	254000	015204'		  JRST	LPOPJ		;NONE, SHOULD NOT HAVE GOTTEN HERE
 10421	015203'	322240	015212'		JUMPE	U,TTYAT1	;WAS THERE ANYONE ATTACHED
 10422	015204'	262040	000005	LPOPJ:	POP	P,U		;YES, NOONE CAN DO THIS FOR NOW
 10423	015205'	263040	000000		POPJ	P,
 10424
 10425				COMMENT ! TTYATI - CALLED TO DO INITIAL ATTACH WHEN
 10426					PROCESSING LOGIN.
 10427				EXPECTS:  U/ LDB ON WHICH LOGIN APPEARED
 10428					  J/ JOB SLOT TO WHICH WE WANT TO ATTACH IT
 10429				CLOBBERS: T1 - T4
 10430				RETURNS: CPOPJ IF CANNOT ATTACH. F/0 IF NO TTYDDB'S, F/DDB IF
 10431						BECAUSE ALREADY ATTACHED
 10432					 CPOPJ1 IF SUCCESS, F/DDB
 10433				!
 10434
 10435
 10436	015206'	261040	000005	TTYATI:	PUSH P,U
 10437	015207'	260040	014353'		PUSHJ P,TTYSRC	;CHECK FOR A F FOR THIS JOB
 10438	015210'	260040	015507'		 PUSHJ P,DDBSRC	;NONE, FIND A FREE ONE
 10439	015211'	254000	015204'		  JRST LPOPJ	;NO FREE F OR JOB ALREADY HAS ONE, GIVE ERROR RETURN
 10440	015212'	200241	000000	TTYAT1:	MOVE U,0(P)	;RESTORE LINE USER IS NOW ON
 10441	015213'	261040	000004		PUSH P,F
 10442	015214'	550205	000000		HRRZ F,LDBDDB(U)	;DOES IT HAVE A F?
 10443	015215'	322200	015220'		JUMPE F,TTYAT2	;NO, JUST DO THE ATTACH
 10444	015216'	513004	000013		HLLZS DDBLDB(F)	;GET RID OF LINK TO LINE SO
 10445	015217'	553004	000000		HRRZS DEVNAM(F)	;MAKE SURE LEFT OF NAME ZEROED
 10446	015220'	262040	000004	TTYAT2:	POP P,F		;NOW RESTORE F HE GOES TO
 10447	015221'	262040	000005		POP P,U
 10448	015222'	200300	017412'		MOVE T1,[XWD TTYATC,ASSCON]	;ASSIGN IT
 10449	015223'	436304	000004		IORM T1,DEVMOD(F)
 10450	015224'	137100	015037*		DPB J,PJOBN		;SET JOB ASSIGNED TO
 10451	015225'	200300	000000*		MOVE T1,TIMRST##	;RESET ANY WAITING HANG
 10452	015226'	137100	000000*		DPB J,CLKJOB##		;WHICH MAY EXIST IN CLOCK QUEUE
 10453	015227'	260040	000000*		PUSHJ P,CHGCLK		;FOR PREVIOUS OWNERS OF THIS JOB SLOT
 10454	015230'	552202	015034*		HRRZM F,TTYTAB(J)	;SET TTYTAB UP
 10455	015231'	260040	015554'		PUSHJ P,SCNNAM		;FILL IN NAME OF TTY F
 10456	015232'	260040	015456'		PUSHJ	P, COMATT	;JOIN F AND U
 10457	015233'	254000	015160*		JRST CPOPJ1		;AND TAKE GOOD RETURN
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 232
SCNSER.MAC	25-JAN-91 22:40		HERE FROM THE ATTACH UUO IF IT'S ATTACHING

 10458				SUBTTL	 HERE FROM THE ATTACH UUO IF IT'S ATTACHING
 10459				; T1/ USERMODE,,JOB# WHERE USERMODE IS 1 TO
 10460				; ATTACH THE PORT IN USER MODE AND 0 TO ATTACH
 10461				; IT IN COMMAND MODE
 10462
 10463	015234'	261040	000006	TATUUO::PUSH	P,T1
 10464	015235'	260040	014353'		PUSHJ	P,TTYSRC	;FIND F FOR THIS JOB
 10465	015236'	254000	015010*		  JRST	TPOPJ		;CAN NOT ATTACH, NO F
 10466	015237'	550244	000013		HRRZ	U,DDBLDB(F)
 10467	015240'	322240	015236*		JUMPE	U,TPOPJ		;GIVE UP
 10468	015241'	205300	200000		MOVSI	T1,LLLZAP
 10469	015242'	612305	000026		TDNE	T1,LDBLOG(U)
 10470	015243'	254000	015240*		 JRST	TPOPJ		;DO NOT ALLOW IF WAITING FOR LOGUT
 10471	015244'	550101	000000		HRRZ	J,0(P)		; J/ 0,,TARGET JOB#
 10472	015245'	260040	015177'		PUSHJ	P,TTYATT	;Attach our old line to new job
 10473	015246'	254000	015243*		  JRST	TPOPJ		;CANNOT ATTACH
 10474	015247'	262040	000006		POP	P,T1		;T1/USERMODE,,TARGET JOB#
 10475	015250'	350001	000000		AOS	(P)
 10476	015251'	261040	000006		PUSH	P,T1
 10477	015252'	603300	000004		TLNE	T1,(1B15)	;does user want frame continued?
 10478	015253'	260040	015266'		 PUSHJ	P,RTCONT	;yes - do it
 10479	015254'	262040	000006		POP	P,T1
 10480	015255'	603300	000001		TLNE	T1,(1B17)	;WANTS USER MODE?
 10481	015256'	254000	015262'		 JRST	TATUU1		;YES.
 10482	015257'	260040	000000*		PUSHJ	P,PRPRMT##	;GIVE HIM A PERIOD OR HYPHEN
 10483	015260'	260040	013767'		PUSHJ	P,CNCMOD	;FORCE TO COMMAND LEVEL
 10484	015261'	254000	013747'		JRST	TTYSTC		;AND GO
 10485
 10486	015262'	205300	020000	TATUU1:	MOVSI	T1,LDLCOM
 10487	015263'	412305	000031		ANDCAM	T1,LDBDCH(U)	; PUT INTO USER MODE
 10488	015264'	260040	007622'		PUSHJ	P,SETLMD
 10489	015265'	263040	000000		POPJ	P,		; SKIP-RETURN ((P) AOS'D ABOVE)
 10490
 10491
 10492				; RTCONT - call here to make sure target frame is running.
 10493				; Called in response to user request by ATTACH UUO and RETACH UUO.
 10494				; Expects J/ target JOB #.
 10495				; Clobbers T1 alot.
 10496
 10497	015266'	335302	007000*	RTCONT:	SKIPGE	T1,JBTSTS(J)	;check if its already running
 10498	015267'	263040	000000		 POPJ	P,		;yep! nothing to do
 10499	015270'	603300	020000		TLNE	T1,JERR		;can't continue if JERR set
 10500	015271'	263040	000000		 POPJ	P,
 10501	015272'	324740	014536*		PJRST	SETRUN		;resume execution in target and return
 10502
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 233
SCNSER.MAC	25-JAN-91 22:40		HERE FROM THE ATTACH UUO IF IT'S ATTACHING

 10503				COMMENT @
 10504
 10505				RETACH UUO - MOVE A TTY SOMEWHERE ELSE
 10506
 10507					MOVEI	AC, [
 10508						SOURCE FRAME,,TARGET FRAME
 10509						BITS,,PORT
 10510					]
 10511					RETACH	AC,
 10512					  ERROR RETURN	;AC/ ERROR CODE
 10513					NORMAL RETURN	;AC/ PORT# OF PORT MOVED (FROM RH(DEVNAM))
 10514
 10515					<BITS> = 1B0 TO ATTACH AS AUX/SLAVE PORT RATHER THAN
 10516						     AS CMND PORT (MUST BE SIGN BIT)
 10517					       + 0B2 TO ATTACH ACCORDING TO SAVED CMND MODE STATE
 10518						 1B2 TO ATTACH IN CURRENT COMMAND MODE STATE
 10519						 2B2 TO FORCE COMMAND MODE
 10520						 3B2 TO FORCE USER MODE
 10521					       + 1B3 TO SIGNAL A HANGUP ON THE SOURCE FRAME
 10522
 10523					<ERROR CODE> = (SEE DEFINITIONS BELOW)
 10524				@
 10525
 10526			400000	RT.SLV==400000
 10527			300000	RT.MOD==300000
 10528				  DEFINE RTYMOD(X) = <[POINT 2,X,2]>
 10529			000000	  .RTMSV==0
 10530			000001	  .RTMCU==1
 10531			000002	  .RTMCO==2
 10532			000003	  .RTMUS==3
 10533			040000	RT.SIG==040000
 10534			020000	RT.CON==020000
 10535
 10536			000001	RTSAC%==1	;INSUFFICIENT ACCESS TO SOURCE FRAME
 10537			000002	RTSNX%==2	;SOURCE FRAME DOES NOT EXIST
 10538			000003	RTTAC%==3	;INSUFFICIENT ACCESS TO TARGET FRAME
 10539			000004	RTTNX%==4	;TARGET FRAME DOESN'T EXIST
 10540			000005	RTSNA%==5	;PORT NOT ATTACHED TO SOURCE FRAME
 10541			000006	RTTAT%==6	;PORT ALREADY ATTACHED TO TARGET FRAME
 10542			000007	RTSCP%==7	;FORCED COMMAND PENDING ON PORT
 10543			000010	RTAUX%==10	;ATTACHING AUX CIRCUIT AS CMND PORT
 10544			000011	RTNRM%==11	;NO ROOM FOR NEW DDB
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 234
SCNSER.MAC	25-JAN-91 22:40		RETACH uuo

 10545				SUBTTL	RETACH uuo
 10546
 10547	015273'	256200	017413'	RETACH::XCTFU <MOVE P1,0(T1)>	;P1/ SOURCE,,TARGET
 10548	015274'	256200	017414'		XCTFU <MOVE P2,1(T1)>	;P2/ BITS,,PORT
 10549
 10550				    ;CHECK ACCESS TO SOURCE FRAME
 10551
 10552	015275'	554740	000014		HLRZ	P4, P1		;P4/ SOURCE FRAME DESC
 10553	015276'	551700	000010		HRRZI	P3, .ARDET
 10554	015277'	260040	000000*		PUSHJ	P, FARCHK##	;MAY WE DETACH FROM THE SOURCE?
 10555					  JRST	[
 10556						MOVEI	T1, RTSAC%
 10557						JRST	RTERR
 10558	015300'	254000	017415'		]
 10559	015301'	205300	040000		MOVSI	T1, JNA
 10560	015302'	616302	015266*		TDNN	T1, JBTSTS(J)	;IS THE SOURCE JOB THERE?
 10561					 JRST	[
 10562						MOVEI	T1, RTSNX%
 10563						JRST	RTERR
 10564	015303'	254000	017417'		]
 10565	015304'	506100	000014		HRLM	J, P1
 10566
 10567				    ;CHECK ACCESS TO TARGET FRAME
 10568
 10569	015305'	550740	000014		HRRZ	P4, P1		;P4/ TARGET FRAME DESC
 10570	015306'	551700	000007		HRRZI	P3, .ARATT
 10571	015307'	260040	015277*		PUSHJ	P, FARCHK##	;MAY WE ATTACH TO THE TARGET?
 10572					  JRST	[
 10573						MOVEI	T1, RTTAC%
 10574						JRST	RTERR
 10575	015310'	254000	017421'		]
 10576	015311'	205300	040000		MOVSI	T1, JNA
 10577	015312'	616302	015302*		TDNN	T1, JBTSTS(J)	;IS THE TARGET JOB THERE?
 10578					 JRST	[
 10579						MOVEI	T1, RTTNX%
 10580						JRST	RTERR
 10581	015313'	254000	017423'		]
 10582	015314'	542100	000014		HRRM	J, P1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 235
SCNSER.MAC	25-JAN-91 22:40		RETACH uuo

 10583				    ;SAVE THE CALLER'S JOB #
 10584
 10585	015315'	261040	000002		PUSH	P, J
 10586
 10587				    ;GET THE PORT BEING MOVED
 10588
 10589	015316'	554100	000014		HLRZ	J, P1		;J/ SOURCE FRAME #
 10590	015317'	570200	000015		HRRE	F, P2		;F/ SOURCE PORT DESCRIPTOR
 10591	015320'	260040	016102'		PUSHJ	P, FNDPRT	;SET F/ DDB ADDR. IF NO DDB
 10592	015321'	254000	015324'		  JRST	RETCH1
 10593	015322'	550244	000013		HRRZ	U, DDBLDB(F)
 10594	015323'	326240	015326'		JUMPN	U, RETCH2	;OR IF IT IS DETACHED
 10595	015324'	201300	000005	RETCH1:	MOVEI	T1, RTSNA%
 10596	015325'	254000	015453'		JRST	RTERJ		;  RESTORE J AND ERROR-RETURN
 10597
 10598				    ;J/ SOURCE FRAME#  F/ SOURCE DDB  U/ LDB
 10599
 10600	015326'	335005	000000	RETCH2:	SKIPGE	LDBDDB(U)	;IF LINE HAS PENDING COMMANDS,
 10601					 JRST	[
 10602						MOVEI	T1, RTSCP%
 10603						JRST	RTERJ	;  RESTORE J AND ERROR-RETURN
 10604	015327'	254000	017425'		]
 10605	015330'	135300	000206'		LDB	T1, LDPCOM
 10606	015331'	137300	000246'		DPB	T1, DDPCOM	;SAVE CMND MODE STATE
 10607	015332'	260040	015565'		PUSHJ	P, NAMSCN	;T1 := PORT # FROM RH(DEVNAM)
 10608	015333'	256200	017110'		UMOVEM	T1, (M)		;GIVE IT TO CALLER
 10609	015334'	550100	000014		HRRZ	J, P1		;J/ TARGET FRAME #
 10610	015335'	542200	000015		HRRM	F, P2		;P2/ BITS,,SOURCE DDB
 10611	015336'	321640	015400'		JUMPL	P2, RTATS	;Negative TO ATTACH AS AUX/SLAVE PORT
 10612				    ;HERE TO ATTACH AS TARGET'S COMMAND PORT
 10613				    ;J/ TARGET JOB #  U/ LDB ADDR
 10614
 10615	015337'	550100	000014	RTATC:	HRRZ	J, P1		;J/ TARGET FRAME #
 10616	015340'	550202	015230*		HRRZ	F, TTYTAB(J)	;F/ 0,,DDB ADDR
 10617	015341'	336000	000004		SKIPN	F		;IF THERE'S NO DDB,
 10618	015342'	256000	000000'		 STOPCD 		;  CRASH
 10619	015343'	500245	000031		HLL	U, LDBDCH(U)
 10620	015344'	603240	000040		TLNE	U, LDLAUX	;IF IT'S AN AUX CIRCUIT,
 10621					 JRST	[
 10622						MOVEI T1, RTAUX%
 10623						JRST RTERJ	;  RESTORE J AND ERROR-RETURN
 10624	015345'	254000	017427'		]
 10625	015346'	550304	000013		HRRZ	T1, DDBLDB(F)
 10626					JUMPN	T1, [		;IF JOB'S ATTACHED ALREADY,
 10627						MOVEI	T1, RTTAT%
 10628						JRST	RTERJ	;  RESTORE J AND ERROR-RETURN
 10629	015347'	326300	017431'		]
 10630
 10631	015350'	200300	015225*		MOVE	T1,TIMRST##
 10632	015351'	137100	015226*		DPB	J,CLKJOB##
 10633	015352'	260040	015227*		PUSHJ	P,CHGCLK	;RESET TIMEOUT-ON-DISCONNECT TIMER
 10634	015353'	260040	015554'		PUSHJ	P,SCNNAM	;DEVNAM(F) := "TTY" & CVOS(LINE#)
 10635	015354'	260040	000000*		PUSHJ	P,LOGLDB##	;Set LDBLOG from UPTLOG if LDBLOG is zero
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 235-2
SCNSER.MAC	25-JAN-91 22:40		RETACH uuo

 10636	015355'	260040	015456'		PUSHJ	P,COMATT	;JOIN F AND U
 10637
 10638	015356'	603640	020000		TLNE	P2,RT.CON	;User want us to force CONTINUE on target?
 10639	015357'	260040	015266'		 PUSHJ	P,RTCONT	;yes - go do it
 10640
 10641	015360'	135300	017433'		LDB	T1, RTYMOD<P2>	;T1/ LDLCOM "MODE"
 10642					JRST	@[
 10643						RTCSV		;0  .RTCSV  FORCE SAVED MODE
 10644						RTFIN		;1  .RTCCU  RETAIN CURRENT MODE
 10645						RTCCO		;2  .RTCCO  FORCE COMMAND MODE
 10646						RTCUS		;3  .RTCUS  FORCE USER MODE
 10647	015361'	254026	017434'		](T1)
 10648
 10649	015362'	205300	040000	RTCSV:	MOVSI	T1, DCLCOM
 10650	015363'	616304	000012		TDNN	T1, DDBDCH(F)	;CHECK SAVED LDLCOM SETTING
 10651	015364'	254000	015366'		JRST	RTCUS		;WAS 0 -- FORCE USER MODE
 10652	015365'	254000	015372'		JRST	RTCCO		;WAS 1 -- FORCE CMND MODE
 10653
 10654	015366'	205300	020000	RTCUS:	MOVSI	T1, LDLCOM
 10655	015367'	412305	000031		ANDCAM	T1, LDBDCH(U)	;CLEAR COMMAND MODE
 10656	015370'	260040	007622'		PUSHJ	P, SETLMD	;FIX LINE MODE FIELD
 10657	015371'	254000	015431'		JRST	RTFIN
 10658
 10659	015372'	205300	020000	RTCCO:	MOVSI	T1,LDLCOM
 10660	015373'	612305	000031		TDNE	T1,LDBDCH(U)	;IF NOT ALREADY AT CMND MODE,
 10661	015374'	254000	015431'		JRST	RTFIN
 10662	015375'	260040	015257*		PUSHJ	P,PRPRMT##	;  PRINT A PROMPT
 10663	015376'	260040	013767'		PUSHJ	P,CNCMOD	;  FORCE TO CMND MODE
 10664	015377'	254000	015431'		JRST	RTFIN
 10665
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 236
SCNSER.MAC	25-JAN-91 22:40		RETACH uuo

 10666				    ;HERE TO ATTACH AS A SLAVE PORT TO TARGET
 10667				    ;J/ TARGET JOB #  U/ LDB ADDR
 10668
 10669	015400'	135200	000157'	RTATS:	LDB	F, LDPLNO	;F/ PORT #
 10670	015401'	260040	016102'		PUSHJ	P, FNDPRT	;F/ DDB FOR PORT. IF THERE ISN'T ONE,
 10671	015402'	254000	015413'		JRST	RTATS1		;  GO ALLOCATE A DDB
 10672	015403'	550300	000015		HRRZ	T1, P2		;T1/ SOURCE DDB
 10673	015404'	306304	000000		CAIN	T1, (F)		;IF IT'S THE SAME AS THE TARGET,
 10674	015405'	254000	015413'		JRST	RTATS1		;  ALWAYS ALLOCATE A NEW ONE
 10675
 10676				    ;USING EXISTING DDB
 10677
 10678	015406'	550304	000013		HRRZ	T1, DDBLDB(F)
 10679					JUMPN	T1, [		;IF ALREADY ATTACHED,
 10680						MOVEI	T1, RTTAT%
 10681						JRST	RTERJ	;RESTORE J AND ERROR-RETURN
 10682	015407'	326300	017431'		]
 10683	015410'	201300	646471		MOVEI	T1, (SIXBIT/TTY/)
 10684	015411'	506304	000000		HRLM	T1, DEVNAM(F)
 10685	015412'	254000	015424'		JRST	RTATS2
 10686
 10687				    ;ALLOCATING NEW DDB
 10688
 10689	015413'	550302	015340*	RTATS1:	HRRZ	T1, TTYTAB(J)	;T1/ TARGET CMND PORT DDB
 10690	015414'	336000	000006		SKIPN	T1		;IF THERE IS NONE,
 10691	015415'	256000	000000'		 STOPCD 		;  CRASH
 10692	015416'	260040	015510'		PUSHJ	P, DDBSR1	;F/ NEW DDB, LINKED AFTER CMND PORT.
 10693					  JRST	[		;IF THERE'S NO ROOM FOR ONE,
 10694						MOVEI T1, RTNRM%
 10695						JRST RTERJ	;  RESTORE J AND ERROR-RETURN
 10696	015417'	254000	017440'		]
 10697	015420'	137100	015224*		DPB	J, PJOBN	;SET JOB #
 10698	015421'	260040	015554'		PUSHJ	P, SCNNAM	;AND PHYSICAL NAME
 10699	015422'	201300	400000		MOVEI	T1, ASSCON
 10700	015423'	436304	000004		IORM	T1, DEVMOD(F)	;MARK IT ASSIGNED-BY-CONSOLE
 10701
 10702				    ;ATTACH IT
 10703
 10704	015424'	205300	020000	RTATS2:	MOVSI	T1, LDLCOM
 10705	015425'	412305	000031		ANDCAM	T1, LDBDCH(U)	;MAKE SURE IT'S NOT IN COMMAND MODE
 10706	015426'	205300	020000		MOVSI	T1, TTYATC
 10707	015427'	412304	000004		ANDCAM	T1, DEVMOD(F)	;MARK IT AS A NONCOMMAND PORT
 10708	015430'	260040	015456'		PUSHJ	P, COMATT	;JOIN F AND U
 10709					PFALL	RTFIN
 10710				    ;DETACH THE SOURCE END
 10711
 10712	015431'	554100	000014	RTFIN:	HLRZ	J, P1		;J/ SOURCE FRAME #
 10713	015432'	550200	000015		HRRZ	F, P2		;F/ SOURCE DDB
 10714	015433'	513004	000013		HLLZS	DDBLDB(F)	;DETACH SOURCE
 10715	015434'	553004	000000		HRRZS	DEVNAM(F)	;MAKE IT LOOK DETACHED
 10716	015435'	205300	020000		MOVSI	T1, TTYATC
 10717	015436'	616304	000004		TDNN	T1, DEVMOD(F)	;WAS SOURCE A COMMAND OR A SLAVE PORT?
 10718	015437'	254000	015444'		 JRST	RTFIN1		;(AUX/SLAVE)
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 236-2
SCNSER.MAC	25-JAN-91 22:40		RETACH uuo

 10719
 10720				    ;HERE WHEN WE'VE DETACHED SOURCE'S COMMAND PORT
 10721
 10722	015440'	607640	040000		TLNN	P2, RT.SIG	;IF WE'RE SIGNALLING A HANGUP,
 10723	015441'	254000	000000*		 JRST	IPOPJ1
 10724	015442'	260040	006657'		PUSHJ	P, HNGTTY	;  FORCE A DETACHED-JOB HANGUP
 10725								; J has job #
 10726	015443'	254000	015441*		JRST	IPOPJ1
 10727
 10728				    ;HERE WHEN WE'VE DETACHED AN AUX/SLAVE PORT
 10729
 10730	015444'	607640	040000	RTFIN1:	TLNN	P2, RT.SIG	;IF WE'RE SIGNALLING A HANGUP,
 10731	015445'	254000	015450'		 JRST	RTFIN2
 10732	015446'	135300	000234'		LDB	T1, DDPTZP
 10733	015447'	260040	011242*		PUSHJ	P, TAKTRJ	;  CAUSE A ZAPPED INTERRUPT
 10734	015450'	201340	400000	RTFIN2:	MOVEI	T2, ASSCON
 10735	015451'	260040	011244*		PUSHJ	P, RELEA6	;TRY TO FREE THE DDB
 10736	015452'	254000	015443*		JRST	IPOPJ1
 10737	
 10738				    ;ERROR-RETURNS
 10739
 10740	015453'	262040	000002	RTERJ:	POP	P, J		;RESTORE J
 10741	015454'	256200	017110'	RTERR:	UMOVEM	T1, (M)		;STORE ERROR CODE
 10742	015455'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 237
SCNSER.MAC	25-JAN-91 22:40		COMATT - PERFORMS THE FUNCTIONS COMMON TO ALL ATTACH FUNCTIONS:

 10743				SUBTTL	COMATT - PERFORMS THE FUNCTIONS COMMON TO ALL ATTACH FUNCTIONS:
 10744				;	     LINKS LDBDDB(U) AND DDBLDB(F)
 10745				;	     SETS NEED-OUTPUT BIT OF LDB SO ATTACHEE WILL BE AWAKENED
 10746				;	     SETS NON-DEVIOS LDB DEVICE CHARACTERISTIC BITS
 10747				;	     CALLS UUOLDB TO SET DEVIOS DEVICE CHARACTERISTIC BITS
 10748				;	   F/ DDB ADDR  U/ LDB ADDR
 10749				;	   DESTROYS T1-T4
 10750
 10751	015456'	602200	777777	COMATT:	TRNE	F, -1
 10752	015457'	606240	777777		TRNN	U, -1
 10753	015460'	256000	000000'		 STOPCD 		;MUST HAVE A DDB AND AN LDB
 10754	015461'	542244	000013		HRRM	U, DDBLDB(F)
 10755	015462'	542205	000000		HRRM	F, LDBDDB(U)	;DO THE ATTACH
 10756	015463'	201300	000001		MOVEI	T1, 1
 10757	015464'	137305	000002		DPB	T1, LDBOPB(U)	;SET NEED-OUTPUT
 10758	015465'	135300	000244'		LDB	T1, DDPIMB
 10759	015466'	137300	000203'		DPB	T1, LDPIMB	;SET IMAGE-MODE BREAK CHARACTER
 10760	015467'	200404	000012		MOVE	T3, DDBDCH(F)
 10761	015470'	200305	000027		MOVE	T1, LDBBYT(U)
 10762	015471'	607400	100000		TLNN	T3, DCLNTB	;NO HT/VT/FF ECHO
 10763	015472'	625300	020000		TLZA	T1, L2LNTB
 10764	015473'	661300	020000		TLO	T1, L2LNTB
 10765	015474'	202305	000027		MOVEM	T1, LDBBYT(U)
 10766	015475'	201300	100000		MOVEI	T1, L2LTBK	;TABS-AS-BREAKS
 10767	015476'	603400	200000		TLNE	T3, DCLTBK
 10768	015477'	505300	100000		HRLI	T1, L2LTBK
 10769	015500'	260040	007626'		PUSHJ	P, SETTBK
 10770	015501'	201300	040000		MOVEI	T1, L2LBBP	;BACKSPACE-AS-NONBREAK
 10771	015502'	603400	400000		TLNE	T3, DCLBBP
 10772	015503'	505300	040000		HRLI	T1, L2LBBP
 10773	015504'	260040	007626'		PUSHJ	P, SETTBK
 10774	015505'	200004	000002		MOVE	S, DEVIOS(F)
 10775	015506'	324740	013273'		PJRST	UUOLDB		;SET DEVIOS-DEPENDENT LDB BITS
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 238
SCNSER.MAC	25-JAN-91 22:40		ROUTINE TO FIND A FREE TTY DEVICE DATA BLOCK

 10776				SUBTTL	ROUTINE TO FIND A FREE TTY DEVICE DATA BLOCK
 10777
 10778				;CALL FROM CLOCK LEVEL TO DO AN ATTACH ON A NEW JOB, OR
 10779				;FROM UUO LEVEL ON AN INIT OF A NEW LINE.
 10780
 10781				;CALL:	NO ARGUMENTS
 10782				;	PUSHJ P,DDBSRC
 10783				;	  ERROR RETURN		;NONE AVAILABLE. F=0. T1 CLOBBERED
 10784				;	OK RETURN		;ADDRESS IN F, TTYUSE SET IN DEVMOD
 10785				;				;RESPECTS J,U,CH.
 10786				;				;IF YOU DECIDE NOT TO USE F, YOU BETTER
 10787				;				;FREE IT UP AGAIN.
 10788
 10789	015507'	200300	016415'	DDBSRC:	MOVE T1,TTYFLK	;WHERE TO LINK IN
 10790	015510'	550200	016414'	DDBSR1:	HRRZ F,FRETTY	;HERE IF TO LINK AT SPECIAL SPOT WITH T1 SET
 10791	015511'	322200	015136*		JUMPE F,CPOPJ		;NO DDB'S AVAILABLE
 10792	015512'	554204	000003		HLRZ F,DEVSER(F)	;GET NEXT FREE
 10793	015513'	250200	016414'		EXCH F,FRETTY		;RESTORE F AND UPDATE FREE LIST
 10794	015514'	261046	000003		PUSH P,DEVSER(T1)
 10795	015515'	506206	000003		HRLM F,DEVSER(T1)	;LINK INTO DDB CHAIN
 10796	015516'	506304	000013		HRLM T1,DDBBLK(F)	;PUT IN THE BACK LINK
 10797	015517'	262040	000006		POP P,T1
 10798	015520'	502304	000003		HLLM T1,DEVSER(F)	;NOW LINK IT IN
 10799	015521'	207000	000006		MOVSS T1
 10800	015522'	261040	000010		PUSH P,T3
 10801	015523'	200406	000004		MOVE T3,DEVMOD(T1)	;IS THE NEXT ONE DOWN
 10802	015524'	603400	000010		TLNE T3,DVTTY		;ALSO A TTY?
 10803	015525'	506206	000013		HRLM F,DDBBLK(T1)	;YES, RESET ITS BACK LINK
 10804	015526'	262040	000010		POP P,T3
 10805	015527'	200300	017402'		MOVE T1,[XWD TTYATC,ASSCON+ASSPRG]
 10806	015530'	412304	000004		ANDCAM T1,DEVMOD(F)	;TURN OFF USE BITS
 10807	015531'	402004	000005		SETZM DEVLOG(F)		;NO LOGICAL NAME
 10808
 10809			000000	ZZ0==0
 10810				REPEAT <TRPLEN+5>/6,<
 10811					SETZM	DDBTRP+ZZ0(F)
 10812				ZZ0==ZZ0+1>
 10813	015532'	402004	000014
 10814	015533'	402004	000015
 10815
 10816	015534'	205300	000004		MOVSI T1,IOFST
 10817	015535'	137300	015420*		DPB T1,PJOBN		;SET JOB TO 0 (GO FOR IT, BILL!)
 10818	015536'	202304	000002		MOVEM T1,DEVIOS(F)
 10819	015537'	402004	000012		SETZM	DDBDCH(F)	;CLEAR NONDEVIOS DEVICE CHARACTERISTICS
 10820	015540'	254000	015233*		JRST CPOPJ1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 239
SCNSER.MAC	25-JAN-91 22:40		TTYNFR - CALLED WITH J/ FRAME # TO ALLOCATE A NEW

 10821				SUBTTL	TTYNFR - CALLED WITH J/ FRAME # TO ALLOCATE A NEW
 10822				;	   (DETACHED) TTY DDB FOR THE FRAME AND STORE A
 10823				;	   POINTER TO IT IN TTYTAB(J)
 10824				;	   (DEVNAM WILL BE 0,,SIXBIT /TTY/)
 10825				;	   NONSKIP-RETURNS IF NO DDB FREECORE, OTHERWISE SKIP-RETURNS
 10826
 10827	015541'	260040	014353'	TTYNFR::PUSHJ	P, TTYSRC	;IF IT ALREADY HAS A COMMAND PORT DDB,
 10828	015542'	260040	015507'		  PUSHJ	P, DDBSRC	;OR THERE'S NO ROOM TO ALLOCATE ONE,
 10829	015543'	263040	000000		    POPJ P,		;  ERROR-RETURN
 10830	015544'	513004	000013		HLLZS	DDBLDB(F)	;MAKE SURE IT KNOWS IT'S DETACHED
 10831	015545'	201300	646471		MOVEI	T1, (SIXBIT /TTY/)
 10832	015546'	202304	000000		MOVEM	T1, DEVNAM(F)	;SET ITS NAME
 10833	015547'	200300	017412'		MOVE	T1, [TTYATC,,ASSCON]
 10834	015550'	436304	000004		IORM	T1, DEVMOD(F)	;MARK IT AS A COMMAND PORT
 10835	015551'	137100	015535*		DPB	J, PJOBN	;SET ITS OWNER
 10836	015552'	552202	015413*		HRRZM	F, TTYTAB(J)
 10837	015553'	254000	015540*		JRST	CPOPJ1
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 240
SCNSER.MAC	25-JAN-91 22:40		SCNNAM - SET DEVNAM(F) TO "TTYNNN" WHERE NNN IS

 10838				SUBTTL	SCNNAM - SET DEVNAM(F) TO "TTYNNN" WHERE NNN IS
 10839				;	   LDPLNO (FETCHED THROUGH U) IN OCTAL
 10840				;	   BREAKS T1 T3
 10841
 10842	015554'	135300	000157'	SCNNAM:	LDB T1,LDPLNO
 10843	015555'	137300	000000*		DPB T1,PUNIT
 10844	015556'	205400	646471		MOVSI T3,(SIXBIT /TTY/)
 10845	015557'	202404	000000		MOVEM T3,DEVNAM(F)
 10846	015560'	200400	017442'		MOVE T3,[POINT 6,DEVNAM(F),17]
 10847	015561'	261040	000007		PUSH P,T2		;SCNNMR CLOBBERS THIS ONE
 10848	015562'	260040	014467'		PUSHJ P,SCNNMR		;RADIX PRINT TO CORE
 10849	015563'	262040	000007		POP P,T2
 10850	015564'	263040	000000		POPJ P,
 10851
 10852				;NAMSCN - CALLED WITH F/ TTY DDB
 10853				;	   RETURNS WITH T1/ PORT# FROM RH(DEVNAM)
 10854
 10855	015565'	261040	000007	NAMSCN:	PUSH	P, T2
 10856	015566'	400300	000000		SETZ	T1,
 10857	015567'	514344	000000		HRLZ	T2, DEVNAM(F)
 10858	015570'	311340	017375'	NAMSC1:	CAML	T2, [200000,,000000]
 10859	015571'	313340	017443'		CAMLE	T2, [272727,,000000]
 10860	015572'	254000	015576'		JRST	NAMSC2
 10861	015573'	242340	000003		LSH	T2, 3
 10862	015574'	246300	000003		LSHC	T1, 3
 10863	015575'	254000	015570'		JRST	NAMSC1
 10864	015576'	262040	000007	NAMSC2:	POP	P, T2
 10865	015577'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 241
SCNSER.MAC	25-JAN-91 22:40		TRAP CODE

 10866				SUBTTL TRAP CODE
 10867
 10868				;CHECK FOR CHARACTER TRAP
 10869
 10870	015600'	603240	020000	CHRTRP:	TLNE U,LDLCOM
 10871	015601'	263040	000000		POPJ P,		;NEVER AT COMMAND MODE
 10872	015602'	201300	010000		MOVEI T1,LXRCHR
 10873	015603'	436305	000032		IORM T1,LDBDCX(U)	;SET BIT FOR POLPRT
 10874	015604'	550205	000000		HRRZ F,LDBDDB(U)
 10875	015605'	322200	015511*		JUMPE F,CPOPJ	;NO TRAP IF NO DDB
 10876	015606'	135300	000226'		LDB T1,DDPTCH
 10877	015607'	201340	000400		MOVEI T2,FLGCHR	;AND SET THE FLAG IN CASE OLD TYPE
 10878	015610'	324740	000000*		PJRST TAKOTJ
 10879
 10880				;NOW FOR A LINE TRAP
 10881
 10882	015611'	550205	000000	LINTRP:	HRRZ F,LDBDDB(U)	;NEVER CALLED AT COMMAND LEVEL
 10883	015612'	322200	015605*		JUMPE F,CPOPJ
 10884	015613'	201300	004000		MOVEI T1,LXRBRK
 10885	015614'	436305	000032		IORM T1,LDBDCX(U)	;SET BIT FOR POLPRT
 10886	015615'	261040	000007		PUSH P,T2	;MUST PRESERVE T2
 10887	015616'	135300	000227'		LDB T1,DDPTLN
 10888	015617'	201340	004000		MOVEI T2,FLGLIN
 10889	015620'	260040	015610*		PUSHJ P,TAKOTJ
 10890	015621'	262040	000007		POP P,T2
 10891	015622'	263040	000000		POPJ P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 242
SCNSER.MAC	25-JAN-91 22:40		CALLED ON AN ESCAPE TO SEE IF WE SHOULD SET TRAP

 10892				SUBTTL	CALLED ON AN ESCAPE TO SEE IF WE SHOULD SET TRAP
 10893
 10894	015623'	603240	020000	ESCTRP:	TLNE U,LDLCOM
 10895	015624'	263040	000000		POPJ P,		;NEVER IN COMMAND MODE
 10896	015625'	201300	400000		MOVEI T1,LXRESC
 10897	015626'	436305	000032		IORM T1,LDBDCX(U)	;SET BIT FOR POLPRT
 10898	015627'	550205	000000		HRRZ F,LDBDDB(U)
 10899	015630'	322200	015612*		JUMPE F,CPOPJ
 10900	015631'	261040	000006		PUSH P,T1		;JUST LIKE CODE ABOVE
 10901	015632'	135300	000225'		LDB T1,DDPTSC
 10902	015633'	205340	000001		MOVSI T2,FLGESC
 10903	015634'	260040	000000*		PUSHJ P,TAKNZJ		;TAKE THIS TRAP IF REALLY ENABLED
 10904	015635'	254000	015246*		 JRST TPOPJ		;NOT ENABLED
 10905	015636'	262040	000006		POP P,T1		;ENABLED
 10906	015637'	254000	015635*		JRST TPOPJ		;RETURN UP A LEVEL TO IGNORE CHR
 10907
 10908				;CALLED FROM TYI WHEN AN ESCAPE IS READ TO CHECK ABOUT TRAPPING
 10909
 10910	015640'	261040	000006	ESCTR1:	PUSH P,T1		;FOUND ESCAPE READING CHRS
 10911	015641'	201300	400000		MOVEI T1,LXRESC
 10912	015642'	436305	000032		IORM T1,LDBDCX(U)	;SET BIT FOR POLPRT
 10913	015643'	135300	000225'		LDB T1,DDPTSC
 10914	015644'	205340	000001		MOVSI T2,FLGESC
 10915	015645'	260040	015634*		PUSHJ P,TAKNZJ		;TRY THE TRAP
 10916	015646'	254000	015637*		 JRST TPOPJ	;NOT ENEABLED
 10917	015647'	254000	013436*		JRST ABTUUO		;ABORT THE UUO. IF ALREADY IN
 10918							;HIGHER TRAP WE WILL JUST DO THE INPUT
 10919							;AGAIN
 10920
 10921				;CALLED WHEN AN ORANGE BALL IS RECEIVED TO CHECK ON TRAPS
 10922
 10923	015650'	201300	200000	OBREC:	MOVEI	T1, LXROBS
 10924	015651'	436305	000032		IORM	T1, LDBDCX(U)	; SET "ORANGE BALL SEEN" BIT
 10925	015652'	550205	000000		HRRZ F,LDBDDB(U)	;GOT AN ORANGE BALL. DDB THERE?
 10926	015653'	322200	015630*		JUMPE F,CPOPJ		;NO
 10927	015654'	135300	000233'		LDB T1,DDPTOB		;GET THE CHANNEL NUMBER
 10928	015655'	254000	015645*		JRST TAKNZJ		;AND SET UP TO TRAP
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 243
SCNSER.MAC	25-JAN-91 22:40		ROUTINE TO TAKE A JOB OUT OF TIOW FOR A TRAP

 10929				SUBTTL	ROUTINE TO TAKE A JOB OUT OF TIOW FOR A TRAP
 10930
 10931	015656'	261040	000004	TTYWAK::PUSH P,F
 10932	015657'	261040	000000		PUSH P,S
 10933	015660'	260040	015700'		PUSHJ P,FRSTTY	;FIND THE FIRST TTY FOR THIS JOB
 10934	015661'	254000	015675'		 JRST TTYWK1	;NONE THERE, MUST NOT RALLY BE IN IOW
 10935	015662'	200004	000002	TTYWK2:	MOVE S,DEVIOS(F)
 10936	015663'	260040	006027'		PUSHJ P,TIWAKE	;WAKE HIM UP IF IN IOW
 10937	015664'	261040	000005		PUSH P,U
 10938	015665'	550244	000013		HRRZ U,DDBLDB(F)
 10939	015666'	322240	015671'		JUMPE U,TTYWK3	;NOT ATTACHED, NOTHING WE CAN DO
 10940	015667'	205000	400000		MOVSI S,L2LOEX	;SET EXTENDED OUTPUT BUFFER ING SO
 10941	015670'	436005	000027		IORM S,LDBBYT(U)	;JOB CAN FINISH UUO
 10942	015671'	262040	000005	TTYWK3:	POP P,U
 10943	015672'	260040	015702'		PUSHJ P,NXTTTY
 10944	015673'	334000	000000		 SKIPA		;NEXT TTY NOT THERE
 10945	015674'	254000	015662'		JRST TTYWK2	;TRY THE NEXT ONE
 10946	015675'	262040	000000	TTYWK1:	POP P,S		;FINISHED
 10947	015676'	262040	000004		POP P,F
 10948	015677'	263040	000000		POPJ P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 244
SCNSER.MAC	25-JAN-91 22:40		ROUTINES TO FIND A JOB'S TTY DDBS

 10949				SUBTTL	ROUTINES TO FIND A JOB'S TTY DDBS
 10950
 10951	015700'	550202	015552*	FRSTTY:	HRRZ F,TTYTAB(J)	;FIRST ONE SHOULD BE THE CONTROLING TTY
 10952	015701'	334000	000000		SKIPA
 10953	015702'	554204	000003	NXTTTY:	HLRZ F,DEVSER(F)	;IF WANT THE NEXT, FOLLOW CHAIN
 10954	015703'	322200	015653*		JUMPE F,CPOPJ		;DONE
 10955	015704'	200004	000004		MOVE S,DEVMOD(F)
 10956	015705'	607000	004010		TLNN S,DVTTY!DVRMT	;IS IT STILL A TTY OR RMT
 10957	015706'	263040	000000		POPJ P,			;NO
 10958	015707'	135000	015551*		LDB S,PJOBN
 10959	015710'	316000	000002		CAMN S,J		;FOR THIS JOB?
 10960	015711'	350001	000000		AOS (P)		;YES, SKIP RETURN
 10961	015712'	263040	000000		POPJ P,			;NO, FOUND THEM ALL
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 245
SCNSER.MAC	25-JAN-91 22:40		ROUTINE TO CLEAR SLEEP CONDITIONS FOR ALL TTYS

 10962				SUBTTL	ROUTINE TO CLEAR SLEEP CONDITIONS FOR ALL TTYS
 10963
 10964	015713'	261040	000004	TTSCLR::PUSH	P,F
 10965	015714'	261040	000000		PUSH	P,S
 10966	015715'	201340	000000		MOVEI	T2,0
 10967	015716'	135000	000000*		LDB	S,JBYWAK##	;GET WAKE CHANNEL
 10968	015717'	306000	000044		CAIN	S,^D36		;HIBER CODE?
 10969	015720'	137340	015716*		 DPB	T2,JBYWAK##	;YES, CLEAR IT
 10970	015721'	135000	000000*		LDB	S,JBYEXC##	;GET EXIT IN CHILD CHANNEL
 10971	015722'	306000	000044		CAIN	S,^D36		;HIBER CODE?
 10972	015723'	137340	015721*		 DPB	T2,JBYEXC##	;YES, CLEAR IT
 10973	015724'	260040	015700'		PUSHJ	P,FRSTTY
 10974	015725'	254000	015675'		  JRST	TTYWK1		;ALL DONE, (NO TTYS)
 10975	015726'	205000	004000	TTSCL2:	MOVSI	S,DVRMT
 10976	015727'	612004	000004		TDNE	S,DEVMOD(F)
 10977	015730'	254000	015754'		 JRST	TTSCL3		;DO NOT CLEAR FOR RMTS
 10978	015731'	135000	000226'		LDB	S,DDPTCH
 10979	015732'	306000	000044		CAIN	S,^D36		;IS THIS A SLEEP CODE?
 10980	015733'	137340	000226'		 DPB	T2,DDPTCH	;YES, CLEAR IT
 10981	015734'	135000	000227'		LDB	S,DDPTLN
 10982	015735'	306000	000044		CAIN	S,^D36
 10983	015736'	137340	000227'		 DPB	T2,DDPTLN	;NOW FOR LINE
 10984	015737'	261040	000005		PUSH	P,U
 10985	015740'	550244	000013		HRRZ	U,DDBLDB(F)	;GET LINK TO LDB
 10986	015741'	322240	015753'		JUMPE	U,TTSCL1	;NONE THERE, FINISHED THIS TTY
 10987	015742'	135000	000233'		LDB	S,DDPTOB	;WAITING FOR ORANGE BALL
 10988	015743'	306000	000044		CAIN	S,^D36
 10989	015744'	137340	000233'		 DPB	T2,DDPTOB	;CCLEAR SLEEP
 10990	015745'	135000	000227'		LDB	S,DDPTLN	;LINE
 10991	015746'	306000	000044		CAIN	S,^D36
 10992	015747'	137340	000227'		 DPB	T2,DDPTLN
 10993	015750'	135000	000226'		LDB	S,DDPTCH	;CHARACTER
 10994	015751'	306000	000044		CAIN	S,^D36
 10995	015752'	137340	000226'		 DPB	T2,DDPTCH
 10996	015753'	262040	000005	TTSCL1:	POP	P,U
 10997	015754'	260040	015702'	TTSCL3:	PUSHJ	P,NXTTTY
 10998	015755'	254000	015675'		  JRST	TTYWK1		;FINISHED, GET F AND S BACK AND GO
 10999	015756'	254000	015726'		JRST	TTSCL2		;MORE TO CLEAR
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 246
SCNSER.MAC	25-JAN-91 22:40		ROUTINE TO CLEAR ALL TRAP CONDITIONS FOR ALL TTYS

 11000				SUBTTL	ROUTINE TO CLEAR ALL TRAP CONDITIONS FOR ALL TTYS
 11001
 11002	015757'	261040	000004	TTTCLR::PUSH P,F
 11003	015760'	261040	000000		PUSH P,S
 11004	015761'	260040	015700'		PUSHJ P,FRSTTY
 11005	015762'	254000	015675'		 JRST TTYWK1	;NO MORE TTYS THERE
 11006	015763'			TTTCL1:
 11007				;*;	MOVSI S,DVRMT
 11008				;*;	TDNE S,DEVMOD(F)
 11009				;*;	 JRST	[PUSHJ P,RMTRSI	;RESET FOR REMOTE
 11010				;*;		JRST TTTCL2]
 11011
 11012			000000	ZZ0==0
 11013				REPEAT <TRPLEN+5>/6,<
 11014					SETZM	DDBTRP+ZZ0(F)
 11015				ZZ0==ZZ0+1>
 11016	015763'	402004	000014
 11017	015764'	402004	000015
 11018
 11019	015765'	260040	015702'	TTTCL2:	PUSHJ P,NXTTTY		;FIND THE NEXT ONE FOR THIS JOB
 11020	015766'	254000	015675'		 JRST TTYWK1		;DONE
 11021	015767'	254000	015763'		JRST TTTCL1		;CLEAR IT ALSO
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 247
SCNSER.MAC	25-JAN-91 22:40		THIS ROUTINE ASSIGNES TRAP CHANNELS TO TTY TRAP CONDS

 11022				SUBTTL	THIS ROUTINE ASSIGNES TRAP CHANNELS TO TTY TRAP CONDS
 11023				;CALLED WITH T3 CHANNEL NUMBER
 11024				;	T2 TRAP NUMBER
 11025				;	F TTY DDB
 11026				;	SKIP RETURN IF TRAP CONDITION NOW SATISFIED
 11027
 11028	015770'	135307	000225'	TINAS1::LDB T1,DDPTAB(T2)	;GET CURRENT
 11029	015771'	303400	000043		CAILE T3,^D35		;REAL INTERRUPT CHANNEL?
 11030	015772'	326300	015703*		 JUMPN T1,CPOPJ		;NO, SLEEP. DON'T CLEAR IF INT. THERE
 11031	015773'	137407	000225'		DPB T3,DDPTAB(T2)	;SET TRAP CONDITION IN DDB
 11032	015774'	322400	015772*		JUMPE T3,CPOPJ		;IF ENABLING, NOT DISABLING,
 11033	015775'	550244	000013		HRRZ U, DDBLDB(F)	;  GET LDB IF THERE IS ONE
 11034	015776'	256007	016000'		XCT INTSET(T2)		;  AND CHECK IF IT'S ALREADY TRUE
 11035	015777'	263040	000000		POPJ P,			;IN CASE WE DO NOT TRANSFER
 11036
 11037				;INTERRUPT TEST TABLE - MUST BE IN THE SAME ORDER AS DDPTAB
 11038
 11039	016000'	263040	000000	INTSET:	POPJ P,		;ESCAPE, WILL GET IT LATER
 11040	016001'	326240	016020'		JUMPN U,CHKCHR	;IF LINE PRESENT, CHECK FOR CHARACTERS
 11041	016002'	326240	016027'		JUMPN U,CKLNTR	;IF LINE PRESENT, CHECK FOR BREAKS
 11042	016003'	263040	000000		POPJ P,		;IOW, NEVER PRESET
 11043	016004'	263040	000000		POPJ P,		;FINISH IO
 11044	016005'	254000	016014'		JRST CHKLOS	;LOST CHARACTERS
 11045	016006'	263040	000000		POPJ P,		;ORANGE BALL, NEVER KNOW
 11046	016007'	263040	000000		POPJ P,		;CIRCUIT ZAPPED
 11047	016010'	326240	016043'		JUMPN U,CHKPSP	;IF LINE PRESENT, CHECK FOR UNREAD PORT-STATUS
 11048	016011'	326240	016060'		JUMPN U,CHKYEL	;YELLOW BALL, PERHAPS ONE IS PENDING
 11049	016012'	263040	000000		POPJ P,		;CHARACTER GOBBLER, NOT BUFFERED
 11050	016013'	326240	016047'		JUMPN U,CHKTCC	;IF LINE PRESENT, CHECK FOR CHANGED TC'S
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 248
SCNSER.MAC	25-JAN-91 22:40		ROUTINES TO CHECK IF TRAP CONDITION ALREADY SATISFIED

 11051				SUBTTL	ROUTINES TO CHECK IF TRAP CONDITION ALREADY SATISFIED
 11052
 11053				; CHECK IF CHARACTERS LOST (BY READING IO.BKT)
 11054
 11055	016014'	200004	000002	CHKLOS:	MOVE S,DEVIOS(F)
 11056	016015'	602000	040000		TRNE S,IOBKTL
 11057	016016'	350001	000000		AOS (P)		;BIT ALREADY SET CAN TRAP NOW
 11058	016017'	263040	000000		POPJ P,
 11059
 11060				; CHECK IF CHARACTERS PRESENT (BY READING LDB COUNTS)
 11061
 11062	016020'	500245	000031	CHKCHR:	HLL U,LDBDCH(U)
 11063	016021'	603240	020000		TLNE U,LDLCOM
 11064	016022'	263040	000000		POPJ P,		;NOT SAT AT INTERRUPT LEVEL
 11065	016023'	337005	000014		SKIPG LDBECC(U)	;CHRS TO BE ECHOED
 11066	016024'	333005	000012		SKIPLE LDBTIC(U)	;OR ALREDY ECHOED
 11067	016025'	350001	000000		AOS (P)		;YES
 11068	016026'	263040	000000		POPJ P,
 11069
 11070				; CHECK IF A BREAK CHARACTER IS PRESENT (BY READING LDB COUNTS)
 11071
 11072	016027'	500245	000031	CKLNTR:	HLL U,LDBDCH(U)
 11073	016030'	603240	020000		TLNE U,LDLCOM
 11074	016031'	263040	000000		 POPJ P,
 11075	016032'	200305	000012		MOVE T1,LDBTIC(U)
 11076	016033'	270305	000014		ADD T1,LDBECC(U)	;ENOUGH?
 11077	016034'	301300	000110		CAIL T1,TIWKC
 11078	016035'	254000	015553*		 JRST CPOPJ1		;YES
 11079	016036'	603240	004000		TLNE U,LDLBK2	;WHICH BREAK SET
 11080	016037'	337005	000016		 SKIPG LDBBK2(U)
 11081	016040'	333005	000015		SKIPLE LDBBKC(U)	;TEST CORRECT ONE(S)
 11082	016041'	350001	000000		 AOS (P)
 11083	016042'	263040	000000		POPJ P,
 11084
 11085				; CHECK IF A PORT STATUS MESSAGE IS WAITING TO BE READ
 11086				;See comment at ACPSM
 11087
 11088	016043'	205300	200000	CHKPSP:	MOVSI	T1, LMLPSP
 11089	016044'	603305	000030		TLNE	T1, LDBMOD(U)	; IS THERE A MESSAGE WAITING?
 11090	016045'	350001	000000		 AOS	(P)		; YES
 11091	016046'	263040	000000		POPJ	P,
 11092
 11093				; CHECK IF ANY TERMINAL CHARACTERISTICS HAVE CHANGED
 11094
 11095	016047'	500245	000031	CHKTCC:	HLL	U, LDBDCH(U)
 11096	016050'	616240	040000		TDNN	U, LDLPTY	;IF IT'S NOT A PTY,
 11097	016051'	263040	000000		 POPJ	P,		;  OF COURSE NOT
 11098	016052'	261040	000005		PUSH	P, U
 11099	016053'	260040	007763'		PUSHJ	P, PTYBUD
 11100	016054'	332005	000004		SKIPE	LDBTCB(U)	;ANY UNREAD CHANGES?
 11101	016055'	350001	777777		AOS	-1(P)		;(YES)
 11102	016056'	262040	000005		POP	P, U
 11103	016057'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 248-2
SCNSER.MAC	25-JAN-91 22:40		ROUTINES TO CHECK IF TRAP CONDITION ALREADY SATISFIED

 11104
 11105
 11106				; Test for Yellow ball interrupt condition satisfied:
 11107				;   Skip return if a Yellow ball has been received and no Orange ball
 11108				;   has yet been sent.  If an Orange ball is waiting to be output, it
 11109				;   must be due to a Yellow ball being received while the interrupt
 11110				;   was not enabled.  If the interrupt was enabled, the user will have
 11111				;   already taken the trap.
 11112
 11113	016060'	135300	000104'	CHKYEL:	LDB	T1,LOPSOG	;is OB waiting to be output?
 11114	016061'	626300	000001		TRZN	T1,1		;if so, recall it...
 11115	016062'	263040	000000		 POPJ	P,
 11116	016063'	137300	000104'		DPB	T1,LOPSOG	;its now the user's responsibility
 11117	016064'	205300	004000		MOVSI	T1,LXLOOK	
 11118	016065'	436305	000032		IORM	T1,LDBDCX(U)	;okay for user to send an orange ball
 11119	016066'	350001	000000		AOS	(P)		
 11120	016067'	263040	000000		POPJ	P,
 11121
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 249
SCNSER.MAC	25-JAN-91 22:40		SEND A YELLOW BALL

 11122				SUBTTL	SEND A YELLOW BALL
 11123
 11124	016070'	550244	000013	TTYYLS::HRRZ	U, DDBLDB(F)
 11125	016071'	322240	015774*		JUMPE	U, CPOPJ
 11126	016072'	261040	000006		PUSH	P, T1		;SAVE T1
 11127	016073'	201300	000001		MOVEI	T1, 1
 11128	016074'	137300	000077'		DPB	T1, LOPSYL	;SET SEND-YELLOW
 11129	016075'	137305	000002		DPB	T1, LDBOPB(U)	;AND NEED-OUTPUT
 11130	016076'	254000	015646*		JRST	TPOPJ		;RESTORE T1 AND RETURN
 11131
 11132	016077'	205000	040000	SETFIO:	MOVSI S,TINFIO
 11133	016100'	437004	000002		IORB S,DEVIOS(F)	;SET A FLAG SO WE KNOW WE TRAPPED
 11134								;INSTEAD OF GOING INTO IOW
 11135	016101'	263040	000000		POPJ P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 250
SCNSER.MAC	25-JAN-91 22:40		FNDPRT - CALLED WITH J/ JOB #, F/ -1 OR PORT #

 11136				SUBTTL	FNDPRT - CALLED WITH J/ JOB #, F/ -1 OR PORT #
 11137				;	   LOOKS FOR A DDB FOR THAT PORT/JOB (-1 IS CMND PORT)
 11138				;	   NONSKIP-RETURNS IF THERE IS NONE
 11139				;	   SKIP-RETURNS WITH F/ DDB ADDR IF THERE IS
 11140
 11141				FNDPRT::JUMPL	F,[HRRZ F,TTYTAB(J)	;COMMAND PORT
 11142	016102'	321200	017444'			   JRST FNDPT1]
 11143	016103'	301200	014446*		CAIL	F,PORTN##
 11144	016104'	263040	000000		 POPJ	P,		;MUST NOT BE THERE
 11145	016105'	200204	014450*		MOVE	F,LINTAB(F)
 11146	016106'	550204	000000		HRRZ	F,LDBDDB(F)
 11147	016107'	322200	016071*	FNDPT1:	JUMPE	F,CPOPJ		;NO DDB ATTACHED
 11148	016110'	261040	000006		PUSH	P,T1
 11149	016111'	135300	015707*		LDB	T1,PJOBN
 11150	016112'	312300	000002		CAME	T1,J		;THIS JOB?
 11151	016113'	254000	016076*		 JRST	TPOPJ		;NO
 11152	016114'	254000	014666*		JRST	TPOPJ1		;YES
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 251
SCNSER.MAC	25-JAN-91 22:40		TINASS UUO - ASSIGN TTY INTERRUPTS

 11153				SUBTTL	TINASS UUO - ASSIGN TTY INTERRUPTS
 11154				;(MOST OF THE WORK IS DONE IN TINAS1)
 11155
 11156	016115'	135400	017446'	TINASS::LDB T3,[POINT 9,T1,17]	;GET THE CHANNEL NUMBER
 11157	016116'	307400	000043		CAIG T3,^D35
 11158	016117'	335002	000000*		SKIPGE JBTPIP(J)	;IF TOO LARGE OR NO INTADR
 11159	016120'	263040	000000		POPJ P,			;TAKE ERROR RETURR
 11160	016121'	550202	015700*		HRRZ F,TTYTAB(J)
 11161	016122'	550204	000013		HRRZ F,DDBLDB(F)
 11162	016123'	322200	016127'		JUMPE F,TINDET		;DETACHED, OK
 11163	016124'	205340	200000		MOVSI T2,LLLZAP
 11164	016125'	612344	000026		TDNE T2,LDBLOG(F)
 11165	016126'	263040	000000		 POPJ P,		;CAN NOT SET IF WAITING FOR LOGUT
 11166	016127'	570200	000006	TINDET:	HRRE F,T1
 11167	016130'	260040	016102'		PUSHJ P,FNDPRT
 11168	016131'	263040	000000		 POPJ P,		;BAD PORT NUMBER
 11169	016132'	135340	017447'		LDB T2,[POINT 9,T1,8]	;GET INTERRUPT NUMBER
 11170	016133'	301340	000014		CAIL T2,TRPLEN		;TOO LARGE?
 11171	016134'	263040	000000		POPJ P,		;YES
 11172	016135'	260040	015770'		PUSHJ P,TINAS1		;GO ASSIGN
 11173	016136'	254000	007442'		 JRST STOTC1		;GOT IT, GIVE BACK OLD
 11174	016137'	261040	000006		PUSH P,T1		;CONDITION SAT, SAVE OLD CHANNEL
 11175	016140'	200300	000010		MOVE T1,T3
 11176	016141'	260040	006676*		PUSHJ P,TAKTRP	;TAKE THE TRAP
 11177	016142'	262040	000006		POP P,T1
 11178	016143'	254000	007442'		JRST STOTC1		;AND RETURN THE ANSWER
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 252
SCNSER.MAC	25-JAN-91 22:40		INITIALIZE

 11179				SUBTTL	INITIALIZE
 11180				;INITIALIZE THE WORLD. THIS ROUTINE DOES NOT MAKE PROPER
 11181				;PROVISION FOR 140 RESTART SINCE THAT ABILITY IS NO LONGER
 11182				;OF ANY IMPORTANCE
 11183
 11184				;Beware, this routine (between TTYINI and TTIEND) is overwritten by
 11185				;hackers to patch running monitors on the assumption that the
 11186				;code is never reentered after system initialization.  Beware
 11187				;if this ever changes!  The CONFIG gettab points to TTYINI as
 11188				;the dynamic patch area.
 11189			016145'	PATCH2=:TTYINI+1	;Make it obvious
 11190
 11191	016144'	402000	016412'	TTYINI::SETZM	INTERM
 11192	016145'	402000	012440*		SETZM	BPREQ		;INITIALLY NO BLOCK PORTS
 11193	016146'	402000	016413'		SETZM	OPRTIM		;START WITH NO ALARM FLAGS SET
 11194	016147'	476000	000632*		SETOM	THSTIM##	;TIMER FLAGS
 11195	016150'	402000	000635*		SETZM	MXTIM##
 11196	016151'	201300	013621'		MOVEI	T1,CCTYI
 11197	016152'	202300	013644*		MOVEM	T1,.CPTIA##	;SET UP COMMAND READ AND WRITE
 11198	016153'	201300	013611'		MOVEI	T1,CCTYO
 11199	016154'	202300	014060*		MOVEM	T1,.CPTOA##
 11200	016155'	550240	016105*		HRRZ	U,LINTAB
 11201	016156'	552240	016572'		HRRZM	U,LDB.LO	;Address of first LDB on systems
 11202	016157'	200600	017450'		MOVE	P1,[POINT 1,LINFLG]	;READY TO SET BYTE PTRS
 11203	016160'	205640	777777*		MOVSI	P2,NMXLIN##-1	;NOW ALL LINES
 11204	016161'	550255	016155*	TTINI2:	HRRZ	U,LINTAB(P2)	;POINT TO LDB
 11205	016162'	205305	000000		MOVSI	T1,LDICLR(U)	;CLEAR IT OUT
 11206	016163'	541305	000001		HRRI	T1,LDICLR+1(U)
 11207	016164'	402005	000000		SETZM	LDICLR(U)
 11208	016165'	251305	000050		BLT	T1,LDICLE(U)
 11209	016166'	137640	000157'		DPB	P2,LDPLNO	;RESTORE LINE NUMBER
 11210	016167'	133000	000014		IBP	P1		;TO POINT TO NEXT BIT
 11211	016170'	202605	000002		MOVEM	P1,LDBOPB(U)
 11212	016171'	402014	000000		SETZM	(P1)		;MAKE SURE FLAG WORD IS 0
 11213	016172'	200415	016161*		MOVE	T3,LINTAB(P2)	;CHECK INITIALIZE BITS
 11214	016173'	336000	000000*		SKIPN	REFLAG		;BUT NOT IF REFRESING
 11215	016174'	607400	000000*		TLNN	T3,TTVINI
 11216	016175'	254000	016223'		 JRST	TTINI3		;NOT RUN INITIA
 11217	016176'	205300	000001		MOVSI	T1,(STAUTO)
 11218	016177'	616300	014753*		TDNN	T1,STATES
 11219	016200'	254000	016223'		 JRST	TTINI3		;DO NOT RUN IF NOT AUTO-RESTART
 11220	016201'	200300	017367'		MOVE	T1,[LLLNLN,,LDLCOM]
 11221	016202'	512305	000026		HLLZM	T1,LDBLOG(U)	;MARK IN (BUT UNKNOWN TO TYMNET)
 11222	016203'	516305	000031		HRLZM	T1,LDBDCH(U)	;SET LOGGED IN AND COMMAND MODE
 11223	016204'	200300	014333*		MOVE	T1,SYSNUM##	;Our host number
 11224	016205'	137300	000160'		DPB	T1,LDPHST	; for job running INITIA (DSKCLN)
 11225	016206'	201300	000001		MOVEI	T1,1
 11226	016207'	137300	000056'		DPB	T1,LOPHSH	;SET HUSH BIT TO SUPRESS OUT MESSAGES
 11227	016210'	402005	000032		SETZM	LDBDCX(U)	;NO EXTENDED BITS ON
 11228	016211'	260040	007622'		PUSHJ	P,SETLMD
 11229	016212'	260040	014337*		PUSHJ	P,FRMASN##	;Assign a Job/frame slot
 11230	016213'	256000	000000'		 STOPCD			;Strictly Fatal
 11231				;;***NOTE*** Can't call TTYATI here since it calls DDBSRC, which
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 252-2
SCNSER.MAC	25-JAN-91 22:40		INITIALIZE

 11232				;;***NOTE*** uses TTYFLK, which points at DEVLST-DEVSER.  This
 11233				;;***NOTE*** in turn means that DEVLST gets smashed when DDB is
 11234				;;***NOTE*** allocated, thus causing TTYINI to get called twice.
 11235				;;***NOTE*** Go please the world.
 11236	016214'	201300	000250'		MOVEI	T1,TTYLST	;Start DDB search from here
 11237	016215'	260040	015510'		PUSHJ	P,DDBSR1	;Get a TTY DDB
 11238	016216'	256000	000000'		 STOPCD 		;No errors allowed here
 11239					PUSHJ	P,[PUSH P,U
 11240	016217'	260040	017451'			   JRST TTYAT1]	;IT'S NOT SUCH A BAD HACK...
 11241	016220'	256000	000000'		 STOPCD 		;Last chance for fatal error...
 11242	016221'	201300	014343*		MOVEI T1,CMFCXI##	;Forced command index for INITIA
 11243				IFKMC<
 11244					SKIPGE KMCDO##		;GREATER OR EQUAL 0 NOT KMC MANUAL MODE
 11245					 MOVEI T1,CMFCKM##	;DO FORCE KMC LOAD
 11246				>;END IFKMC
 11247	016222'	260040	013565'		PUSHJ P,TTFORC
 11248
 11249	016223'	253640	016161'	TTINI3:	AOBJN	P2,TTINI2
 11250	016224'	552240	016573'		HRRZM	U,LDB.HI	;Address of highest LDB on system
 11251	016225'	402000	014761*		SETZM	DEVOPR		;NO OPER YET
 11252	016226'	402000	016405'		SETZM	OPRLDB		;AND HAS NOLDB
 11253	016227'	550300	000000*		HRRZ	T1,TTCLST##	;SET UP FREE LIST
 11254	016230'	202300	016570'		MOVEM	T1,RCC.LO	;Lowest chunk address
 11255	016231'	201106	000004		MOVEI	J,TTCHKS(T1)	;SET FREE POINTER TO FIRST
 11256	016232'	202100	006267*		MOVEM	J,TTFREE##
 11257	016233'	554400	016227*		HLRZ	T3,TTCLST##	;GET SIZE (number of chunks in list)
 11258	016234'	202400	016375'		MOVEM	T3,TTFREN
 11259	016235'	370000	016375'		SOS	TTFREN		;ONE LESS SINCE NO CHUNK 0
 11260	016236'	221400	000004		IMULI	T3,TTCHKS
 11261	016237'	271406	000000		ADDI	T3,(T1)
 11262	016240'	202400	016571'		MOVEM	T3,RCC.HI	;One greater than highest chunk address
 11263	016241'	402006	000000		SETZM	(T1)		;ZERO OUT FREE LIST
 11264	016242'	201106	000001		MOVEI	J,1(T1)		;Build BLT pointer
 11265	016243'	504100	000006		HRL	J,T1
 11266	016244'	251110	777777		BLT	J,-1(T3)	;ZERO ALL OF IT
 11267	016245'	201406	000010		MOVEI	T3,TT2CHK(T1)	;NOW LINK UP
 11268	016246'	200100	016375'		MOVE	J,TTFREN	;NUMBER TO LINK
 11269	016247'	202406	000004	TTINI4:	MOVEM	T3,TTCHKS(T1)
 11270	016250'	271300	000004		ADDI	T1,TTCHKS	;MOVE FORWARD
 11271	016251'	505406	000000		HRLI	T3,(T1)		;SET BACK LINK
 11272	016252'	541406	000010		HRRI	T3,TT2CHK(T1)	;AND FORWARD
 11273	016253'	367100	016247'		SOJG	J,TTINI4	;STORE IF NOT DONE
 11274	016254'	513006	000000		HLLZS	(T1)		;ZERO FORWARD LINK OF LAST ONE
 11275	016255'	263040	000000		POPJ	P,
 11276
 11277			016255'	TTIEND=:.-1  ;end of area used for dynamic patches, see comment at TTYINI:
 11278
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 253
SCNSER.MAC	25-JAN-91 22:40		INITIALIZE

 11279				IFCPU(F3),<
 11280				;ROUTINE TO RESYNC WITH NEXILIS BASE.
 11281				; CALLED FROM AT SYSTEM STARTUP AND WHEN BASE CRASHES.
 11282				
 11283				INTEGER	MWAIT,MZEROS
 11284				
 11285				OPDEF TNCONO [744000,,0]
 11286				OPDEF TNOUT [745000,,0]
 11287				OPDEF TNIN [746000,,0]
 11288				
 11289					NZEROS==300		;Number of zeroes to send to PDP-11
 11290					NWAIT==^D60*^D24	;Number of clock ticks max per zero
 11291				
 11292				
 11293				FNSYNC:	SKIPE	CTYDO##		;If using CTYSIM instead of TYMNET,
 11294					 JRST	CPOPJ1		; say all done
 11295					SKIPG	MZEROS		;Waiting for acceptance?
 11296					 JRST	FNSYN0		; No, try this again -- reset
 11297					TNIN	T1		;Yes, read something
 11298					TLNE	T1,(1B5)	;Skip if not accepted
 11299					 JRST	FNSYN2		; Got a zero, go decrement counter
 11300					SOSLE	MWAIT		;Are we waiting for acceptance?
 11301					 POPJ	P,		;Yes, so wait another tick
 11302				FNSYN0:	TNCONO	0		;Reset the interface.
 11303								;Turn off input and output to the 11-base
 11304					MOVEI	T1,NZEROS	;Set number of zeroes to TRY to send.
 11305					MOVEM	T1,MZEROS	;Store in counter field
 11306				FNSYN1:	TNOUT	0		;Send a zero
 11307					MOVEI	T1,NWAIT	;Get timeout period in clock tics
 11308					MOVEM	T1,MWAIT	; and store in timeout counter
 11309					POPJ	P,		;Return and wait for another tick
 11310				
 11311				FNSYN2:	SOSLE	MZEROS		;Are we waiting for more zeroes?
 11312					 JRST	FNSYN1		;Yes, send one and read it next tick
 11313					TNCONO	1B34!1B35	;No, all here -- turn on PDP-11 interrupts
 11314					SETZM	BASVER##	;Clear base version number
 11315					JRST	CPOPJ1		; and skip return this time.
 11316				>;END IFCPU(F3)
 11317
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 254
SCNSER.MAC	25-JAN-91 22:40		ROUTINES TO LOG IRING AND ORING ACTIVITY

 11318				SUBTTL	ROUTINES TO LOG IRING AND ORING ACTIVITY
 11319
 11320				;IRPLOG - routine to keep a log of iring messages
 11321				;
 11322				;  Assumes P1 and U may be clobbered since they will be
 11323				;  reused immediately upon return.  If this changes, the
 11324				;  appropriate registers should be saved.
 11325
 11326	016256'	200257	012556*	IRPLOG:	MOVE	U,IRING(P4)		; Get IRING message
 11327	016257'	350600	000000*		AOS	P1,SCNPTR##		; Increment to next position
 11328	016260'	405600	000000*		ANDI	P1,SCNMSK##		; Keep offset
 11329	016261'	326600	016265'		JUMPN	P1,IRPLO1		; Not first - just log it
 11330	016262'	200600	011301*		MOVE	P1,DATE##		; Get current daytime
 11331	016263'	202600	000000*		MOVEM	P1,SCNUDT##		; And remember...
 11332	016264'	400600	000000		SETZ	P1,			; Clear counter
 11333	016265'	202254	000000*	IRPLO1:	MOVEM	U,SCNBUF##(P1)		; Store
 11334	016266'	263040	000000		POPJ	P,			; Return
 11335
 11336				;ORPLOG - routine to keep a log of oring messages
 11337				;
 11338				;  Assumes P3 already setup containing data to store
 11339				;  (If not, ORING(P4) does contain the correct data)
 11340
 11341	016267'	261040	000014	ORPLOG:	PUSH	P,P1			; Save P1
 11342	016270'	350600	016257*		AOS	P1,SCNPTR##		; Increment to next position
 11343	016271'	405600	016260*		ANDI	P1,SCNMSK##		; Keep offset
 11344	016272'	326600	016276'		JUMPN	P1,ORPLO1		; Not first - just log it
 11345	016273'	200600	016262*		MOVE	P1,DATE##		; Get current daytime
 11346	016274'	202600	016263*		MOVEM	P1,SCNUDT##		; And remember...
 11347	016275'	400600	000000		SETZ	P1,			; Clear counter
 11348	016276'	202714	016265*	ORPLO1:	MOVEM	P3,SCNBUF##(P1)		; Log it
 11349	016277'	262040	000014		POP	P,P1			; Restore P1
 11350	016300'	263040	000000		POPJ	P,
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 255
SCNSER.MAC	25-JAN-91 22:40		DATA

 11351				SUBTTL	DATA
 11352
 11353						;123456789012; Each entry must be exactly 12 characters long
 11354	016301'	552323	000000	AUXNTB:	SIXBIT	/M33         /
	016302'	000000	000000
 11355	016303'	556054	000000		SIXBIT	/MPL         /
	016304'	000000	000000
 11356	016305'	636054	000000		SIXBIT	/SPL         /
	016306'	000000	000000
 11357	016307'	576365	000000		SIXBIT	/OSU         /
	016310'	000000	000000
 11358	016311'	676263	000000		SIXBIT	/WRS         /
	016312'	000000	000000
 11359	016313'	434162	540000		SIXBIT	/CARL        /
	016314'	000000	000000
 11360	016315'	525563	000000		SIXBIT	/JMS         /
	016316'	000000	000000
 11361	016317'	576355	415600		SIXBIT	/OSMAN       /
	016320'	000000	000000
 11362	016321'	536265	556660		SIXBIT	/KRUMVP      /
	016322'	000000	000000
 11363	016323'	626651	665145		SIXBIT	/RVIVIER     /
	016324'	620000	000000
 11364	016325'	555757	625156		SIXBIT	/MOORING     /
	016326'	470000	000000
 11365	016327'	545156	532120		SIXBIT	/LINK10      /
	016330'	000000	000000
 11366	016331'	647063	636560		SIXBIT	/TXSSUP      /
	016332'	000000	000000
 11367	016333'				BLOCK	40
 11368			000072	AUXNTL==.-AUXNTB
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 256
SCNSER.MAC	25-JAN-91 22:40		VARIABLES

 11369				SUBTTL	 VARIABLES
 11370
 11371				IFKMC<
 11372				BBCNTS:	EXP	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;16 WORDS
 11373				BBPAGE:	EXP	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 11374				       	EXP	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0	;32 WORDS
 11375				TIMMIN:	EXP ^D60
 11376				TIMDRD:	EXP ^D60
 11377				DRMHSI:	0
 11378				DRMSHT:	0
 11379				DRMBRK:	0
 11380				DRMANS:	0
 11381				DRMCLP:	0
 11382				DRMTIM::0 ;SECONDS OF UP TIME
 11383				DRDOW:	0
 11384				SENT41:	EXP 0,0,0,0	;SET ON SENDING 41, RESET ON RECIEVING 3 OR 1
 11385				KMCLAS:	0	;LAST KMCGAV,KMCGAC
 11386				KMCPDP::	0
 11387				KMCFLG::	REPEAT ^D64,<EXP 0>;KMC ACTIVE FLAG HISTORY
 11388				IRPMSG::	0
 11389				IRPMS2::	0
 11390				IRPMS3::	0
 11391				IRPMP1::	0
 11392				IRPMP2::	0
 11393				IRPMP3::	0
 11394				IRPMB1::	0
 11395				IRPMB2::	0
 11396				IRPMB3::	0
 11397					>;END IFKMC
 11398	016373'	000000	000000	BADGUY:	0	;COUNTER INCREMENTED IN GOHSH:
 11399	016374'	000000	000000	FSCN:	0
 11400	016375'	000000	000000	TTFREN:	0	;NUMBER OF FREE CHUNKS LEFT
 11401	016376'	000000	000000	INPCH:	0
 11402	016377'	000000	000000	LINPTR:	0	;OUTPUT SCAN POINTER
 11403	016400'	000000	000000	CHCNT:	0	;# REMAINING CHARS TO OUTPUT AT A TIME ON A PORT
 11404	016401'	000000	000000	CHQTA:	0	;VALUE THAT CHCNT WAS SET TO AT START OF CYCLE
 11405	016402'	000000	000000	SVSPC:	0
 11406	016403'	000000	000000	TTCMCH::0	;HERE IS CHARACTER FOR COMMAND DECODER
 11407	016404'	000000	000000	TTCMCA::0	;INPUT POINTER FOR COMMAND BEING DECODED
 11408	016405'	000000	000000	OPRLDB::0	;LDB FOR OPER CONSOLE FOR MSGS ETC
 11409	016406'	000000	000000	UPSHUT:	0	;PLACE FOR UP-SHUT COMMAND TO BE STORED
 11410
 11411	016407'	000000	000000	LINPNM:	0	;SAVE LINE NUMBER FROM JFFO
 11412	016410'	000000	000000	LINFSV:	0	;SAVE FLAG WORD
 11413	016411'	000000	000000	SVOJFF: 0	;SAVE OUTPUT BIT NO FROM LDBOUT
 11414	016412'	000000	000000	INTERM::0	;Count of active terminals
 11415	016413'	000000	000000	OPRTIM::0
 11416	016414'	000000	000000	FRETTY::0	;POINTER TO FREE TTY DDBS
 11417	016415'	000000	000000	TTYFLK::0	;POINTER TO WHERE TO LINK IN TTY BLOCKS
 11418	016416'	000000	000000	CHRRDP:	0	;BYTE POINTER TO INPUT RING FOR CHARACTER INPUT
 11419	016417'	000000	000000	CHRWRP:	0	;REAL TTY: BYTE POINTER TO OUTPUT RING
 11420	016420'	000000	000000		0	;PTY: BYTE POINTER TO PTY BUFFER
 11421	016421'	000000	000000	MULCNT:	0	;REAL TTYS: # CHARS MORE WILL FIT IN OUTPUT RECORD
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 256-2
SCNSER.MAC	25-JAN-91 22:40		VARIABLES

 11422	016422'	000000	000000		0	;PTYS: # CHARS MORE PTY OUTPUT THIS SECOND
 11423	016423'	000000	000000	MXMCNT:	0	;REAL TTYS: ORIGINAL VALUE OF MULCNT
 11424	016424'	000000	000000	TIMOW:	0	;TIMER FOR ORANGE-BALL WAIT ON CIRCUIT ZAPS
 11425	016425'	000000	000000	ALRSNT:	0
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 257
SCNSER.MAC	25-JAN-91 22:40		VARIABLES

 11426	016426'	777777	777777	AUXRCP:: -1	;RECEIVED AUX PORT
 11427	016427'	000000	000000	AUXSTA:	0	;AUX CIRCUIT STATE
 11428	016430'			AUXSTR::BLOCK AUXSTL	;SPACE FOR STRING
 11429	016440'	000000	000000	AUXEND:: 0	;Pointer to last word used in AUXSTR
 11430	016441'	000000	000000	AUXSTP:	0	;STRING POINTER
 11431	016442'	000000	000000	AUXERR:: 0	;ERROR FROM AUX CIRCUIT BUILD
 11432	016443'	000000	000000	AUXJOB:	0	;JOB BUILDING AUX CIRCUIT
 11433	016444'	000000	000000	AUXWSC: 0	;# OF AUX-BUILTS RECEIVED IN WRONG STATE
 11434	016445'	000000	000000	AUXWPC: 0	;# OF AUX-BUILTS RECEIVED GIVING WRONG PORT
 11435	016446'	777777	777777	AUXWPT:	-1	;PORT LDB ADDRESS OF THE LAST ONE
 11436	016447'	000000	000000	NRPCNT: 0	;# TIMES WE GAVE "NO PORT RECEIVED" ERROR
 11437	016450'	000000	000000	ZRPCNT: 0	;# TIMES WE ZAPPED THE RECEIVED PORT
 11438	016451'	000000	000000	BIOJOB:	0	;JOB INITIATING BLOCK I/O FOR PORT.
 11439	016452'	000000	000000	AUXPRT:	0	;PORT BEING BUILT FROM
 11440	016453'	000000	000000	AUXTIM:	0	;AUX CIRCUIT TIMER
 11441	016454'			AUXUNM:	BLOCK 2	;SPACE TO BUILD UP A USER NAME
 11442	016456'	000000	000000	BUFLST:	0	;HEADER FOR LIST OF BLOCK INPUT/OUTPUT BUFFERS
 11443	016457'	000000	000000	BIOCNT:	0	;REAL TTYS: # OF JOBS ENABLED TO DO BLOCK I/O
 11444						;	    LH := -1 AS A FLAG TO BLKNEG CODE
 11445	016460'	000000	000000		0	;PTYS: # OF JOBS ENABLED TO DO PSEUDO-BLOCK I/O
 11446	016461'	000000	000000	BIOPRT: 0	;# OF BLOCK I/O PORTS, I.E., THE LAST RESPONSE
 11447						;FROM THE BASE TO A NEGOTIATE MESSAGE
 11448	016462'	000000	000000	BIOBUF: 0	;# OF MONITOR BLOCK I/O BUFFERS
 11449	016463'	000000	000000	BBFREE:	0	;# OF FREE MONITOR BLOCK I/O BUFFERS
 11450	016464'	000000	000000	BBCRE:	0	;# OF BIO BUFFERS CREATED SINCE MONITOR LOADED (KS ONLY)
 11451	016465'	000000	000000	BBREL:	0	;# OF BIO BUFFERS RELEASED (KS ONLY)
 11452	016466'	000000	000000	BBPOOL:	0	;COUNT OF BIO BUFFER RE-USE SINCE MONITOR LOADED
 11453	016467'	000000	000000	BIOANS: 0	;# OF BLOCK I/O NEGOTIATE MESSAGES SENT BUT NOT
 11454						;YET REPLIED-TO
 11455	016470'	000000	000000	ERRBNG: 0	;# OF UNSOLICITED BLOCK I/O NEGOTIATE MESSAGES
 11456	016471'	000000	000000	DWNFLG::0	;WANT TO TAKE SYSTEM DOWN
 11457	016472'	000000	000000	CTYFIL::0	;NUMBER OF FILLS NEEDED BY CTY
 11458	016473'	000000	000000	CTYFLN:	0	;COUNTER WHEN SENDING FILLS TO CTY
 11459	016474'	000000	000000	OPRWJB:	0	;JOB WAITING FOR SETUUO OPR MSG
 11460	016475'	000000	000120	TIWRNN: TILOW	;SMALL QUOTA FOR UNREAD INPUT CHARACTERS (^D80)
 11461						;(BACKPRESSURE WHEN IT'S EXCEEDED)
 11462	016476'			TIHLTN:		;LARGE QUOTA FOR UNREAD INPUT CHARACTERS
 11463						; MUST BE AT LEAST AS LARGE AS THE MAX NUMBER OF CHARS THE
 11464						; INPUT RING CAN HOLD * 2 + TIWRNN,
 11465						;  OTHERWISE CHARS COULD BE LOST
 11466				  IFDEF  SIZIRG, <<1_SIZIRG>*4*2+TILOW> ;^D1104 for normal sized rings
 11467	016476'	000000	002120	  IFNDEF SIZIRG, <^D512*2+TILOW>
 11468				  ;IFNKMC	<^D500>	;LARGE QUOTA FOR UNREAD INPUT CHARACTERS
 11469				  ;IFKMC	<^D2000>;(LOSE CHARACTERS WHEN IT'S EXCEEDED)
 11470	016477'	000000	000000	TTYRHT: 0	;# TIMES MONITOR OUT OF BUFFERLETS AT RCVCHR
 11471						;+ LOSPDP + LOS620
 11472	016500'	000000	000000	LOSPDP: 0	;# TIMES A PORT EXCEEDED ITS LARGE QUOTA
 11473						;BEFORE WE COULD GET BACKPRESSURE SENT
 11474	016501'	000000	000000	LOS620: 0	;# TIMES A PORT EXCEEDED ITS LARGE QUOTA
 11475						;AFTER WE HAD SENT BACKPRESSURE
 11476	016502'	000000	000170	OMX30:	^D120	;TTY OUTPUT HIGH-WATER MARK FOR SLOW DEVICES
 11477	016503'	000000	000074	OWK30:	^D60	;TTY OUTPUT LOW-WATER MARK FOR SLOW DEVICES
 11478	016504'	000000	000740	OMX120:	^D480	;TTY OUTPUT HIGH-WATER MARK FOR FAST DEVICES
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 257-2
SCNSER.MAC	25-JAN-91 22:40		VARIABLES

 11479	016505'	000000	000360	OWK120:	^D240	;TTY OUTPUT LOW-WATER MARK FOR FAST DEVICES
 11480	016506'	000000	000764	TOEMAX:	^D500	;EXPANDED-MODE TTY OUTPUT LIMIT
 11481	016507'	646471	545763		GTLNK (TTYLOS)
 11482	016510'	000001	000000
 11483	016511'	016512'	016507'
 11484					;.LINK for .GTLNK
 11485	016512'	000000	000000	TTYLOS: 0	;COUNT OF CHARACTERS LOST BY TYMNET
 11486						;(BLACK BALLS - BUFFER ZAPS)
 11487	016513'	000000	000000	PTYLOS:	0	;COUNT OF CHARACTERS LOST BY PTYS
 11488	016514'	000000	000000	LOGZAP:	0	;# OF LOGINS TO LOGGED-IN PORTS
 11489	016515'	777777	777777	ZAPLPT:	-1	;PORT LDB ADDRESS OF LAST LOGZAP OR DFRZAP
 11490	016516'	000000	000000	DFRZAP:	0	;# OF LDECS RECEIVED WHILE STILL ECHOING
 11491	016517'	000000	000000	NZAPIN: 0	;# ZAPPERS IN FROM TYMNET
 11492	016520'	000000	000000	NZAPN2: 0	;# TIMES WE GOT A ZAPPER ON A PORT W/ AN UNECHOED ZAP
 11493	016521'	000000	000000	NZAPLG: 0	;# TIMES WE GOT A LOGIN ON A PORT W/ AN UNECHOED ZAP
 11494	016522'	000000	000000	NZAPAX: 0	;# TIMES WE GOT AN AUX PORT FOR A PORT W/ AN UNECHOED ZAP
 11495	016523'	000000	000000	NZAPRS: 0	;# of times zapper had to be resent (based on LNLZIN)
 11496	016524'	000000	000000	NZAPOT: 0	;# ZAPPERS OUT IN RESPONSE TO ZAPPERS IN
 11497	016525'	000000	000000	TMCOOR: 0	;# OF UNKNOWN TERMINAL CHARACTERISTICS SET BY TYMNET
 11498	016526'	000000	001750	PTYFLO:	^D1000	;CHARS/SEC TOTAL MAXIMUM PTY FLOW
 11499	016527'			PTYBUF:	BLOCK	<PTBSIZ+4>/5
 11500	016557'	000000	000000	PBDISC:	0
 11501	016560'	000000	000000	DIDPBI:	0
 11502	016561'	000000	000000	FRSFLG:	0	;FLAG FOR CMDWAK (SO IT'LL KNOW IT'S NOT A REAL CMND)
 11503	016562'	000000	000000	FRSDEF:	0	;FLAG TO REMEMBER DEFERRED-ECHO STATE
 11504	016563'	000000	000000	SKPFLG:	0	;SET TO INDICATE INPUT AND SKIP AUXCAL IN PROGRESS
 11505	016564'	000000	000000	IRPSTP:	0	;Stopping place for SCNIN
 11506	016565'	000000	000000	BADKEY:	0	;Copy of KEY620 when base wants to crash us
 11507	016566'	000000	000000	IRPOLD:	0	;Old copy of IRP620 when base is declared down
 11508	016567'	000000	000000	ORPOLD:	0	;            ORP620
 11509	016570'	000000	000000	RCC.LO:: 0	;Lowest legal chunk address
 11510	016571'	000000	000000	RCC.HI:: 0	;One greater than highest legal chunk address
 11511	016572'	000000	000000	LDB.LO:	0	;Lowest legal LDB address
 11512	016573'	000000	000000	LDB.HI:	0	;Address of beginning of highest LDB
 11513	016574'	000000	000000	MSGLGP:	0	;Byte pointer into MSGBUF (must be 0 until MSGINI is called)
 11514
 11515	016575'	242000	006720*		$END	(SCN)

 11516	016576'	042000	016575*

 11517	016577'	260040	000000*

 11518	016600'	424163	452024

 11519	016601'	400001	000000

 11520	016602'	000000	000566'

 11521	016603'	260040	000000*

 11522	016604'	424163	450000

 11523	016605'	400005	000000
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 257-3
SCNSER.MAC	25-JAN-91 22:40		VARIABLES


 11524	016606'	000000	000566'

 11525	016607'	242000	000605*

 11526	016610'	042000	016607*

 11527	016611'	265300	014322*

 11528	016612'	476261	505000

 11529	016613'	010000	010000

 11530	016614'	104000	010000

 11531	016615'	260040	016603*

 11532	016616'	646471	425564

 11533	016617'	400005	000761'

 11534	016620'	000000	001000'

 11535	016621'	260040	016615*

 11536	016622'	646471	426056

 11537	016623'	400005	000747'

 11538	016624'	000000	001000'

 11539	016625'	201300	016521'

 11540	016626'	260040	004500'

 11541	016627'	254000	001164'

 11542	016630'	260040	001252'

 11543	016631'	254000	000756'

 11544	016632'	042000	012560*

 11545	016633'	260040	016577*

 11546	016634'	646471	725645

 11547	016635'	400003	000000

 11548	016636'	000000	001000'

 11549	016637'	260040	016621*

SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 257-4
SCNSER.MAC	25-JAN-91 22:40		VARIABLES

 11550	016640'	646471	425660

 11551	016641'	000005	001526'

 11552	016642'	350000	016470'

 11553	016643'	344740	000756'

 11554	016644'	202000	000006

 11555	016645'	201300	016520'

 11556	016646'	260040	004500'

 11557	016647'	254000	001525'

 11558	016650'	403305	000026

 11559	016651'	137300	000160'

 11560	016652'	201300	000001

 11561	016653'	137300	000101'

 11562	016654'	137305	000002

 11563	016655'	205300	400000

 11564	016656'	412305	000031

 11565	016657'	263040	000000

 11566	016660'	340000	000000

 11567	016661'	064254	671302

 11568	016662'	667124	061702

 11569	016663'	703034	364750

 11570	016664'	745014	574306

 11571	016665'	627134	462710

 11572	016666'	064240	000000

 11573	016667'	064256	067744

 11574	016670'	721014	360740

 11575	016671'	607075	172362

 11576	016672'	203137	061712
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 257-5
SCNSER.MAC	25-JAN-91 22:40		VARIABLES


 11577	016673'	627114	562032

 11578	016674'	050000	000000

 11579	016675'	201300	000001

 11580	016676'	137300	000074'

 11581	016677'	137305	000002

 11582	016700'	263040	000000

 11583	016701'	205440	777777

 11584	016702'	254000	003026'

 11585	016703'	205300	040000

 11586	016704'	616305	000027

 11587	016705'	263040	000000

 11588	016706'	254000	003050'

 11589	016707'	260040	016637*

 11590	016710'	646471	606471

 11591	016711'	400005	000000

 11592	016712'	000000	003234'

 11593	016713'	441000	016527'

 11594	016714'	000000	000000

 11595	016715'	000003	000003

 11596	016716'	260040	016633*

 11597	016717'	646471	566042

 11598	016720'	000002	000000

 11599	016721'	441000	000006

 11600	016722'	260040	016707*

 11601	016723'	606471	634254

 11602	016724'	000005	000000

SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 257-6
SCNSER.MAC	25-JAN-91 22:40		VARIABLES

 11603	016725'	201740	000001*

 11604	016726'	336000	015007*

 11605	016727'	201740	015021*

 11606	016730'	274740	015004*

 11607	016731'	326740	004147'

 11608	016732'	263040	000000

 11609	016733'	344740	004136'

 11610	016734'	350000	016373'

 11611	016735'	254000	003324'

 11612	016736'	000100	040000

 11613	016737'	260040	016722*

 11614	016740'	724160	426547

 11615	016741'	000005	000000

 11616	016742'	350000	000000*

 11617	016743'	254000	004540'

 11618	016744'	260040	016737*

 11619	016745'	425157	724144

 11620	016746'	000005	000000

 11621	016747'	350000	016742*

 11622	016750'	254000	004563'

 11623	016751'	042000	000016

 11624	016752'	142200	000016

 11625	016753'	272405	000024

 11626	016754'	254000	003330'

 11627	016755'	272405	000020

 11628	016756'	254000	004672'

 11629	016757'	321240	003277'
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 257-7
SCNSER.MAC	25-JAN-91 22:40		VARIABLES


 11630	016760'	254000	003324'

 11631	016761'	201300	000005

 11632	016762'	254000	004754'

 11633	016763'	137440	000175'

 11634	016764'	254000	005302'

 11635	016765'	402005	000022

 11636	016766'	254000	003306'

 11637	016767'	254000	005413'

 11638	016770'	135440	000175'

 11639	016771'	254000	005406'

 11640	016772'	254000	005611'

 11641	016773'	201440	000001

 11642	016774'	254000	005405'

 11643	016775'	260040	016744*

 11644	016776'	565742	416345

 11645	016777'	400006	000000

 11646	017000'	000000	005635'

 11647	017001'	260040	005765'

 11648	017002'	201300	010000

 11649	017003'	254000	005701'

 11650	017004'	436305	000027

 11651	017005'	254000	005750'

 11652	017006'	201300	000001

 11653	017007'	135345	000002

 11654	017010'	137300	000101'

 11655	017011'	137305	000002

SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 257-8
SCNSER.MAC	25-JAN-91 22:40		VARIABLES

 11656	017012'	205300	000400

 11657	017013'	412305	000027

 11658	017014'	336000	000007

 11659	017015'	350000	016523'

 11660	017016'	254000	005752'

 11661	017017'	000001	010000

 11662	017020'	010000	020000

 11663	017021'	000001	100000

 11664	017022'	260040	016775*

 11665	017023'	624343	444247

 11666	017024'	400005	006130'

 11667	017025'	000000	006133'

 11668	017026'	260040	017022*

 11669	017027'	646471	465455

 11670	017030'	400005	006130'

 11671	017031'	000000	006133'

 11672	017032'	260040	016716*

 11673	017033'	624343	424144

 11674	017034'	400003	006130'

 11675	017035'	000000	006133'

 11676	017036'	260040	017026*

 11677	017037'	646471	565643

 11678	017040'	000005	006276'

 11679	017041'	260040	017032*

 11680	017042'	624343	636460

 11681	017043'	400001	000000

 11682	017044'	000000	006133'
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 257-9
SCNSER.MAC	25-JAN-91 22:40		VARIABLES


 11683	017045'	205000	000040

 11684	017046'	254000	006422'

 11685	017047'	222114	000000

 11686	017050'	135640	017047'

 11687	017051'	136400	000014

 11688	017052'	542615	000001

 11689	017053'	300606	000001

 11690	017054'	135340	017053'

 11691	017055'	300600	000014

 11692	017056'	550654	000001

 11693	017057'	134400	000014

 11694	017060'	550653	000000

 11695	017061'	136400	000015

 11696	017062'	200553	000000

 11697	017063'	300000	001717

 11698	017064'	201300	000001

 11699	017065'	263040	000000

 11700	017066'	201300	000002

 11701	017067'	263040	000000

 11702	017070'	201300	000000

 11703	017071'	262040	000007

 11704	017072'	262040	000005

 11705	017073'	263040	000000

 11706	017074'	134401	000000

 11707	017075'	200413	000000

 11708	017076'	134400	000013

SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 257-10
SCNSER.MAC	25-JAN-91 22:40		VARIABLES

 11709	017077'	200513	000000

 11710	017100'	134400	000012

 11711	017101'	300600	000012

 11712	017102'	202513	000000

 11713	017103'	550613	000000

 11714	017104'	200513	000001

 11715	017105'	542613	000000

 11716	017106'	202513	000001

 11717	017107'	200313	000000

 11718	017110'	202313	000000

 11719	017111'	402013	000000

 11720	017112'	554613	000000

 11721	017113'	777771	007341'

 11722	017114'	202413	000000

 11723	017115'	040000	000000

 11724	017116'	201300	000001

 11725	017117'	254000	007746'

 11726	017120'	201300	000002

 11727	017121'	254000	007746'

 11728	017122'	550200	000015

 11729	017123'	260040	015044'

 11730	017124'	554240	000015

 11731	017125'	513005	000000

 11732	017126'	402005	000026

 11733	017127'	201300	000002

 11734	017130'	254000	007746'

 11735	017131'	202613	000000
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 257-11
SCNSER.MAC	25-JAN-91 22:40		VARIABLES


 11736	017132'	000000	000000*

 11737	017133'	001000	000006

 11738	017134'	574212	000000

 11739	017135'	550312	000000

 11740	017136'	554313	000000

 11741	017137'	570353	000000

 11742	017140'	542413	000000

 11743	017141'	476013	000000

 11744	017142'	506313	000000

 11745	017143'	000006	000000

 11746	017144'	777777	777777

 11747	017145'	250353	000000

 11748	017146'	250313	000000

 11749	017147'	200353	000000

 11750	017150'	134400	000006

 11751	017151'	201600	000001

 11752	017152'	254000	011156'

 11753	017153'	201600	000003

 11754	017154'	254000	011156'

 11755	017155'	200613	000000

 11756	017156'	201600	000002

 11757	017157'	254000	011156'

 11758	017160'	260040	016077'

 11759	017161'	324740	015647*

 11760	017162'	200153	000001

 11761	017163'	134400	000003

SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 257-12
SCNSER.MAC	25-JAN-91 22:40		VARIABLES

 11762	017164'	202153	000001

 11763	017165'	202612	000000

 11764	017166'	350000	016427'

 11765	017167'	344740	000756'

 11766	017170'	440700	016430'

 11767	017171'	260040	011351'

 11768	017172'	344740	000756'

 11769	017173'	201300	016522'

 11770	017174'	260040	004500'

 11771	017175'	254000	011364'

 11772	017176'	260040	001252'

 11773	017177'	200300	016427'

 11774	017200'	302300	000006

 11775	017201'	364740	011371'

 11776	017202'	350000	016427'

 11777	017203'	254000	000756'

 11778	017204'	440600	016454'

 11779	017205'	016430'	016431'

 11780	017206'	134340	000006

 11781	017207'	205340	000002

 11782	017210'	254000	011713'

 11783	017211'	232000	000014

 11784	017212'	350000	016447'

 11785	017213'	205340	000006

 11786	017214'	254000	011713'

 11787	017215'	205340	000003

 11788	017216'	254000	011713'
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 257-13
SCNSER.MAC	25-JAN-91 22:40		VARIABLES


 11789	017217'	202312	000000

 11790	017220'	202352	000000

 11791	017221'	476012	000000

 11792	017222'	256200	017221'

 11793	017223'	263040	000000

 11794	017224'	202406	777777

 11795	017225'	476006	777777

 11796	017226'	210346	000000

 11797	017227'	506407	000000

 11798	017230'	542407	000000

 11799	017231'	202452	000000

 11800	017232'	603000	000040

 11801	017233'	254000	012150'

 11802	017234'	200345	000030

 11803	017235'	603340	400000

 11804	017236'	254000	012134'

 11805	017237'	260040	012220'

 11806	017240'	263040	000000

 11807	017241'	254000	012134'

 11808	017242'	603000	000040

 11809	017243'	254000	012150'

 11810	017244'	200345	000030

 11811	017245'	603340	400000

 11812	017246'	263040	000000

 11813	017247'	260040	012220'

 11814	017250'	263040	000000

SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 257-14
SCNSER.MAC	25-JAN-91 22:40		VARIABLES

 11815	017251'	263040	000000

 11816	017252'	000040	020000

 11817	017253'	251407	000000

 11818	017254'	260040	012364'

 11819	017255'	254000	012214'

 11820	017256'	550353	000000

 11821	017257'	205413	000000

 11822	017260'	260040	017036*

 11823	017261'	646471	424356

 11824	017262'	000005	016107*

 11825	017263'	350000	012467*

 11826	017264'	260040	000000*

 11827	017265'	370000	017263*

 11828	017266'	254000	012445'

 11829	017267'	260040	017041*

 11830	017270'	646471	564642

 11831	017271'	000001	000000

 11832	017272'	260040	017260*

 11833	017273'	424163	455753

 11834	017274'	400006	000000

 11835	017275'	000000	012511'

 11836	017276'	141000	016632*

 11837	017277'	041000	017276*

 11838	017300'	402005	000012

 11839	017301'	263040	000000

 11840	017302'	135700	000165'

 11841	017303'	201400	000003
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 257-15
SCNSER.MAC	25-JAN-91 22:40		VARIABLES


 11842	017304'	302700	000001

 11843	017305'	306700	000002

 11844	017306'	201400	000033

 11845	017307'	350005	000015

 11846	017310'	254000	012746'

 11847	017311'	402005	000012

 11848	017312'	254000	013054'

 11849	017313'	612405	000027

 11850	017314'	616405	000027

 11851	017315'	200300	016375'

 11852	017316'	301300	000010

 11853	017317'	350001	000000

 11854	017320'	263040	000000

 11855	017321'	014100	020000

 11856	017322'	400020	010000

 11857	017323'	000000	600000

 11858	017324'	000000	014074'

 11859	017325'	000000	014070'

 11860	017326'	000000	014062'

 11861	017327'	556347	426546

 11862	017330'	361747	437000

 11863	017331'	350700	774004

 11864	017332'	774004	774005

 11865	017333'	000444*	000445*

 11866	017334'	264000	014310'

 11867	017335'	000144*	000145*

SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 257-16
SCNSER.MAC	25-JAN-91 22:40		VARIABLES

 11868	017336'	446351	152222

 11869	017337'	406311	155202

 11870	017340'	522231	747100

 11871	017341'	617375	570330

 11872	017342'	627514	506424

 11873	017343'	703314	560746

 11874	017344'	625015	467716

 11875	017345'	203235	635100

 11876	017346'	000000	000000

 11877	017347'	201300	200000

 11878	017350'	412300	016177*

 11879	017351'	402000	014312'

 11880	017352'	201300	017336'

 11881	017353'	324740	016611*

 11882	017354'	516132	452652

 11883	017355'	475014	667744

 11884	017356'	617235	663500

 11885	017357'	446351	152222

 11886	017360'	405015	767100

 11887	017361'	522513	130530

 11888	017362'	522513	131130

 11889	017363'	522513	131530

 11890	017364'	522513	132130

 11891	017365'	522513	132432

 11892	017366'	050000	000000

 11893	017367'	100000	020000

 11894	017370'	420020	010000
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 257-17
SCNSER.MAC	25-JAN-91 22:40		VARIABLES


 11895	017371'	576062	000000

 11896	017372'	646471	000000

 11897	017373'	440601	777777

 11898	017374'	135400	000013

 11899	017375'	200000	000000

 11900	017376'	210000	000000

 11901	017377'	242000	014776*

 11902	017400'	042000	017377*

 11903	017401'	242000	000016

 11904	017402'	020000	600000

 11905	017403'	260040	017267*

 11906	017404'	444442	435645

 11907	017405'	000001	000000

 11908	017406'	200000	017017'

 11909	017407'	412004	000002

 11910	017410'	254000	015144'

 11911	017411'	020001	010000

 11912	017412'	020000	400000

 11913	017413'	200606	000000

 11914	017414'	200646	000001

 11915	017415'	201300	000001

 11916	017416'	254000	015454'

 11917	017417'	201300	000002

 11918	017420'	254000	015454'

 11919	017421'	201300	000003

 11920	017422'	254000	015454'

SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 257-18
SCNSER.MAC	25-JAN-91 22:40		VARIABLES

 11921	017423'	201300	000004

 11922	017424'	254000	015454'

 11923	017425'	201300	000007

 11924	017426'	254000	015453'

 11925	017427'	201300	000010

 11926	017430'	254000	015453'

 11927	017431'	201300	000006

 11928	017432'	254000	015453'

 11929	017433'	410200	000015

 11930	017434'	000000	015362'

 11931	017435'	000000	015431'

 11932	017436'	000000	015372'

 11933	017437'	000000	015366'

 11934	017440'	201300	000011

 11935	017441'	254000	015453'

 11936	017442'	220604	000000

 11937	017443'	272727	000000

 11938	017444'	550202	016121*

 11939	017445'	254000	016107'

 11940	017446'	221100	000006

 11941	017447'	331100	000006

 11942	017450'	440100	003205*

 11943	017451'	261040	000005

 11944	017452'	254000	015212'

 11945						;End of SCNSER (SCNLIT: SCNEND:)
 11946
NO ERRORS DETECTED
PROGRAM BREAK IS 017467
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 257-19
SCNSER.MAC	25-JAN-91 22:40		VARIABLES

13K CORE USED
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 258
SCNSER.MAC	25-JAN-91 22:40		SYMBOL TABLE

A		000000	SIN	AUXINP		011377'		AXWAIT		012307'	EXT	BLKIO1		012045'	
ABTUUO		017161'	EXT	AUXJOB		016443'		AXZP1		011273'		BLKIO2		012052'	
ACBBP		010700'		AUXLIC		011651'		B		000014	SIN	BLKIP1		012134'	
ACBRKC		010766'		AUXNSB		011604'		BADGUY		016373'		BLKIRQ		012230'	
ACBSPC		010603'		AUXNTB		016301'		BADKEY		016565'		BLKITM		001315'	
ACDEFC		010620'		AUXNTL		000072	SPD	BADPR1		000747'		BLKNEG		001412'	
ACERAC		010613'		AUXPRT		016452'		BADPRT		000762'		BLKNG2		001426'	
ACHNG		010756'		AUXRCP		016426'	INT	BASDWN		012525'	EXT	BLKNG3		001433'	
ACIN1		010775'		AUXRED		011732'	INT	BASE		000560'	INT	BLKNG4		001434'	
ACIN2		011000'		AUXRID		011162'		BASE04		000557'	INT	BLKOH1		001400'	
ACINSC		011004'		AUXRL1		011740'		BASEOK		012507'	INT	BLKOHR		001364'	
ACINWB		011016'		AUXRL2		011752'		BASTIM		000132	SIN	BLKOT1		012253'	
ACINWC		010774'		AUXRN1		011753'		BASVER		017277'	EXT	BLKOUT		012242'	
ACNTB		010662'		AUXSLP		011570'		BBCRE		016464'		BLKTRQ		012626'	
ACNZP		010723'		AUXSTA		016427'		BBFREE		016463'		BLKX1		012072'	
ACOTCI		007144'		AUXSTL		000010	SPD	BBPOOL		016466'		BLKX2		012100'	
ACPSM		010761'		AUXSTM		000035	SIN	BBREL		016465'		BLKXI1		012623'	
ACPTPC		010636'		AUXSTP		016441'		BGCTYP		006135'	EXT	BLKXIN		012610'	
ACSFS		010736'		AUXSTR		016430'	INT	BIOANS		016467'		BLKXIO		012060'	
ACSOB		010745'		AUXTIM		016453'		BIOATT		012600'		BLKXOT		012636'	
ACSOX		010710'		AUXTMP		011442'		BIOBUF		016462'		BLKXT1		012651'	
ACSYL		010742'		AUXTMR		011441'		BIOCHG		005765'		BPAVAL		012441'	EXT
ACTBK		010670'		AUXTOV		011513'		BIOCHK		012154'		BPFCOM		013542'	
ACTCLA		010656'		AUXTU0		010061'		BIOCHR		000005	SPD	BPFTYI		013522'	
ACTCN		010341'		AUXTU1		010074'		BIOCNT		016457'		BPLVD		013510'	
ACTCP		010350'		AUXTUU		010040'	INT	BIOCOR		012474'	EXT	BPLVD1		013515'	
ACTCP1		010361'		AUXUNM		016454'		BIOCSH		000001	SPD	BPOFF		013535'	
ACTCP2		010373'		AUXWAK		011354'		BIODAT		000006	SPD	BPOKBN		000006	SPD
ACTMC		010730'		AUXWPC		016445'		BIOJOB		016451'		BPREQ		016145'	EXT
ACTTYP		010650'		AUXWPN		011373'		BIOLNK		000000	SPD	BPTEST		013546'	
ACTWRT		011722'	EXT	AUXWPT		016446'		BIOPBC		000003	SPD	BPWAIT		012422'	EXT
ACWIDC		010574'		AUXWSC		016444'		BIOPBP		000002	SPD	BPXOFF		013534'	
ADJBP	133000	000000		AUXWST		011371'		BIOPRT		016461'		BSLASC		005541'	
ADRERR		006375'	EXT	AUXZAP		011262'		BIOREL		012105'		BUFCLR		006374'	EXT
ADVBFE		006546'	EXT	AUXZPT		011375'		BIOREQ		000004	SPD	BUFLST		016456'	
ADVBFF		006416'	EXT	AXAVAL		012321'	EXT	BIORES		012120'		BV.DBG	000004	000000	SPD
ADVPTR		004136'		AXCCNT		010226'	INT	BIOWAK		005776'		BV.HDN	001000	000000	SPD
AL		000001	SIN	AXCDON		011506'		BIOZAD		004553'	INT	BYP1		000007	SPD
ALR620		017400'	EXT	AXCLEN		000104	SPD	BIOZAP		012113'		BYP2		000017	SPD
ALROPR		000020	SIN	AXCLP1		011463'		BITNTB		003207'	EXT	BYP3		000027	SPD
ALRSNT		016425'		AXCLP2		011475'		BK2IOS		001000	SPD	BYP4		000037	SPD
ARSTAB		011314'		AXCTAB		010075'		BKTOPN		007644'		BYTTC		010533'	
ASSCON		400000	SIN	AXELOG		011714'		BLKEOF		012150'		CCASC		005525'	
ASSPRG		200000	SIN	AXERGV		011713'		BLKEOT		001277'		CCPTR		005524'	
AUXCHR		011456'		AXGIV		011723'		BLKIB1		001264'		CCTYI		013621'	INT
AUXCLP		011466'		AXNRL		011530'		BLKIB2		001266'		CCTYI1		013630'	
AUXDET		011552'		AXNRR		011526'		BLKIB3		001273'		CCTYO		013611'	INT
AUXDRU		011660'		AXREQ		012320'	EXT	BLKIBF		001257'		CHCNT		016400'	
AUXEND		016440'	INT	AXSFIN		011607'		BLKICK		001341'		CHECKU		006121'	
AUXERR		016442'	INT	AXSFN1		011605'		BLKIHR		001350'		CHGCLK		015352'	EXT
AUXGA1		011644'		AXSNTB		011431'		BLKINP		012123'		CHKBAS		000532'	INT
AUXGAN		011636'		AXSWT		011534'	EXT	BLKINS		012137'		CHKCHR		016020'	
AUXGV1		011725'		AXTOTB		011516'		BLKIO		012033'		CHKLIN		007445'	
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 258-2
SCNSER.MAC	25-JAN-91 22:40		SYMBOL TABLE

CHKLN2		007444'		CLSCHR		004114'		CREAUX		011532'	INT	DDBSR1		015510'	
CHKLOS		016014'		CLSLP1		003513'		CREPTY		007726'	INT	DDBSRC		015507'	
CHKPSP		016043'		CLSLP2		003526'		CRLF		003253'	EXT	DDBTRP		000014	SPD
CHKRM1		013163'		CLSPBF		003555'		CRPTR		005527'		DDINT		000001	SIN
CHKRM2		013172'		CLSPTB		003531'		CRSHWD		016576'	EXT	DDPBBP		000241'	
CHKRM3		013174'		CLSPTL		003477'		CSHCLR		012426'	EXT	DDPCOM		000246'	
CHKROM		013151'		CMDCKW		004721'	EXT	CSHSAV		016747'	EXT	DDPIMB		000244'	
CHKSEG		007457'	EXT	CMDTYO		013104'		CSRTAB		006013'	EXT	DDPMOD		000245'	
CHKTCC		016047'		CMDWAK		013554'		CSUCNT		012230'	EXT	DDPNTB		000243'	
CHKYEL		016060'		CMDWK1		013560'		CSUNL		004535'	EXT	DDPNZP		000247'	
CHPECH		000306'		CMFCHT		006066'	EXT	CSVAL		004560'	EXT	DDPTAB		000225'	
CHPINP		000302'		CMFCXI		016221'	EXT	CSVCNT		012274'	EXT	DDPTBK		000242'	
CHPOUT		000303'		CMFCXN		002054'	EXT	CTEXT1		014707'	EXT	DDPTCG		000237'	
CHPRED		000305'		CMFSTA		003077'	EXT	CTY		000120	SPD	DDPTCH		000226'	
CHPSPE		000311'		CNCCHK		006051'		CTYBLF		014001'	INT	DDPTLC		000232'	
CHPSPI		000310'		CNCCK1		006065'		CTYBUF		014136'	EXT	DDPTLN		000227'	
CHPSPO		000304'		CNCMD1		013770'		CTYCHR		014214'	ENT	DDPTOB		000233'	
CHPSPR		000307'		CNCMOD		013767'		CTYDO		005620'	EXT	DDPTPS		000235'	
CHQTA		016401'		CNTCHR		007701'		CTYFIL		016472'	INT	DDPTSC		000225'	
CHRCNT		007662'		CNTECO		004742'		CTYFLN		016473'		DDPTTC		000240'	
CHRML1		001560'		CNTOUT		004654'		CTYFRM		014040'		DDPTTI		000230'	
CHRML2		001577'		CNTPRT		000755'		CTYINP		000644'	EXT	DDPTTS		000231'	
CHRML3		001602'		CNTRUB		004632'		CTYLDB		000105'	INT	DDPTYB		000236'	
CHRMLT		001553'		COASC		005536'		CTYLOG		014127'	INT	DDPTZP		000234'	
CHRRDP		016416'		COM940		013703'		CTYMSK		000000	EXT	DDTIN		006553'	INT
CHRTAB		000312'		COMATB		013657'		CTYNFL		014046'		DDTINL		006564'	
CHRTRP		015600'		COMATT		015456'		CTYPTR		014134'	EXT	DDTINX		006573'	
CHRWRP		016417'		COMBSP		013716'		CTYSFL		014036'		DDTOUT		006576'	INT
CIMTAB		001616'		COMGMS		001501'	EXT	CTYTY1		014115'		DDXZ		000000	SIN
CKATI1		013243'		COMKJB		006706'	EXT	CTYTYL		014123'		DEBUGF		000666'	EXT
CKATI2		013224'		COMPA		013722'		CTYTYO		014101'	INT	DECBC		012325'	
CKATIW		013230'		COMPDP		013674'		CTYTYP		014122'	INT	DECBC1		012342'	
CKATO1		013270'		COMTAB		013712'		CUASC		005531'		DECBC2		012345'	
CKATO2		013257'		COMTI1		013644'		CUPTR		005530'		DECBC3		012352'	
CKATTF		013141'		COMTI2		013653'		CX2AX%		000001	SPD	DECIN1		014732'	EXT
CKATTI		013216'		COMTYI		013632'	INT	CXDCB%		000003	SPD	DECPBC		012336'	
CKATTO		013251'		COMTYO		013606'	INT	CXDTP		000000	SPD	DEFBRK		002133'	
CKLGO		014766'	INT	COMTYT		013635'	INT	CXERR%		000007	SPD	DEFCHR		002132'	
CKLN1		007452'		COMWCM		013575'	EXT	CXLOG%		000002	SPD	DEFNBK		002134'	
CKLNTR		016027'		COMXON		004303'		CXNCH%		000006	SPD	DETALL		012541'	
CKOPR		014761'		CONFIG		000000	EXT	CXNRL%		000005	SPD	DETON1		012554'	
CKSXON		013776'		CONMES		017353'	EXT	CXNRR%		000004	SPD	DETONE		012545'	
CL11PT		001000	SPD	COPTR		005535'		DATE		016273'	EXT	DEVBUF		000006	SIN
CLKJOB		015351'	EXT	CPERR		007746'		DBYT		000002	SIN	DEVCLS		000011	SIN
CLKRSP		001470'		CPNPT%		000001	SPD	DCL		000007	SIN	DEVIAD		000007	SIN
CLNOC		004673'		CPNRM%		000002	SPD	DCLBBP		400000	SPD	DEVIOS		000002	SIN
CLNOCP		004672'		CPOPJ		017262'	EXT	DCLCOM		040000	SPD	DEVLOG		000005	SIN
CLRIM1		007613'		CPOPJ1		016035'	EXT	DCLNTB		100000	SPD	DEVLST		015103'	EXT
CLRIMI		007606'		CPUF3		000004	SPD	DCLTBK		200000	SPD	DEVMOD		000004	SIN
CLRMLT		001564'		CPUKI		000001	SPD	DDBBLK		000013	SIN	DEVNAM		000000	SIN
CLRPTY		004445'		CPUKL		000002	SPD	DDBCNE		015110'	INT	DEVOAD		000010	SIN
CLRTTY		004422'		CPUKS		000003	SPD	DDBDCH		000012	SPD	DEVOPR		016225'	EXT
CLSCHR		004114'		CPUTYP		000002	SPD	DDBLDB		000013	SIN	DEVSER		000003	SIN
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 258-3
SCNSER.MAC	25-JAN-91 22:40		SYMBOL TABLE

DFRZAP		016516'		ECHLST		004761'		FRCLP2		011047'		GETLNZ		007337'	
DHNG		000005	SIN	ECHRPT		004754'		FRCNOO		001145'		GETLOG		007436'	INT
DIDPBI		016560'		ECHSPA		005133'		FRCOHR		001371'		GETLPS		007466'	INT
DIE		017403'	EXT	ECHSPT		005136'		FRCORG		001223'		GETMC		007525'	
DIN		000011	SIN	ECHT12		004776'		FRCRS1		011065'		GETMOD		007472'	INT
DINI		000004	SIN	ECHT34		005002'		FRCRS2		011105'		GETPP		007750'	
DINITF		000524'	EXT	ECHT56		005006'		FRCRS3		011123'		GETPP1		007751'	
DLRSUP		000400	SPD	ECHT7		005012'		FRCRS4		011140'		GIV4WD		012475'	EXT
DOOUT		001153'		ECHTAB		004766'		FRCRS5		011144'		GOBCH1		001136'	
DOU		000010	SIN	EDEC		001204'		FRCRS6		011145'		GOBCH2		001141'	
DRL		000006	SIN	ENTRUB		002430'		FRCRS7		011151'		GOBCHR		001124'	
DSPSIZ		000012	SPD	EPCOU1		005315'		FRCRSC		011055'		GOBIN		004527'	
DTE		000200	SPD	EPCOUT		005314'		FRCRSX		011156'		GOBIN1		004540'	
DTEDII		000002	SIN	EPT		000000	EXT	FRCYEL		001233'		GOBIO1		004571'	
DTEDRW		000007	SIN	EPTDT0		000140	SIN	FRCZAP		001526'		GOBIO2		004601'	
DTEEPW		000004	SIN	ERRBNG		016470'		FREBUF		001336'		GOBOP		004544'	
DTEHLT		014310'		ERRXIT		011351'		FRECHK		006252'		GOBOT		004545'	
DVIN		000002	SIN	ESCTR1		015640'		FREST		006073'		GOBOT1		004563'	
DVNZP		010000	SIN	ESCTRP		015623'		FRETTY		016414'	INT	GOBOT3		004555'	
DVOUT		000001	SIN	F		000004	INT	FREUP		006071'		GOBPF		004310'	
DVRMT		004000	SIN	FARCHK		015307'	EXT	FRMASN		016212'	EXT	GOBPN		004324'	
DVSIZ		000003	SIN	FCREQ		017265'	EXT	FRMKJF		014342'	EXT	GOBPN1		004330'	
DVTTY		000010	SIN	FCS		000100	SPD	FRSDEF		016562'		GOCGB		004253'	
DWNFLG		016471'	INT	FCWAIT		017264'	EXT	FRSFLG		016561'		GOECO		004734'	
DZAP		000012	SIN	FDRUPX		006610'	EXT	FRSTTY		015700'		GOFIL		005336'	
E1IDPB		005323'		FFFLP		005542'		FSCN		016374'		GOHNG		004266'	
E2IDPB		005330'		FFLP0		005543'		FULLCQ		006044'		GOHSH		004217'	
EAC10A		005052'		FILERS		005566'		FULLIN		003330'		GOLIN		003270'	
EAC10B		005055'		FINLIN		003316'		FULLN2		003337'		GOLIN1		003303'	
EAC11A		005072'		FINOUT		003361'		FULLN3		003344'		GOLIN2		003302'	
EAC14A		005121'		FIXIMI		007575'		GEPM10		007572'		GOLIN3		003277'	
EAC15A		005130'		FLGCHR		000400	SIN	GEPM11		007573'		GOOUT		004650'	
EAC4A		005040'		FLGESC		000001	SIN	GEPM12		007574'		GORUB		004626'	
EACT1		005016'		FLGLIN		004000	SIN	GEPMC1		007561'		GOSBL		004276'	
EACT10		005046'		FLLBSC		005540'		GEPMC2		007562'		GOSEC		004261'	
EACT11		005066'		FLLFFS		005546'		GEPMC3		007563'		GOSGR		004710'	
EACT12		005106'		FLLVTS		005552'		GEPMC4		007564'		GOSOG		004712'	
EACT13		005111'		FLMX		000050	SPD	GEPMC5		007565'		GOSRD		004251'	
EACT14		005115'		FMTB		004267'		GEPMC6		007566'		GOSTC		004224'	
EACT15		005124'		FMTB1		004271'		GEPMC7		007567'		GOSTC1		004226'	
EACT16		005026'		FNDPRT		016102'	INT	GEPMC8		007570'		GOSTP		004255'	
EACT17		005102'		FNDPT1		016107'		GEPMC9		007571'		GOSYL		004700'	
EACT1A		005023'		FPOPJ		013577'		GET4WD		012451'	EXT	GOTBF0		012212'	
EACT1B		005020'		FRCCGB		001133'		GETBB		012445'		GOTBF1		012214'	
EACT2		005030'		FRCDOO		001154'		GETBB1		012457'		GOTBUF		012164'	
EACT3		005034'		FRCEOT		001301'		GETBBP		012455'		GOTRI		004624'	
EACT4		005036'		FRCIBF		001261'		GETBI		012354'		GOTRO		004616'	
EACT5		005043'		FRCIHR		001352'		GETBIO		012412'		GOXOFF		004336'	
EACT6		005060'		FRCINP		011023'		GETBO		012360'		GOXON		004321'	
EACT6A		005064'		FRCITM		001317'		GETCHK		006262'		GOZAP		004346'	
EACT7		005076'		FRCLOS		001446'		GETCTY		014364'	INT	GREEN		001210'	
EATTAB		013031'		FRCLP0		011027'		GETDDB		014453'	INT	GTBIO1		012423'	
ECHBAK		004757'		FRCLP1		011037'		GETLIN		007300'		GTCGSZ		006433'	EXT
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 258-4
SCNSER.MAC	25-JAN-91 22:40		SYMBOL TABLE

GTLCRD		002000	SPD	IACT2A		002177'		INPES0		003126'		ITMCHN		000000	EXT
GTLDEF		001000	SPD	IACT3		002202'		INPES1		003130'		J		000002	INT
GTLECS		100000	SPD	IACT4		002210'		INPESC		003101'		JACCT		000001	SIN
GTLESC		004000	SPD	IACT5		002215'		INPEST		003122'		JACCT2		100000	SIN
GTLFRM		000001	SPD	IACT5A		002217'		INPGOB		002633'		JBTABT		011725'	EXT
GTLHDX		010000	SPD	IACT6		002222'		INPLIN		000267'		JBTAUN		011636'	EXT
GTLLCT		000020	SPD	IACT7		002226'		INPOTP		002640'		JBTAWQ		013260'	EXT
GTLLRD		000100	SPD	IB		000013	SIN	INPRA1		003050'		JBTBCS		006435'	EXT
GTLMSK		501777	SPD	ICH0		007426'		INPRAC		003044'		JBTBET		005770'	EXT
GTLNFC		000200	SPD	ICS1		007366'		INPRB1		002724'		JBTBIO		012265'	EXT
GTLOBS		020000	SPD	ICW1		007420'		INPRB2		003072'		JBTCIN		001572'	EXT
GTLPSP		040000	SPD	ICW1A		007417'		INPRB3		003025'		JBTCOT		003336'	EXT
GTLPTP		000002	SPD	ICW1B		007416'		INPRB4		003026'		JBTLIC		011656'	EXT
GTLTAB		000010	SPD	IDLNEC		002656'		INPRB5		003035'		JBTPIP		016117'	EXT
HIGHJB		006725'	EXT	IFDET		015157'	INT	INPRB6		002750'		JBTPRV		000000	EXT
HNGAL1		006727'		IFROOM		013202'		INPRB7		002752'		JBTSTS		015312'	EXT
HNGALL		006720'	INT	IGOBEC		002662'		INPRB8		002764'		JBTUN1		011624'	EXT
HNGAUX		011237'		IMGCH1		006450'		INPRB9		002761'		JBTUNM		011623'	EXT
HNGAX1		011241'		IMGCHG		006451'		INPRBC		002777'		JBYEXC		015723'	EXT
HNGAX4		011253'		IMGCNT		006437'		INPRET		002615'		JBYWAK		015720'	EXT
HNGAXD		011245'		IMGDEF		002124'		INPRT2		002771'		JERR		020000	SIN
HNGJOB		006710'		IMGDIM		000002	SPD	INPRTA		003052'		JFYMIN		000527'	EXT
HNGMON		006621'	INT	IMGIT2		001310'		INPRTB		003040'		JFYSEC		005626'	EXT
HNGPRT		006636'		IMGITM		001307'		INPRUB		002722'		JLOG		000004	SIN
HNGTT1		006670'		IMGRM1		002165'		INPSTA		003074'		JNA		040000	SIN
HNGTT2		006703'		IMGRMA		002137'		INPTAB		002573'		JOB		014347'	EXT
HNGTT3		006704'		IMGRMT		002153'		INPTCA		002613'		JOBN		006777'	EXT
HNGTTY		006657'		IMGTIM		000012	SPD	INPTYP		000266'		KAF1		000530'	INT
HNGUUL		006616'		INCBC		012302'		INRW1		007432'		KEPBI		012376'	
HNGUUO		006601'	INT	INCHRS		007364'		INTERM		016412'	INT	KEPBI1		012405'	
HWDPNT		003252'	EXT	INCHRW		007431'		INTSET		016000'		KEY10		000512'	
I		000010	SIN	INCHSL		007375'		INWL1		007407'		KEY620		000621'	EXT
I1CHRW		007430'		INCHWL		007406'		IO		000020	SIN	KEYSET		000514'	INT
I1CHWL		007405'		INCPBC		012323'		IOACT		010000	SIN	KEYTIM		005622'	EXT
IAC10A		002237'		INISET		014313'	INT	IOBEG		000002	SIN	L2LBBP		040000	SPD
IAC11A		002244'		INISL2		014345'		IOBKTL		040000	SIN	L2LBSP		001000	SPD
IAC11B		002246'		INISLP		014324'		IODEND		020000	SIN	L2LCCS		200000	SPD
IAC11C		002247'		INLMES		012511'	EXT	IOEND		000040	SIN	L2LDEL		004000	SPD
IAC11D		002250'		INPA10		002527'		IOFST		000004	SIN	L2LLDF		010000	SPD
IAC16B		002475'		INPA94		002550'		IONEOU		007145'		L2LNTB		020000	SPD
IAC16C		002476'		INPACT		002523'		IOSBKA		100000	SPD	L2LOEX		400000	SPD
IACT0		002520'		INPAL1		002630'		IOW		000001	SIN	L2LOWS		002000	SPD
IACT1		002170'		INPBK2		002626'		IPOPJ		000000	EXT	L2LOWT		000400	SPD
IACT10		002234'		INPBRK		002571'		IPOPJ1		015452'	EXT	L2LTBK		100000	SPD
IACT11		002242'		INPBS1		002602'		IQUEUE		012563'		LAPBIT		000026	SPD
IACT12		002451'		INPBSP		002600'		IRING		016256'	EXT	LDB.HI		016573'	
IACT13		002457'		INPCH		016376'		IRP620		000736'	EXT	LDB.LO		016572'	
IACT14		002462'		INPCH2		000271'		IRPLO1		016265'		LDBBIO		000005	SPD
IACT15		002470'		INPCHR		000270'		IRPLOG		016256'		LDBBK2		000016	SPD
IACT17		002500'		INPCLD		002624'		IRPOLD		016566'		LDBBKC		000015	SPD
IACT2		002173'		INPDL1		000272'		IRPPDP		012536'	EXT	LDBBKI		000007	SPD
IACT21		002506'		INPDL2		000273'		IRPSTP		016564'		LDBBKP		000006	SPD
IACT22		002511'		INPDLN		002647'		IRPTIM		005654'	EXT	LDBBYT		000027	SPD
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 258-5
SCNSER.MAC	25-JAN-91 22:40		SYMBOL TABLE

LDBCLA		000033	SPD	LDPCIE		000005'		LDPWID		000170'		LOGLDB		015354'	EXT
LDBDCH		000031	SIN	LDPCLA		000223'		LDPXON		000020'		LOGZAP		016514'	
LDBDCX		000032	SPD	LDPCOM		000206'		LDRBIP		010000	SPD	LOPBIN		000061'	
LDBDDB		000000	SIN	LDPCRD		000010'		LDRBPS		400000	SPD	LOPBOP		000065'	
LDBECC		000014	SPD	LDPDEM		000216'		LDRDEM		040000	SPD	LOPBOT		000076'	
LDBECT		000013	SPD	LDPECH		000021'		LDRFCS		020000	SPD	LOPBPF		000064'	
LDBFLP		000022	SPD	LDPECO		000004'		LDRNXO		100000	SPD	LOPBPN		000063'	
LDBLEN		000051	SIN	LDPECR		000007'		LDRXOS		200000	SPD	LOPCGB		000060'	
LDBLIN		000001	SPD	LDPELF		000006'		LDSCIE		000032'		LOPECO		000102'	
LDBLOG		000026	SIN	LDPERA		000220'		LDSCRD		000035'		LOPFIL		000073'	
LDBMOD		000030	SPD	LDPESC		000026'		LDSECH		000046'		LOPHNG		000100'	
LDBOPB		000002	SPD	LDPFA1		000173'		LDSECO		000031'		LOPHSH		000056'	
LDBOUT		000003	SPD	LDPFA2		000167'		LDSECR		000034'		LOPOUT		000075'	
LDBRBC		000025	SPD	LDPFC1		000172'		LDSELF		000033'		LOPRUB		000074'	
LDBRBI		000023	SPD	LDPFC2		000166'		LDSESC		000053'		LOPSBL		000072'	
LDBRBO		000024	SPD	LDPFRM		000214'		LDSHDX		000041'		LOPSEC		000067'	
LDBSTR		000034	SIN	LDPHDX		000014'		LDSIR		000036'		LOPSGR		000103'	
LDBTCB		000004	SPD	LDPHST		000160'		LDSKAT		000051'		LOPSOG		000104'	
LDBTIC		000012	SPD	LDPIMB		000203'		LDSOR		000037'		LOPSRD		000066'	
LDBTIP		000010	SPD	LDPIR		000011'		LDSPA		000042'		LOPSTC		000071'	
LDBTIT		000011	SPD	LDPKAT		000024'		LDSPAR		000040'		LOPSTP		000070'	
LDBTMR		000044	SPD	LDPLCO		000221'		LDSPB		000043'		LOPSYL		000077'	
LDBTMS		000046	SPD	LDPLCT		000211'		LDSPC		000044'		LOPTRI		000062'	
LDBTMT		000050	SPD	LDPLMD		000200'		LDSPD		000050'		LOPTRO		000057'	
LDBTOC		000021	SPD	LDPLNO		000157'	INT	LDSQM		000054'		LOPZAP		000101'	
LDBTOP		000017	SPD	LDPMDF		000207'		LDSRXE		000047'	INT	LOS620		016501'	
LDBTOT		000020	SPD	LDPMEC		000201'		LDSSPA		000055'		LOSPDP		016500'	
LDBTYP		000033	SPD	LDPMIN		000202'		LDSTOB		000052'		LPOPJ		015204'	
LDEC		001176'		LDPMOD		000165'		LDSXON		000045'		LTSCIE	200000	000000	SPD
LDICLE		000050	SPD	LDPMOU		000204'		LEVDEF		007516'		LTSCRD	020000	000000	SPD
LDICLR		000000	SPD	LDPNFC		000210'		LI.PIF		000400	SPD	LTSECH	000020	000000	SPD
LDLAUX		000040	SPD	LDPNTB		000163'		LI.PIN		000200	SPD	LTSECO	400000	000000	SPD
LDLBK2		004000	SPD	LDPNXO		000215'		LICAC		000400	SIN	LTSECR	040000	000000	SPD
LDLBKA		010000	SPD	LDPOR		000012'		LICOPR		100000	SIN	LTSELF	100000	000000	SPD
LDLCOM		020000	SIN	LDPPA		000015'		LICWCR		400000	SIN	LTSESC		400000	SPD
LDLDEF		001000	SPD	LDPPAR		000013'		LINFLG		017450'	EXT	LTSHDX	001000	000000	SPD
LDLECS		100000	SPD	LDPPB		000016'		LINFSV		016410'		LTSIR	010000	000000	SPD
LDLFRM		000001	SPD	LDPPC		000017'		LINJOB		007460'	INT	LTSKAT	000002	000000	SPD
LDLIMI		002000	SPD	LDPPD		000023'		LINPNM		016407'		LTSOR	004000	000000	SPD
LDLLCP		000004	SPD	LDPPOS		000175'		LINPTR		016377'		LTSPA	000400	000000	SPD
LDLLCT		000020	SPD	LDPPSM		000176'		LINTAB		016172'	EXT	LTSPAR	002000	000000	SPD
LDLNEC		000100	SPD	LDPPTP		000213'		LINTRP		015611'		LTSPB	000200	000000	SPD
LDLNFC		000200	SPD	LDPQM		000027'		LLLHDX		004000	SPD	LTSPC	000100	000000	SPD
LDLNOP		400000	SPD	LDPRTC		000222'		LLLNLN		100000	SPD	LTSPD	000004	000000	SPD
LDLOSU		000400	SPD	LDPRXE		000022'		LLLZAP		200000	SPD	LTSQM		200000	SPD
LDLPTP		000002	SPD	LDPSOX		000205'		LMLBIO		001000	SPD	LTSRXE	000010	000000	SPD
LDLPTY		040000	SPD	LDPSPA		000030'		LMLPSP		200000	SPD	LTSSPA		100000	SPD
LDLSOX		200000	SPD	LDPTAB		000212'		LMLTBI		400000	SPD	LTSTOB	000001	000000	SPD
LDLTAB		000010	SPD	LDPTBK		000161'		LNLZIN		400000	SPD	LTSXON	000040	000000	SPD
LDPBBP		000162'		LDPTIM		000174'		LOGCH1		002043'		LXL120		400000	SPD
LDPBSD		000217'		LDPTOB		000025'		LOGCH2		002046'		LXLBSD		100000	SPD
LDPBSP		000164'		LDPTYP		000224'		LOGCHR		001747'		LXLDLR		020000	SPD
LDPCHG		000177'		LDPWDA		000171'		LOGIN		001161'		LXLERA		040000	SPD
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 258-6
SCNSER.MAC	25-JAN-91 22:40		SYMBOL TABLE

LXLLCO		010000	SPD	NAMSCN		015565'		ORING		015016'	EXT	PGRUB		004626'	
LXLOOK		004000	SPD	NEWJER		002056'		ORP620		016726'	EXT	PGSBL		004101'	
LXLRTC		002000	SPD	NEWTER		002061'		ORPLO1		016276'		PGSEC		003567'	
LXRBRK		004000	SPD	NMXFLG		003203'	EXT	ORPLOG		016267'		PGSGR		003566'	
LXRCGS		001000	SPD	NMXLIN		000000	EXT	ORPOLD		016567'		PGSOG		003601'	
LXRCHR		010000	SPD	NOBASE		005632'	INT	ORPPDP		016730'	EXT	PGSRD		003566'	
LXRESC		400000	SPD	NOCTRO		007171'		ORPTIM		004140'	EXT	PGSTC		003570'	
LXRICL		040000	SPD	NODIE		017272'	EXT	OUPLIN		000275'		PGSTP		003567'	
LXRIOS		000400	SPD	NOECHO		000200	SPD	OUPTYP		000274'		PGSYL		003621'	
LXROBS		200000	SPD	NOLIN		003353'		OUT		006357'	EXT	PGSYLN		003642'	
LXROCL		020000	SPD	NOLIN2		003356'		OUTCHI		007125'		PGTRI		003651'	
LXRPSS		100000	SPD	NOOUT		001144'		OUTPC1		007237'		PGTRI1		003664'	
LXRTCC		000200	SPD	NOTLIN		004377'		OUTPC2		007244'		PGTRO		004052'	
LXRYBS		002000	SPD	NOTOPR		004367'		OUTPCF		007251'		PGZAP		004056'	
M		000013	INT	NOXEXE		014312'	INT	OUTPT1		007214'		PGZAP1		004077'	
MAKDET		011166'		NRPCNT		016447'		OUTPTC		007231'		PJBSTS		014535'	EXT
MAKDLC		011207'		NTTOPR		004435'		OUTPTR		007210'		PJOBN		016111'	EXT
MAXTMC		000024	SPD	NUMECO		000024	SPD	OUTSN1		007267'		PJRST	324740	000000	
MD0405		001632'		NXTTTY		015702'		OUTSN2		007276'		PJUMPE	322000	000000	
MD0607		001636'		NZAPAX		016522'		OUTSNW		007257'		PNTOB1		007661'	
MD1011		001642'		NZAPIN		016517'		OUTST1		007156'		PNTOBK		007651'	
MD1213		001646'		NZAPLG		016521'		OUTSTR		007153'		POLPRT		012002'	INT
MDFLMD		003136'		NZAPN2		016520'		OUTTRN		003365'		POLPT1		012010'	
MLOWQ		014520'	EXT	NZAPOT		016524'		OWK120		016505'		POLPT3		012025'	
MLTNDB		001573'		NZAPRS		016523'		OWK30		016503'		POLPT4		012030'	
MO.LAC		400000	SPD	OBFND		001225'		OWTIM		000024	SPD	POLPT5		012031'	
MONHNG		013763'	INT	OBFND1		001226'		P		000001	INT	PORTN		016103'	EXT
MORLIN		003306'		OBREC		015650'		P1		000014	INT	PPORTN		000000	EXT
MORLN2		003313'		OMX120		016504'		P2		000015	INT	PRCCR		005357'	
MOVCH1		001614'		OMX30		016502'		P3		000016	INT	PRCFIL		005364'	
MOVCH2		001611'		ONEOU2		007136'		P4		000017	INT	PRCFL1		005401'	
MOVCHR		001607'		ONEOU3		007140'		PATCH2		016145'	INT	PRCOCW		005356'	
MSG777		775777	INT	ONEOUT		007126'		PBDISC		016557'		PRCOM		001033'	EXT
MSGBUF		774004	INT	OP0TYO		014074'	INT	PBTIMO		003711'		PRCOT1		005404'	
MSGIN1		014162'		OP1TYO		014070'		PEVEN8		014105'	EXT	PRCOT2		005405'	
MSGINI		014147'	INT	OP2TYO		014062'		PG		000003	INT	PRCOT3		005406'	
MSGLG.		774000	INT	OPCRET		000001	SPD	PGBIN		003667'		PRCOUT		005346'	
MSGLGI		774002	INT	OPRCT2		014016'		PGBIN1		003703'		PROACT		005413'	
MSGLGO		774003	INT	OPRCTY		014003'		PGBOP		004013'		PROUCC		005611'	
MSGLGP		016574'		OPRFIL		014042'		PGBOP1		004030'		PRPER		012521'	EXT
MSGLGS		774001	INT	OPRFR1		014533'		PGBOP2		004033'		PRPRMT		015375'	EXT
MSGLOG		014175'	INT	OPRFRE		014527'	INT	PGBOP3		004047'		PRT2		012523'	EXT
MSGSIM		003571'		OPRLDB		016405'	INT	PGBOT		003737'		PRTBTM		005635'	
MSKIRG		001472'	EXT	OPROUT		014053'	INT	PGBOT1		003753'		PRTBVR		012511'	
MSKORG		016727'	EXT	OPRSN2		014501'		PGBOTC		004000'		PRTCRS		000566'	
MTR		000024	SPD	OPRSND		014477'	INT	PGBPF		003615'		PRTDDB		006134'	EXT
MULCNT		016421'		OPRTIC		014002'	INT	PGBPN		003607'		PRTDEC		012520'	EXT
MXLIN		007447'	EXT	OPRTIM		016413'	INT	PGCGB		003577'		PRTIRG		001000'	INT
MXMCNT		016423'		OPRWAT		014520'		PGECO		004734'		PRTKEY		000616'	INT
MXTIM		016150'	EXT	OPRWJB		016474'		PGFIL		005336'		PRTOCT		001035'	EXT
MXTYP		000063	SPD	OPSND1		014506'		PGHNG		003567'		PRTUT1		003234'	
NAMSC1		015570'		OQUEUE		012572'		PGHSH		004216'		PSDONE		001517'	
NAMSC2		015576'		ORANGE		001222'		PGOUT		004650'		PTBSIZ		000170	SPD
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 258-7
SCNSER.MAC	25-JAN-91 22:40		SYMBOL TABLE

PTYBUD		007763'		RELBI		012364'		RTFIN		015431'		SCNSER		000000'	ENT
PTYBUF		016527'		RELBIO		012433'		RTFIN1		015444'		SCNTCD		014544'	INT
PTYDDB		010023'		RELBO		012370'		RTFIN2		015450'		SCNTIC		000710'	
PTYFLO		016526'		RELEA6		015451'	EXT	RTNRM%		000011	SPD	SCNUDT		016274'	EXT
PTYLDB		007767'		REQBUF		012220'		RTSAC%		000001	SPD	SCNVER		000001	SPD
PTYLOS		016513'		RETACH		015273'	INT	RTSCP%		000007	SPD	SCOLP		003210'	
PTYSBL		004112'	INT	RETCH1		015324'		RTSNA%		000005	SPD	SCOLP1		003204'	
PTYTRN		003414'		RETCH2		015326'		RTSNX%		000002	SPD	SCOPTY		003222'	
PUNIT		015555'	EXT	RETZRO		007441'		RTTAC%		000003	SPD	SCORTY		003254'	
PVYHNG		006672'	EXT	RIDLIN		002666'		RTTAT%		000006	SPD	SCOTTY		003263'	
PVYMOD		013301'	EXT	RIDLN1		002701'		RTTNX%		000004	SPD	SECLOP		005672'	
PX.MEM		000004	SPD	RIDLN2		002714'		RUBSTR		002445'		SECLP1		005701'	
PX.SRC		000001	SPD	RIDLN3		002716'		RWARN		001720'		SECLP2		005740'	
PXCT	256000	000000		RLBIO1		012443'		RWARN1		001726'		SECLP3		005750'	
QUEPCB		014540'	EXT	RMTAL1		002335'		S		000000	INT	SECLP4		005763'	
RCC.HI		016571'	INT	RMTALT		002337'		S$DEBU		000003	SIN	SECTM1		005714'	
RCC.LO		016570'	INT	RMTBSP		002427'		S$ENTR	777777	777775	SIN	SECTM2		005722'	
RCC.T1		006133'		RMTCN1		002333'		S$EVEN		000006	SIN	SECTM3		005734'	
RCC.T3		006130'		RMTCNT		002254'		S$HALT	777777	777777	SIN	SETBRK		006430'	
RCCBAD		006126'	INT	RMTCR		002350'		S$INFO		000005	SIN	SETFIO		016077'	
RCCDBG		006075'	INT	RMTECR		002265'		S$JOB		000002	SIN	SETIO2		010736'	EXT
RCCSTP		006230'	INT	RMTECT		002271'		S$NAME		000000'	SPD	SETLIN		007350'	
RCVANS		012556'		RMTEU1		002361'		S$NONA		000000	SIN	SETLMD		007622'	
RCVAUX		011361'		RMTEXC		002353'		S$PATC		000007	SIN	SETLN1		007353'	
RCVCH1		001661'		RMTEXU		002357'		S$STOP		000001	SIN	SETOPB		010572'	
RCVCH2		001701'		RMTFF		002400'		S$TEMP		000000	SPD	SETOUT		004141'	
RCVCHR		001652'		RMTPAT		002331'		S$XCT	777777	777776	SIN	SETPTB		003465'	
RCVLOS		001443'		RMTRUB		002365'		S..KAF		000530'	EXT	SETPTL		003443'	
RCVNSP		011301'		RMTS10		002305'		SAV30		016610'	EXT	SETPTP		007710'	
RCVPS		001505'		RMTS94		002317'		SCN1PD		000564'		SETRUN		015272'	EXT
RCVRAK		012505'		RMTSPA		002276'		SCNBUF		016276'	EXT	SETSHT		014746'	INT
RCVRES		012525'		RMTSPT		002301'		SCNDDB		000250'	INT	SETTB1		007641'	
RCVS2		011324'		RMTTAB		002406'		SCNDDS		000016	SIN	SETTBK		007626'	
RCVS2A		011326'		RMTTB1		002421'		SCNDSP		006350'		SETTC1		010376'	
RCVS4		011333'		RMTVT		002372'		SCNEND		017466'	INT	SETTC2		010432'	
RCVS6		011340'		RMXLIN		000745'	EXT	SCNIN		000731'		SETTCN		010375'	
RCVSP		011344'		RNQ		014534'	EXT	SCNIN0		000740'		SIMRZP		001525'	
RCVSUR		011312'		RPORTN		006626'	EXT	SCNIN1		000756'		SKPFLG		016563'	
RCVTCX		001466'		RT.CON		020000	SPD	SCNIN2		000761'		SKPIN1		007206'	
RCVTMC		001460'		RT.MOD		300000	SPD	SCNINT		000627'	INT	SKPINC		007166'	
RCVWK1		006040'		RT.SIG		040000	SPD	SCNLIT		016575'	INT	SKPINL		007176'	
RCVZAP		001520'		RT.SLV		400000	SPD	SCNMSK		016271'	EXT	SLCTAB		007341'	
RDNXT		007500'		RTATC		015337'		SCNNAM		015554'		SLCTBN		000007	SPD
RDPI	700640	000000		RTATS		015400'		SCNNMR		014467'		SNDAUX		011425'	
RECHLT		001732'		RTATS1		015413'		SCNNT0		000641'		SNDBIO		001403'	
RECHT1		001743'		RTATS2		015424'		SCNNT2		000722'		SNDSAD		014776'	
RECVRG		001705'		RTAUX%		000010	SPD	SCNOUT		003176'		SNDSRQ		011443'	
RED		001214'		RTCCO		015372'		SCNPTR		016270'	EXT	SPCCM1		014300'	
REFLAG		016173'	EXT	RTCONT		015266'		SCNREL		000000	SPD	SPCCMD		014273'	
RELB0		012374'		RTCSV		015362'		SCNSC0		005656'		SPCCMW		000451	SIN
RELBB		012467'		RTCUS		015366'		SCNSC1		005665'		SPCDBG		000444	SIN
RELBB1		012476'		RTERJ		015453'		SCNSC2		005671'		SPCDND		000457	SIN
RELBBF		012471'		RTERR		015454'		SCNSEC		005616'	INT	SPCF11		000450	SIN
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 258-8
SCNSER.MAC	25-JAN-91 22:40		SYMBOL TABLE

SPCFLG		000444	SIN	STOP9		000037	SPD	TCNNXO		000014	SPD	TMCPB		000012	SPD
SPCGSW		014267'	INT	STOTC1		007442'		TCNOR		000002	SPD	TMCPC		000013	SPD
SPCINI		014242'	INT	STRUB		002440'		TCNPA		000005	SPD	TMCPD		000017	SPD
SPCMTD		000455	SIN	STRUB1		002434'		TCNPAR		000003	SPD	TMCQM		000023	SPD
SPCST1		014240'		STSHUT		400000	SIN	TCNPB		000006	SPD	TMCRXE		000016	SPD
SPCTRN		000010	SPD	STSUPR		200000	SIN	TCNPC		000007	SPD	TMCSIZ		000002	SPD
SPCTRY		014241'		STTIOD		006035'	EXT	TCNPD		000013	SPD	TMCSLP		000025	SPD
SPE940		005154'		STTLK		006766'	INT	TCNPTP		000030	SPD	TMCSPA		000024	SPD
SPEALP		005201'		STTLK0		006776'		TCNRTC		000033	SPD	TMCTOB		000021	SPD
SPEALT		005203'		STTLK1		007021'		TCNRXE		000012	SPD	TMCXON		000014	SPD
SPEAP1		005176'		STTLK2		007026'		TCNTAB		000024	SPD	TO11DB		020000	SPD
SPEBK3		005172'		STTLK3		007037'		TCNTYP		000035	SPD	TOEMAX		016506'	
SPEBK6		005174'		STTYBF		000020	SIN	TCNWID		000015	SPD	TOWAIT		013452'	
SPEBRK		005170'		SUPTIM		011302'	EXT	TCNXON		000010	SPD	TOWAT1		013455'	
SPEBS		005231'		SVOJFF		016411'		TCVMAX		010475'		TOWATA		014403'	
SPEBS1		005240'		SVPPC		014230'	INT	TDTUUO		015123'	INT	TPOPJ		016113'	EXT
SPECR		005166'		SVSPC		016402'		THSDAT		000000	EXT	TPOPJ1		016114'	EXT
SPEPDP		005142'		SYSNUM		016204'	EXT	THSTIM		016147'	EXT	TRESCN		013601'	INT
SPETAB		005212'		T1		000006	INT	TIHLTN		016476'		TRESCU		007163'	
SPETB1		005221'		T2		000007	INT	TILOW		000120	SPD	TRMAUX		000000	SPD
SPEUC1		005310'		T2POPJ		013610'	EXT	TIME		000000	EXT	TRMBYP		000156'	
SPEUCM		005272'		T3		000010	INT	TIMOW		016424'		TRMTAB		002064'	
SPEUX		005244'		T4		000011	INT	TIMRST		015350'	EXT	TRPLEN		000014	SPD
SPEUX1		005270'		TABPTR		005577'		TINAS1		015770'	INT	TSETBI		006276'	INT
SPEUXC		005253'		TABTMR		000004'		TINASS		016115'	INT	TSETBO		006324'	
SPEVM		005225'		TABTMS		000031'		TINDET		016127'		TSTBO1		006326'	
SPHNGI		014237'		TAKNZJ		015655'	EXT	TINFIO		040000	SPD	TSTBO2		006343'	
SPOBS1		005501'		TAKOTJ		015620'	EXT	TIOUSE		020000	SPD	TSTKTJ		013416'	EXT
SPOBS2		005472'		TAKTRJ		015447'	EXT	TIRSVD		000003	SPD	TSTKTP		013167'	EXT
SPOBSP		005474'		TAKTRP		016141'	EXT	TIWAIT		013437'		TSTTRJ		000000	EXT
SPOCR		005422'		TATUU1		015262'		TIWAKE		006027'		TT2CHK		000010	SPD
SPOFF		005454'		TATUUO		015234'	INT	TIWAKN		006041'		TTCCLR		014646'	
SPOFF1		005460'		TBFL		005556'		TIWKC		000110	SPD	TTCCNT		010206'	INT
SPOFIL		005505'		TBFL2		005562'		TIWRNN		016475'		TTCDO1		014655'	
SPOFL1		005507'		TCBALL		000003'		TKATT%		000002	SIN	TTCFIL		014731'	
SPOTAB		005424'		TCNBSD		000031	SPD	TKBSY%		000003	SIN	TTCFIN		014660'	
SPOTB0		005437'		TCNBSP		000020	SPD	TKEXS%		000001	SIN	TTCFL0		014736'	
SPOTB1		005447'		TCNCLA		000032	SPD	TKROM%		000000	SIN	TTCFL1		014737'	
SPOTBL		005415'		TCNCRD		000000	SPD	TMCALL		000077	SPD	TTCGO		014721'	
SPOVT		005463'		TCNDEF		000022	SPD	TMCCIE		000001	SPD	TTCHKS		000004	SPD
SPOVT1		005467'		TCNDSP		010437'		TMCCRD		000004	SPD	TTCLST		016233'	EXT
SPRCOM		013664'		TCNECH		000011	SPD	TMCECH		000015	SPD	TTCMCA		016404'	INT
SPRCTB		013670'		TCNERA		000021	SPD	TMCECO		000000	SPD	TTCMCH		016403'	INT
SPREAT		013036'		TCNFC1		000016	SPD	TMCECR		000003	SPD	TTCNEG		010201'	
SPRETB		013044'		TCNFC2		000017	SPD	TMCELF		000002	SPD	TTCNO		014644'	
SPRTTB		012721'		TCNFRM		000025	SPD	TMCESC		000022	SPD	TTCSET		014647'	
SPRTYI		012716'		TCNHDX		000004	SPD	TMCHDX		000010	SPD	TTCSIX		014676'	
SSPT		005607'		TCNIR		000001	SPD	TMCIR		000005	SPD	TTCTYP		014704'	
STATES		017350'	EXT	TCNKAT		000034	SPD	TMCKAT		000020	SPD	TTCVAL		014662'	
STAUTO	000001	000000	SIN	TCNLCO		000023	SPD	TMCOOR		016525'		TTCVL0		014670'	
STDALT		000033	SPD	TCNLCT		000026	SPD	TMCOR		000006	SPD	TTCVL1		014671'	
STLST		006102'		TCNN		000036	SPD	TMCPA		000011	SPD	TTCVL2		014672'	
STOP10		000003	SPD	TCNNFC		000027	SPD	TMCPAR		000007	SPD	TTCVL3		014673'	
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 258-9
SCNSER.MAC	25-JAN-91 22:40		SYMBOL TABLE

TTCWDD		014607'		TTYFUW		014376'	INT	TTYWK3		015671'		TYOW1		013126'	
TTCWDN		000035	SPD	TTYFW1		014377'		TTYYLS		016070'	INT	TYOW2		013127'	
TTCWDT		014552'		TTYHLT		013767'	INT	TTYZAP		015162'		TYOW3		013132'	
TTFORC		013565'		TTYIN		006363'		TTYZNE		001255'	INT	TYOW4		013133'	
TTFREE		016232'	EXT	TTYIN1		006405'		TTYZP1		015167'		TYP.00		000000	
TTFREN		016375'		TTYIN3		006413'		TUUAIR		040000	SPD	TYPANS		000001	SPD
TTGC1		006212'		TTYIN5		006373'		TUUATI		400000	SPD	TYPAUX		000007	SPD
TTGETC		006171'		TTYIN6		006424'		TUUATO		200000	SPD	TYPAXC		000030	SPD
TTIEND		016255'	INT	TTYIN8		006421'		TUUATR		100000	SPD	TYPBIN		000046	SPD
TTINI2		016161'		TTYINI		016144'	INT	TUUEAT		010000	SPD	TYPBKO		000044	SPD
TTINI3		016223'		TTYINX		006422'		TUUFXI		004000	SPD	TYPBOC		000045	SPD
TTINI4		016247'		TTYKD1		015105'		TUUIMI		002000	SPD	TYPBRK		000057	SPD
TTKJOB		006703'	EXT	TTYKDB		015044'		TUUROM		020000	SPD	TYPCLP		000042	SPD
TTNCHR		000001	SIN	TTYKIL		015027'	INT	TWABT		013435'		TYPCLR		000043	SPD
TTNEGL		000005	SPD	TTYLOS		016512'		TWAITC		013403'		TYPEAD		000061	SPD
TTNESC		000000	SIN	TTYLST		000250'		TWAITL		013340'		TYPECF		000035	SPD
TTNLIN		000002	SIN	TTYMXL		033000	SIN	TWAITS		013401'		TYPECN		000034	SPD
TTNYLB		000006	SIN	TTYNAM		014460'	INT	TWTC1		013420'		TYPEDC		000014	SPD
TTOUT1		006501'		TTYNFB		012456'	INT	TWTC2		013433'		TYPETM		000023	SPD
TTOUT2		006511'		TTYNFR		015541'	INT	TWTL1		013365'		TYPGOB		000012	SPD
TTOUT3		006517'		TTYNNC		006213'	INT	TWTL2		013374'		TYPGRN		000016	SPD
TTOUT4		006526'		TTYNPB		003675'	INT	TWTL3		013371'		TYPHNG		000022	SPD
TTOUT5		006527'		TTYOUS		006546'		TWTSPC		200000	SPD	TYPHSI		000041	SPD
TTPC1		006250'		TTYOUT		006464'		TYCIOS		015141'	INT	TYPIHR		000053	SPD
TTPC2		006247'		TTYOUW		400000	SIN	TYI		012654'		TYPINB		000047	SPD
TTPUTC		006216'		TTYPH2		014444'		TYI940		012734'		TYPINE		000050	SPD
TTSCL1		015753'		TTYPH3		014442'		TYIALT		012756'		TYPINT		000051	SPD
TTSCL2		015726'		TTYPH4		014432'		TYIATB		012701'		TYPIRQ		000052	SPD
TTSCL3		015754'		TTYPHY		014420'	INT	TYIBRK		012746'		TYPKAF		000063	SPD
TTSCLR		015713'	INT	TTYPTY		003223'	INT	TYIBSP		012750'		TYPLAD		000062	SPD
TTTCL1		015763'		TTYRES		006736'	INT	TYIC		012706'		TYPLDC		000015	SPD
TTTCL2		015765'		TTYRHT		016477'		TYICC		012771'		TYPLOG		000006	SPD
TTTCLR		015757'	INT	TTYRS1		006756'		TYICCP		012767'		TYPLOS		000025	SPD
TTUNEG		007100'		TTYSET		007171'	INT	TYICZ		012762'		TYPLTM		000024	SPD
TTUUOT		007105'		TTYSOW		014415'	INT	TYID		012711'		TYPNEG		000056	SPD
TTVIN2		014326'	EXT	TTYSRC		014353'	INT	TYIEAT		013003'		TYPNOP		000010	SPD
TTVINI		016174'	EXT	TTYSTC		013747'	INT	TYIET2		013054'		TYPNSP		000005	SPD
TTYAT1		015212'		TTYSTR		013752'	INT	TYIET3		013053'		TYPOHR		000055	SPD
TTYAT2		015220'		TTYSZS		006456'		TYIL		013007'		TYPORG		000021	SPD
TTYATC		020000	SIN	TTYTAB		017444'	EXT	TYIOS1		015144'		TYPORQ		000054	SPD
TTYATI		015206'		TTYTBL		014553'	INT	TYIOS2		015146'		TYPOUP		000011	SPD
TTYATT		015177'	INT	TTYUS0		013733'		TYIPAL		012754'		TYPPSR		000060	SPD
TTYBCN		012332'	INT	TTYUS1		013740'		TYIPDP		012725'		TYPRAK		000004	SPD
TTYBMT		000754'	INT	TTYUSM		013732'	INT	TYIRPT		012676'		TYPRED		000017	SPD
TTYBNP		001262'	INT	TTYUSR		013727'	INT	TYITAB		012743'		TYPRES		000003	SPD
TTYBPN		000777'	INT	TTYUSW		013726'	INT	TYMTC		010540'		TYPSAD		000033	SPD
TTYCMR		013744'	INT	TTYUU1		007055'		TYMTC1		010541'		TYPSHT		000002	SPD
TTYDET		015131'	INT	TTYUU2		007061'		TYMTC2		010563'		TYPSUP		000026	SPD
TTYERP		014361'	INT	TTYUU3		007071'		TYO		013062'		TYPSUR		000027	SPD
TTYFLK		016415'	INT	TTYUUO		007042'	INT	TYO1		013070'		TYPTCP		000037	SPD
TTYFLM		006115'	INT	TTYWAK		015656'	INT	TYO2		013100'		TYPTCR		000040	SPD
TTYFND		014350'	INT	TTYWK1		015675'		TYO3		013112'		TYPTCS		000036	SPD
TTYFNU		014347'	INT	TTYWK2		015662'		TYOW		013116'		TYPTRN		001040'	
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91 PAGE 258-10
SCNSER.MAC	25-JAN-91 22:40		SYMBOL TABLE

TYPTSP		000031	SPD	ZAPAUX		011254'		.DTESP		004400	SIN	
TYPTSR		000032	SPD	ZAPBG0		004501'		.DTRSW		001400	SIN	
TYPYEL		000020	SPD	ZAPBG1		004517'		.PVHCN		000002	SIN	
TYPZAP		000013	SPD	ZAPBUG		004500'		.RTMCO		000002	SPD	
U		000005	INT	ZAPCIR		011756'	INT	.RTMCU		000001	SPD	
UPARPT		005533'		ZAPDFR		001251'		.RTMSV		000000	SPD	
UPASC		005534'		ZAPLOG		001252'		.RTMUS		000003	SPD	
UPDKEY		000513'	INT	ZAPLPT		016515'		
UPOPJ		003553'		ZBGBIT		004467'		
UPSHUT		016406'		ZBGBUG		004461'		
UPTIME		000627'	EXT	ZBGBYT		004470'		
USRWAK		005772'		ZBGDCH		004464'		
USRWK1		006017'		ZBGDCX		004472'		
UUIDPB	136000	000000		ZBGDDB		004465'		
UUILDB	134000	000000		ZBGLIN		004463'		
UUOLDB		013273'		ZBGLOG		004473'		
VTFLP		005545'		ZBGMOD		004471'		
W		000012	INT	ZBGOUT		004466'		
WATLIN		003324'		ZBGPC		004462'		
WRDOT2		004200'		ZRPCNT		016450'		
WRDOUT		004162'		ZZ	005557	664555	SPD	
WRP3N4		000301'		ZZ0		000002	SPD	
WRPCH2		000300'		ZZBIT		000043	SPD	
WRPCHR		000277'		ZZN		000002	SPD	
WRPI	700600	000000		ZZPOS		000000	SPD	
WRPLIN		000276'		ZZWORD		000001	SPD	
WSCHED		014525'	EXT	%CHBRK		000002	SPD	
WSYNC		014407'	EXT	%CHRMX		000036	SPD	
WSYNC1		013503'		%FRAUX		000001	SPD	
WSYNC2		013502'		%FRBIG		000002	SPD	
WSYNCS		013457'		%FRBRK		000004	SPD	
WTCHK		004720'		%FRCMD		000003	SPD	
XA		000002	SIN	%FRFUL		000006	SPD	
XMTWAK		006145'		%FRNBK		000005	SPD	
XMTWK1		006165'		%FROK		000000	SPD	
XPNOUT		006537'		%MS0		774000	SIN	
XXCBLK		015114'		%MS1		775000	SIN	
XXCDDB		015112'		%PBTIM		000017	SPD	
XXCSER		015113'		.ARATT		000007	SIN	
XXNBLK		015117'		.ARDET		000010	SIN	
XXNDDB		015115'		.ARHNG		000054	SIN	
XXNSER		015116'		.ASIDL		000000	SPD	
XXPBLK		015122'		.ASLOG		000005	SPD	
XXPDDB		015120'		.ASRQ1		000001	SPD	
XXPSER		015121'		.ASRQ2		000003	SPD	
XXQ		000000	SPD	.ASWPT		000006	SPD	
XXXQ		000007	SPD	.ASWR1		000002	SPD	
XXXR		000000	SPD	.ASWR2		000004	SPD	
YELLOW		001232'		.ASWTP		000007	SPD	

SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

A	   616
ABTUUO	   107%	  5304	  5382	  5446	  5746	  5749	  5754	  5896	  5916	  7032	  7140	  8617	  8619	  8630
	  8636	  8794	  8948	  8955	  9124	  9127	  9163	 10917
ACBBP	  6521	  6847#
ACBRKC	  6478	  6930#
ACBSPC	  6646	  6760#
ACDEFC	  6648	  6779#
ACERAC	  6647	  6771#
ACHNG	  6515	  6913#
ACIN1	  6939#	  6941
ACIN2	  6942#	  6956	  6962
ACINSC	  6468	  6947#
ACINWB	  6469	  6958#
ACINWC	  6467	  6938#
ACNTB	  6488	  6827#
ACNZP	  6528	  6872#
ACOTCI	  5829#	  6471
ACPSM	  6516	  6923#
ACPTPC	  6654	  6797#
ACSFS	  6519	  6888#
ACSOB	  6523	  6901#
ACSOX	  6524	  6858#
ACSYL	  6477	  6895#
ACTBK	  6489	  6836#
ACTCLA	  6656	  6821#
ACTCN	  6526	  6551#
ACTCP	  6527	  6561#
ACTCP1	  6567	  6570#
ACTCP2	  6569	  6580#
ACTMC	  6479	  6480	  6481	  6482	  6483	  6484	  6485	  6486	  6487	  6490	  6491	  6492	  6510	  6511
	  6512	  6513	  6514	  6517	  6518	  6520	  6530	  6531	  6532	  6533	  6534	  6879#
ACTTYP	  6659	  6810#
ACTWRT	  7597%	  7597	  7607%	  7607
ACWIDC	  6643	  6750#
ADRERR	    90%	  5315
ADVBFE	    90%	  5416	  5434
ADVBFF	    90%	  5335
ADVPTR	  3593#	  3643	  3661
AL	   616
ALR620	    76%	  4868	 10191	 10212	 10226	 10232
ALROPR	  4867	 10190
ALRSNT	 10213	 10224	 11425#
ARSTAB	  7243	  7245#
ASSCON	  5643	  6420	  7137	  7170	  7190	  7586	 10278	 10366	 10448	 10699	 10734	 10805	 10833
ASSPRG	  7137	 10278	 10366	 10805
AUXCHR	  7372	  7394#
AUXCLP	  7402#	  7408
AUXDET	  7464	  7466	  7469	  7474#
AUXDRU	  7562	  7567#
AUXEND	  7507	 11429#
AUXERR	  7288	  7461	  7572	  7602	 11431#
AUXGA1	  7535#	  7540
AUXGAN	  7514	  7529#
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

AUXGV1	  7599	  7610#
AUXINP	  7315	  7330#
AUXJOB	  7292	  7476	 11432#
AUXLIC	  7522	  7524	  7526	  7531	  7543#
AUXNSB	  7498	  7499	  7501#
AUXNTB	  7534	  7535	  7536	 11354#	 11368
AUXNTL	  7533	 11368#
AUXPRT	  7331	  7384	  7386	  7397	  7475	  7561	 11439#
AUXRCP	  7197	  7199	  7235	  7289	  7334	  7462	  7574	  7590	  7608	 11426#
AUXRED	  7617#
AUXRID	  7137#	  8641	  8921	  8930	  9129	  9156
AUXRL1	  7624#	  7627	  7629	  7634
AUXRL2	  7630	  7634#
AUXRN1	  7622	  7625	  7635#
AUXSLP	  7489#	  7501
AUXSTA	  7233	  7238	  7242	  7257	  7262	  7285	  7291	  7307	  7310	  7313	  7362	  7390	  7423	  7429
	  7570	  7611	 11427#
AUXSTL	    40#	   502	  2123	  7222	  7356	  7487	 11428
AUXSTM	    39#	    40	  7480
AUXSTP	  7260	  7402	  7412	 11430#
AUXSTR	  7259	  7354	  7479	  7485	  7486	  7487	 11428#
AUXTIM	  7369	  7371	  7373	  7374	  7389	  7422	 11440#
AUXTMP	  7377#	  7421
AUXTMR	  7376#	  7388
AUXTOV	  7364	  7428#
AUXTU0	  6445	  6448#
AUXTU1	  6460	  6464#
AUXTUU	  6431#	  6447
AUXUNM	  7481	  7483	  7484	  7515	  7516	  7532	 11441#
AUXWAK	  7278	  7291#
AUXWPC	  7323	 11434#
AUXWPN	  7322#	  7333
AUXWPT	  7324	 11435#
AUXWSC	  7319	 11433#
AUXWST	  7309	  7316	  7318#
AUXZAP	  5298	  7214#
AUXZPT	  7320	  7325	  7327#
AXAVAL	   100%	  7613	  8062
AXCCNT	  6440	  6540#	  6547
AXCDON	  7403	  7414	  7420#
AXCLEN	  6438	  6535#	  6540	  6547
AXCLP1	  7399#	  7418
AXCLP2	  7407	  7410#
AXCTAB	  6441	  6467#	  6535
AXELOG	  7601#
AXERGV	  7520	  7528	  7538	  7566	  7573	  7578	  7584	  7600#
AXGIV	  7459	  7601	  7608#
AXNRL	  7438	  7439	  7444#
AXNRR	  7434	  7436	  7441#
AXREQ	   100%	  7456	  7612	  8051	  8061
AXSFIN	  7494	  7505#
AXSFN1	  7490	  7503#
AXSNTB	  7363	  7367#
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

AXSWT	   100%	  7458
AXTOTB	  7430	  7432#
AXWAIT	   100%	  7457	  8052
AXZP1	  7215	  7223#
B	   616	  1670
BADGUY	  3675	 11398#
BADKEY	  1098	  1128	  1294	 11506#
BADPR1	  1375#	  1403
BADPRT	  1374	  1390#
BASDWN	  1123%	  1123	  1242%	  1242	  1262	  1292%	  1292	  4836%	  4836	  8517%	  8517
BASE	  1135#
BASE04	  1134#
BASEOK	  8494#	  8521	  8579
BASTIM	  4831	  4831#	  4833
BASVER	  1293%	  1293	  1559	  4822	  8493%	  8493	  8500	  8503	  8519%	  8519	  8520%	  8520	  8524	  8577%
	  8577	  8578%	  8578
BBCRE	 11450#
BBFREE	  8213	  8249	  8252	  8281	 11449#
BBPOOL	  8253	 11452#
BBREL	 11451#
BGCTYP	  5095%	  5095
BIOANS	  1781	  1788	  1793	 11453#
BIOATT	  8621	  8635#
BIOBUF	  8110	  8244	  8269	 11448#
BIOCHG	  4881	  4959#
BIOCHK	  7800	  7827	  7855#
BIOCHR	  1642	  1699	  1714	  1729	  3189	  3265	  3346	  3397	  3423	  3467	  3469	  3470	  3482	  4004
	  4970	  7719#	  7767	  7813	  7840	  7875	  7954	  7984	  7986	  8652
BIOCNT	  1325	  1779	  1794	  3377	  8053	  8054	  8074	  8086	  8090	  8096	  8101	  8103	 11443#
BIOCOR	    87%	  4986	  8185	  8215	  8270
BIOCSH	  3937	  3967	  7715#	  7950	  7990
BIODAT	  3399	  3484	  4025	  4978	  7720#
BIOJOB	  1809	  1811	  8055	 11438#
BIOLNK	  7714#
BIOPBC	  3193	  3251	  3349	  3381	  3398	  3428	  3483	  3495	  3516	  7717#
BIOPBP	  3191	  3248	  3401	  3486	  3496	  3523	  7716#
BIOPRT	  1798	  1801	  1808	  8059	 11446#
BIOREL	  5533	  5630	  7778#	 10410
BIOREQ	  3464	  3465	  3466	  7718#	  7911	  7915	  7917	  7938
BIORES	  7754	  7770	  7779	  7791	  7795#
BIOWAK	  1646	  4972#
BIOZAD	  3963#
BIOZAP	  1908	  7786#
BITNTB	    76%	  2950
BK2IOS	   648#	  5624	  9075
BKTOPN	  6230	  6236#
BLKEOF	  7805	  7832	  7849#
BLKEOT	  1492	  1663#
BLKIB1	  1641#	  1671	  1675	  1691
BLKIB2	  1646#	  1677
BLKIB3	  1655#	  1730
BLKIBF	  1491	  1632#
BLKICK	  1634	  1665	  1683	  1712#
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

BLKIHR	  1496	  1722#
BLKINP	  6496	  7800#	  7824
BLKINS	  6497	  7827#
BLKIO	  6495	  7724#	  7733	  7739
BLKIO1	  7730	  7735#
BLKIO2	  7728	  7742#
BLKIP1	  7808	  7811	  7814	  7822#
BLKIRQ	  1700	  7918	  7940	  7946#
BLKITM	  1493	  1681#
BLKNEG	  1500	  1788#
BLKNG2	  1800	  1803#
BLKNG3	  1805	  1808#
BLKNG4	  1799	  1809#
BLKOH1	  1745	  1747	  1751#
BLKOHR	  1488	  1499	  1739#
BLKOT1	  7966	  7970#
BLKOUT	  6498	  7961#	  7969
BLKTRQ	  1672	  8650	  8662#
BLKX1	  7756	  7763#	  7781	  7783
BLKX2	  7764	  7769#
BLKXI1	  8649	  8656#
BLKXIN	  6499	  7765	  8645#
BLKXIO	  6501	  7750#	  7759
BLKXOT	  6500	  7782	  8673#
BLKXT1	  8681	  8685#
BPAVAL	   102%	  1807	  8205
BPFCOM	  9220	  9233	  9243	  9246	  9248#
BPFTYI	  8694	  9224#
BPLVD	  6125	  9211#
BPLVD1	  9213	  9216#
BPOFF	  4918	  6201	  9241#	  9449
BPOKBN	   328#	  3013
BPREQ	   102%	  1803	  1804	  8162	  8180	  8204	 11192
BPTEST	  6200	  9256#	  9448	  9454
BPWAIT	   102%	  8181
BPXOFF	  4193	  5258	  7860	  9240#	  9455
BSLASC	  4732	  4733#
BUFCLR	    90%	  5314
BUFLST	  8254	  8259	  8278	  8280	 11442#
BV.DBG	  4821	  8490#
BV.HDN	  8491#
BYP1	   836#	   847	   856	  1261	  1263
BYP2	   837#	   848	   851	   857	   861	  1265	  1927	  3621	 10233
BYP3	   838#	   849	   862	  1261	  1263
BYP4	   839#	   850	   852	   863	   864	  1261	  1263	  4005	 10227
BYTTC	  6642	  6644	  6645	  6649	  6650	  6651	  6652	  6653	  6655	  6657	  6695#
CCASC	  4714	  4715#	  4718
CCPTR	  2881	  2884	  4714#
CCTYI	  9319#	 11196
CCTYI1	  9321	  9327#
CCTYO	  9309#	  9530	  9539	  9990	  9995	 11198
CHCNT	  3008	  3065	  3204	  3249	  3444	  3473	  3498	  3499	  3514	  3580	  3761	  4522	  4528	  4544
	  4592	  4609	  4701	 11403#
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

CHECKU	  5049	  5079#	  5133
CHGCLK	   100%	 10453	 10633
CHKBAS	  1113#
CHKCHR	 11040	 11062#
CHKLIN	  6070	  6078#	  6090	  6097	  6102
CHKLN2	  5949	  6077#	  6133
CHKLOS	 11044	 11055#
CHKPSP	 11047	 11088#
CHKRM1	  8937	  8946#
CHKRM2	  8954#	  8961
CHKRM3	  8940	  8959#
CHKROM	  5384	  5761	  6446	  8936#
CHKSEG	    92%	  6088
CHKTCC	 11050	 11095#
CHKYEL	 11048	 11113#
CHPECH	   878#	  2347	  4177
CHPINP	   874#	  1966	  2808
CHPOUT	   875#	  4563
CHPRED	   877#	  8708	  8819	  9345
CHPSPE	   881#	  2373	  4352
CHPSPI	   880#	  2564	  2818
CHPSPO	   876#	  4614
CHPSPR	   879#	  8730	  8829	  9360
CHQTA	  3007	  3064	  3250	  3445	 11404#
CHRCNT	  6236	  6247	  6260#
CHRML1	  1929#	  1931
CHRML2	  1952#	  1955
CHRML3	  1932	  1955#
CHRMLT	  1378	  1924#
CHRRDP	  1928	  1929	  1952	 11418#
CHRTAB	   884#	  1964	  1965	  2807	  4175	  4176	  4561	  4562	  8706	  8707	  8817	  8818	  9344
CHRTRP	  2023	 10870#
CHRWRP	  3173	  3192	  3208	  3247	  3507	  3622	  3644	  3662	  3663	  3759	  4520	  4526	  4542	  4590
	  4607	  4699	 11419#
CIMTAB	  1967	  1972#
CKATI1	  9003	  9016#
CKATI2	  8996	  9000#
CKATIW	  9004#	  9018
CKATO1	  9032	  9039#
CKATO2	  5748	  9025	  9029#
CKATTF	  5407	  5425	  8925#	  8932	  9896
CKATTI	  5303	  5445	  5753	  8793	  8994#	  9014	  9126	  9149
CKATTO	  5381	  5745	  9023#	  9038
CKLGO	 10202#
CKLN1	  6079	  6083#
CKLNTR	 11041	 11072#
CKOPR	 10188	 10194#
CKSXON	  9436	  9454#
CL11PT	  9766
CLKJOB	 10452%	 10452	 10632%	 10632
CLKRSP	  1485	  1851#
CLNOC	  4086	  4112#
CLNOCP	  4094	  4111#
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

CLRIM1	  6191	  6195#
CLRIMI	  5387	  5815	  5832	  5840	  5880	  5900	  5928	  6190#
CLRMLT	  1933#	  1959
CLRPTY	  3869	  3875#
CLRTTY	  3677	  3856#	  8571
CLSCHR	  1304	  1763	  3072	  3575#	  3682	  3739	  3770	  3789	  3812	  3987	  4040	  4121	  7381	  7394
	 10216
CLSLP1	  3222#	  3228
CLSLP2	  3231	  3234#
CLSPBF	  3252	  3265#
CLSPTB	  3206	  3239#
CLSPTL	  3081	  3203#
CMDCKW	  4144%	  4144
CMDTYO	  5939	  8893#	  9315
CMDWAK	  2532	  4234	  9267#	  9437
CMDWK1	  9268	  9271#
CMFCHT	  5039%	  5039
CMFCXI	  9833%	  9833	 11242%	 11242
CMFCXN	  2174%	  2174
CMFSTA	  2857%	  2857
CNCCHK	  2870	  5026#	  8782
CNCCK1	  5030	  5038#
CNCMD1	  9428	  9447#
CNCMOD	  5038	  9446#	 10483	 10663
CNTCHR	  6266	  6270	  6279#	  6284
CNTECO	  4167#	  4191
CNTOUT	  4087#	  4097
CNTPRT	  1381#	  1392	  1395	  1398	  1401
CNTRUB	  4060#	  4070
COASC	  4728	  4729#
COM940	  9365	  9366	  9377#
COMATB	  9346	  9354#
COMATT	  6426	 10456	 10636	 10708	 10751#
COMBSP	  9375	  9383	  9390#
COMGMS	  1860%	  1860
COMKJB	  5590%	  5590
COMPA	  9381	  9395#
COMPDP	  9364	  9367	  9369#
COMTAB	  9374	  9382	  9385#
COMTI1	  9342#	  9348
COMTI2	  9349#	  9363	  9388	  9393	  9398
COMTYI	  9331#
COMTYO	  5726	  9303#
COMTYT	  9331	  9335#
COMWCM	  9286%	  9286
COMXON	  3753	  3759#	  3781	  3805
CONFIG	    79%
CONMES	  1167%	  1167	  2180%	  2180	  2186%	  2186	  9813%	  9813	  9816%	  9816
COPTR	  2692	  2695	  4728#
CPERR	  6317	  6323	  6334	  6340#
CPNPT%	  6312#	  6316
CPNRM%	  6313#	  6322	  6333
CPOPJ	    82%	  1531	  1706	  1752	  1829	  1912	  2088	  2779	  3612	  4685	  4959	  5100	  5369	  5377
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

	  5598	  5623	  5756	  5789	  5820	  5903	  5931	  6084	  6086	  6436	  6829	  6838	  6849	  6874	  7146
	  7646	  7841	  8088	  8677	  8725	  9045	  9215	  9228	  9245	  9310	  9409	  9426	  9430	  9584
	  9863	  9865	  9952	 10276	 10312	 10333	 10347	 10791	 10875	 10883	 10899	 10926	 10954	 11030
	 11032	 11125	 11147
CPOPJ1	    82%	  3578	  3623	  3648	  3667	  4149	  4151	  4156	  4503	  4508	  4530	  4611	  4698	  4707
	  4711	  5139	  5162	  5293	  5602	  5733	  5933	  6075	  6338	  6357	  6581	  6624	  6699	  6712
	  6751	  6756	  6763	  6767	  6772	  6775	  6780	  6788	  6792	  6798	  6806	  6812	  6817	  6824
	  6980	  6988	  7365	  7367	  7637	  7817	  7844	  7862	  7921	  8013	  8075	  8126	  8133	  8191
	  8638	  8704	  8711	  8715	  8945	  8999	  9028	  9338	  9352	  9523	  9836	  9868	  9876	  9946
	  9954	  9989	 10031	 10169	 10170	 10175	 10203	 10205	 10214	 10236	 10375	 10457	 10820	 10837
	 11078
CPUF3	  1256	  1337	  7454	  9466	  9625	  9635	  9669	  9686	 11279
CPUKI	  1323	  1754	  1758	  4026	  4031	  7453	  8050	  8065	  8089	  8092	  8497	  8514	  9466	  9625
	  9635	  9669	  9686
CPUKL	  1323	  1754	  1758	  3936	  3966	  4973	  7453	  7947	  7988	  8050	  8065	  8089	  8092	  8183
	  8497	  8514	  9468	  9664	  9721
CPUKS	  1337	  3947	  4830	  7454	  9467	  9664	  9696
CPUTYP	  1256	  1323	  1337	  1754	  1758	  3936	  3947	  3966	  4026	  4031	  4830	  4973	  7453	  7454
	  7947	  7988	  8050	  8065	  8089	  8092	  8183	  8497	  8514	  9466	  9467	  9468	  9625	  9635
	  9664	  9669	  9686	  9696	  9721	 11279
CPZZ	  1256#	  1256	  1323#	  1323	  1337#	  1337	  1754#	  1754	  1758#	  1758	  3936#	  3936	  3947#	  3947
	  3966#	  3966	  4026#	  4026	  4031#	  4031	  4830#	  4830	  4973#	  4973	  7453#	  7453	  7454#	  7454
	  7947#	  7947	  7988#	  7988	  8050#	  8050	  8065#	  8065	  8089#	  8089	  8092#	  8092	  8183#	  8183
	  8497#	  8497	  8514#	  8514	  9466#	  9466	  9467#	  9467	  9468#	  9468	  9625#	  9625	  9635#	  9635
	  9664#	  9664	  9669#	  9669	  9686#	  9686	  9696#	  9696	  9721#	  9721	 11279#	 11279
CREAUX	  7456#
CREPTY	  6315#
CRLF	  1172%	  1172	  1434%	  1434	  2991%	  2991
CRPTR	  2363	  4476	  4584	  4639	  4718#
CRSHWD	  1113	  1118	  1137%	  1137	  5606%	  5606
CSHCLR	  8186%	  8186
CSHSAV	  3940%	  3940	  3970%	  3970
CSRTAB	  4979	  4979%	  4980	  4981	  4982	  4983	  4987	  4988	  4989	  4990	  4991
CSUCNT	  3938%	  3938	  3944%	  3944	  7948%	  7948
CSUNL	  3943%	  3943
CSVAL	  3973%	  3973
CSVCNT	  3968%	  3968	  3974%	  3974	  7989%	  7989
CTEXT1	 10137%	 10137	 10146%	 10146
CTY	    58#
CTYBLF	  1235	  9459#	  9472	  9474
CTYBUF	  9597%	  9597
CTYCHR	  9476	  9486	  9501	  9562	  9571	  9684	  9722#
CTYDO	  4823%	  4823
CTYFIL	  9492	  9566	  9569	 11457#
CTYFLN	  9478	  9494	  9502	 11458#
CTYFRM	  9490	  9497#
CTYINP	  1237%	  1237
CTYLDB	   341#	   517	  1234	  5080	  5680	  8977	  9311	  9462	  9538	  9806	  9883	  9982	  9984	  9993
CTYLOG	  9484	  9559	  9590#
CTYMSK	  9596%	  9596
CTYNFL	  9493	  9504#
CTYPTR	  9594%	  9594	  9595%	  9595
CTYSFL	  9494#	  9498
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

CTYTY1	  9570#	  9572
CTYTYL	  9583#	  9586
CTYTYO	  9549	  9557#	  9585
CTYTYP	  9582#
CUASC	  4720	  4721#
CUPTR	  2687	  2690	  4720#
CX2AX%	  7126#	  7527
CXDCB%	  7128#	  7583
CXDTP	  7453#	  7474
CXERR%	  7132#	  7269
CXLOG%	  7127#	  7519	  7537
CXNCH%	  7131#	  7577	  7606
CXNRL%	  7130#	  7444
CXNRR%	  7129#	  7441
DATE	  1861%	  1861	  7231%	  7231	 11330%	 11330	 11345%	 11345
DBYT	  5290#
DCL	  5295#
DCLBBP	   624#	 10771
DCLCOM	   627#	  5588	 10649
DCLNTB	   626#	 10762
DCLTBK	   625#	 10767
DDBBLK	   629#	  7161	 10280	 10288	 10292	 10296	 10303	 10796	 10803
DDBCNE	 10315#
DDBDCH	   601	   602	   603	   604	   606	   623#	  5589	 10650	 10760	 10819
DDBLDB	   630#	  5320	  5405	  5557	  5599	  5626	  5692	  6435	  6889	  7177	  7208	  7214	  7217	  7465
	  7593	  7628	  7645	  7657	  7689	  8637	  8917	  8926	  8995	  9024	  9866	 10204	 10264	 10277
	 10341	 10342	 10444	 10466	 10593	 10625	 10678	 10714	 10754	 10830	 10938	 10985	 11033	 11124
	 11161
DDBSR1	  6415	  7162	  7582	 10692	 10790#	 11237
DDBSRC	 10438	 10789#	 10828
DDBTRP	   577	   578	   579	   580	   581	   582	   583	   584	   585	   586	   587	   588	   631#	 10813
	 10814	 11016	 11017
DDINT	  5289#
DDPBBP	   601#	  6850
DDPCOM	   606#	  5563	 10346	 10606
DDPIMB	   604#	  6934	 10758
DDPMOD	   605#	  1669	  1688
DDPNTB	   603#	  6830
DDPNZP	   607#	  6872	  6875
DDPTAB	   575#	   590	   594	   595	   596	   597	 11028	 11031
DDPTBK	   602#	  6839
DDPTCG	   587#	  1522
DDPTCH	   578#	   595	 10876	 10978	 10980	 10993	 10995
DDPTLC	   582#	  1832	  2075
DDPTLN	   579#	   596	  1649	 10887	 10981	 10983	 10990	 10992
DDPTOB	   583#	   597	 10927	 10987	 10989
DDPTPS	   585#	  1875
DDPTSC	   577#	   594	 10901	 10913
DDPTTC	   588#	  6617
DDPTTI	   580#	  7028	  8615	  8626	  8903	  8949	  8959	  9006	  9033	  9122	  9145
DDPTTS	   581#	  5107
DDPTYB	   586#	  1611
DDPTZP	   584#	  5575	  7188	 10732
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

DDTIN	  5444#
DDTINL	  5453#	  5459
DDTINX	  5454	  5456	  5460#
DDTOUT	  5466#
DDXZ	  5288#
DEBUGF	  1264%	  1264
DECBC	  1707	  1750	  7797	  8080#
DECBC1	  8097	  8105	  8109#
DECBC2	  8112#	  8116
DECBC3	  8113	  8117#
DECIN1	 10121%	 10121	 10168%	 10168
DECPBC	  8082	  8101#
DEFBRK	  2237#	  2286
DEFCHR	  2236#	  2276	  2295
DEFNBK	  2238#	  2541	  2550	  2560
DETALL	  1247	  8523	  8558#
DETON1	  8569	  8572#
DETONE	  8559	  8565#
DEVBUF	  5322	  5400
DEVCLS	   622#
DEVIAD	  5313	  5316	  5332
DEVIOS	   605	  1674	  1687	  1831	  2074	  4152	  4912	  4948	  4953	  4998	  5005	  5014	  5104	  5111
	  5339	  5390	  5392	  5397	  5419	  5437	  5577	  5625	  6106	  6192	  6442	  6890	  7027	  7176
	  7225	  7227	  7850	  8657	  8775	  8875	  8925	  8963	  8994	  9010	  9012	  9023	  9089	  9098
	  9136	  9165	  9167	  9181	  9183	  9193	  9205	  9412	  9867	  9901	  9908	  9912	 10262	 10362
	 10365	 10774	 10818	 10935	 11055	 11133
DEVLOG	 10257	 10807
DEVLST	 10310%	 10310
DEVMOD	   607	  1914	  5032	  5546	  5641	  6421	  6423	  7138	  7144	  7167	  7169	  7171	  7589	  7626
	  7655	  7687	  8640	  8920	  8929	  8998	  9027	  9155	 10279	 10301	 10360	 10367	 10449	 10700
	 10707	 10717	 10801	 10806	 10834	 10955	 10976
DEVNAM	  5558	  7174	  7223	  9953	 10256	 10343	 10445	 10684	 10715	 10832	 10845	 10846	 10857
DEVOAD	  5398
DEVOPR	    86%	  3818	  3860	  9919	 10194	 11251
DEVSER	 10281	 10286	 10290	 10294	 10299	 10306	 10313	 10792	 10794	 10795	 10798	 10953
DFRZAP	  1622	 11490#
DHNG	  5293#
DIDPBI	  3171	  3186	  3205	  3442	 11501#
DIE	    11	    11%	    12	  1134	  1135	  1380	  1403	  1626	  1635	  2969	  3395	  3567	  3906	  3963
	  4835	  5053	  5072	  5084	  5159	  5179	  8088	  8250	  8494	 10315
DIN	  5297#
DINI	  5292#
DINITF	  1100%	  1100
DLRSUP	   649#	  5624	  9061
DOOUT	  1449	  1537#
DOU	  5296#
DRL	  5294#
DSPSIZ	  5288	  5299#
DTE	  9731	  9766	  9787
DTEDII	  9761
DTEDRW	  9765
DTEEPW	  9763	  9764
DTEHLT	  9760	  9796#
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

DVIN	   616
DVNZP	  5640	  7166	  7588
DVOUT	   616
DVRMT	 10302	 10359	 10956	 10975
DVSIZ	  5291#
DVTTY	   616	  7623	  7654	  7688	 10302	 10802	 10956
DWNFLG	  3830	  3872	  5607	 11456#
DZAP	  5298#
E1IDPB	  4252	  4306	  4325	  4519#
E2IDPB	  4266	  4295	  4501	  4525#
EAC10A	  4272	  4275#	  4299	  4348
EAC10B	  4278#	  4289
EAC11A	  4294	  4297#
EAC14A	  4222	  4224	  4332	  4335#
EAC15A	  4223	  4343	  4346#
EAC4A	  4221	  4260#
EACT1	  4206	  4229#
EACT10	  4208	  4209	  4271#
EACT11	  4218	  4219	  4293#
EACT12	  4207	  4208	  4209	  4311	  4317#	  4324	  4326
EACT13	  4212	  4213	  4214	  4323#
EACT14	  4212	  4214	  4331#
EACT15	  4213	  4342#
EACT16	  4216	  4240#
EACT17	  4217	  4218	  4219	  4310#
EACT1A	  4234#	  4248
EACT1B	  4231#	  4262	  4268
EACT2	  4206	  4245#	  4253
EACT3	  4211	  4252#
EACT4	  4211	  4258#
EACT5	  4216	  4266#
EACT6	  4207	  4284#
EACT6A	  4285	  4288#	  4300	  4305	  4307	  4319	  4337
EACT7	  4217	  4304#
EATTAB	  8820	  8823#
ECHBAK	  4185#	  4230	  4241	  4259	  4274	  4287	  4313	  4334	  4345	  4465	  4475
ECHLST	  4190#	  4233	  4277
ECHRPT	  4173	  4178#	  4384	  4389	  4394	  4399	  4430	  4435	  4452	  4457
ECHSPA	  4197	  4351#
ECHSPT	  4353	  4355#
ECHT12	  4198	  4199	  4206#
ECHT34	  4200	  4201	  4211#
ECHT56	  4202	  4203	  4216#
ECHT7	  4204	  4221#
ECHTAB	  4179	  4197#
EDEC	  1452	  1573#
ENTRUB	  2034	  2429	  2432	  2474#	  2498	  2749	  2751	  2755	  2764	  4505
EPCOU1	  4489	  4512#	  4519	  4525
EPCOUT	  4229	  4240	  4258	  4273	  4286	  4312	  4333	  4344	  4511#
EPT	  9468%	  9468	  9724%	  9724	  9729%	  9729	  9730%	  9730	  9755%	  9755	  9756%	  9756	  9757%	  9757
	  9761%	  9761	  9763%	  9763	  9764%	  9764	  9765%	  9765	  9778%	  9778	  9783%	  9783	  9784%	  9784
	  9789%	  9789
EPTDT0	  9761	  9763	  9764	  9765
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

ERRBNG	  1790	 11455#
ERRXIT	  7270	  7276	  7282	  7288#	  7442	  7445
ESCTR1	  8781	 10910#
ESCTRP	  2861	 10894#
F	   577	   578	   579	   580	   581	   582	   583	   584	   585	   586	   587	   588	   601	   602
	   603	   604	   605	   606	   607	  1512	  1513	  1519	  1520	  1609	  1610	  1637	  1668	  1674
	  1685	  1687	  1716	  1731	  1732	  1751	  1752	  1828	  1829	  1831	  1873	  1874	  1911	  1912
	  1914	  1942	  1943	  2071	  2072	  2074	  2169	  3061	  3062	  3566	  4147	  4148	  4150	  4151
	  4152	  4877	  4900	  4912	  4946	  4948	  4953	  4959	  4996	  4997	  4998	  5005	  5014	  5029
	  5030	  5032	  5093	  5099	  5100	  5104	  5111	  5313	  5316	  5320	  5322	  5332	  5339	  5368
	  5369	  5390	  5392	  5397	  5398	  5400	  5405	  5419	  5437	  5543	  5544	  5546	  5557	  5558
	  5577	  5589	  5597	  5598	  5599	  5622	  5623	  5625	  5626	  5641	  5833	  6085	  6086	  6092
	  6093	  6104	  6105	  6106	  6190	  6191	  6192	  6324	  6328	  6421	  6423	  6431	  6435	  6442
	  6610	  6615	  6616	  6621	  6889	  6890	  7027	  7138	  7144	  7160	  7161	  7165	  7171	  7174
	  7175	  7176	  7177	  7186	  7187	  7205	  7206	  7208	  7214	  7217	  7223	  7225	  7227	  7463
	  7464	  7465	  7589	  7593	  7594	  7626	  7628	  7642	  7645	  7655	  7657	  7687	  7689	  7850
	  8637	  8640	  8657	  8772	  8773	  8775	  8875	  8917	  8920	  8925	  8926	  8929	  8963	  8994
	  8995	  8998	  9010	  9012	  9023	  9024	  9027	  9089	  9098	  9136	  9155	  9165	  9167	  9181
	  9183	  9187	  9191	  9193	  9205	  9278	  9279	  9280	  9281	  9282	  9288	  9410	  9411	  9412
	  9864	  9865	  9866	  9867	  9891	  9901	  9908	  9912	  9945	  9952	  9953	 10202	 10203	 10204
	 10252	 10256	 10257	 10262	 10264	 10276	 10277	 10279	 10280	 10281	 10283	 10286	 10288	 10306
	 10307	 10308	 10341	 10342	 10343	 10360	 10362	 10365	 10367	 10418	 10441	 10442	 10443	 10444
	 10445	 10446	 10449	 10454	 10466	 10590	 10593	 10610	 10616	 10617	 10625	 10650	 10669	 10673
	 10678	 10684	 10700	 10707	 10713	 10714	 10715	 10717	 10751	 10754	 10755	 10760	 10774	 10790
	 10791	 10792	 10793	 10795	 10796	 10798	 10803	 10806	 10807	 10813	 10814	 10818	 10819	 10830
	 10832	 10834	 10836	 10845	 10846	 10857	 10874	 10875	 10882	 10883	 10898	 10899	 10925	 10926
	 10931	 10935	 10938	 10947	 10951	 10953	 10954	 10955	 10964	 10976	 10985	 11002	 11016	 11017
	 11033	 11055	 11124	 11133	 11141	 11143	 11145	 11146	 11147	 11160	 11161	 11162	 11164	 11166
FARCHK	 10554%	 10554	 10571%	 10571
FCREQ	   101%	  8164	  8216	  8219	  8221	  8265
FCS	   651#	  5624	  9069
FCWAIT	   101%	  8220
FDRUPX	  5497%	  5497
FFFLP	  2449	  4660	  4736#
FFLP0	  4736	  4737#	  4739
FILERS	  4754	  4755	  4756	  4759	  4760	  4761	  4764	  4765	  4766	  4769	  4770	  4771	  4786#
FINLIN	  3043#	  3475	  3520	  3554	  3678	  3702	  3744	  3762	  3854	  3950	  3964	  3982	  3983	  4078
	  4105	  4192
FINOUT	  2940	  3075	  3085	  3095#
FIXIMI	  5308	  6176#	  6891
FLGCHR	 10877
FLGESC	 10902	 10914
FLGLIN	 10888
FLLBSC	  2693	  2694	  2847	  2882	  2883	  4732#
FLLFFS	  4663	  4753#
FLLVTS	  4673	  4758#
FLMX	  4754	  4755	  4756	  4759	  4760	  4761	  4764	  4765	  4766	  4769	  4770	  4771	  4786	  4794
FMTB	  3706	  3711	  3718	  3726	  3731	  3739#	  4050	  4139
FMTB1	  3741#	  3775	  3794	  4045	  4128
FNDPRT	  6433	  7643	 10591	 10670	 11141#	 11167
FNDPT1	 11142	 11147#
FPOPJ	  9280	  9282	  9288#
FRCCGB	  1519#	  3304
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

FRCDOO	  1538#	  3330	  3408
FRCEOT	  1665#	  3350
FRCIBF	  1634#	  3266
FRCIHR	  1724#	  3384
FRCINP	  6494	  6965#
FRCITM	  1683#	  3429
FRCLOS	  1824#	  3560	  3564
FRCLP0	  6969#	  6972
FRCLP1	  6978#	  6982
FRCLP2	  6986#	  6991
FRCNOO	  1530#	  3272	  3323	  3352	  3432
FRCOHR	  1744#	  3474	  3518	  3530	  8683
FRCORG	  1590#	  3314
FRCRS1	  7019#	  7037
FRCRS2	  7025	  7038#
FRCRS3	  7057#	  7064
FRCRS4	  7058	  7077#
FRCRS5	  7069	  7084#
FRCRS6	  7072	  7080	  7085	  7088#
FRCRS7	  7089	  7092#
FRCRSC	  6525	  7002#
FRCRSX	  7006	  7011	  7017	  7098#
FRCYEL	  1599#	  3361
FRCZAP	  1635	  1891#	  3552	  8570
FREBUF	  1637	  1657	  1668	  1685	  1705#	  1732
FRECHK	  4062	  4089	  5204#	  8697	  8808	  9482
FREST	  5051#	  5057
FRETTY	 10305	 10307	 10790	 10793	 11416#
FREUP	  4076	  5049#	  5238	  5240	  5264
FRMASN	  2170%	  2170	  9829%	  9829	 11229%	 11229
FRMKJF	  2187%	  2187	  9832%	  9832
FRSDEF	  7044	  7046	  7088	 11503#
FRSFLG	  7040	  7042	  7063	  7078	  9267	  9269	 11502#
FRSTTY	  7153	  7521	  7621	  7650	  7683	 10353	 10933	 10951#	 10973	 11004
FSCN	  1336	  3095	  3097	  3581	  3639	  3657	 11399#
FULLCQ	  2679	  2732	  2772	  5017#
FULLIN	  3021	  3039	  3048	  3058	  3061#	  3525	  3683	  3701	  3740	  3771	  3790	  3813	  3934	  3957
	  4041	  4059	  4067	  4116	  4122	  4166	  4186	  4517	  4545
FULLN2	  3062	  3068#
FULLN3	  3068	  3079#
GEPM10	  6153	  6170#
GEPM11	  6155	  6171#
GEPM12	  6157	  6172#
GEPMC1	  6137	  6161#
GEPMC2	  6139	  6162#
GEPMC3	  6141	  6163#
GEPMC4	  6142	  6164#
GEPMC5	  6143	  6165#
GEPMC6	  6145	  6166#
GEPMC7	  6147	  6167#
GEPMC8	  6149	  6168#
GEPMC9	  6151	  6169#
GET4WD	    87%	  8217
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

GETBB	  8182	  8213#	  8222
GETBB1	  8214	  8252#
GETBBP	  8114	  8249#
GETBI	  7913	  7930	  8123#
GETBIO	  8123	  8130	  8173#
GETBO	  7970	  8130#
GETCHK	  2044	  2483	  5216#	  8895
GETCTY	  9875	  9883#
GETDDB	  9950#
GETLIN	  5798	  5948#
GETLNZ	  5950	  5980#	  6134
GETLOG	  6070#
GETLPS	  6097#
GETMC	  5790	  6132#
GETMOD	  6102#
GETPP	  6315	  6347#
GETPP1	  6348#	  6353	  6356
GINST	  5318#	  5318	  5319	  5329#	  5329	  5330	  5334#	  5334	  5335	  5372#	  5372	  5373	  5399#	  5399
	  5400	  5408#	  5408	  5409	  5448#	  5448	  5449	  5458#	  5458	  5459	  5461#	  5461	  5462	  5466#
	  5466	  5467	  5723#	  5723	  5724	  5813#	  5813	  5814	  5830#	  5830	  5831	  5843#	  5843	  5844
	  5882#	  5882	  5883	  5884#	  5884	  5885	  5892#	  5892	  5893	  5902#	  5902	  5903	  5904#	  5904
	  5905	  5906#	  5906	  5907	  5919#	  5919	  5920	  5920#	  5921	  5932#	  5932	  5933	  5934#	  5934
	  5935	  5938#	  5938	  5939	  5948#	  5948	  5949	  5977#	  5977	  5978	  5980#	  5980	  5981	  6010#
	  6010	  6011	  6057#	  6057	  6058	  6074#	  6074	  6075	  6120#	  6120	  6121	  6132#	  6132	  6133
	  6158#	  6158	  6159	  6337#	  6337	  6338	  6340#	  6340	  6341	  6431#	  6431	  6432	  6437#	  6437
	  6438	  6551#	  6551	  6552	  6552#	  6553	  6555#	  6555	  6556	  6568#	  6568	  6569	  6575#	  6575
	  6576	  6579#	  6579	  6580	  6828#	  6828	  6829	  6837#	  6837	  6838	  6848#	  6848	  6849	  6864#
	  6864	  6865	  6873#	  6873	  6874	  6880#	  6880	  6881	  6883#	  6883	  6884	  6924#	  6924	  6925
	  6930#	  6930	  6931	  6943#	  6943	  6944	  6965#	  6965	  6966	  6969#	  6969	  6970	  6978#	  6978
	  6979	  6986#	  6986	  6987	  7013#	  7013	  7014	  7053#	  7053	  7054	  7059#	  7059	  7060	  7070#
	  7070	  7071	  7100#	  7100	  7101	  7182#	  7182	  7183	  7489#	  7489	  7490	  7592#	  7592	  7593
	  7600#	  7600	  7601	  7618#	  7618	  7632#	  7632	  7633	  7635#	  7635	  7636	  7636#	  7637	  7679#
	  7679	  7680	  7699#	  7699	  7700	  7701#	  7701	  7702	  7708#	  7708	  7709	  7879#	  7879	  7880
	  7935#	  7935	  7936	  7972#	  7972	  7973	  7983#	  7983	  7984	  7987#	  7987	  7988	  9988#	  9988
	  9989	  9994#	  9994	  9995	 10547#	 10547	 10548	 10548#	 10549	 10608#	 10608	 10609	 10741#	 10741
	 10742
GIV4WD	    87%	  8272
GOBCH1	  1518	  1522#
GOBCH2	  1520	  1523	  1525#
GOBCHR	  1450	  1512#
GOBIN	  3105	  3933#
GOBIN1	  3941	  3946#
GOBIO1	  3933	  3956	  3987#
GOBIO2	  3949	  3981	  4002#
GOBOP	  3109	  3955#
GOBOT	  3118	  3956#
GOBOT1	  3971	  3976#
GOBOT3	  3960	  3965#
GOBPF	  3108	  3767#
GOBPN	  3107	  3785#
GOBPN1	  3786	  3789#
GOCGB	  3104	  3710#
GOECO	  3122	  4160#
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

GOFIL	  3115	  4536#	  4546
GOHNG	  3120	  3730#
GOHSH	  3102	  3673#
GOLIN	  3010	  3012#	  3033
GOLIN1	  3012	  3014	  3024#
GOLIN2	  3018	  3023#
GOLIN3	  3019#	  4163
GOOUT	  3117	  4083#
GORUB	  3116	  4056#
GOSBL	  3114	  3748#
GOSEC	  3111	  3722#
GOSGR	  3123	  4132#
GOSOG	  3124	  4134#
GOSRD	  3110	  3705#
GOSTC	  3113	  3682#
GOSTC1	  3684#	  3699
GOSTP	  3112	  3715#
GOSYL	  3119	  4121#
GOTBF0	  7910	  7916#
GOTBF1	  7906	  7914	  7919#
GOTBUF	  7815	  7842	  7868#
GOTRI	  3106	  4049#
GOTRO	  3103	  4040#
GOXOFF	  3788	  3798#
GOXON	  3769	  3779#
GOZAP	  3121	  3808#
GREEN	  1454	  1577#
GTBIO1	  8179	  8182#
GTCGSZ	    91%	  5350
GTLCRD	  5968	  5991#	  6002
GTLDEF	  5992#
GTLECS	  5986#
GTLESC	  5959	  5990#
GTLFRM	  5998#	  6007
GTLHDX	  5956	  5989#	  6001
GTLLCT	  5976	  5995#	  6004	  6011
GTLLRD	  5974	  5975	  5994#
GTLMSK	  5953	  5984#
GTLNFC	  5993#	  6003
GTLOBS	  5961	  5988#
GTLPSP	  5965	  5987#
GTLPTP	  5997#	  6006
GTLTAB	  5996#	  6005
HIGHJB	    79%	  5611
HNGAL1	  5613#	  5618
HNGALL	  5514	  5606#
HNGAUX	  5542	  5547	  7186#
HNGAX1	  7188#	  7210
HNGAX4	  7198	  7201#
HNGAXD	  7187	  7195#	  7206
HNGJOB	  5516	  5595#	  5615
HNGMON	  5502	  5512#	  9441
HNGPRT	  5530#	  7648	  7660
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

HNGTT1	  5556	  5559	  5567#
HNGTT2	  5568	  5584#
HNGTT3	  5571	  5588#
HNGTTY	  1920	  5550	  5555#	  5601	 10724
HNGUUL	  5489	  5506#
HNGUUO	  5487#
HWDPNT	  1155%	  1155	  2986	  2990
I	   616	  1689	  5342	  5409	  6178	  6193
I1CHRW	  6063#	  6503
I1CHWL	  6042#	  6505
IAC10A	  2318	  2333#
IAC11A	  2341#	  2507
IAC11B	  2310	  2335	  2343#
IAC11C	  2311	  2344#
IAC11D	  2342	  2345#	  2533
IAC16B	  2513	  2531#
IAC16C	  2522	  2532#
IACT0	  1994	  1999	  2004	  2009	  2563#
IACT1	  1995	  2274#
IACT10	  2002	  2007	  2330#
IACT11	  2005	  2339#
IACT12	  2007	  2502#
IACT13	  2010	  2511#
IACT14	  2011	  2517#
IACT15	  2012	  2526#
IACT17	  2012	  2536#
IACT2	  1996	  2280#
IACT21	  2010	  2548#
IACT22	  2011	  2554#
IACT2A	  2284#	  2303
IACT3	  1997	  2290#
IACT4	  1997	  2299#
IACT5	  2000	  2307#
IACT5A	  2309#	  2326
IACT6	  2001	  2006	  2315#
IACT7	  2002	  2321#
IB	   616
ICH0	  6047	  6060#
ICS1	  6026#	  6030	  6038
ICW1	  6053#	  6061
ICW1A	  6032	  6052#	  6068
ICW1B	  6040	  6051#
IDLNEC	  2684	  2687#
IFDET	 10374#
IFROOM	  5716	  5936	  8973#	  9313
IGOBEC	  2668	  2692#
IMGCH1	  5357	  5365#
IMGCHG	  2249	  4903	  5361	  5366#
IMGCNT	  2235	  2264	  5355#
IMGDEF	  1973	  2230#
IMGDIM	    47#	  2231	  2245	  2260
IMGIT2	  1673#	  1733
IMGITM	  1672#	  1690
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

IMGRM1	  2255	  2266	  2269#
IMGRMA	  1974	  2244#
IMGRMT	  1975	  2259#
IMGTIM	    48#	  9168
INCBC	  7742	  8043#
INCHRS	  5794	  6024#	  6504
INCHRW	  5792	  6064#
INCHSL	  5797	  6033#	  6506
INCHWL	  5796	  6043#
INCPBC	  8045	  8074#
INISET	  9803#
INISL2	  9821	  9835#
INISLP	  9818#	  9835
INLMES	  1144%	  1144	  1148%	  1148	  1152%	  1152	  1156%	  1156	  1163%	  1163	  1408%	  1408	  1412%	  1412
	  1416%	  1416	  1421%	  1421	  2983	  2987	  4839%	  4839	  8498%	  8498
INPA10	  2567	  2570	  2572#
INPA94	  2568	  2569	  2590#
INPACT	  2565	  2567#
INPAL1	  2602	  2658#
INPBK2	  2585	  2603	  2637	  2654#	  2773
INPBRK	  2576	  2579	  2580	  2581	  2583	  2584	  2586	  2591	  2593	  2595	  2606	  2609#	  2659	  2680
	  2733	  2856	  2888
INPBS1	  2605	  2624#
INPBSP	  2587	  2622#
INPCH	  2741	  2757	  2782	  2803	 11401#
INPCH2	   850#	  1432	  1837
INPCHR	   849#	  1429	  1796	  1823	  1838	  1867	  7256	  7267	  7275	  7281	  7330
INPCLD	  2598	  2651#
INPDL1	   851#	  1854
INPDL2	   852#	  1558	  1632	  1663	  1681	  1722	  1851
INPDLN	  2577	  2594	  2679#
INPES0	  2871	  2886#
INPES1	  2869	  2888#
INPESC	  2573	  2597	  2599	  2660	  2861#
INPEST	  2878	  2881#
INPGOB	  2575	  2604	  2664#
INPLIN	   848#	  1372	  1426
INPOTP	  2669#	  2685	  2848	  2879
INPRA1	  2822#	  2845
INPRAC	  2814	  2818#
INPRB1	  2601	  2624	  2732#
INPRB2	  2735	  2847#
INPRB3	  2800	  2802#
INPRB4	  2793	  2803#
INPRB5	  2810#	  2823
INPRB6	  2747	  2752#
INPRB7	  2740	  2754#
INPRB8	  2753	  2760	  2764#
INPRB9	  2744	  2761#
INPRBC	  2734	  2774	  2778#
INPRET	  2574	  2592	  2641#
INPRT2	  2772#
INPRTA	  2819	  2825#
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

INPRTB	  2809	  2814#
INPRUB	  2582	  2622	  2730#
INPSTA	  2588	  2854#
INPTAB	  2578	  2596	  2614#
INPTCA	  2636#
INPTYP	   847#	  1371	  1423	  1940
INRW1	  6065#	  6067
INTERM	  2092	  2161	  3829	  3871	 11191	 11414#
INTSET	 11034	 11039#
INWL1	  6044#	  6050
IO	  4974	  5396	  9009	  9164	  9180	  9900	  9911
IOACT	  4153	  4999	  5004	  5013	  5115	  5418	  5436	  9011	  9166	  9180	  9194	  9402	  9900	  9911
	 10361	 10364
IOBEG	  5388
IOBKTL	  1686	  1830	  2073	 11056
IODEND	  7849	  7858	  8656
IOEND	  1673	  4911	  5305	  6045	  7804	  7831	  7849	  7903	  8654	  8774	  9113
IOFST	  5338	  5396	 10261	 10816
IONEOU	  5805	  5830#	  6470
IOSBKA	   642#	  5624	  9073	  9097	  9135
IOW	  5002	  5004	  9402	 10361	 10364
IPOPJ	    82%
IPOPJ1	    82%	 10723	 10726	 10736
IQUEUE	  7737	  7822	  8615#
IRING	    78%	   847	   848	   849	   850	   851	   852	  1926	  8492	  8518	  8576	 11326
IRP620	    78%	  1119	  1150	  1249	  1334	  1342
IRPLO1	 11329	 11333#
IRPLOG	  1347	 11326#
IRPOLD	  1120	  1251	 11507#
IRPPDP	    78%	  1248	  1333	  1383	  1414	  1418	  8527
IRPSTP	  1343	  1345	 11505#
IRPTIM	  1229%	  1229	  1341%	  1341	  4826%	  4826	  4832%	  4832	  4843%	  4843
ITMCHN	  5307	  5307%	  5386	  5447	  5814	  5831	  5841	  5881	  5901	  5929	  6024	  6033	  6043	  6064
	  6108	  6938	  6947	  6958	  7861	  7964	  8049
J	  1514	  1515	  1521	  1809	  1919	  5108	  5112	  5113	  5114	  5349	  5351	  5493	  5500	  5501
	  5507	  5548	  5549	  5555	  5567	  5600	  5622	  5700	  6087	  6412	  6418	  6432	  6611	  6620
	  7151	  7160	  7164	  7165	  7172	  7292	  7460	  7463	  7476	  7513	  7517	  7518	  7529	  7565
	  7580	  7585	  7610	  7871	  7979	  8055	  8618	  8629	  8635	  8780	  8907	  8946	  8947	  9052
	  9053	  9056	  9283	  9284	  9285	  9287	  9844	  9863	  9864	 10002	 10003	 10014	 10015	 10019
	 10020	 10022	 10202	 10450	 10452	 10454	 10471	 10497	 10560	 10565	 10577	 10582	 10585	 10589
	 10609	 10615	 10616	 10632	 10689	 10697	 10712	 10740	 10835	 10836	 10951	 10959	 11141	 11150
	 11158	 11160	 11255	 11256	 11264	 11265	 11266	 11268	 11273
JACCT	  5036
JACCT2	  5036
JBTABT	    76%	  7460	  7610
JBTAUN	  7529%	  7529
JBTAWQ	    77%	  8618	  8629	  8635	  8907	  8947	  9001	  9030
JBTBCS	    77%	  5351	  5352
JBTBET	    77%	  4961	  4962
JBTBIO	    77%	  7871	  7872	  7979	  7980
JBTCIN	    77%	  1945	  1946
JBTCOT	    77%	  3066	  3067
JBTLIC	    77%	  5507	  5700	  7151	  7513	  7565
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

JBTPIP	   107%	 11158
JBTPRV	    83%
JBTSTS	    83%	  1515	  5035	  5686	 10497	 10560	 10577
JBTUN1	    76%	  7518
JBTUNM	    76%	  7517
JBYEXC	 10970%	 10970	 10972%	 10972
JBYWAK	 10967%	 10967	 10969%	 10969
JERR	 10499
JFYMIN	  1103%	  1103
JFYSEC	    86%	  1858	  4829%	  4829
JLOG	  1516
JNA	  5683	 10559	 10576
JOB	    84%	  6432	  8780	  9844
JOBN	    79%	  5595	  5685
KAF1	  1104#
KEPBI	  7908	  8157#
KEPBI1	  8160	  8164#
KEY10	  1086#	  1091	  1096	  1127	  1166	  9545
KEY620	  1092%	  1092	  1126%	  1126	  1129%	  1129	  1165
KEYSET	  1092#	  9547
KEYTIM	  1094%	  1094	  1228%	  1228	  4825%	  4825
L2LBBP	   399#	  2629	  2842	  4449	  4454	  5635	  6224	  6227	  6851	  6853	  8760	  8843	  9390	 10770
	 10772
L2LBSP	   406#	  2739	  4681
L2LCCS	   397#	  2039	  2867	  2891	  5256
L2LDEL	   402#	  2029	  2039	  2671	  2754	  3310	  4135	  5256
L2LLDF	   401#	  4147	  4994	  5860	  6123	  6905	  9273
L2LNTB	   400#	  2438	  2445	  2452	  4425	  4439	  5631	 10763	 10764
L2LOEX	   394#	  5426	  9040	 10940
L2LOWS	   404#	  3359	  4125	  4926
L2LOWT	   407#	  1592	  1892	  3357	  3536	  3808	  4123	  4922	  4941	  5101	  5273
L2LTBK	   398#	  2615	  2832	  4427	  4432	  5633	  6840	  6842	  8754	  8842	  9385	 10766	 10768
LAPBIT	   331#	  3015
LDB.HI	  5083	 11250	 11512#
LDB.LO	  5082	 11201	 11511#
LDBBIO	   353#	  1641	  1698	  1712	  1726	  1744	  1907	  3187	  3244	  3344	  3375	  3393	  3421	  3455
	  3459	  3462	  3463	  3479	  3492	  3538	  3810	  3935	  3959	  4968	  4976	  4985	  5930	  7727
	  7753	  7766	  7769	  7778	  7802	  7829	  7965	  8125	  8132	  8138	  8140	  8146	  8148	  8151
	  8161	  8178	  8203	  8208	  8648	  8651	  8676	  8936
LDBBK2	   367#	  2053	  2294	  2302	  2323	  2332	  2506	  2530	  2540	  2714	  2717	  2718	  2721	  2817
	  2822	  4261	  4336	  4347	  5245	  5874	  5972	  6237	  6250	  8724	  9106	 11080
LDBBKC	   365#	  2052	  2283	  2317	  2519	  2557	  4246	  4318	  5244	  5875	  5970	  6239	  6248	  8716
	  8779	  8789	  8845	  9104	  9435	 11081
LDBBKI	   357#	  2028	  2048	  2284	  2293	  2325	  2333	  2505	  2521	  2529	  2539	  2558	  2701	  2710
	  2711	  2778	  2783	  2811	  2864	  5246	  6254	  8700	  8727	  8811
LDBBKP	   356#	  2049	  2285	  2334	  2520	  2559	  2698	  5247	  6253	  8699	  8702	  8810	  8813
LDBBYT	   392#	   525	   526	   527	   528	   529	   530	   531	   532	   533	   534	   535	   536	   537
	  1593	  1893	  2030	  2040	  2102	  2439	  2446	  2453	  2616	  2630	  2672	  2674	  2738	  2756
	  2820	  2843	  2868	  2892	  3311	  3358	  3360	  3537	  3809	  3918	  4124	  4126	  4136	  4148
	  4424	  4440	  4446	  4682	  4924	  4927	  4929	  4942	  4995	  5102	  5257	  5274	  5276	  5427
	  5632	  5861	  6124	  6164	  6218	  6222	  6390	  6906	  7340	  8755	  8761	  8831	  8832	  8883
	  9041	  9274	  9386	  9391	 10761	 10765	 10941
LDBCLA	   500#	   501	   562	  2117
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

LDBDCH	   427#	   547	   548	   549	   550	   551	   552	   553	   554	   555	   556	  1376	  1533	  1539
	  1570	  1575	  1741	  1901	  2116	  2665	  2875	  2876	  2958	  2971	  2998	  3166	  3242	  3270
	  3297	  3320	  3322	  3329	  3336	  3338	  3343	  3372	  3374	  3390	  3407	  3426	  3450	  3551
	  3723	  3748	  3768	  3773	  3779	  3792	  3800	  3801	  3803	  3913	  3978	  4043	  4876	  4886
	  4895	  4917	  5017	  5254	  5255	  5280	  5321	  5393	  5394	  5538	  5703	  5852	  5863	  5952
	  5969	  6176	  6181	  6183	  6197	  6199	  6290	  6293	  6401	  6462	  6561	  6601	  6781	  6785
	  6786	  6858	  7002	  7039	  7047	  7091	  7093	  7095	  7179	  7351	  7468	  8043	  8080	  8159
	  8177	  8201	  8567	  8679	  8768	  8847	  8850	  8887	  9016	  9046	  9081	  9082	  9084	  9100
	  9103	  9138	  9140	  9212	  9225	  9242	  9341	  9415	  9423	  9431	  9447	  9451	  9824	 10159
	 10407	 10487	 10619	 10655	 10660	 10705	 11062	 11072	 11095	 11222
LDBDCX	   462#	   558	   559	   560	   561	  1526	  1608	  1615	  1648	  1827	  1870	  2070	  2098	  2411
	  2625	  2745	  2855	  4112	  4416	  4809	  5113	  5957	  5962	  6403	  6614	  6901	  6904	  7353
	  7694	  7695	  8879	  8942	  8983	  9060	  9064	  9827	 10873	 10885	 10897	 10912	 10924	 11118
	 11227
LDBDDB	   343#	  1512	  1519	  1609	  1716	  1731	  1751	  1828	  1873	  1911	  1942	  2071	  2153	  3061
	  3566	  3914	  4150	  4877	  4996	  5029	  5093	  5099	  5368	  5543	  5560	  6085	  6092	  6104
	  6190	  6331	  6615	  7186	  7205	  7209	  7218	  7594	  8772	  9281	  9410	  9891	  9945	 10270
	 10348	 10442	 10600	 10755	 10874	 10882	 10898	 10925	 11146
LDBECC	   364#	  1566	  2020	  2051	  2238	  2703	  2709	  2724	  2791	  2794	  3176	  4160	  4190	  4235
	  4279	  4909	  5249	  5856	  6109	  6265	  6948	  6974	  9115	  9119	  9143	  9216	  9229	  9258
	 11065	 11076
LDBECT	   363#	  2047	  2269	  2345	  2430	  2707	  2796	  4167	  4170	  4185	  4498	  4516	  5248	  6264
LDBFLP	   374#	  4536	  4538	  4598	  4708	  5268
LDBLEN	   517#
LDBLIN	   344#	   522	   523	  1546	  1881	  1886	  3841	  3844	  3881	  3884	  3912	  3962	  4936	  7299
	  8174
LDBLOG	   379#	   520	  1551	  1557	  1894	  1895	  1904	  1924	  2083	  2087	  2109	  2160	  3540	  3549
	  3826	  3836	  3868	  3876	  3920	  5521	  5540	  6072	  6332	  6352	  6355	  6386	  7148	  7304
	  7336	  8568	  9819	  9823	 10207	 10335	 10400	 10469	 11164	 11221
LDBMOD	   415#	   539	   540	   541	   542	   543	   544	   545	  1562	  1656	  1695	  1725	  1748	  1872
	  1905	  3542	  3838	  3878	  3919	  4878	  5532	  5628	  5964	  6391	  6926	  7341	  7725	  7745
	  7750	  7772	  7787	  7796	  7806	  7833	  7855	  7901	  7951	  7961	  8189	  8645	  8663	  8665
	  8673	 10409	 11089
LDBOPB	   349#	  1534	  1541	  1579	  1586	  1595	  1619	  1743	  1899	  1958	  2037	  2059	  2079	  2152
	  2435	  2495	  2767	  3020	  3037	  3056	  3233	  3546	  3846	  3886	  3916	  4514	  4938	  4940
	  5281	  5422	  5825	  5895	  5923	  6128	  6302	  6744	  6791	  6985	  7957	  8012	  8668	  8686
	  8915	  9095	  9173	  9250	 10405	 10757	 11129	 11211
LDBOUT	   304	   305	   306	   307	   308	   309	   310	   311	   312	   313	   314	   315	   316	   317
	   318	   319	   320	   321	   322	   323	   324	   325	   326	   350#	  1891	  2148	  3009	  3032
	  3046	  3845	  3885	  3915	  6389	  7339
LDBRBC	   378#	  2480	  2486	  4056	  4069	  5250
LDBRBI	   376#	  2476	  2479	  2484	  4074	  5239	  5252
LDBRBO	   377#	  2485	  4060	  4063	  4066	  4075	  4077	  5251
LDBSTR	   502#	  2120	  2121	  2123	  7219	  7220	  7222	  7355	  7356
LDBTCB	   351#	  6404	  6566	  6573	  6607	 11100
LDBTIC	   362#	  2019	  2050	  2270	  2346	  2705	  2725	  2795	  3175	  4231	  4247	  4275	  4288	  4908
	  5243	  5343	  5453	  5857	  5868	  6110	  6269	  6949	  6973	  8691	  8692	  8803	  8804	  9102
	  9112	  9141	  9217	  9230	  9257	 11066	 11075
LDBTIP	   360#	  2024	  2027	  2045	  2700	  2781	  2784	  2790	  5237	  5241	  6252	  9320
LDBTIT	   361#	  2046	  5242	  6113	  6268	  8695	  8698	  8806	  8809	  9295
LDBTMR	   202	   203	   204	   205	   206	   207	   208	   209	   210	   211	   212	   213	   214	   215
	   216	   217	   218	   219	   220	   221	   222	   503#	  2134	  2135	  6398	  6399	  7348	  7349
LDBTMS	   232	   233	   234	   235	   236	   237	   238	   239	   240	   241	   242	   243	   244	   245
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

	   246	   247	   248	   249	   250	   251	   252	   504#
LDBTMT	   505#	  2146	  3684	  3694	  3700	  6299	  6394	  6735	  6740	  7342
LDBTOC	   372#	  1234	  4083	  4096	  4111	  5266	  5428	  8878	  8898	  8901	  8941	  8982	  9177	  9504
	  9886	  9897	  9983	  9984
LDBTOP	   370#	  5263	  5265	  8893	  8896	  8900
LDBTOT	   371#	  4087	  4090	  4093	  5267	  8897	  9480	  9483
LDBTYP	   501#	   563	  2119
LDEC	  1453	  1566#
LDICLE	   515#	 11208
LDICLR	   342#	 11205	 11206	 11207
LDLAUX	   444#	  1569	  1574	  1909	  2157	  3825	  3867	  4906	  5541	  5984	  6177	  6196	  7003	  7350
	  9047	 10620
LDLBK2	   438#	  5873	  5971	  8721	  9076	  9083	  9105	 11079
LDLBKA	   437#	  5019	  9074	  9083	  9099	  9137
LDLCOM	   436#	  2099	  2412	  2454	  2797	  2886	  4143	  4417	  4460	  4470	  5018	  5026	  5704	  5764
	  6449	  7008	  7043	  7092	  7178	  9017	  9271	  9414	  9432	  9450	  9822	 10486	 10654	 10659
	 10704	 10870	 10894	 11063	 11073	 11220
LDLDEF	   440#	  1568	  1573	  2099	  2115	  5984	  6400	  7045	  7090	  7350
LDLECS	   434#	  5253	  5851	  5984	  7094	  8799	  8846	  9422	  9446
LDLFRM	   449#	  2440	  2447	  4658	  4668	  5984
LDLIMI	   439#	  3749	  3787	  4885	  4916	  5311	  5347	  5869	  6044	  6179	  6180	  6195	  6461	  7350
	  9110	  9169	  9427	  9446
LDLLCP	   447#	  2101	  2114	  2355	  2408	  2422	  2426	  2440	  2447	  2458	  2669	  2799	  5984
LDLLCT	   445#	  2099	  2401	  2406	  2658	  4403	  4409	  5984	  8718	  8765	  8777	  9396
LDLNEC	   443#	  2798	  3724	  4271	  4284	  4293	  4304	  4310	  4323	  4331	  4342	  4461	  4471	  5984
	  6787	  7350	  9072	  9083	  9090
LDLNFC	   442#	  2358	  4580	  4634	  5984	  7350
LDLNOP	   431#	  1532	  1538	  1740	  1900	  3977	  4042	  5279	  5984	  8678	 10406
LDLOSU	   441#	  2664	  2874	  5389	  5862	  5984	  8888
LDLPTP	   448#	  2355	  2408	  2422	  2426	  2440	  2447	  2458	  2642	  2730	  5984	  6291	  6294
LDLPTY	   435#	  2968	  2995	  3825	  6400	  6562	  6599	  6859	  7467	  8044	  8081	  8158	  8176	  8200
	 11096
LDLSOX	   433#	  4558	  4580
LDLTAB	   446#	  2458	  4645	  5984
LDPBBP	   526#	  6847
LDPBSD	   558#	  6655
LDPBSP	   528#	  6762	  6764	  6774
LDPCHG	   540#	  5358	  5362	  5367
LDPCIE	   203#
LDPCLA	   562#	  6813	  6821	  6823
LDPCOM	   548#	  5562	 10605
LDPCRD	   206#	  5966
LDPDEM	   556#	  6779
LDPECH	   215#	  2762	  4447	  4684
LDPECO	   202#
LDPECR	   205#
LDPELF	   204#
LDPERA	   559#	  6760	  6766	  6771	  6773
LDPESC	   220#
LDPFA1	   535#
LDPFA2	   531#
LDPFC1	   534#	  2103	  4662	  4672	  6136	  6644
LDPFC2	   530#	  2105	  4651	  6138	  6645
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

LDPFRM	   554#	  6651
LDPHDX	   210#	  2112	  5954	  6152
LDPHST	   523#	  1561	  1896	  3541	  3837	  3877	  6388	  9826	 11224
LDPIMB	   544#	  2251	  4297	  4901	  5355	  6933	 10759
LDPIR	   207#	  6144
LDPKAT	   218#
LDPLCO	   560#	  6649
LDPLCT	   551#	  6652
LDPLMD	   541#	  6206
LDPLNO	   522#	  3584	  3695	  3741	  3848	  4002	  5951	  6363	  6374	  6383	  7181	  7471	  7591	  7631
	  7700	  9958	 10669	 10842	 11209
LDPMDF	   549#	  6204
LDPMEC	   542#	  4178
LDPMIN	   543#	  1962
LDPMOD	   529#	  2372	  2563	  2667	  2683	  2877	  4351	  8731	  8784	  9055	  9361
LDPMOU	   545#
LDPNFC	   550#	  6653
LDPNTB	   527#	  6827	  6831
LDPNXO	   555#	  6642
LDPOR	   208#	  6146
LDPPA	   211#	  6150
LDPPAR	   209#	  6148
LDPPB	   212#	  6154
LDPPC	   213#	  6156
LDPPD	   217#
LDPPOS	   537#	  2354	  2362	  2367	  2370	  2403	  2419	  2457	  2468	  4479	  4490	  4496	  4566	  4602
	  4606	  4630	  4638	  4642	  4644	  4686	  4688	  4812	  6099
LDPPSM	   539#	  1868	  6923
LDPPTP	   553#	  6797	  6799
LDPQM	   221#
LDPRTC	   561#	  6657
LDPRXE	   216#
LDPSOX	   547#	  6863	  6866
LDPSPA	   222#
LDPTAB	   552#	  6650
LDPTBK	   525#	  6836
LDPTIM	   536#	  2232	  2246	  2261	  3259	  3268	  3392	  4890	  4892	  9170
LDPTOB	   219#
LDPTYP	   563#	  6810	  6815
LDPWDA	   533#
LDPWID	   532#	  2107	  2357	  4578	  4633	  6140	  6393	  6750	  6755
LDPXON	   214#
LDRBIP	   461#	  3165	  3241	  3269	  3337	  3371	  3389	  3425	  3449	  4882	  4894
LDRBPS	   456#	  3772	  3791	  9211	  9224	  9240	  9241
LDRDEM	   459#	  3724	  6783	  6784	  9091
LDRFCS	   460#	  5019	  8767	  9070	  9083
LDRNXO	   458#	  3750	  3798
LDRXOS	   457#	  3319	  3328	  3767	  3799	  9211	  9224	  9240
LDSCIE	   233#	  2142
LDSCRD	   236#
LDSECH	   245#
LDSECO	   232#
LDSECR	   235#	  2144	  6297
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

LDSELF	   234#	  2141
LDSESC	   250#
LDSHDX	   240#
LDSIR	   237#
LDSKAT	   248#
LDSOR	   238#
LDSPA	   241#
LDSPAR	   239#
LDSPB	   242#
LDSPC	   243#
LDSPD	   247#
LDSQM	   251#
LDSRXE	   246#	   253
LDSSPA	   252#
LDSTOB	   249#
LDSXON	   244#
LEVDEF	  5787	  6123#	  6476
LI.PIF	  9759
LI.PIN	  9768	  9769
LICAC	  7150	  7512
LICOPR	  5701
LICWCR	  5506	  7564
LINFLG	    76%	  2948	 11202
LINFSV	  2954	  3090	 11412#
LINJOB	  6090#
LINPNM	  2956	  3089	 11411#
LINPTR	  2945	  2947	  3092	  3094	 11402#
LINTAB	    83%	  1375	  2957	  4875	  5519	  6082	  6351	  6354	  6365	  6371	  8566	  9818	  9944	 11145
	 11200	 11204	 11213
LINTRP	  2237	  2254	  2268	  2343	  4904	 10882#
LISTSN	     3	     6
LLLHDX	   387#	  2108
LLLNLN	   384#	  1903	  9822	 10402	 11220
LLLZAP	   383#	  1903	  5539	  7147	 10206	 10334	 10468	 11163
LMLBIO	   420#	  1655	  1749	  1906	  4879	  5531	  5629	  7724	  7744	  7751	  7771	  7795	  7856	  7962
	  8190	  8646	  8674	 10408
LMLPSP	   418#	  1871	  5963	  6925	 11088
LMLTBI	   417#	  1696	  1724	  7786	  7807	  7834	  7902	  7952	  8662
LNLZIN	   348#	  1547	  1882	  3842	  3882	  3961	  4935	  7300	  8173
LOGCH1	  2156	  2160#
LOGCH2	  2159	  2164#
LOGCHR	  1972	  2083#
LOGIN	  1446	  1546#
LOGLDB	 10635%	 10635
LOGZAP	  1623	 11488#
LOPBIN	   307#	  7956
LOPBOP	   311#	  3488	  3529	  7788
LOPBOT	   320#	  8011	  8680	  8682
LOPBPF	   310#	   328	  9249
LOPBPN	   309#	  2058	  2062	  9214	  9227	  9244
LOPCGB	   306#	  5278
LOPECO	   324#	   330	  1957	  3017	  3232	  6127	  6984	  9172
LOPFIL	   317#	  4600	  4710
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

LOPHNG	   322#	  6914
LOPHSH	   304#	   328	   330	   331	 11226
LOPOUT	   319#	  5421	  5824	  5894	  5922	  8914
LOPRUB	   318#	  2036	  2434	  2494	  2766	  4507
LOPSBL	   316#	  2078
LOPSEC	   313#	  6790	  9094
LOPSGR	   325#	  1578	  1583
LOPSOG	   326#	   331	  1618	  6908	 11113	 11116
LOPSRD	   312#	  1585
LOPSTC	   315#	  2150	  6301	  6742
LOPSTP	   314#	  2151
LOPSYL	   321#	  5277	  6896	 10403	 11128
LOPTRI	   308#	  8667
LOPTRO	   305#	  8685
LOPZAP	   323#	  1530	  1898	  3673	  4939	  9279	 10404
LOS620	  2065	 11474#
LOSPDP	  2064	 11472#
LPOPJ	 10420	 10422#	 10439
LTSCIE	   513#	  2145
LTSCRD	   513#
LTSECH	   513#
LTSECO	   513#
LTSECR	   513#	  2145	  6298
LTSELF	   513#	  2145
LTSESC	   513#
LTSHDX	   513#
LTSIR	   513#
LTSKAT	   513#
LTSOR	   513#
LTSPA	   513#
LTSPAR	   513#
LTSPB	   513#
LTSPC	   513#
LTSPD	   513#
LTSQM	   513#
LTSRXE	   513#
LTSSPA	   513#
LTSTOB	   513#
LTSXON	   513#
LXL120	   466#	  2097	  6402	  7352
LXLBSD	   468#	  2626
LXLDLR	   471#	  2410	  4415	  9062	  9063
LXLERA	   469#	  2746
LXLLCO	   472#	  4810
LXLOOK	   473#	  1614	  6902	 11117
LXLRTC	   476#	  2854
LXRBRK	   490#	  1647	 10884
LXRCGS	   496#	  1525
LXRCHR	   489#	 10872
LXRESC	   484#	  5958	 10896	 10911
LXRICL	   487#	  1826	  2069
LXRIOS	   497#	  5112
LXROBS	   485#	  5960	 10923
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

LXROCL	   488#	  1825
LXRPSS	   486#	  1869
LXRTCC	   498#	  6613
LXRYBS	   495#	  1607
M	  5448	  5466	  5812	  5813	  5829	  5830	  5842	  5843	  5882	  5892	  5902	  5904	  5919	  5920
	  5932	  5934	  5948	  5977	  5980	  6010	  6057	  6074	  6120	  6132	  6158	  6337	  6340	  6551
	  6552	  6555	  6568	  6575	  6579	  6828	  6837	  6848	  6864	  6873	  6880	  6883	  6924	  6930
	  6943	  6965	  6966	  6967	  6978	  6986	  7013	  7053	  7070	  7182	  7876	  7935	  7972	  7983
	  9979	  9980	  9988	  9994	 10608	 10741
MAKDET	  6502	  7143#
MAKDLC	  7152	  7154	  7156	  7158	  7160#
MAXTMC	   255#	   260	  1839	  6709
MD0405	  1976	  1977	  1994#
MD0607	  1978	  1979	  1999#
MD1011	  1980	  1981	  2004#
MD1213	  1982	  1983	  2009#
MDFLMD	  2899#	  6205
MLOWQ	   100%	  7568	  8056	  9999
MLTNDB	  1925	  1943	  1947#
MO.LAC	  5307	  5386	  5447	  5814	  5831	  5841	  5881	  5901	  5929	  6024	  6033	  6043	  6064	  6108
	  6938	  6947	  6958	  7861	  7964	  8049
MONHNG	  9440#
MORLIN	  3029#	  3285	  3290	  3300	  3321	  3363	  3410	  3489	  3521	  3531	  3569	  3686	  3745	  3751
	  3763	  3802	  3951	  4057	  4079	  4084	  4106	  4161	  4194	  4539
MORLN2	  3011	  3016	  3037#	  3047
MOVCH1	  1967#	  2610	  2618	  2632	  2643	  2644	  2655
MOVCH2	  1964#	  2652
MOVCHR	  1930	  1953	  1962#	  2647	  3223	  6981	  6989	  7061
MSG777	  9607#	  9614	  9618	  9623	  9641	  9644
MSGBUF	  9606#	  9612	  9614	  9618	  9635	  9639	  9640	  9647
MSGIN1	  9622	  9624	  9639#
MSGINI	  9617#
MSGLG.	  9602#	  9612	  9620	  9642
MSGLGI	  9604#	  9645	  9662	  9663
MSGLGO	  9605#	  9646
MSGLGP	  9636	  9648	  9655	  9666	 11513#
MSGLGS	  9603#	  9621	  9643	  9665
MSGLOG	  9312	  9558	  9655#
MSGSIM	  3295#	  3305	  3315	  3324	  3331
MSKIRG	    78%	  1382	  1853
MSKORG	    78%	  3593	  3606	  3608	  3646	  3665	  3991	  4009	  7411	 10220	 10231
MTR	  5307	  5386	  5447	  5814	  5831	  5841	  5881	  5901	  5929	  6024	  6033	  6043	  6064	  6108
	  6938	  6947	  6958	  7861	  7964	  8049
MULCNT	  2938	  2974	  2999	  3073	  3082	  3083	  3497	  3513	  3577	  3579	  3603	  3617	  3641	  3659
	  3760	  4521	  4527	  4543	  4591	  4608	  4700	  4863	 11421#
MXLIN	  4873%	  4873	  6080%	  6080
MXMCNT	  3575	  3602	  3618	  3642	  3660	  7399	 11423#
MXTIM	  1226%	  1226	  1227%	  1227	 11195%	 11195
MXTYP	  1379	  1509#
NAMSC1	 10858#	 10863
NAMSC2	 10860	 10864#
NAMSCN	 10607	 10855#
NEWJER	  2171	  2177#
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

NEWTER	  2173	  2183#
NMXFLG	    76%	  2946
NMXLIN	 11203%	 11203
NOBASE	  4835#
NOCTRO	  5340	  5462	  5860#	  5877	  6026	  6058	  6945	  6955	  9433	  9438	  9456
NODIE	    11%	  1135	  1380	  1403	  1635	  2969	  3567	  3906	  3963	  4835	  5053	  5072	  5159	  8088
	  8494
NOECHO	   650#	  5624	  9071
NOLIN	  2975	  3000	  3074	  3084	  3089#
NOLIN2	  2949	  2952	  3092#
NOOUT	  1448	  1529#
NOTLIN	  3827	  3833#
NOTOPR	  3816	  3822	  3825#
NOXEXE	  9801#	  9807	  9810
NRPCNT	  7576	 11436#
NTTOPR	  3858	  3864	  3867#
NUMECO	   330#	  3023
NXTTTY	  5638	  7155	  7157	  7523	  7525	  7624	  7652	  7704	 10357	 10943	 10953#	 10997	 11019
NZAPAX	  7301	 11494#
NZAPIN	  1880	 11491#
NZAPLG	  1548	 11493#
NZAPN2	  1883	 11492#
NZAPOT	  3843	  3883	 11496#
NZAPRS	  4944	 11495#
OBFND	  1592#	  4932
OBFND1	  1593#
OBREC	  1590	 10923#
OMX120	  8880	  8943	  8984	 11478#
OMX30	  8881	  8944	  8985	 11476#
ONEOU2	  5821#	  5835
ONEOU3	  5823#	  5844	  5885	  9316
ONEOUT	  5793	  5813#	  5833
OP0TYO	  9517	  9544#
OP1TYO	  9517	  9533	  9537#
OP2TYO	  9517	  9527#
OPCRET	    71#	  5769	  6454
OPRCT2	  9473	  9478#
OPRCTY	  1236	  9462#
OPRFIL	  9479	  9500#
OPRFR1	 10015#	 10021
OPRFRE	  3819	  3861	  4104	  5271	  9506	 10011#
OPRLDB	  3815	  3817	  3857	  3859	  4103	  5270	  5698	  9529	  9981	  9991	  9996	 11252	 11408#
OPROUT	  5679	  9517#
OPRSN2	  9981#	 10005
OPRSND	  9979#
OPRTIC	  9460#	  9463	  9464	  9465
OPRTIM	  3824	  3866	  4864	  4865	 10189	 10197	 11193	 11415#
OPRWAT	  9985	  9999#
OPRWJB	 10001	 10003	 10011	 10013	 11459#
OPSND1	  9988#	  9992	  9997
OQUEUE	  7731	  7757	  7967	  8626#
ORANGE	  1457	  1589#
ORING	    78%	   856	   857	  1266	  1281	  3587	  3620	  3637	  3654	  4006	  7405	 10228
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

ORP620	    78%	  1114	  1146	  1253	  3604	  3607	  3992	 10221
ORPLO1	 11344	 11348#
ORPLOG	  1267	  1282	  3588	  3638	  4007	  7406	 10229	 11341#
ORPOLD	  1115	  1255	 11508#
ORPPDP	    78%	  1252	  1260	  1284	  1410	  3594	  3605	  3609	  3619	  3647	  3666	  3989	  7415	  7420
	  8528	 10218
ORPTIM	  1230%	  1230	  3595%	  3595
OUPLIN	   857#	  3585
OUPTYP	   856#	  3583
OUT	    90%	  5295
OUTCHI	  5806	  5812#	  6508
OUTPC1	  5906#	  5909
OUTPC2	  5908	  5912#
OUTPCF	  5910	  5915	  5919#	  5942	  5944
OUTPT1	  5884#	  5888
OUTPTC	  5900#	  6522
OUTPTR	  5807	  5880#	  6472
OUTSN1	  5936#	  5940
OUTSN2	  5937	  5943#
OUTSNW	  5928#	  6529
OUTST1	  5843#	  5847
OUTSTR	  5795	  5840#	  6509
OUTTRN	  3025	  3102#
OWK120	  4113	 11479#
OWK30	  4114	 11477#
OWTIM	    55#	  4871
P	    12	  1131	  1132	  1134	  1135	  1136	  1144	  1147	  1148	  1151	  1152	  1155	  1156	  1159
	  1160	  1162	  1163	  1171	  1236	  1237	  1247	  1267	  1282	  1295	  1300	  1304	  1307	  1317
	  1321	  1326	  1347	  1380	  1403	  1408	  1411	  1412	  1415	  1416	  1420	  1421	  1424	  1425
	  1427	  1428	  1430	  1431	  1433	  1434	  1448	  1449	  1450	  1451	  1452	  1453	  1456	  1457
	  1461	  1488	  1491	  1492	  1493	  1496	  1499	  1524	  1535	  1542	  1549	  1553	  1590	  1596
	  1613	  1616	  1620	  1625	  1626	  1634	  1635	  1646	  1650	  1658	  1665	  1672	  1676	  1683
	  1684	  1697	  1705	  1715	  1717	  1718	  1728	  1746	  1750	  1763	  1764	  1814	  1860	  1876
	  1884	  1902	  1908	  1920	  1921	  1930	  1953	  2023	  2025	  2026	  2032	  2034	  2038	  2041
	  2042	  2044	  2054	  2076	  2080	  2084	  2164	  2170	  2172	  2180	  2186	  2233	  2234	  2235
	  2237	  2239	  2240	  2247	  2248	  2249	  2250	  2254	  2262	  2263	  2264	  2267	  2268	  2271
	  2274	  2275	  2280	  2281	  2290	  2291	  2299	  2300	  2307	  2308	  2315	  2316	  2321	  2322
	  2330	  2331	  2339	  2340	  2343	  2344	  2356	  2360	  2368	  2369	  2391	  2393	  2395	  2398
	  2402	  2409	  2414	  2420	  2423	  2424	  2427	  2429	  2432	  2436	  2441	  2448	  2456	  2469
	  2475	  2478	  2481	  2483	  2496	  2498	  2502	  2503	  2511	  2512	  2517	  2518	  2526	  2527
	  2532	  2536	  2537	  2548	  2549	  2554	  2555	  2572	  2590	  2600	  2644	  2666	  2670	  2679
	  2681	  2682	  2708	  2719	  2722	  2726	  2731	  2732	  2734	  2736	  2749	  2751	  2755	  2764
	  2768	  2772	  2774	  2775	  2776	  2777	  2780	  2788	  2801	  2806	  2812	  2815	  2816	  2821
	  2826	  2827	  2828	  2829	  2830	  2831	  2834	  2835	  2836	  2837	  2838	  2839	  2841	  2844
	  2861	  2865	  2870	  2872	  2873	  2887	  2888	  2890	  2893	  2937	  2969	  2976	  2981	  2982
	  2983	  2985	  2986	  2987	  2989	  2990	  3038	  3057	  3072	  3081	  3098	  3163	  3164	  3181
	  3182	  3194	  3195	  3210	  3212	  3213	  3214	  3215	  3221	  3222	  3223	  3225	  3226	  3227
	  3230	  3234	  3235	  3236	  3239	  3240	  3260	  3261	  3266	  3271	  3272	  3273	  3295	  3296
	  3298	  3299	  3312	  3334	  3335	  3350	  3351	  3352	  3361	  3362	  3384	  3395	  3405	  3406
	  3408	  3409	  3416	  3417	  3418	  3419	  3429	  3430	  3431	  3432	  3433	  3435	  3436	  3437
	  3438	  3439	  3447	  3448	  3452	  3458	  3472	  3474	  3500	  3503	  3510	  3515	  3518	  3519
	  3524	  3530	  3543	  3544	  3547	  3548	  3552	  3553	  3560	  3561	  3562	  3564	  3565	  3567
	  3586	  3588	  3589	  3611	  3638	  3677	  3682	  3697	  3739	  3743	  3770	  3789	  3812	  3819
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

	  3839	  3840	  3852	  3861	  3879	  3880	  3887	  3906	  3907	  3911	  3927	  3928	  3933	  3943	  3949
	  3956	  3963	  3973	  3981	  3987	  3988	  3993	  3994	  4007	  4040	  4061	  4062	  4064	  4076
	  4088	  4089	  4091	  4101	  4104	  4115	  4121	  4137	  4155	  4162	  4168	  4193	  4229	  4234
	  4240	  4252	  4258	  4266	  4273	  4278	  4286	  4295	  4306	  4312	  4325	  4333	  4344	  4464
	  4474	  4480	  4484	  4493	  4494	  4501	  4505	  4512	  4523	  4529	  4603	  4678	  4689	  4835
	  4837	  4839	  4844	  4881	  4897	  4903	  4904	  4905	  4918	  4919	  4932	  4954	  4956	  4963
	  4971	  5006	  5007	  5008	  5009	  5010	  5011	  5015	  5020	  5021	  5027	  5028	  5038	  5040
	  5049	  5053	  5072	  5076	  5081	  5084	  5085	  5090	  5094	  5103	  5108	  5109	  5114	  5117
	  5133	  5154	  5159	  5179	  5180	  5194	  5197	  5204	  5210	  5211	  5230	  5238	  5240	  5264
	  5271	  5282	  5289	  5294	  5303	  5308	  5309	  5312	  5314	  5323	  5326	  5335	  5348	  5350
	  5353	  5363	  5381	  5384	  5387	  5401	  5404	  5407	  5413	  5416	  5423	  5425	  5430	  5432
	  5434	  5438	  5444	  5445	  5451	  5452	  5455	  5497	  5498	  5508	  5518	  5524	  5525	  5530
	  5533	  5534	  5561	  5576	  5579	  5580	  5584	  5590	  5591	  5596	  5601	  5610	  5612	  5615
	  5617	  5630	  5634	  5636	  5637	  5638	  5639	  5644	  5679	  5688	  5695	  5707	  5711	  5714
	  5716	  5719	  5720	  5721	  5723	  5726	  5731	  5732	  5740	  5745	  5748	  5753	  5758	  5761
	  5766	  5768	  5815	  5821	  5826	  5832	  5840	  5845	  5853	  5858	  5864	  5876	  5880	  5886
	  5900	  5907	  5915	  5924	  5928	  5936	  5939	  5941	  5943	  5949	  5978	  5981	  6018	  6021
	  6025	  6027	  6028	  6029	  6031	  6034	  6035	  6036	  6037	  6039	  6042	  6048	  6049	  6052
	  6063	  6065	  6066	  6070	  6071	  6081	  6083	  6090	  6091	  6097	  6098	  6102	  6103	  6111
	  6112	  6114	  6121	  6125	  6129	  6133	  6159	  6182	  6194	  6198	  6200	  6201	  6207	  6220
	  6236	  6240	  6247	  6255	  6260	  6261	  6266	  6270	  6272	  6273	  6274	  6279	  6285	  6292
	  6303	  6315	  6319	  6321	  6326	  6327	  6329	  6341	  6350	  6366	  6405	  6406	  6415	  6416
	  6419	  6425	  6433	  6434	  6439	  6443	  6446	  6451	  6453	  6463	  6553	  6554	  6556	  6557
	  6563	  6564	  6565	  6577	  6580	  6593	  6595	  6596	  6597	  6600	  6603	  6608	  6609	  6610
	  6611	  6612	  6619	  6620	  6621	  6622	  6623	  6743	  6745	  6754	  6800	  6803	  6805	  6832
	  6860	  6861	  6862	  6867	  6868	  6876	  6881	  6884	  6888	  6903	  6927	  6935	  6939	  6940
	  6944	  6952	  6953	  6954	  6959	  6960	  6961	  6976	  6981	  6989	  7029	  7031	  7034	  7035
	  7036	  7038	  7048	  7055	  7057	  7061	  7068	  7077	  7096	  7099	  7101	  7139	  7145	  7149
	  7153	  7155	  7157	  7159	  7162	  7163	  7173	  7180	  7189	  7195	  7201	  7207	  7216	  7236
	  7270	  7276	  7278	  7282	  7290	  7302	  7306	  7327	  7358	  7381	  7382	  7394	  7395	  7406
	  7416	  7417	  7428	  7457	  7521	  7523	  7525	  7571	  7582	  7595	  7597	  7598	  7607	  7609
	  7614	  7619	  7621	  7624	  7643	  7644	  7650	  7651	  7652	  7653	  7660	  7683	  7704	  7707
	  7709	  7726	  7731	  7732	  7737	  7738	  7742	  7743	  7746	  7747	  7752	  7757	  7758	  7765
	  7768	  7773	  7782	  7789	  7790	  7800	  7801	  7809	  7810	  7815	  7822	  7823	  7827	  7828
	  7835	  7836	  7837	  7838	  7842	  7843	  7851	  7857	  7859	  7860	  7869	  7870	  7905	  7908
	  7912	  7913	  7918	  7919	  7920	  7922	  7930	  7931	  7939	  7958	  7963	  7967	  7968	  7970
	  7971	  8052	  8058	  8060	  8063	  8088	  8111	  8112	  8114	  8115	  8117	  8118	  8123	  8124
	  8130	  8131	  8152	  8157	  8166	  8167	  8168	  8175	  8181	  8182	  8184	  8186	  8187	  8199
	  8206	  8209	  8217	  8220	  8245	  8250	  8260	  8282	  8494	  8498	  8501	  8502	  8504	  8512
	  8523	  8529	  8559	  8565	  8570	  8571	  8572	  8573	  8616	  8620	  8627	  8628	  8631	  8642
	  8647	  8650	  8653	  8658	  8664	  8669	  8675	  8687	  8690	  8693	  8694	  8696	  8697	  8723
	  8728	  8781	  8782	  8792	  8793	  8800	  8801	  8802	  8807	  8808	  8826	  8834	  8848	  8849
	  8851	  8886	  8889	  8895	  8899	  8902	  8904	  8905	  8909	  8916	  8931	  8950	  8954	  8960
	  8975	  8980	  8981	  8986	  8987	  9002	  9005	  9007	  9008	  9013	  9019	  9020	  9031	  9034
	  9036	  9039	  9048	  9052	  9056	  9101	  9109	  9114	  9123	  9125	  9126	  9134	  9139	  9142
	  9146	  9148	  9149	  9157	  9158	  9160	  9179	  9184	  9185	  9186	  9187	  9188	  9189	  9190
	  9191	  9192	  9199	  9201	  9202	  9203	  9206	  9219	  9232	  9251	  9256	  9270	  9272	  9278
	  9283	  9286	  9287	  9288	  9289	  9299	  9303	  9304	  9312	  9313	  9314	  9315	  9322	  9325
	  9328	  9331	  9333	  9339	  9340	  9342	  9350	  9351	  9358	  9403	  9413	  9417	  9418	  9424
	  9428	  9434	  9437	  9441	  9443	  9448	  9449	  9454	  9455	  9469	  9481	  9482	  9484	  9485
	  9486	  9495	  9501	  9503	  9505	  9506	  9507	  9508	  9519	  9520	  9521	  9522	  9527	  9528
	  9530	  9531	  9532	  9537	  9539	  9544	  9548	  9557	  9558	  9559	  9561	  9562	  9568	  9571
	  9573	  9585	  9592	  9593	  9599	  9600	  9637	  9649	  9656	  9659	  9660	  9661	  9677	  9678
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

	  9679	  9722	  9726	  9732	  9733	  9739	  9741	  9742	  9744	  9745	  9779	  9805	  9816	  9828	  9829
	  9830	  9831	  9834	  9845	  9847	  9874	  9884	  9885	  9888	  9889	  9890	  9892	  9895	  9896
	  9899	  9902	  9903	  9904	  9905	  9906	  9909	  9913	  9923	  9924	  9925	  9926	  9928	  9937
	  9940	  9941	  9943	  9950	  9951	  9959	  9960	  9962	  9963	  9964	  9969	  9971	  9972	  9975
	  9990	  9995	 10004	 10012	 10014	 10018	 10022	 10023	 10100	 10108	 10109	 10110	 10112	 10113
	 10115	 10119	 10121	 10126	 10128	 10129	 10130	 10134	 10137	 10138	 10143	 10146	 10147	 10157
	 10160	 10162	 10163	 10164	 10168	 10174	 10177	 10178	 10179	 10192	 10195	 10198	 10208	 10209
	 10215	 10216	 10223	 10229	 10234	 10235	 10271	 10286	 10287	 10288	 10289	 10290	 10291	 10292
	 10293	 10294	 10295	 10296	 10297	 10300	 10304	 10315	 10317	 10331	 10332	 10336	 10353	 10354
	 10357	 10358	 10368	 10374	 10410	 10411	 10417	 10419	 10422	 10423	 10436	 10437	 10438	 10440
	 10441	 10446	 10447	 10453	 10455	 10456	 10463	 10464	 10471	 10472	 10474	 10475	 10476	 10478
	 10479	 10482	 10483	 10488	 10489	 10498	 10500	 10554	 10571	 10585	 10591	 10607	 10633	 10634
	 10635	 10636	 10639	 10656	 10662	 10663	 10670	 10692	 10698	 10708	 10724	 10733	 10735	 10740
	 10742	 10769	 10773	 10794	 10797	 10800	 10804	 10827	 10828	 10829	 10847	 10848	 10849	 10850
	 10855	 10864	 10865	 10871	 10886	 10889	 10890	 10891	 10895	 10900	 10903	 10905	 10910	 10915
	 10931	 10932	 10933	 10936	 10937	 10942	 10943	 10946	 10947	 10948	 10957	 10960	 10961	 10964
	 10965	 10973	 10984	 10996	 10997	 11002	 11003	 11004	 11019	 11035	 11039	 11042	 11043	 11045
	 11046	 11049	 11057	 11058	 11064	 11067	 11068	 11074	 11082	 11083	 11090	 11091	 11097	 11098
	 11099	 11101	 11102	 11103	 11115	 11119	 11120	 11126	 11135	 11144	 11148	 11159	 11165	 11167
	 11168	 11171	 11172	 11174	 11176	 11177	 11228	 11229	 11237	 11239	 11247	 11275	 11334	 11341
	 11349	 11350
P1	   531	   533	   535	  1371	  1377	  1379	  1381	  1390	  1391	  1393	  1394	  1396	  1397	  1399
	  1400	  1931	  1932	  1940	  1941	  1945	  1946	  1947	  1948	  1949	  1955	  3416	  3438	  4058
	  4070	  4078	  4085	  4097	  4105	  4165	  4191	  4192	  4267	  4296	  4477	  4500	  4502	  4610
	  4704	  5180	  5181	  5182	  5183	  5184	  5187	  5188	  5189	  5191	  5192	  5194	  5316	  5318
	  5329	  5333	  5334	  5373	  5377	  5398	  5399	  5408	  5450	  5459	  5493	  5494	  5499	  5501
	  5902	  5903	  5909	  5919	  5932	  5933	  5940	  6010	  6011	  6014	  6260	  6262	  6273	  6282
	  6318	  6325	  6335	  6336	  6337	  7005	  7010	  7013	  7014	  7016	  7019	  7034	  7036	  7055
	  7071	  7079	  7084	  7098	  7100	  7477	  7560	  7587	  7869	  7911	  7915	  7920	  9184	  9203
	  9902	  9906	 10099	 10104	 10106	 10114	 10120	 10135	 10144	 10158	 10167	 10547	 10552	 10565
	 10569	 10582	 10589	 10609	 10615	 10712	 11202	 11210	 11211	 11212	 11327	 11328	 11329	 11330
	 11331	 11332	 11333	 11341	 11342	 11343	 11344	 11345	 11346	 11347	 11348	 11349
P2	  1962	  1967	  3417	  3437	  5318	  5319	  5331	  5332	  5333	  5334	  5376	  5399	  5402	  5415
	  5448	  5449	  5458	  5461	  6012	  6013	  6017	  6020	  6261	  6263	  6267	  6271	  6272	  6283
	  6320	  6324	  6328	  6330	  7482	  7496	  7499	  9185	  9202	  9903	  9905	 10548	 10590	 10610
	 10611	 10638	 10641	 10672	 10713	 10722	 10730	 11203	 11204	 11209	 11213	 11249
P3	   861	   862	   863	   864	   874	   875	   876	   877	   878	   879	   880	   881	  1261	  1263
	  1265	  1266	  1269	  1281	  1302	  1765	  1964	  1965	  2807	  3418	  3436	  3586	  3587	  3589
	  3637	  3640	  3641	  3642	  3643	  3654	  3658	  3659	  3660	  3661	  3687	  3705	  3710	  3715
	  3722	  3725	  3730	  3774	  3793	  3847	  3948	  3980	  4005	  4006	  4010	  4028	  4044	  4049
	  4127	  4132	  4134	  4175	  4176	  4561	  4562	  5496	  7383	  7396	  7405	  7480	  7501	  8706
	  8707	  8731	  8732	  8784	  8786	  8787	  8802	  8817	  8818	  8848	  9340	  9344	  9350	  9817
	  9818	  9835	 10225	 10227	 10228	 10233	 10553	 10570	 11348
P4	   847	   848	   849	   850	   851	   852	   856	   857	  1260	  1266	  1268	  1281	  1283	  1284
	  1333	  1334	  1345	  1382	  1383	  1386	  1418	  1419	  1442	  1458	  1459	  1460	  1469	  1501
	  1503	  1504	  1518	  1529	  1537	  1563	  1571	  1576	  1580	  1587	  1589	  1598	  1633	  1664
	  1682	  1723	  1739	  1791	  1795	  1810	  1815	  1821	  1842	  1848	  1852	  1853	  1863	  1877
	  1887	  1926	  1949	  3419	  3435	  3587	  3592	  3593	  3594	  3604	  3605	  3606	  3608	  3609
	  3610	  3612	  3613	  3614	  3615	  3616	  3617	  3618	  3619	  3620	  3637	  3643	  3645	  3646
	  3647	  3654	  3661	  3664	  3665	  3666	  4006	  4008	  4009	  4873	  4875	  4955	  5495	  7234
	  7239	  7245	  7246	  7248	  7250	  7258	  7263	  7271	  7277	  7279	  7283	  7286	  7309	  7328
	  7359	  7405	  7408	  7410	  7411	  7415	  7420	  7479	  7491	  7504	  7506	  7507	  7508	  7509
	  7510	  8492	  8495	  8518	  8526	  8576	  8581	 10228	 10230	 10231	 10552	 10569	 11326
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

PATCH2	 11189#
PBDISC	  3162	  3203	  3471	  3511	 11500#
PBTIMO	  3416#	  4897
PEVEN8	    84%	  9485	  9561
PG	  7053	  7054	  7059	  7070
PGBIN	  3130	  3389#
PGBIN1	  3385	  3405#
PGBOP	  3134	  3492#
PGBOP1	  3506#	  3508
PGBOP2	  3505	  3510#
PGBOP3	  3517	  3523#
PGBOT	  3143	  3442#
PGBOT1	  3451	  3455#
PGBOTC	  3443	  3446	  3453	  3479#
PGBPF	  3133	  3328#
PGBPN	  3132	  3319#
PGCGB	  3129	  3304#
PGECO	  3147	  4159#
PGFIL	  3140	  4535#
PGHNG	  3145	  3284#
PGHSH	  3127	  3672#
PGOUT	  3142	  4082#
PGRUB	  3141	  4055#
PGSBL	  3139	  3558#
PGSEC	  3136	  3282#
PGSGR	  3148	  3277#
PGSOG	  3149	  3310#
PGSRD	  3135	  3276#
PGSTC	  3138	  3289#
PGSTP	  3137	  3283#
PGSYL	  3144	  3334#
PGSYLN	  3339	  3357#
PGTRI	  3131	  3371#
PGTRI1	  3373	  3383#
PGTRO	  3128	  3528#
PGZAP	  3146	  3536#
PGZAP1	  3550	  3553#
PJBSTS	  1813%	  1813	  7294%	  7294	  7569%	  7569	  8057%	  8057	 10000%	 10000	 10017%	 10017
PJOBN	    84%	  1514	  1521	  1919	  1944	  3063	  4960	  5034	  5349	  5548	  6087	  6094	  6418	  7172
	  7585	  8906	  8946	  9000	  9029	  9053	  9284	 10258	 10263	 10450	 10697	 10817	 10835	 10958
	 11149
PNTOB1	  6251	  6255#
PNTOBK	  6229	  6247#
POLPRT	  7679#
POLPT1	  7687#	  7706
POLPT3	  7690	  7696	  7704#
POLPT4	  7684	  7705	  7707#
POLPT5	  7697	  7708#
PORTN	  6347%	  6347	  6349%	  6349	  9817%	  9817	  9942%	  9942	 11143%	 11143
PPORTN	  6347%	  6347
PRCCR	  4493	  4578#
PRCFIL	  4585#	  4594
PRCFL1	  4597	  4601#
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

PRCOCW	  4573#	  4813
PRCOM	  1160%	  1160	  1425%	  1425	  1428%	  1428	  1431%	  1431
PRCOT1	  4581	  4605#
PRCOT2	  4588	  4606#	  4626
PRCOT3	  4559	  4567	  4607#	  4679
PRCOUT	  4064	  4091	  4511	  4557#
PROACT	  4565	  4614#
PROUCC	  4568	  4809#
PRPER	  8502%	  8502
PRPRMT	 10482%	 10482	 10662%	 10662
PRT2	  8504%	  8504
PRTBTM	  4835	  4839#
PRTBVR	  8494	  8498#
PRTCRS	  1134	  1135	  1144#	  1435
PRTDDB	  5094%	  5094
PRTDEC	  8501%	  8501
PRTIRG	  1380	  1403	  1408#	  1626
PRTKEY	  1163#
PRTOCT	  1147%	  1147	  1151%	  1151	  1159%	  1159	  1162%	  1162	  1171%	  1171	  1411%	  1411	  1415%	  1415
	  1420%	  1420	  1424%	  1424	  1427%	  1427	  1430%	  1430	  1433%	  1433
PRTUT1	  2969	  2981#
PSDONE	  1874	  1877#
PTBSIZ	  3152#	  3179	  3180	 11499
PTYBUD	  3164	  3221	  3240	  3296	  3335	  3406	  3431	  3448	  3548	  3562	  6363#	  6565	  6612	  6862
	 11099
PTYBUF	  3172	  3209	  3215	 11499#
PTYDDB	  6321	  6327	  6412#
PTYFLO	  4862	 11498#
PTYLDB	  6319	  6326	  6371#
PTYLOS	  3558	 11487#
PTYSBL	  3567#
PTYTRN	  3026	  3127#
PUNIT	    85%	 10843
PVYHNG	  5569%	  5569
PVYMOD	    85%	  9054
PX.MEM	  5318	  5329	  5334	  5372	  5399	  5408	  5448	  5458	  5461	  5466	  5723	  5813	  5830	  5843
	  5882	  5884	  5892	  5902	  5904	  5906	  5919	  5920	  5932	  5934	  5938	  5948	  5977	  5980
	  6010	  6057	  6074	  6120	  6132	  6158	  6337	  6340	  6431	  6437	  6551	  6552	  6555	  6568
	  6575	  6579	  6828	  6837	  6848	  6864	  6873	  6880	  6883	  6924	  6930	  6943	  6965	  6969
	  6978	  6986	  7013	  7053	  7059	  7070	  7100	  7182	  7489	  7592	  7600	  7618	  7632	  7635
	  7636	  7679	  7699	  7701	  7708	  7879	  7935	  7972	  7983	  7987	  9988	  9994	 10547	 10548
	 10608	 10741
PX.SRC	  5318	  5329	  5372	  5408	  5458	  5461	  5723	  5843	  5884	  5906	  5938	  6969	  6978	  6986
	  7059	  7489	  7987	  9988	  9994
QUEPCB	    79%	 10002	 10019	 10020
RCC.HI	  5052	  5063	  5146	  5178	  5184	  5218	 11262	 11510#
RCC.LO	  5051	  5062	  5145	  5177	  5183	  5217	 11254	 11509#
RCC.T1	  5053	  5072	  5084	  5093#	  5179
RCC.T3	  5053	  5072	  5084	  5088#
RCCBAD	  5084#
RCCDBG	  5053#	  5147
RCCSTP	  5179#	  5185	  5219
RCVANS	  1441	  8575#
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

RCVAUX	  1447	  7299#
RCVCH1	  2023#	  2060
RCVCH2	  2031	  2039#
RCVCHR	  2016#	  2233	  2247	  2262	  2274	  2280	  2290	  2299	  2307	  2315	  2321	  2330	  2339	  2502
	  2511	  2517	  2526	  2536	  2548	  2554
RCVLOS	  1461	  1821#
RCVNSP	  1445	  7231#
RCVPS	  1502	  1867#
RCVRAK	  1444	  8492#
RCVRES	  1443	  8517#
RCVS2	  7247	  7256#
RCVS2A	  7259#	  7268
RCVS4	  7249	  7267#
RCVS6	  7251	  7275#
RCVSP	  7252	  7281#
RCVSUR	  1464	  7242#
RCVTCX	  1840	  1844#
RCVTMC	  1480	  1837#
RCVWK1	  4997	  5001	  5011#
RCVZAP	  1451	  1880#
RDNXT	  5788	  6108#
RECHLT	  2018	  2066	  2068#
RECHT1	  2072	  2077#
RECVRG	  2025	  2044#
RED	  1455	  1582#
REFLAG	    84%	 11214
RELB0	  8139	  8147	  8151#
RELBB	  8199	  8265#
RELBB1	  8266	  8276#
RELBBF	  8115	  8267#
RELBI	  1676	  1705	  7768	  7789	  7852	  7905	  7912	  8138#
RELBIO	  8141	  8149	  8192	  8199#
RELBO	  1746	  7790	  7975	  8146#
RELEA6	    91%	  5644	  7191	 10735
REQBUF	  7809	  7836	  7930#
RETACH	 10547#
RETCH1	 10592	 10595#
RETCH2	 10594	 10600#
RETZRO	  6073#	  6093	  6105
RIDLIN	  2681	  2698#	  2865
RIDLN1	  2704	  2709#
RIDLN2	  2715	  2721#
RIDLN3	  2699	  2724#
RLBIO1	  8202	  8208#
RMTAL1	  2389	  2406#
RMTALT	  2385	  2408#
RMTBSP	  2390	  2400	  2471#
RMTCN1	  2403#	  2407
RMTCNT	  2349	  2352#	  2404
RMTCR	  2382	  2392	  2418#
RMTECR	  2361#	  2425
RMTECT	  2348	  2366#
RMTEU1	  2424	  2428#
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

RMTEXC	  2381	  2388	  2422#
RMTEXU	  2383	  2426#
RMTFF	  2387	  2397	  2445#
RMTPAT	  2399	  2401#
RMTRUB	  2416	  2432#
RMTS10	  2376	  2379	  2381#
RMTS94	  2377	  2378	  2391#
RMTSPA	  2366	  2372#
RMTSPT	  2374	  2376#
RMTTAB	  2384	  2394	  2452#
RMTTB1	  2459	  2464#
RMTVT	  2386	  2396	  2438#
RMXLIN	  1373%	  1373
RNQ	   100%	  1812	  7293	 10016
RPORTN	  1270%	  1270	  2959	  3850%	  3850	  5517%	  5517	  8558%	  8558
RT.CON	 10534#	 10638
RT.MOD	 10527#
RT.SIG	 10533#	 10722	 10730
RT.SLV	 10526#
RTATC	 10615#
RTATS	 10611	 10669#
RTATS1	 10671	 10674	 10689#
RTATS2	 10685	 10704#
RTAUX%	 10543#	 10622
RTCCO	 10645	 10652	 10659#
RTCONT	 10478	 10497#	 10639
RTCSV	 10643	 10649#
RTCUS	 10646	 10651	 10654#
RTERJ	 10596	 10603	 10623	 10628	 10681	 10695	 10740#
RTERR	 10557	 10563	 10574	 10580	 10741#
RTFIN	 10644	 10657	 10661	 10664	 10709	 10712#
RTFIN1	 10718	 10730#
RTFIN2	 10731	 10734#
RTNRM%	 10544#	 10694
RTSAC%	 10536#	 10556
RTSCP%	 10542#	 10602
RTSNA%	 10540#	 10595
RTSNX%	 10537#	 10562
RTTAC%	 10538#	 10573
RTTAT%	 10541#	 10627	 10680
RTTNX%	 10539#	 10579
RUBSTR	  2364	  2443	  2450	  2462	  2491#	  2499	  2675	  4484
RWARN	  2022	  2055#
RWARN1	  2056	  2062#
S	  1673	  1674	  1686	  1687	  4152	  4153	  4154	  4911	  4912	  4913	  4914	  4947	  4948	  4953
	  4974	  4998	  4999	  5000	  5002	  5004	  5005	  5013	  5014	  5101	  5102	  5104	  5105	  5110
	  5111	  5115	  5116	  5305	  5338	  5339	  5342	  5388	  5390	  5392	  5396	  5397	  5409	  5418
	  5419	  5436	  5437	  5577	  5578	  5624	  5625	  5816	  5817	  6045	  6053	  6054	  6116	  6117
	  6178	  6192	  6193	  6442	  6890	  7026	  7027	  7176	  7227	  7804	  7831	  7849	  7850	  7858
	  7903	  8654	  8656	  8657	  8925	  8994	  9009	  9010	  9011	  9012	  9023	  9061	  9069	  9071
	  9073	  9075	  9089	  9097	  9098	  9113	  9135	  9136	  9164	  9165	  9166	  9167	  9180	  9181
	  9182	  9183	  9193	  9194	  9204	  9205	  9401	  9402	  9408	  9412	  9867	  9900	  9901	  9907
	  9908	  9911	  9912	 10361	 10362	 10364	 10365	 10774	 10932	 10935	 10940	 10941	 10946	 10955
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

	 10956	 10958	 10959	 10965	 10967	 10968	 10970	 10971	 10975	 10976	 10978	 10979	 10981	 10982	 10987
	 10988	 10990	 10991	 10993	 10994	 11003	 11055	 11056	 11132	 11133
S$DEBU	  1626	  1627	  5084	  5085
S$ENTR	    11	    17	  1104	  1135	  1136	  1381	  1404	  1439	  1462	  1465	  1467	  1470	  1472	  1474
	  1476	  1478	  1481	  1483	  1486	  1489	  1494	  1497	  1505	  1627	  1636	  1666	  1802	  2970
	  2996	  3080	  3190	  3246	  3257	  3278	  3347	  3378	  3396	  3424	  3457	  3461	  3468	  3481
	  3494	  3568	  3636	  3653	  3672	  3851	  3907	  3955	  3964	  4836	  5054	  5073	  5085	  5147
	  5160	  5174	  5180	  5185	  5219	  5691	  6019	  6373	  6376	  6414	  6578	  6710	  6804	  7041
	  7432	  7433	  7435	  7437	  7953	  8089	  8102	  8251	  8256	  8268	  8277	  8495	  8521	  8579
	  8796	  9797	  9846	 10316	 10618	 10691	 10753	 11230	 11238	 11241
S$EVEN	  1134	  1135	  1380	  1403	  1626	  1635	  2969	  3395	  3567	  3906	  3963	  4835	  4836	  5053
	  5072	  5084	  5159	  5179	  8088	  8250	  8494	  8495	 10315
S$HALT	    11	  1104	  1134	  1135	  1380	  1403	  1439	  1462	  1465	  1467	  1470	  1472	  1474	  1476
	  1478	  1481	  1483	  1486	  1489	  1494	  1497	  1505	  1626	  1635	  1666	  1802	  2969	  2996
	  3080	  3190	  3246	  3257	  3278	  3347	  3378	  3395	  3424	  3457	  3461	  3468	  3481	  3494
	  3567	  3636	  3653	  3672	  3851	  3906	  3955	  3963	  4835	  5053	  5072	  5084	  5147	  5159
	  5174	  5179	  5185	  5219	  5691	  6019	  6373	  6376	  6414	  6578	  6710	  6804	  7041	  7432
	  7433	  7435	  7437	  7953	  8088	  8102	  8250	  8256	  8268	  8277	  8494	  8521	  8579	  8796
	  9797	  9846	 10315	 10618	 10691	 10753	 11230	 11238	 11241
S$INFO	  1134	  1135	  1136	  1380	  1381	  1403	  1404	  1626	  1635	  1636	  2969	  2970	  3395	  3567
	  3568	  3906	  3907	  3963	  3964	  4835	  5053	  5054	  5072	  5073	  5084	  5159	  5160	  5179
	  8088	  8089	  8250	  8494	 10315
S$JOB	  3395	  3396
S$NAME	    15#	  1802	  3080	  3190	  3246	  3257	  3278	  3347	  3424	  3457	  3461	  3468	  3481	  3494
	  3636	  3653	  3672	  3851	  3955	  5174	  5691	  6019	  6373	  6376	  6414	  6578	  6710	  6804
	  7041	  7432	  7433	  7435	  7437	  7953	  8268	  8277	  8796	  9797	  9846	 10618	 10691	 10753
	 11230	 11238	 11241
S$NONA	    14	    17	  1105	  1135	  1136	  1381	  1404	  1440	  1463	  1466	  1468	  1471	  1473	  1475
	  1477	  1479	  1482	  1484	  1487	  1490	  1495	  1498	  1506	  1627	  1636	  1667	  1802	  2970
	  2997	  3080	  3190	  3246	  3257	  3278	  3347	  3379	  3396	  3424	  3457	  3461	  3468	  3481
	  3494	  3568	  3636	  3653	  3672	  3851	  3907	  3955	  3964	  4836	  5054	  5073	  5085	  5148
	  5160	  5174	  5180	  5186	  5220	  5691	  6019	  6373	  6376	  6414	  6578	  6710	  6804	  7041
	  7432	  7433	  7435	  7437	  7953	  8089	  8103	  8251	  8257	  8268	  8277	  8495	  8522	  8580
	  8796	  9797	  9846	 10316	 10618	 10691	 10753	 11230	 11238	 11241
S$PATC	  1134	  1135	  1380	  1403	  1626	  1635	  2969	  3395	  3567	  3906	  3963	  4835	  5053	  5072
	  5084	  5159	  5179	  8088	  8250	  8494	 10315
S$STOP	  1134	  1135	  5179	  5180	  8250	  8251	 10315	 10316
S$TEMP	    11#	    11	  1104#	  1104	  1134#	  1134	  1135#	  1135	  1380#	  1380	  1403#	  1403	  1439#	  1439
	  1462#	  1462	  1465#	  1465	  1467#	  1467	  1470#	  1470	  1472#	  1472	  1474#	  1474	  1476#	  1476
	  1478#	  1478	  1481#	  1481	  1483#	  1483	  1486#	  1486	  1489#	  1489	  1494#	  1494	  1497#	  1497
	  1505#	  1505	  1626#	  1626	  1635#	  1635	  1666#	  1666	  1802#	  1802	  2969#	  2969	  2996#	  2996
	  3080#	  3080	  3190#	  3190	  3246#	  3246	  3257#	  3257	  3278#	  3278	  3347#	  3347	  3378#	  3378
	  3395#	  3395	  3424#	  3424	  3457#	  3457	  3461#	  3461	  3468#	  3468	  3481#	  3481	  3494#	  3494
	  3567#	  3567	  3636#	  3636	  3653#	  3653	  3672#	  3672	  3851#	  3851	  3906#	  3906	  3955#	  3955
	  3963#	  3963	  4835#	  4835	  5053#	  5053	  5072#	  5072	  5084#	  5084	  5147#	  5147	  5159#	  5159
	  5174#	  5174	  5179#	  5179	  5185#	  5185	  5219#	  5219	  5691#	  5691	  6019#	  6019	  6373#	  6373
	  6376#	  6376	  6414#	  6414	  6578#	  6578	  6710#	  6710	  6804#	  6804	  7041#	  7041	  7432#	  7432
	  7433#	  7433	  7435#	  7435	  7437#	  7437	  7953#	  7953	  8088#	  8088	  8102#	  8102	  8250#	  8250
	  8256#	  8256	  8268#	  8268	  8277#	  8277	  8494#	  8494	  8521#	  8521	  8579#	  8579	  8796#	  8796
	  9797#	  9797	  9846#	  9846	 10315#	 10315	 10618#	 10618	 10691#	 10691	 10753#	 10753	 11230#	 11230
	 11238#	 11238	 11241#	 11241
S$XCT	    17	  1104	  1105	  1135	  1136	  1381	  1404	  1439	  1440	  1462	  1463	  1465	  1466	  1467
	  1468	  1470	  1471	  1472	  1473	  1474	  1475	  1476	  1477	  1478	  1479	  1481	  1482	  1483
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

	  1484	  1486	  1487	  1489	  1490	  1494	  1495	  1497	  1498	  1505	  1506	  1627	  1636	  1666	  1667
	  1802	  2970	  2996	  2997	  3080	  3190	  3246	  3257	  3278	  3347	  3378	  3379	  3396	  3424
	  3457	  3461	  3468	  3481	  3494	  3568	  3636	  3653	  3672	  3851	  3907	  3955	  3964	  4836
	  5054	  5073	  5085	  5147	  5148	  5160	  5174	  5180	  5185	  5186	  5219	  5220	  5691	  6019
	  6373	  6376	  6414	  6578	  6710	  6804	  7041	  7432	  7433	  7435	  7437	  7953	  8089	  8102
	  8103	  8251	  8256	  8257	  8268	  8277	  8495	  8521	  8522	  8579	  8580	  8796	  9797	  9846
	 10316	 10618	 10691	 10753	 11230	 11238	 11241
S..KAF	  1104	  1104%
SAV30	  1154%	  1154	  1158	  1161
SCN1PD	  1131	  1132	  1136	  1140#
SCNBUF	 11333%	 11333	 11348%	 11348
SCNDDB	   611#	   635
SCNDDS	   635#	  5291
SCNDSP	   615	  5287#
SCNEND	 11945#
SCNIN	  1301	  1305	  1308	  1318	  1322	  1327	  1333#	  3096
SCNIN0	  1345#	  1384
SCNIN1	  1382#	  1386	  1442	  1458	  1459	  1460	  1469	  1501	  1503	  1504	  1554	  1563	  1580	  1587
	  1791	  1795	  1810	  1815	  1842	  1848	  1863	  1877	  1950	  7234	  7239	  7245	  7246	  7248
	  7250	  7258	  7263	  7271	  7277	  7279	  7283	  7286	  7311	  7328	  7359	  8495	  8526	  8581
SCNIN2	  1380	  1386#
SCNINT	  1221#	  9189
SCNLIT	 11515#
SCNMSK	 11328%	 11328	 11343%	 11343
SCNNAM	  6419	  7173	  7595	 10455	 10634	 10698	 10842#
SCNNMR	  9962	  9968#	  9971	 10848
SCNNT0	  1223	  1234#
SCNNT2	  1303	  1317#
SCNOUT	  1335	  1346	  2937#
SCNPTR	 11327%	 11327	 11342%	 11342
SCNREL	    20#	  1261	  1263
SCNSC0	  4824	  4834	  4846#
SCNSC1	  4866	  4869#
SCNSC2	  4870	  4873#
SCNSEC	  4821#
SCNSER	    11	    12#	    15
SCNTCD	 10028#
SCNTIC	  1243	  1299#
SCNUDT	 11331%	 11331	 11346%	 11346
SCNVER	    19#	  1261	  1263
SCOLP	  2951#	  3091
SCOLP1	  2947#	  3093
SCOPTY	  2961	  2968#
SCORTY	  2960	  2995#
SCOTTY	  2978	  3003	  3007#
SECLOP	  4875#	  4955
SECLP1	  4883	  4886#
SECLP2	  4887	  4893	  4898	  4907	  4910	  4915	  4922#
SECLP3	  4925	  4930	  4936#
SECLP4	  4946	  4949	  4952	  4955#
SECTM1	  4896	  4900#
SECTM2	  4902	  4906#
SECTM3	  4900	  4916#
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

SETBRK	  5312	  5347#	  5370	  5452	  6052
SETFIO	  5943	  7031	  8628	  8905	  8954	  9035	 11132#
SETIO2	    92%	  6493	  6888
SETLIN	  5799	  6010#
SETLMD	  1571	  1576	  2164	  4919	  6184	  6202	  6204#	  6405	  6463	  6951	  7048	  7096	  7358	  9092
	  9096	  9101	  9139	  9417	  9452	  9828	 10488	 10656	 11228
SETLN1	  6013#	  6020
SETOPB	  6744#	  6897	  6909	  6915
SETOUT	  1300	  2937	  3576	  3596	  3602#	  7416	  7424
SETPTB	  3167	  3186#
SETPTL	  2976	  3162#
SETPTP	  6290#
SETRUN	    84%	  1814	  7295	  9404	 10018	 10501
SETSHT	  5610	  8561	 10182#
SETTB1	  6225	  6228#
SETTBK	  5634	  5636	  6217#	  6843	  6854	 10769	 10773
SETTC1	  6592#	  6881	 10160
SETTC2	  6616	  6618	  6620#
SETTCN	  6018	  6553	  6577	  6591#
SIMRZP	  1513	  1517	  1627	  1885	  1887#
SIZIRG	 11466	 11467
SKPFLG	  9004	  9151	  9152	  9162	  9196	  9198	 11504#
SKPIN1	  5872	  5876#
SKPINC	  5803	  5856#	  6025	  6475
SKPINL	  5804	  5868#	  6034	  6507
SLCTAB	  6001#	  6008	  6012
SLCTBN	  6008#	  6012
SNDAUX	  1321	  7362#
SNDBIO	  1326	  1763#
SNDSAD	  1317	 10212#
SNDSRQ	  7368	  7370	  7381#
SPCCM1	  9787#	  9793
SPCCMD	  9758	  9767	  9771	  9777	  9782#	  9791
SPCCMW	  9729	  9784
SPCDBG	  9755	  9756
SPCDND	  9757
SPCF11	  9778
SPCFLG	  9783	  9789
SPCGSW	  9776#
SPCINI	  9753#	  9773
SPCMTD	  9468	  9724	  9730
SPCST1	  9749#	  9754	  9772
SPCTRN	  9751#	  9785
SPCTRY	  9750#	  9786	  9792
SPE940	  4356	  4357	  4371#
SPEALP	  4368	  4409#
SPEALT	  4364	  4411	  4415#
SPEAP1	  4379	  4403#
SPEBK3	  4393#
SPEBK6	  4398#	  4404	  4410	  4421	  4428	  4441	  4450
SPEBRK	  4371	  4373	  4375	  4378	  4388#	  4405	  4419	  4433	  4442	  4455	  4463	  4466	  4473	  4481
	  4482	  4485
SPEBS	  4369	  4380	  4446#
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

SPEBS1	  4448	  4454#
SPECR	  4361	  4372	  4383#
SPEPDP	  4355	  4358	  4360#
SPETAB	  4363	  4374	  4424#
SPETB1	  4426	  4432#
SPEUC1	  4500	  4505#
SPEUCM	  4464	  4474	  4489#
SPEUX	  4362	  4460#
SPEUX1	  4477	  4484#
SPEUXC	  4360	  4367	  4470#
SPEVM	  4365	  4366	  4376	  4377	  4439#
SPHNGI	  9748#	  9762	  9794
SPOBS1	  4683	  4686#
SPOBS2	  4621	  4678#
SPOBSP	  2471	  4678	  4681#
SPOCR	  4617	  4625#
SPOFF	  4620	  4658#
SPOFF1	  4659	  4662#
SPOFIL	  4480	  4640	  4649	  4661	  4671	  4697#	  4703
SPOFL1	  4655	  4664	  4674	  4699#
SPOTAB	  4618	  4630#
SPOTB0	  4636	  4642#
SPOTB1	  4646	  4651#
SPOTBL	  4615	  4617#
SPOVT	  4619	  4668#
SPOVT1	  4669	  4672#
SPRCOM	  9354	  9360#
SPRCTB	  9362	  9364#
SPREAT	  8823	  8829#
SPRETB	  8830	  8837#
SPRTTB	  8732	  8734#
SPRTYI	  8714	  8730#
SSPT	  4796	  4797	  4798	  4799	  4800	  4801	  4802	  4803	  4805#
STATES	    85%	  2155	  2158	  3821	  3832	  3863	  3874	  5609	  9804	  9809	 10184	 10187	 11218
STAUTO	  9803	 11217
STDALT	    42#	  8769
STLST	  5055	  5061#	  5075
STOP10	  1082#
STOP9	  1083#
STOTC1	  6074#	  6095	  6100	  6107	 11173	 11178
STRUB	  2477	  2483#
STRUB1	  2478#	  2487
STSHUT	  3820	  3862	 10183
STSUPR	  2154	  3828	  3870	  9808
STTIOD	    83%	  5008
STTLK	  5674#
STTLK0	  5675	  5683#
STTLK1	  5681	  5699	  5702	  5705	  5710#
STTLK2	  5716#	  5729
STTLK3	  5725	  5728	  5731#
STTYBF	   613
SUPTIM	  1862%	  1862	  7232%	  7232
SVOJFF	  3024	  3029	  3043	 11413#
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

SVPPC	  9738#
SVSPC	 11405#
SYSNUM	  1279%	  1279	  6387%	  6387	  9825%	  9825	 11223%	 11223
T1	  1106	  1117	  1122	  1138	  1146	  1150	  1154	  1158	  1161	  1165	  1166	  1167	  1170	  1242
	  1246	  1270	  1278	  1279	  1280	  1342	  1343	  1410	  1414	  1419	  1423	  1426	  1429	  1432
	  1522	  1523	  1525	  1526	  1530	  1531	  1532	  1533	  1534	  1538	  1539	  1540	  1541	  1546
	  1547	  1548	  1556	  1557	  1558	  1561	  1568	  1570	  1573	  1575	  1577	  1578	  1579	  1582
	  1583	  1584	  1585	  1586	  1592	  1593	  1594	  1595	  1607	  1608	  1611	  1612	  1614	  1615
	  1617	  1618	  1619	  1641	  1642	  1647	  1648	  1649	  1669	  1670	  1688	  1689	  1695	  1696
	  1698	  1699	  1706	  1712	  1713	  1714	  1724	  1725	  1726	  1727	  1729	  1740	  1741	  1742
	  1743	  1744	  1745	  1747	  1779	  1780	  1797	  1798	  1799	  1800	  1804	  1806	  1812	  1813
	  1823	  1824	  1825	  1826	  1827	  1830	  1831	  1832	  1837	  1841	  1854	  1855	  1856	  1857
	  1859	  1861	  1862	  1867	  1868	  1869	  1870	  1871	  1872	  1875	  1881	  1882	  1883	  1886
	  1892	  1893	  1895	  1896	  1897	  1898	  1899	  1900	  1901	  1903	  1904	  1905	  1906	  1913
	  1914	  1926	  1927	  1928	  1944	  1945	  1956	  1957	  1958	  1968	  1976	  1977	  1978	  1979
	  1980	  1981	  1982	  1983	  2029	  2030	  2035	  2036	  2037	  2039	  2040	  2057	  2058	  2059
	  2062	  2063	  2069	  2070	  2073	  2074	  2075	  2077	  2078	  2079	  2093	  2094	  2095	  2100
	  2103	  2104	  2105	  2106	  2107	  2108	  2109	  2110	  2111	  2112	  2113	  2118	  2119	  2121
	  2122	  2123	  2140	  2141	  2142	  2143	  2144	  2145	  2146	  2149	  2150	  2151	  2152	  2154
	  2155	  2160	  2174	  2177	  2183	  2231	  2232	  2245	  2246	  2251	  2252	  2260	  2261	  2282
	  2283	  2292	  2293	  2294	  2301	  2302	  2324	  2325	  2347	  2348	  2357	  2359	  2361	  2362
	  2372	  2374	  2418	  2419	  2433	  2434	  2435	  2464	  2493	  2494	  2495	  2504	  2505	  2528
	  2529	  2538	  2539	  2540	  2556	  2557	  2563	  2565	  2615	  2616	  2625	  2626	  2629	  2630
	  2664	  2665	  2671	  2672	  2674	  2683	  2684	  2698	  2700	  2707	  2741	  2742	  2743	  2762
	  2763	  2765	  2766	  2767	  2778	  2779	  2808	  2809	  2810	  2811	  2818	  2819	  2820	  2832
	  2840	  2842	  2843	  2854	  2855	  2857	  2867	  2868	  2874	  2875	  2877	  2878	  2891	  2892
	  2945	  2946	  2947	  2948	  2950	  2953	  2955	  2956	  2957	  2959	  2972	  2973	  2981	  2985
	  2989	  3001	  3007	  3008	  3009	  3010	  3017	  3018	  3019	  3020	  3030	  3031	  3032	  3033
	  3037	  3044	  3045	  3046	  3047	  3055	  3056	  3063	  3066	  3092	  3093	  3165	  3166	  3172
	  3173	  3174	  3175	  3176	  3177	  3178	  3179	  3180	  3187	  3188	  3189	  3191	  3193	  3203
	  3204	  3208	  3209	  3214	  3226	  3227	  3230	  3232	  3233	  3241	  3242	  3244	  3245	  3248
	  3251	  3258	  3259	  3265	  3267	  3268	  3269	  3270	  3298	  3304	  3314	  3319	  3320	  3322
	  3323	  3328	  3329	  3330	  3337	  3338	  3343	  3344	  3345	  3346	  3349	  3357	  3358	  3359
	  3360	  3371	  3372	  3374	  3375	  3376	  3377	  3381	  3389	  3390	  3391	  3392	  3393	  3394
	  3397	  3398	  3400	  3401	  3421	  3422	  3423	  3428	  3444	  3445	  3449	  3450	  3455	  3456
	  3463	  3464	  3466	  3467	  3469	  3470	  3471	  3479	  3480	  3482	  3483	  3485	  3486	  3487
	  3488	  3492	  3493	  3495	  3496	  3516	  3519	  3520	  3523	  3524	  3528	  3529	  3536	  3537
	  3540	  3541	  3545	  3546	  3559	  3563	  3575	  3577	  3578	  3582	  3583	  3590	  3591	  3592
	  3620	  3621	  3622	  3673	  3674	  3689	  3690	  3691	  3693	  3694	  3723	  3724	  3785	  3786
	  3798	  3801	  3808	  3809	  3814	  3815	  3820	  3821	  3823	  3824	  3828	  3832	  3836	  3837
	  3841	  3842	  3844	  3845	  3846	  3856	  3857	  3862	  3863	  3865	  3866	  3870	  3874	  3876
	  3877	  3881	  3882	  3884	  3885	  3886	  3909	  3910	  3916	  3917	  3937	  3938	  3944	  3967
	  3968	  3974	  3977	  3978	  3989	  3990	  3991	  3992	  4002	  4003	  4004	  4005	  4025	  4027
	  4028	  4042	  4043	  4123	  4124	  4125	  4126	  4172	  4177	  4179	  4180	  4198	  4199	  4200
	  4201	  4202	  4203	  4204	  4245	  4246	  4260	  4261	  4297	  4298	  4317	  4318	  4335	  4336
	  4346	  4347	  4351	  4353	  4383	  4388	  4393	  4398	  4424	  4425	  4427	  4429	  4432	  4434
	  4439	  4440	  4446	  4449	  4451	  4454	  4456	  4506	  4507	  4512	  4513	  4514	  4563	  4569
	  4578	  4579	  4630	  4631	  4632	  4635	  4637	  4638	  4643	  4644	  4651	  4653	  4654	  4662
	  4663	  4672	  4673	  4681	  4682	  4684	  4685	  4686	  4687	  4688	  4809	  4810	  4825	  4827
	  4828	  4829	  4833	  4842	  4843	  4862	  4863	  4867	  4868	  4871	  4872	  4878	  4879	  4882
	  4885	  4886	  4894	  4895	  4901	  4902	  4916	  4917	  4922	  4924	  4926	  4927	  4929	  4937
	  4939	  4940	  4941	  4942	  4950	  4951	  4960	  4961	  4968	  4969	  4970	  4976	  4977	  4978
	  4979	  4985	  4986	  4987	  4994	  4995	  5006	  5010	  5017	  5018	  5019	  5028	  5031	  5032
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

	  5034	  5035	  5036	  5039	  5054	  5055	  5056	  5061	  5062	  5063	  5064	  5065	  5068	  5069	  5074
	  5079	  5080	  5082	  5083	  5088	  5095	  5096	  5107	  5140	  5143	  5144	  5145	  5146	  5149
	  5172	  5175	  5176	  5177	  5178	  5181	  5192	  5193	  5195	  5205	  5206	  5221	  5222	  5225
	  5226	  5269	  5270	  5273	  5274	  5276	  5279	  5280	  5291	  5313	  5322	  5351	  5352	  5355
	  5356	  5358	  5359	  5360	  5362	  5366	  5367	  5372	  5374	  5375	  5376	  5389	  5393	  5394
	  5400	  5420	  5421	  5422	  5426	  5427	  5428	  5429	  5487	  5488	  5494	  5495	  5499	  5500
	  5512	  5513	  5515	  5522	  5523	  5530	  5534	  5549	  5562	  5563	  5569	  5570	  5575	  5588
	  5589	  5600	  5608	  5609	  5611	  5612	  5613	  5614	  5617	  5628	  5629	  5631	  5632	  5633
	  5635	  5674	  5676	  5677	  5678	  5685	  5686	  5687	  5689	  5694	  5706	  5718	  5823	  5824
	  5825	  5851	  5852	  5860	  5861	  5862	  5863	  5868	  5870	  5871	  5893	  5894	  5895	  5921
	  5922	  5923	  5930	  5931	  5948	  5951	  5952	  5953	  5956	  5959	  5961	  5965	  5968	  5974
	  5975	  5976	  5977	  6017	  6072	  6073	  6074	  6077	  6078	  6094	  6099	  6106	  6123	  6124
	  6126	  6127	  6128	  6132	  6135	  6158	  6161	  6162	  6163	  6165	  6166	  6167	  6168	  6169
	  6170	  6171	  6172	  6176	  6177	  6179	  6180	  6181	  6183	  6195	  6197	  6199	  6204	  6205
	  6206	  6217	  6218	  6219	  6221	  6222	  6223	  6226	  6237	  6238	  6239	  6248	  6249	  6250
	  6251	  6262	  6271	  6290	  6291	  6293	  6294	  6295	  6296	  6297	  6298	  6299	  6300	  6301
	  6302	  6316	  6318	  6322	  6325	  6333	  6340	  6347	  6348	  6349	  6351	  6354	  6371	  6375
	  6382	  6385	  6386	  6387	  6388	  6392	  6393	  6400	  6401	  6402	  6403	  6412	  6413	  6420
	  6421	  6422	  6423	  6437	  6438	  6440	  6441	  6461	  6462	  6551	  6566	  6567	  6570	  6572
	  6574	  6575	  6591	  6592	  6594	  6595	  6599	  6601	  6603	  6604	  6606	  6613	  6614	  6617
	  6618	  6695	  6696	  6698	  6708	  6709	  6711	  6713	  6721	  6722	  6737	  6739	  6741	  6742
	  6744	  6781	  6783	  6784	  6785	  6786	  6787	  6789	  6790	  6791	  6802	  6840	  6842	  6851
	  6853	  6863	  6864	  6865	  6866	  6872	  6873	  6874	  6875	  6879	  6895	  6896	  6901	  6902
	  6904	  6905	  6906	  6907	  6908	  6913	  6914	  6923	  6924	  6925	  6926	  6930	  6931	  6932
	  6933	  6934	  6967	  6969	  6983	  6984	  6985	  7019	  7020	  7021	  7024	  7028	  7068	  7069
	  7077	  7090	  7091	  7092	  7093	  7094	  7095	  7137	  7138	  7143	  7144	  7147	  7148	  7150
	  7151	  7161	  7166	  7167	  7168	  7169	  7170	  7171	  7181	  7182	  7188	  7220	  7221	  7222
	  7224	  7225	  7231	  7232	  7237	  7238	  7242	  7243	  7256	  7257	  7259	  7260	  7261	  7262
	  7267	  7268	  7269	  7275	  7276	  7281	  7282	  7284	  7285	  7288	  7293	  7294	  7299	  7300
	  7301	  7307	  7308	  7313	  7314	  7324	  7330	  7332	  7335	  7336	  7350	  7351	  7352	  7353
	  7354	  7355	  7356	  7362	  7363	  7384	  7385	  7386	  7387	  7388	  7389	  7397	  7398	  7402
	  7403	  7404	  7412	  7413	  7414	  7421	  7422	  7429	  7430	  7441	  7444	  7477	  7478	  7489
	  7560	  7561	  7562	  7564	  7565	  7568	  7569	  7580	  7581	  7586	  7588	  7589	  7591	  7592
	  7596	  7603	  7618	  7620	  7630	  7632	  7633	  7635	  7641	  7642	  7647	  7654	  7655	  7659
	  7679	  7681	  7693	  7724	  7725	  7729	  7730	  7735	  7736	  7744	  7745	  7750	  7751	  7755
	  7756	  7763	  7764	  7766	  7767	  7771	  7772	  7780	  7781	  7786	  7787	  7788	  7795	  7796
	  7802	  7803	  7813	  7829	  7830	  7840	  7855	  7856	  7875	  7911	  7915	  7917	  7919	  7921
	  7938	  7950	  7954	  7955	  7956	  7957	  7961	  7962	  7965	  7966	  7984	  7986	  7990	  8010
	  8011	  8012	  8056	  8057	  8086	  8087	  8090	  8096	  8101	  8104	  8109	  8110	  8111	  8117
	  8125	  8132	  8138	  8139	  8146	  8147	  8151	  8157	  8158	  8159	  8161	  8163	  8167	  8173
	  8174	  8176	  8177	  8184	  8185	  8187	  8200	  8201	  8203	  8208	  8254	  8255	  8258	  8267
	  8270	  8276	  8279	  8280	  8492	  8493	  8500	  8503	  8518	  8519	  8520	  8524	  8525	  8576
	  8577	  8578	  8615	  8626	  8639	  8640	  8645	  8646	  8648	  8649	  8651	  8652	  8662	  8663
	  8665	  8666	  8667	  8668	  8673	  8674	  8676	  8677	  8678	  8679	  8680	  8681	  8682	  8685
	  8686	  8699	  8701	  8725	  8726	  8727	  8810	  8812	  8846	  8847	  8871	  8872	  8874	  8875
	  8878	  8880	  8881	  8884	  8903	  8906	  8913	  8914	  8915	  8919	  8920	  8928	  8929	  8936
	  8937	  8938	  8939	  8941	  8943	  8944	  8949	  8959	  8962	  8963	  8973	  8974	  8976	  8977
	  8978	  8979	  8982	  8984	  8985	  8997	  8998	  9000	  9001	  9006	  9026	  9027	  9029	  9030
	  9033	  9040	  9041	  9060	  9062	  9063	  9064	  9068	  9070	  9072	  9074	  9076	  9080	  9082
	  9083	  9084	  9085	  9091	  9093	  9094	  9095	  9099	  9100	  9102	  9107	  9119	  9120	  9122
	  9137	  9138	  9145	  9151	  9154	  9155	  9159	  9168	  9170	  9171	  9172	  9173	  9177	  9178
	  9211	  9212	  9214	  9215	  9216	  9217	  9218	  9224	  9225	  9227	  9228	  9229	  9230	  9231
	  9240	  9241	  9242	  9244	  9245	  9248	  9249	  9250	  9256	  9257	  9258	  9259	  9273	  9274
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

	  9275	  9309	  9310	  9311	  9345	  9346	  9360	  9364	  9365	  9366	  9367	  9385	  9386	  9390	  9391
	  9414	  9415	  9422	  9423	  9427	  9435	  9436	  9440	  9446	  9447	  9450	  9451	  9517	  9518
	  9519	  9520	  9544	  9545	  9548	  9557	  9569	  9572	  9582	  9583	  9593	  9595	  9596	  9597
	  9598	  9599	  9617	  9620	  9635	  9636	  9642	  9647	  9648	  9660	  9662	  9663	  9665	  9678
	  9739	  9742	  9754	  9755	  9757	  9760	  9761	  9762	  9763	  9765	  9767	  9768	  9770	  9772
	  9776	  9778	  9784	  9785	  9786	  9788	  9790	  9791	  9803	  9804	  9808	  9809	  9811	  9814
	  9825	  9826	  9833	  9884	  9886	  9887	  9890	  9897	  9898	  9918	  9919	  9920	  9922	  9924
	  9928	  9929	  9930	  9931	  9934	  9937	  9940	  9941	  9953	  9958	  9968	  9969	  9970	  9972
	  9973	  9974	  9979	  9983	  9984	  9985	  9999	 10000	 10001	 10002	 10016	 10017	 10028	 10029
	 10030	 10031	 10032	 10105	 10119	 10126	 10127	 10134	 10138	 10143	 10147	 10154	 10173	 10176
	 10182	 10185	 10186	 10212	 10213	 10215	 10223	 10224	 10226	 10227	 10232	 10233	 10258	 10259
	 10260	 10261	 10262	 10263	 10278	 10279	 10281	 10284	 10290	 10292	 10299	 10301	 10303	 10305
	 10306	 10310	 10312	 10313	 10334	 10335	 10345	 10346	 10359	 10360	 10366	 10367	 10400	 10401
	 10402	 10406	 10407	 10408	 10409	 10448	 10449	 10451	 10463	 10468	 10469	 10474	 10476	 10477
	 10479	 10480	 10486	 10487	 10497	 10499	 10547	 10548	 10556	 10559	 10560	 10562	 10573	 10576
	 10577	 10579	 10595	 10602	 10605	 10606	 10608	 10622	 10625	 10626	 10627	 10631	 10641	 10647
	 10649	 10650	 10654	 10655	 10659	 10660	 10672	 10673	 10678	 10679	 10680	 10683	 10684	 10689
	 10690	 10694	 10699	 10700	 10704	 10705	 10706	 10707	 10716	 10717	 10732	 10741	 10756	 10757
	 10758	 10759	 10761	 10763	 10764	 10765	 10766	 10768	 10770	 10772	 10789	 10794	 10795	 10796
	 10797	 10798	 10799	 10801	 10803	 10805	 10806	 10816	 10817	 10818	 10831	 10832	 10833	 10834
	 10842	 10843	 10856	 10862	 10872	 10873	 10876	 10884	 10885	 10887	 10896	 10897	 10900	 10901
	 10905	 10910	 10911	 10912	 10913	 10923	 10924	 10927	 11028	 11030	 11075	 11076	 11077	 11088
	 11089	 11113	 11114	 11116	 11117	 11118	 11126	 11127	 11128	 11129	 11148	 11149	 11150	 11156
	 11166	 11169	 11174	 11175	 11177	 11196	 11197	 11198	 11199	 11205	 11206	 11208	 11217	 11218
	 11220	 11221	 11222	 11223	 11224	 11225	 11226	 11236	 11242	 11253	 11254	 11255	 11261	 11263
	 11264	 11265	 11267	 11269	 11270	 11271	 11272	 11274
T2	  1091	  1092	  1093	  1095	  1096	  1098	  1099	  1101	  1102	  1103	  1113	  1114	  1115	  1118
	  1119	  1120	  1124	  1125	  1126	  1127	  1128	  1129	  1130	  1133	  1248	  1249	  1250	  1251
	  1252	  1253	  1254	  1255	  1515	  1516	  1559	  1560	  1655	  1656	  1699	  1729	  1730	  1748
	  1749	  1794	  1801	  1803	  1805	  1838	  1839	  1841	  1851	  1855	  1858	  1859	  1966	  1976
	  1977	  1978	  1979	  1980	  1981	  1982	  1983	  2024	  2027	  2032	  2038	  2045	  2046	  2047
	  2269	  2285	  2334	  2345	  2373	  2376	  2377	  2378	  2379	  2476	  2479	  2484	  2485	  2520
	  2559	  2564	  2567	  2568	  2569	  2570	  2609	  2614	  2617	  2622	  2624	  2627	  2628	  2631
	  2641	  2654	  2701	  2702	  2703	  2704	  2705	  2706	  2709	  2710	  2712	  2713	  2714	  2715
	  2716	  2717	  2718	  2721	  2784	  2786	  2787	  2790	  2796	  3013	  3015	  3023	  3024	  3025
	  3026	  3029	  3031	  3043	  3045	  3191	  3192	  3310	  3311	  3346	  3348	  3377	  3380	  3397
	  3398	  3399	  3400	  3401	  3425	  3426	  3458	  3459	  3463	  3482	  3483	  3495	  3501	  3502
	  3503	  3505	  3508	  3510	  3511	  3512	  3748	  3750	  3767	  3768	  3772	  3773	  3779	  3791
	  3792	  3848	  3849	  3850	  3907	  3908	  3909	  3911	  3912	  3913	  3914	  3915	  3917	  3918
	  3919	  3920	  3927	  4060	  4063	  4075	  4087	  4090	  4096	  4102	  4103	  4111	  4113	  4114
	  4135	  4136	  4167	  4170	  4178	  4198	  4199	  4200	  4201	  4202	  4203	  4204	  4352	  4355
	  4356	  4357	  4358	  4447	  4448	  4585	  4586	  4590	  4614	  4615	  4826	  4827	  4828	  4938
	  4943	  5007	  5009	  5050	  5051	  5052	  5054	  5056	  5065	  5066	  5069	  5070	  5071	  5074
	  5075	  5088	  5096	  5134	  5137	  5140	  5141	  5143	  5149	  5150	  5151	  5152	  5153	  5158
	  5169	  5170	  5172	  5173	  5191	  5193	  5195	  5196	  5204	  5205	  5207	  5208	  5210	  5216
	  5217	  5218	  5221	  5227	  5228	  5237	  5239	  5253	  5254	  5256	  5257	  5263	  5272	  5277
	  5278	  5281	  5330	  5372	  5373	  5375	  5506	  5507	  5512	  5517	  5519	  5531	  5532	  5539
	  5540	  5545	  5546	  5595	  5597	  5614	  5640	  5641	  5643	  5713	  5714	  5719	  5731	  6015
	  6016	  6051	  6113	  6217	  6219	  6221	  6224	  6227	  6228	  6252	  6253	  6264	  6268	  6351
	  6352	  6354	  6355	  6374	  6375	  6383	  6384	  6385	  6552	  6570	  6574	  6576	  6592	  6596
	  6605	  6606	  6607	  6697	  6698	  6712	  6713	  6726	  6727	  6728	  6729	  6730	  6731	  6732
	  6734	  6735	  6738	  6739	  6740	  6751	  6752	  6753	  6755	  6763	  6764	  6765	  6766	  6772
	  6773	  6774	  6780	  6782	  6798	  6799	  6801	  6811	  6813	  6815	  6822	  6823	  6827	  6828
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

	  6829	  6830	  6831	  6836	  6837	  6838	  6839	  6841	  6847	  6848	  6849	  6850	  6852	  6880	  6968
	  6972	  6973	  6974	  6975	  7022	  7023	  7024	  7164	  7167	  7169	  7175	  7178	  7179	  7190
	  7331	  7332	  7399	  7400	  7401	  7407	  7459	  7460	  7467	  7468	  7486	  7487	  7489	  7490
	  7491	  7492	  7493	  7495	  7497	  7498	  7500	  7503	  7504	  7505	  7506	  7509	  7512	  7513
	  7515	  7517	  7519	  7527	  7532	  7535	  7537	  7563	  7572	  7577	  7583	  7600	  7602	  7604
	  7605	  7606	  7617	  7634	  7636	  7679	  7680	  7681	  7697	  7699	  7701	  7806	  7807	  7813
	  7814	  7833	  7834	  7840	  7841	  7870	  7871	  7872	  7873	  7874	  7878	  7879	  7901	  7902
	  7917	  7935	  7936	  7937	  7938	  7954	  7972	  7973	  7974	  7976	  7977	  7981	  7982	  7986
	  7987	  7989	  7990	  8103	  8104	  8189	  8190	  8215	  8258	  8259	  8267	  8278	  8279	  8695
	  8698	  8701	  8708	  8709	  8722	  8730	  8734	  8735	  8736	  8737	  8754	  8755	  8757	  8760
	  8761	  8767	  8768	  8806	  8809	  8812	  8819	  8820	  8829	  8830	  8832	  8893	  8896	  8897
	  8900	  9295	  9296	  9303	  9319	  9320	  9324	  9339	  9351	  9361	  9362	  9480	  9483	  9618
	  9621	  9643	  9661	  9666	  9667	  9677	  9822	  9823	  9824	  9885	  9889	  9963	 10011	 10015
	 10019	 10021	 10029	 10032	 10033	 10107	 10111	 10125	 10136	 10145	 10148	 10149	 10152	 10153
	 10172	 10183	 10184	 10187	 10190	 10191	 10196	 10197	 10218	 10219	 10220	 10221	 10280	 10285
	 10294	 10296	 10299	 10303	 10308	 10311	 10314	 10399	 10403	 10404	 10405	 10734	 10847	 10849
	 10855	 10857	 10858	 10859	 10861	 10864	 10877	 10886	 10888	 10890	 10902	 10914	 10966	 10969
	 10972	 10980	 10983	 10989	 10992	 10995	 11028	 11031	 11034	 11163	 11164	 11169	 11170
T2POPJ	  9305%	  9305
T3	  1929	  1952	  1963	  1964	  1965	  2033	  2086	  2096	  2097	  2098	  2099	  2101	  2114	  2115
	  2116	  2125	  2230	  2244	  2252	  2259	  2410	  2411	  2415	  2428	  2430	  2431	  2491	  2492
	  2636	  2646	  2651	  2737	  2748	  2750	  2752	  2757	  2758	  2759	  2761	  2781	  2782	  2803
	  2804	  2805	  2807	  3222	  3247	  3248	  3249	  3250	  3251	  3252	  3256	  3459	  3460	  3462
	  3465	  3469	  3484	  3485	  3486	  3496	  3506	  3523	  3584	  3585	  3684	  3685	  3695	  3696
	  3716	  3717	  3741	  3742	  3752	  3759	  3780	  3799	  3800	  3803	  3804	  3935	  3937	  3959
	  3960	  3961	  3962	  3967	  4004	  4025	  4066	  4093	  4171	  4174	  4175	  4176	  4185	  4298
	  4415	  4416	  4420	  4478	  4479	  4492	  4498	  4499	  4515	  4516	  4520	  4526	  4536	  4537
	  4541	  4542	  4557	  4560	  4561	  4562	  4595	  4596	  4597	  4601	  4602	  4607	  4697	  4698
	  4699	  4705	  4706	  4707	  4709	  4710	  4811	  4821	  4822	  4890	  4891	  4892	  4893	  5089
	  5134	  5153	  5161	  5196	  5328	  5329	  5356	  5408	  5410	  5411	  5412	  5457	  5458	  5460
	  5461	  5680	  5683	  5686	  5689	  5690	  5692	  5693	  5698	  5703	  5712	  5723	  5725	  5742
	  5743	  5751	  5755	  5757	  5759	  5763	  5767	  5773	  5812	  5813	  5818	  5819	  5820	  5829
	  5830	  5834	  5843	  5844	  5884	  5885	  5889	  5890	  5891	  5906	  5912	  5913	  5914	  5938
	  5954	  5955	  5957	  5958	  5960	  5962	  5963	  5964	  5966	  5967	  5970	  5972	  5973	  6013
	  6014	  6055	  6056	  6057	  6060	  6118	  6119	  6120	  6136	  6137	  6138	  6139	  6140	  6141
	  6142	  6143	  6144	  6145	  6146	  6147	  6148	  6149	  6150	  6151	  6152	  6153	  6154	  6155
	  6156	  6157	  6281	  6282	  6441	  6444	  6448	  6452	  6459	  6464	  6555	  6579	  6594	  6597
	  6608	  6623	  6696	  6711	  6750	  6760	  6761	  6762	  6771	  6779	  6797	  6800	  6805	  6810
	  6821	  6879	  6883	  6942	  6943	  6969	  6970	  6971	  6978	  6979	  6980	  6986	  6987	  6988
	  7059	  7060	  7508	  7510	  7516	  7518	  7536	  7631	  7632	  7687	  7688	  7693	  7694	  7695
	  7696	  7699	  7700	  7701	  7727	  7729	  7735	  7753	  7755	  7763	  7778	  7780	  7875	  7876
	  7878	  7879	  7948	  7950	  7951	  7952	  7977	  7978	  7979	  7980	  7983	  7984	  7987	  8703
	  8705	  8706	  8707	  8710	  8769	  8785	  8788	  8801	  8814	  8816	  8817	  8818	  8831	  8832
	  8842	  8843	  8849	  9186	  9192	  9297	  9298	  9327	  9332	  9335	  9336	  9337	  9343	  9344
	  9347	  9349	  9356	  9369	  9370	  9371	  9372	  9373	  9377	  9378	  9379	  9380	  9387	  9392
	  9395	  9397	  9475	  9487	  9488	  9489	  9491	  9492	  9494	  9497	  9500	  9527	  9532	  9560
	  9564	  9565	  9568	  9570	  9573	  9583	  9584	  9590	  9591	  9598	  9619	  9623	  9644	  9657
	  9658	  9667	  9722	  9723	  9725	  9726	  9727	  9728	  9729	  9732	  9960	  9961	  9974	  9988
	  9989	  9994	 10300	 10301	 10302	 10304	 10760	 10762	 10767	 10771	 10800	 10801	 10802	 10804
	 10844	 10845	 10846	 11029	 11031	 11032	 11156	 11157	 11175	 11213	 11215	 11257	 11258	 11260
	 11261	 11262	 11266	 11267	 11269	 11271	 11272
T4	  1221	  1222	  1223	  1224	  1225	  1226	  1227	  1632	  1642	  1663	  1675	  1681	  1691	  1722
	  1796	  1797	  1808	  2016	  2017	  2019	  2020	  2021	  2055	  2083	  2085	  2086	  2087	  2088
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

	  2236	  2253	  2265	  2309	  2341	  2352	  2353	  2354	  2359	  2363	  2367	  2370	  2403	  2438	  2439
	  2442	  2445	  2446	  2449	  2452	  2453	  2457	  2460	  2461	  2464	  2465	  2466	  2467	  2468
	  2491	  2531	  2667	  2668	  2673	  2684	  2738	  2739	  2745	  2746	  2754	  2756	  2792	  2802
	  2817	  2822	  2847	  2878	  2950	  2955	  3064	  3065	  3066	  3067	  3089	  3265	  3348	  3349
	  3380	  3381	  3383	  3423	  3427	  3428	  3464	  3465	  3466	  3497	  3498	  3499	  3500	  3501
	  3502	  3506	  3507	  3512	  3513	  3514	  3515	  3516	  3517	  3688	  3689	  3692	  3693	  4231
	  4232	  4275	  4276	  4476	  4490	  4491	  4495	  4496	  4566	  4573	  4579	  4584	  4585	  4587
	  4595	  4598	  4599	  4600	  4605	  4606	  4625	  4633	  4635	  4639	  4642	  4647	  4648	  4652
	  4653	  4654	  4660	  4663	  4670	  4673	  4697	  4705	  4708	  4812	  5365	  5700	  5701	  5703
	  5704	  5710	  5724	  5727	  5728	  6265	  6269	  6284	  6571	  6572	  6573	  7481	  7500	  7529
	  7530	  7533	  7534	  7535	  7536	  7539	  7540	  7623	  7626	  7682	  7698	  7708	  8774	  8775
	  9054	  9055	  9080	  9081	  9090	  9104	  9106	  9108	  9118	  9640	  9641	 10206	 10207
TABPTR	  2461	  4648	  4796#
TABTMR	   202#	  1841	  6711	  6727	  6732
TABTMS	   232#	   255	  3689	  6713	  6726	  6728
TAKNZJ	   107%	 10903	 10915	 10928
TAKOTJ	   107%	 10878	 10889
TAKTRJ	   107%	  1613	  1650	  1833	  1876	  2076	  5109	  6619	  7189	 10733
TAKTRP	   107%	  1524	  5576	 11176
TATUU1	 10481	 10486#
TATUUO	 10463#
TBFL	  4654	  4763#
TBFL2	  4653	  4768#
TCBALL	   156#
TCNBSD	   150#	  6530	 10091
TCNBSP	   150#	  6514	 10086
TCNCLA	   150#	  6531	 10093
TCNCRD	   150#	  6002	  6479
TCNDEF	   150#	  6518	 10089
TCNDSP	  6594	  6630#	  6695	  6708
TCNECH	   150#	  6511	 10092
TCNERA	   150#	  6517	 10087
TCNFC1	   150#	  6491	 10078	 10173
TCNFC2	   150#	  6492	 10079	 10176
TCNFRM	   150#	  6007	 10070
TCNHDX	   150#	  6001	  6483	 10073
TCNIR	   150#	  6480	 10080
TCNKAT	   150#	  6533	 10095
TCNLCO	   150#	  6520	 10090
TCNLCT	   150#	  6004	 10071
TCNN	   151#	   152	   156	  6591
TCNNFC	   150#	  6003	 10074
TCNNXO	   150#	  6487
TCNOR	   150#	  6481	 10081
TCNPA	   150#	  6484	 10082
TCNPAR	   150#	  6482
TCNPB	   150#	  6485	 10083
TCNPC	   150#	  6486	 10084
TCNPD	   150#	  6513	 10085	 10154
TCNPTP	   150#	  6006	 10076	 10077
TCNRTC	   150#	  6532	 10094
TCNRXE	   150#	  6512	 10088
TCNTAB	   150#	  6005	 10069
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

TCNTYP	   150#	  6534	 10096
TCNWID	   150#	  6490	 10075
TCNXON	   150#	  6510
TCVMAX	  6592	  6662#
TDTUUO	 10331#
THSDAT	    86%
THSTIM	  1101%	  1101	  1102%	  1102	  1222%	  1222	  1224%	  1224	 11194%	 11194
TIHLTN	  2055	  6975	 11462#
TILOW	    53#	 11460	 11467
TIME	    86%
TIMOW	  4869	  4872	  4923	 11424#
TIMRST	 10451%	 10451	 10631%	 10631
TINAS1	 11028#	 11172
TINASS	 11156#
TINDET	 11162	 11166#
TINFIO	   643#	  5105	  5110	 11132
TIOUSE	   644#	  5578	  7224	  9182	  9204	  9900	  9907	 10364
TIRSVD	    49#	  2017	  2973	  4951	  7023	  8872	  8939	  8974	  8979
TIWAIT	  8620	  8792	  9125	  9148	  9164#
TIWAKE	  5002#	  5118	  5579	  7228	 10936
TIWAKN	  5003	  5013#	  9199
TIWKC	    50#	    51	    53	  2236	  2253	  2265	  2309	  2341	  2531	  4232	  4276	  5360	  5365	  5871
	  7014	  9107	  9120	  9218	 11077
TIWRNN	  2021	  3174	  9259	 11460#
TKATT%	  5669#	  5694
TKBSY%	  5670#	  5706
TKEXS%	  5668#	  5687
TKROM%	  5667#	  5718
TMCALL	   192#	  3716
TMCCIE	   190#
TMCCRD	   190#	  6630
TMCECH	   190#	  6639
TMCECO	   190#
TMCECR	   190#	  6802
TMCELF	   190#
TMCESC	   190#
TMCHDX	   190#	  6634
TMCIR	   190#	  6631
TMCKAT	   190#	  6658	  6722	  6726	  6727	  6734
TMCOOR	  1847	 11497#
TMCOR	   190#	  6632
TMCPA	   190#	  6635
TMCPAR	   190#	  6633
TMCPB	   190#	  6636
TMCPC	   190#	  6637
TMCPD	   190#	  6641	  6721	  6728	  6732	  6734
TMCQM	   190#
TMCRXE	   190#	  6640
TMCSIZ	   259#	   503	   504	  2131	  6396	  7344
TMCSLP	   256#
TMCSPA	   190#
TMCTOB	   190#
TMCXON	   190#	  6638
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

TO11DB	  9731	  9787
TOEMAX	  5429	  8884	 11480#
TOWAIT	  9177#
TOWAT1	  7035	  8631	  8916	  8952	  8964	  9180#
TOWATA	  8931	  9036	  9900#
TPOPJ	    82%	  5033	  5037	  6598	  9260	  9567	  9574	  9938	 10217	 10222	 10465	 10467	 10470	 10473
	 10904	 10906	 10916	 11130	 11151
TPOPJ1	    82%	  5041	  5619	  6602	  9261	 10122	 10123	 11152
TRESCN	  9295#
TRESCU	  5800	  5851#
TRMAUX	  2227#
TRMBYP	   520#	  2093	  3785
TRMTAB	  2094	  2193#
TRPLEN	   590#	   631	 10810	 11013	 11170
TSETBI	  1527	  2727	  2872	  3544	  3840	  3880	  5159	  5233#	  5801	  6473	  7038
TSETBO	  2666	  2873	  2887	  3543	  3839	  3879	  5263#	  5802	  6474	  9507	  9888
TSTBO1	  5265#
TSTBO2	  5275	  5278#
TSTKTJ	   107%	  7029	  8616	  8627	  8904	  8960	  9007	  9034	  9123	  9146
TSTKTP	   107%	  8950
TSTTRJ	   107%
TT2CHK	    45#	 11267	 11272
TTCCLR	 10071	 10073	 10074	 10090	 10104#
TTCCNT	  5741	  6539#	  6545
TTCDO1	 10106	 10111#
TTCFIL	 10072	 10167#
TTCFIN	 10114#
TTCFL0	 10167	 10172#
TTCFL1	 10171	 10173#
TTCGO	 10108	 10112	 10128	 10157#	 10174	 10177
TTCHKS	    44#	    45	  5152	  7020	  7021	 11255	 11260	 11269	 11270
TTCLST	 11253%	 11253	 11257%	 11257
TTCMCA	  9296	  9319	  9324	 11407#
TTCMCH	  9298	  9335	  9349	 11406#
TTCNEG	  6538#	  6539	  6543
TTCNO	 10068	 10099#
TTCSET	 10069	 10070	 10076	 10077	 10086	 10087	 10088	 10089	 10091	 10092	 10094	 10095	 10105#
TTCSIX	 10093	 10134#
TTCTYP	 10096	 10143#
TTCVAL	 10075	 10078	 10079	 10080	 10081	 10082	 10083	 10084	 10085	 10119#
TTCVL0	 10120	 10125#
TTCVL1	 10124	 10126#
TTCVL2	 10127#	 10139	 10151
TTCVL3	 10128#	 10155
TTCWDD	 10032	 10068#	 10105	 10127
TTCWDN	 10028	 10065#	 10066
TTCWDT	 10029	 10036#	 10065
TTFORC	  2175	  2858	  5040	  9278#	  9834	 11247
TTFREE	  2474%	  2474	  5061%	  5061	  5064%	  5064	  5066%	  5066	  5071%	  5071	  5176%	  5176	  5187%	  5187
	  5207%	  5207	  5208%	  5208	  5216%	  5216	  5222%	  5222	 11256%	 11256
TTFREN	  2016	  2972	  4950	  5067	  5190	  5209	  5229	  7022	  8871	  8938	  8973	  8978	 11258	 11259
	 11268	 11400#
TTGC1	  5144	  5158#
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

TTGETC	  2788	  4061	  4088	  4168	  5133#	  6114	  6279	  8696	  8807	  9322	  9481
TTIEND	 11277#
TTINI2	 11204#	 11249
TTINI3	 11216	 11219	 11249#
TTINI4	 11269#	 11273
TTKJOB	  5584%	  5584
TTNCHR	   595#
TTNEGL	  6537#	  6538	  6539	  6543
TTNESC	   594#
TTNLIN	   596#
TTNYLB	   597#
TTOUT1	  5391	  5394#
TTOUT2	  5402#	  5415
TTOUT3	  5403	  5406	  5408#
TTOUT4	  5412	  5415#
TTOUT5	  5395	  5416#
TTPC1	  5171	  5196#
TTPC2	  5175	  5195#
TTPUTC	  2026	  2478	  5169#	  8899
TTSCL1	 10986	 10996#
TTSCL2	 10975#	 10999
TTSCL3	 10977	 10997#
TTSCLR	 10964#
TTTCL1	 11006#	 11021
TTTCL2	 11019#
TTTCLR	 11002#
TTUNEG	  5787#	  6537
TTUUOT	  5742	  5792#	  6537
TTVIN2	    94%	  9820
TTVINI	    94%	 11215
TTYAT1	 10421	 10440#	 11240
TTYAT2	 10443	 10446#
TTYATC	  1913	  5031	  5545	  6422	  7143	  7168	  8639	  8919	  8928	  8997	  9026	  9154	 10278	 10366
	 10448	 10706	 10716	 10805	 10833
TTYATI	  2172	  9831	 10436#
TTYATT	 10417#	 10472
TTYBCN	  8088#	  8102
TTYBMT	  1380#	  1439	  1462	  1465	  1467	  1470	  1472	  1474	  1476	  1478	  1481	  1483	  1486	  1489
	  1494	  1497	  1505
TTYBNP	  1635#	  1666
TTYBPN	  1403#
TTYCMR	  9422#
TTYDET	 10337	 10341#
TTYERP	  9874#
TTYFLK	 10789	 11417#
TTYFLM	  5072#
TTYFND	  9845#	 10374
TTYFNU	  5444	  5740	  6083	  9844#	  9895
TTYFUW	  9895#
TTYFW1	  9896#	 10376
TTYHLT	  9445#
TTYIN	  5297	  5303#
TTYIN1	  5326#	  5331
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

TTYIN3	  5327	  5332#
TTYIN5	  5313#	  5345
TTYIN6	  5337	  5342#
TTYIN8	  5338#	  5344
TTYINI	  5292	 11189	 11191#
TTYINX	  5306	  5339#
TTYKD1	 10312#	 10314
TTYKDB	  6329	  7139	  7226	 10265	 10272	 10276#	 10368
TTYKIL	 10252#
TTYLOS	  1822	 11483	 11485#
TTYLST	   610#	 11236
TTYMXL	 10066#
TTYNAM	  9958#
TTYNFB	  8250#	  8256
TTYNFR	 10827#
TTYNNC	  5159#
TTYNPB	  3378	  3395#
TTYOUS	  5383	  5434#
TTYOUT	  5296	  5381#	  5385
TTYOUW	   640#	  4154	  5000	  5116	  9009	  9164	  9180	  9900	  9911
TTYPH2	  9929	  9940#
TTYPH3	  9932	  9937#
TTYPH4	  9928#	  9935
TTYPHY	  9918#	  9950
TTYPTY	  2969#	  2996
TTYRES	  5622#
TTYRHT	  2068	 11470#
TTYRS1	  5627	  5638#	  5642	  5645
TTYSET	  5859#
TTYSOW	  9911#
TTYSRC	  9845	  9863#	  9874	 10331	 10419	 10437	 10464	 10827
TTYSTC	  9426#	 10484
TTYSTR	  9430#
TTYSZS	  5323	  5372#	  5401
TTYTAB	    85%	  5597	  5622	  5689	  6412	  7160	  7164	  7165	  7463	  7580	  9864	 10202	 10260	 10454
	 10616	 10689	 10836	 10951	 11141	 11160
TTYTBL	 10037#
TTYUS0	  9403	  9409#
TTYUS1	  9411	  9414#
TTYUSM	  9408#
TTYUSR	  9402#
TTYUSW	  9401#
TTYUU1	  5744	  5747	  5751#
TTYUU2	  5752	  5755#
TTYUU3	  5760	  5763#
TTYUUO	  5468	  5740#	  5762
TTYWAK	 10931#
TTYWK1	 10934	 10946#	 10974	 10998	 11005	 11020
TTYWK2	 10935#	 10945
TTYWK3	 10939	 10942#
TTYYLS	 11124#
TTYZAP	  2162	  2181	  5544	  5561	  7195	  7207	  7216	  7236	  7290	  7327	  7609	 10252	 10271	 10349
	 10399#
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

TTYZNE	  1626#
TTYZP1	 10401	 10404#
TUUAIR	  5755	  5763	  5779#	  5787	  5788	  5794	  5797	  5803	  5804	  6448	  6467	  6468	  6469	  6475
	  6496	  6497	  6504	  6506	  6507
TUUATI	  5751	  5757	  5776#	  5791	  5792	  5796
TUUATO	  5743	  5757	  5777#	  5793	  5795	  5799	  5805	  5806	  5807
TUUATR	  5755	  5778#	  5800	  5801	  5802
TUUEAT	  5767	  5781#	  5788	  5791	  5792	  5794	  5796	  5797	  5803	  5804	  6452	  6467	  6468	  6469
	  6475	  6496	  6497	  6503	  6504	  6505	  6506	  6507
TUUFXI	  5782#	  5788	  5791	  5792	  5794	  5796	  5797	  5803	  5804	  6475	  6476	  6503	  6504	  6505
	  6506	  6507
TUUIMI	  5783#	  6459	  6467	  6468	  6469
TUUROM	  5759	  5780#	  5793	  5795	  5805	  5806	  5807	  6444	  6470	  6471	  6472	  6508	  6509	  6522
TWABT	  9147	  9150	  9162#
TWAITC	  5451	  5791	  6065	  6939	  9135#	  9159
TWAITL	  5309	  6036	  6048	  6959	  9097#	  9128
TWAITS	  6027	  6952	  9131#
TWTC1	  9144	  9148#
TWTC2	  9153	  9159#
TWTL1	  9111	  9118#
TWTL2	  9116	  9118	  9121	  9125#
TWTL3	  9117	  9122#
TWTSPC	   641#	  4947	  5624	  7026	  8874	  8962
TYCIOS	 10353#
TYI	  5326	  5455	  6029	  6037	  6049	  6066	  6940	  6954	  6960	  8690#	  8795
TYI940	  8735	  8736	  8746#
TYIALT	  8739	  8767#
TYIATB	  8709	  8713#
TYIBRK	  8740	  8746	  8749	  8757#	  8763	  8766	  8770	  8773	  8776	  8778	  8790
TYIBSP	  8744	  8752	  8760#
TYIC	  8717	  8721#	  8756	  8762
TYICC	  8738	  8747	  8748	  8779#
TYICCP	  8750	  8777#
TYICZ	  8741	  8772#
TYID	  8724#	  8826	  8834
TYIEAT	  5768	  6453	  8690	  8799#	  9019	  9434
TYIET2	  8805	  8846#
TYIET3	  8825	  8833	  8837	  8838	  8839	  8840	  8841	  8845#
TYIL	  8803#	  8815	  8821	  8824	  8827	  8835
TYIOS1	 10357#	 10363	 10369
TYIOS2	 10355	 10359#
TYIPAL	  8742	  8765#
TYIPDP	  8734	  8737	  8738#
TYIRPT	  8709#	  8758
TYITAB	  8743	  8751	  8754#
TYMTC	  6630	  6631	  6632	  6633	  6634	  6635	  6636	  6637	  6638	  6639	  6640	  6641	  6658	  6708#
TYMTC1	  6709#	  6803
TYMTC2	  6724	  6737#
TYO	  5413	  5821	  5845	  5886	  5907	  8871#	  8910	  8918
TYO1	  8873	  8878#
TYO2	  8882	  8886#
TYO3	  8894	  8899#
TYOW	  8885	  8903#	  8922
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

TYOW1	  8908	  8912#
TYOW2	  8876	  8913#
TYOW3	  8912	  8916#
TYOW4	  8917#
TYP.00	  1439#
TYPANS	   670#	  1390	  1441#	 10185
TYPAUX	   688#	  1447#
TYPAXC	   739#	  1465#	  7396
TYPBIN	   781#	  1489#	  3948
TYPBKO	   775#	  1486#	  3980
TYPBOC	   778#	  1488#
TYPBRK	   808#	  1501#
TYPCLP	   769#	  1263	  1483#
TYPCLR	   772#	  1400	  1485#
TYPEAD	   814#	  1503#
TYPECF	   754#	  1474#	  3725
TYPECN	   751#	  1472#	  3722
TYPEDC	   703#	  1452#
TYPETM	   724#	  1459#
TYPGOB	   697#	  1450#	  3710
TYPGRN	   709#	  1454#	  4132
TYPHNG	   721#	  1458#	  3730
TYPHSI	   766#	  1269	  1481#
TYPIHR	   796#	  1496#
TYPINB	   784#	  1491#
TYPINE	   787#	  1492#
TYPINT	   790#	  1493#
TYPIRQ	   793#	  1494#	  4049
TYPKAF	   820#	  1505#
TYPLAD	   817#	  1504#
TYPLDC	   706#	  1453#
TYPLOG	   685#	  1446#
TYPLOS	   730#	  1461#
TYPLTM	   727#	  1460#
TYPNEG	   805#	  1500#	  1765
TYPNOP	   691#	  1448#	  3793
TYPNSP	   682#	  1396	  1445#
TYPOHR	   802#	  1499#
TYPORG	   718#	  1457#	  4134
TYPORQ	   799#	  1497#	  4044
TYPOUP	   694#	  1449#	  3774
TYPPSR	   811#	  1502#
TYPRAK	   679#	  1261	  1394	  1444#
TYPRED	   712#	  1455#	  3705
TYPRES	   676#	  1393	  1443#
TYPSAD	   748#	  1470#	 10225
TYPSHT	   673#	  1391	  1442#	 10182
TYPSUP	   733#	  1462#	  7383
TYPSUR	   736#	  1397	  1464#
TYPTCP	   760#	  1478#	  3715
TYPTCR	   763#	  1480#
TYPTCS	   757#	  1476#	  3687
TYPTRN	  1381	  1438#	  1509
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

TYPTSP	   742#	  1467#
TYPTSR	   745#	  1399	  1469#
TYPYEL	   715#	  1456#	  4127
TYPZAP	   700#	  1451#	  3847
U	   202	   203	   204	   205	   206	   207	   208	   209	   210	   211	   212	   213	   214	   215
	   216	   217	   218	   219	   220	   221	   222	   232	   233	   234	   235	   236	   237	   238
	   239	   240	   241	   242	   243	   244	   245	   246	   247	   248	   249	   250	   251	   252
	   304	   305	   306	   307	   308	   309	   310	   311	   312	   313	   314	   315	   316	   317
	   318	   319	   320	   321	   322	   323	   324	   325	   326	   520	   522	   523	   525	   526
	   527	   528	   529	   530	   532	   534	   536	   537	   539	   540	   541	   542	   543	   544
	   545	   547	   548	   549	   550	   551	   552	   553	   554	   555	   556	   558	   559	   560
	   561	   562	   563	  1372	  1373	  1375	  1376	  1402	  1512	  1519	  1526	  1533	  1534	  1539
	  1541	  1546	  1551	  1557	  1562	  1566	  1569	  1570	  1574	  1575	  1579	  1586	  1593	  1595
	  1608	  1609	  1615	  1619	  1624	  1641	  1648	  1656	  1695	  1698	  1712	  1716	  1725	  1726
	  1731	  1741	  1743	  1744	  1748	  1751	  1827	  1828	  1870	  1872	  1873	  1881	  1886	  1891
	  1893	  1894	  1895	  1899	  1901	  1904	  1905	  1907	  1909	  1911	  1924	  1942	  1958	  2019
	  2020	  2024	  2027	  2028	  2030	  2037	  2040	  2045	  2046	  2047	  2048	  2049	  2050	  2051
	  2052	  2053	  2059	  2070	  2071	  2079	  2083	  2087	  2098	  2102	  2109	  2116	  2117	  2119
	  2120	  2121	  2123	  2125	  2134	  2135	  2146	  2148	  2152	  2153	  2157	  2160	  2238	  2269
	  2270	  2283	  2284	  2285	  2293	  2294	  2302	  2317	  2323	  2325	  2332	  2333	  2334	  2345
	  2346	  2355	  2358	  2401	  2406	  2408	  2411	  2412	  2422	  2426	  2430	  2435	  2439	  2440
	  2446	  2447	  2453	  2454	  2458	  2476	  2479	  2480	  2484	  2485	  2486	  2495	  2505	  2506
	  2519	  2520	  2521	  2529	  2530	  2539	  2540	  2557	  2558	  2559	  2616	  2625	  2630	  2642
	  2658	  2665	  2669	  2672	  2674	  2698	  2700	  2701	  2703	  2705	  2707	  2709	  2710	  2711
	  2714	  2717	  2718	  2721	  2724	  2725	  2730	  2738	  2745	  2756	  2767	  2778	  2781	  2783
	  2784	  2790	  2791	  2794	  2795	  2796	  2797	  2798	  2799	  2811	  2817	  2820	  2822	  2843
	  2855	  2864	  2868	  2875	  2876	  2886	  2892	  2948	  2951	  2953	  2954	  2957	  2958	  2968
	  2971	  2982	  2995	  2998	  3009	  3012	  3020	  3032	  3037	  3046	  3056	  3061	  3090	  3091
	  3163	  3166	  3175	  3176	  3181	  3187	  3194	  3212	  3233	  3235	  3239	  3242	  3244	  3260
	  3270	  3271	  3295	  3297	  3299	  3311	  3320	  3322	  3329	  3334	  3336	  3338	  3343	  3344
	  3351	  3358	  3360	  3362	  3372	  3374	  3375	  3390	  3393	  3405	  3407	  3409	  3421	  3426
	  3430	  3433	  3447	  3450	  3452	  3455	  3462	  3472	  3479	  3492	  3537	  3538	  3540	  3542
	  3546	  3547	  3549	  3551	  3553	  3561	  3565	  3566	  3684	  3694	  3700	  3723	  3748	  3749
	  3768	  3773	  3779	  3787	  3792	  3800	  3801	  3803	  3809	  3810	  3814	  3825	  3826	  3836
	  3838	  3841	  3844	  3845	  3846	  3856	  3867	  3868	  3876	  3878	  3881	  3884	  3885	  3886
	  3912	  3913	  3914	  3915	  3916	  3918	  3919	  3920	  3935	  3959	  3962	  3978	  4043	  4056
	  4060	  4063	  4066	  4069	  4074	  4075	  4077	  4083	  4087	  4090	  4093	  4096	  4102	  4111
	  4112	  4124	  4126	  4136	  4143	  4148	  4150	  4160	  4163	  4167	  4170	  4185	  4190	  4231
	  4235	  4246	  4247	  4261	  4271	  4275	  4279	  4284	  4288	  4293	  4304	  4310	  4318	  4323
	  4331	  4336	  4342	  4347	  4403	  4409	  4416	  4417	  4424	  4440	  4446	  4460	  4461	  4470
	  4471	  4489	  4498	  4511	  4514	  4516	  4519	  4525	  4536	  4538	  4558	  4580	  4598	  4634
	  4645	  4658	  4668	  4682	  4708	  4809	  4875	  4876	  4877	  4878	  4886	  4895	  4906	  4908
	  4909	  4917	  4924	  4927	  4929	  4936	  4938	  4940	  4942	  4968	  4976	  4985	  4995	  4996
	  5017	  5026	  5029	  5079	  5093	  5096	  5099	  5102	  5113	  5237	  5239	  5241	  5242	  5243
	  5244	  5245	  5246	  5247	  5248	  5249	  5250	  5251	  5252	  5254	  5255	  5257	  5263	  5265
	  5266	  5267	  5268	  5269	  5274	  5276	  5280	  5281	  5305	  5311	  5320	  5321	  5343	  5347
	  5368	  5383	  5393	  5394	  5405	  5406	  5422	  5427	  5428	  5453	  5519	  5521	  5532	  5538
	  5540	  5541	  5543	  5559	  5560	  5599	  5626	  5627	  5628	  5632	  5711	  5712	  5720	  5732
	  5747	  5750	  5756	  5764	  5825	  5852	  5856	  5857	  5861	  5863	  5868	  5869	  5873	  5874
	  5875	  5895	  5923	  5930	  5952	  5957	  5962	  5964	  5969	  5970	  5971	  5972	  6044	  6072
	  6077	  6078	  6079	  6080	  6082	  6084	  6085	  6092	  6104	  6109	  6110	  6113	  6124	  6128
	  6164	  6176	  6181	  6183	  6190	  6196	  6197	  6199	  6218	  6222	  6237	  6239	  6248	  6250
	  6252	  6253	  6254	  6264	  6265	  6268	  6269	  6290	  6293	  6299	  6302	  6320	  6330	  6331
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

	  6332	  6363	  6364	  6365	  6371	  6372	  6386	  6389	  6390	  6391	  6394	  6398	  6399	  6401	  6403
	  6404	  6435	  6436	  6449	  6462	  6561	  6562	  6564	  6566	  6573	  6580	  6601	  6607	  6609
	  6614	  6615	  6622	  6735	  6740	  6744	  6781	  6785	  6786	  6791	  6858	  6859	  6861	  6867
	  6889	  6901	  6904	  6906	  6926	  6948	  6949	  6973	  6974	  6985	  7002	  7003	  7008	  7039
	  7043	  7045	  7047	  7091	  7093	  7095	  7146	  7148	  7177	  7179	  7186	  7196	  7197	  7205
	  7209	  7214	  7215	  7218	  7219	  7220	  7222	  7235	  7289	  7299	  7304	  7334	  7336	  7339
	  7340	  7341	  7342	  7348	  7349	  7351	  7353	  7355	  7356	  7465	  7466	  7468	  7471	  7474
	  7475	  7590	  7593	  7594	  7608	  7628	  7629	  7645	  7646	  7657	  7658	  7689	  7694	  7695
	  7725	  7727	  7745	  7750	  7753	  7766	  7769	  7772	  7778	  7787	  7796	  7802	  7806	  7829
	  7833	  7855	  7901	  7951	  7957	  7961	  7965	  8012	  8043	  8044	  8080	  8081	  8125	  8132
	  8138	  8140	  8146	  8148	  8151	  8159	  8161	  8174	  8177	  8178	  8189	  8201	  8203	  8208
	  8558	  8560	  8565	  8566	  8567	  8568	  8572	  8637	  8638	  8645	  8648	  8651	  8663	  8665
	  8668	  8673	  8676	  8679	  8686	  8691	  8692	  8695	  8698	  8699	  8700	  8702	  8716	  8718
	  8721	  8724	  8727	  8755	  8761	  8765	  8768	  8772	  8777	  8779	  8789	  8795	  8799	  8803
	  8804	  8806	  8809	  8810	  8811	  8813	  8831	  8832	  8845	  8847	  8850	  8878	  8879	  8883
	  8887	  8888	  8893	  8896	  8897	  8898	  8900	  8901	  8912	  8915	  8917	  8918	  8926	  8927
	  8936	  8941	  8942	  8976	  8982	  8983	  8995	  8996	  9003	  9016	  9017	  9024	  9025	  9032
	  9041	  9045	  9046	  9047	  9060	  9064	  9081	  9082	  9084	  9085	  9095	  9100	  9102	  9103
	  9104	  9105	  9106	  9110	  9112	  9115	  9119	  9128	  9138	  9140	  9141	  9143	  9153	  9169
	  9173	  9177	  9212	  9216	  9217	  9225	  9229	  9230	  9242	  9250	  9257	  9258	  9271	  9274
	  9281	  9295	  9309	  9320	  9341	  9386	  9391	  9396	  9409	  9410	  9415	  9423	  9426	  9430
	  9431	  9432	  9435	  9447	  9451	  9462	  9480	  9483	  9504	  9528	  9529	  9531	  9537	  9538
	  9806	  9818	  9819	  9820	  9823	  9824	  9827	  9866	  9876	  9883	  9886	  9891	  9897	  9920
	  9921	  9927	  9933	  9934	  9942	  9944	  9945	  9981	  9982	  9983	  9993	  9996	 10157	 10158
	 10159	 10163	 10204	 10205	 10207	 10264	 10265	 10270	 10333	 10335	 10341	 10347	 10348	 10375
	 10400	 10405	 10407	 10409	 10417	 10421	 10422	 10436	 10440	 10442	 10447	 10466	 10467	 10469
	 10487	 10593	 10594	 10600	 10619	 10620	 10655	 10660	 10705	 10752	 10754	 10755	 10757	 10761
	 10765	 10870	 10873	 10874	 10882	 10885	 10894	 10897	 10898	 10912	 10924	 10925	 10937	 10938
	 10939	 10941	 10942	 10984	 10985	 10986	 10996	 11033	 11040	 11041	 11047	 11048	 11050	 11062
	 11063	 11065	 11066	 11072	 11073	 11075	 11076	 11079	 11080	 11081	 11089	 11095	 11096	 11098
	 11100	 11102	 11118	 11124	 11125	 11129	 11200	 11201	 11204	 11205	 11206	 11207	 11208	 11211
	 11221	 11222	 11227	 11239	 11250	 11326	 11333
UPARPT	  2688	  2689	  4724#
UPASC	  4724	  4725#
UPDKEY	  1091#
UPOPJ	  3243	  3260#	  9540
UPSHUT	  1302	  1306	 10186	 11409#
UPTIME	    85%	  1099%	  1099	  1221
USRWAK	  2250	  2267	  2344	  4278	  4905	  4968#
USRWK1	  4969	  4975	  4977	  4994#
UUOLDB	  5637	  5758	  6443	  7183	  8927	  9021	  9042	  9045#	  9413	 10775
VTFLP	  2442	  4670	  4739#
W	  1299	  2977	  3002	  3025	  3068	  3079	  3635	  3652	  3759	  3760	  4520	  4521	  4526	  4527
	  4542	  4543	  4590	  4591	  4607	  4608	  4699	  4700	  5467	  5741	  5742	  5882	  5883	  5884
	  5889	  5891	  5892	  5904	  5905	  5906	  5912	  5914	  5920	  5934	  5935	  5938	  6431	  6437
	  7100	  7592	  7600	  7618	  7636	  7708	  9188	  9190
WATLIN	  3055#	  3313	  3353	  3539	  3676	  3811	  4138	  4164	  4236	  4280
WRDOT2	  3652#	  4036	 10234
WRDOUT	  1307	  1782	  3635#	  3697	  3743	  3852	  7391
WRP3N4	   864#	  7387
WRPCH2	   863#	  3690
WRPCHR	   862#	  1280	  1780	  3688	  3717	  7404
WRPLIN	   861#	  1278	  3696	  3742	  3849	  4003	  7385	  7398
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

WSCHED	   100%	  5404	  7571	  8058	 10004
WSYNC	    84%	  9201	  9904
WSYNC1	  9195	  9202#
WSYNC2	  9197	  9201#
WSYNCS	  9013	  9174	  9182#
WTCHK	  3312	  4137	  4143#	  4162
XA	   616
XMTWAK	  1753	  3038	  3057	  4101	  4115	  4954	  5099#
XMTWK1	  5106	  5115#
XPNOUT	  5414	  5425#	  5822	  5846
XXCBLK	 10289	 10321#
XXCDDB	 10283	 10319#
XXCSER	 10287	 10320#
XXNBLK	 10293	 10324#
XXNDDB	 10284	 10322#
XXNSER	 10291	 10323#
XXPBLK	 10297	 10327#
XXPDDB	 10285	 10325#
XXPSER	 10295	 10326#
XXQ	  4786#	  4786	  4794	  4794#	  4795
XXXQ	  4754#	  4754	  4755#	  4755	  4756#	  4756	  4759#	  4759	  4760#	  4760	  4761#	  4761	  4764#	  4764
	  4765#	  4765	  4766#	  4766	  4769#	  4769	  4770#	  4770	  4771#	  4771
XXXR	  4754#	  4754	  4755#	  4755	  4756	  4756#	  4757	  4759#	  4759	  4760#	  4760	  4761	  4761#	  4762
	  4764#	  4764	  4765#	  4765	  4766#	  4766	  4769#	  4769	  4770#	  4770	  4771	  4771#	  4772
YELLOW	  1456	  1598#
YELLW1	  1610	  1612	  1617#
YLBUG	    70#	  1599
ZAPAL1	  7652#	  7656	  7658	  7661
ZAPALL	  7641	  7650#
ZAPAUX	  1910	  1915	  7205#
ZAPBG0	  1625	  3907#
ZAPBG1	  3921#
ZAPBUG	  1549	  1884	  3906#	  7302
ZAPCIR	  7641#
ZAPDFR	  1567	  1622#
ZAPLOG	  1553	  1623#	  7306
ZAPLPT	  1624	 11489#
ZBGBIT	  3896#
ZBGBUG	  3890#	  3908
ZBGBYT	  3897#
ZBGDCH	  3893#
ZBGDCX	  3899#
ZBGDDB	  3894#
ZBGLIN	  3892#
ZBGLOG	  3900#
ZBGMOD	  3898#
ZBGOUT	  3895#
ZBGPC	  3891#
ZRPCNT	  7200	 11437#
ZZ	  5318#	  5318	  5329#	  5329	  5334#	  5334	  5372#	  5372	  5399#	  5399	  5408#	  5408	  5448#	  5448
	  5458#	  5458	  5461#	  5461	  5466#	  5466	  5723#	  5723	  5813#	  5813	  5830#	  5830	  5843#	  5843
	  5882#	  5882	  5884#	  5884	  5892#	  5892	  5902#	  5902	  5904#	  5904	  5906#	  5906	  5919#	  5919
	  5920#	  5920	  5932#	  5932	  5934#	  5934	  5938#	  5938	  5948#	  5948	  5977#	  5977	  5980#	  5980
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

	  6010#	  6010	  6057#	  6057	  6074#	  6074	  6120#	  6120	  6132#	  6132	  6158#	  6158	  6337#	  6337	  6340#
	  6340	  6431#	  6431	  6437#	  6437	  6551#	  6551	  6552#	  6552	  6555#	  6555	  6568#	  6568	  6575#
	  6575	  6579#	  6579	  6828#	  6828	  6837#	  6837	  6848#	  6848	  6864#	  6864	  6873#	  6873	  6880#
	  6880	  6883#	  6883	  6924#	  6924	  6930#	  6930	  6943#	  6943	  6965#	  6965	  6969#	  6969	  6978#
	  6978	  6986#	  6986	  7013#	  7013	  7053#	  7053	  7059#	  7059	  7070#	  7070	  7100#	  7100	  7182#
	  7182	  7489#	  7489	  7592#	  7592	  7600#	  7600	  7618#	  7618	  7632#	  7632	  7635#	  7635	  7636#
	  7636	  7679#	  7679	  7699#	  7699	  7701#	  7701	  7708#	  7708	  7879#	  7879	  7935#	  7935	  7972#
	  7972	  7983#	  7983	  7987#	  7987	  9988#	  9988	  9994#	  9994	 10547#	 10547	 10548#	 10548	 10608#
	 10608	 10741#	 10741
ZZ0	 10809#	 10813	 10814	 10814#	 10815	 10815#	 11012#	 11016	 11017	 11017#	 11018	 11018#
ZZ1	  5318#	  5318	  5329#	  5329	  5334#	  5334	  5372#	  5372	  5399#	  5399	  5408#	  5408	  5448#	  5448
	  5458#	  5458	  5461#	  5461	  5466#	  5466	  5723#	  5723	  5813#	  5813	  5830#	  5830	  5843#	  5843
	  5882#	  5882	  5884#	  5884	  5892#	  5892	  5902#	  5902	  5904#	  5904	  5906#	  5906	  5919#	  5919
	  5920#	  5920	  5932#	  5932	  5934#	  5934	  5938#	  5938	  5948#	  5948	  5977#	  5977	  5980#	  5980
	  6010#	  6010	  6057#	  6057	  6074#	  6074	  6120#	  6120	  6132#	  6132	  6158#	  6158	  6337#	  6337
	  6340#	  6340	  6431#	  6431	  6437#	  6437	  6551#	  6551	  6552#	  6552	  6555#	  6555	  6568#	  6568
	  6575#	  6575	  6579#	  6579	  6828#	  6828	  6837#	  6837	  6848#	  6848	  6864#	  6864	  6873#	  6873
	  6880#	  6880	  6883#	  6883	  6924#	  6924	  6930#	  6930	  6943#	  6943	  6965#	  6965	  6969#	  6969
	  6978#	  6978	  6986#	  6986	  7013#	  7013	  7053#	  7053	  7059#	  7059	  7070#	  7070	  7100#	  7100
	  7182#	  7182	  7489#	  7489	  7592#	  7592	  7600#	  7600	  7618#	  7618	  7632#	  7632	  7635#	  7635
	  7636#	  7636	  7679#	  7679	  7699#	  7699	  7701#	  7701	  7708#	  7708	  7879#	  7879	  7935#	  7935
	  7972#	  7972	  7983#	  7983	  7987#	  7987	  9988#	  9988	  9994#	  9994	 10547#	 10547	 10548#	 10548
	 10608#	 10608	 10741#	 10741
ZZBIT	   569#	   577	   577#	   578	   578#	   579	   579#	   580	   580#	   581	   581#	   582	   582#	   583
	   583#	   584	   584#	   585	   585#	   586	   586#	   587	   587#	   588	   588#
ZZN	   145#	   150	   150#	   151	   187#	   190	   190#	   295#	   304	   305	   305#	   306	   306#	   307
	   307#	   308	   308#	   309	   309#	   310	   310#	   311	   311#	   312	   312#	   313	   313#	   314
	   314#	   315	   315#	   316	   316#	   317	   317#	   318	   318#	   319	   319#	   320	   320#	   321
	   321#	   322	   322#	   323	   323#	   324	   324#	   325	   325#	   326	   326#	   327	   327#	   509#
	   513	   513#	  2130#	  2134	  2135	  2135#	  2136	  2136#	  6395#	  6398	  6399	  6399#	  6400	  6400#
	  7343#	  7348	  7349	  7349#	  7350	  7350#
ZZPOS	   196#	   202	   202#	   203	   203#	   204	   204#	   205	   205#	   206	   206#	   207	   207#	   208
	   208#	   209	   209#	   210	   210#	   211	   211#	   212	   212#	   213	   213#	   214	   214#	   215
	   215#	   216	   216#	   217	   217#	   218	   218#	   219	   219#	   220	   220#	   221	   221#	   222
	   222#	   226#	   232	   232#	   233	   233#	   234	   234#	   235	   235#	   236	   236#	   237	   237#
	   238	   238#	   239	   239#	   240	   240#	   241	   241#	   242	   242#	   243	   243#	   244	   244#
	   245	   245#	   246	   246#	   247	   247#	   248	   248#	   249	   249#	   250	   250#	   251	   251#
	   252	   252#
ZZWORD	   195#	   202	   203	   204	   205	   206	   207	   208	   209	   210	   211	   212	   213	   214
	   215	   216	   217	   218	   219	   220	   221	   222	   222#	   225#	   232	   233	   234	   235
	   236	   237	   238	   239	   240	   241	   242	   243	   244	   245	   246	   247	   248	   249
	   250	   251	   252	   252#	   259	   568#	   577	   578	   579	   580	   581	   582	   583	   583#
	   584	   585	   586	   587	   588
%CHBRK	  5330	  6051	  8716#	  8722	  8757
%CHRMX	    60#	  3001	  3178
%FRAUX	  6995#	  7005
%FRBIG	  6996#	  7016
%FRBRK	  6998#	  7071
%FRCMD	  6997#	  7010
%FRFUL	  7000#
%FRNBK	  6999#	  7079
%FROK	  6994#	  7084
%MS0	  9602	  9603	  9604	  9605	  9606
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Symbol cross reference

%MS1	  9607
%PBTIM	    66#	  3258	  3391
..	  4935#	  6541#	  6541	  6548	  9610#	  9610	  9615	 11481#	 11482	 11483	 11484
.ARATT	 10570
.ARDET	 10553
.ARHNG	  5496
.ASIDL	  7110#
.ASLOG	  7117#	  7261
.ASRQ1	  7111#	  7237	  7284
.ASRQ2	  7113#
.ASWPT	  7118#	  7308	  7314
.ASWR1	  7112#
.ASWR2	  7116#
.ASWTP	  7119#
.CPDWD	  9546%	  9546
.CPTIA	  9342	 11197%	 11197
.CPTOA	  9304%	  9304	  9518%	  9518	  9522%	  9522	 11199%	 11199
.DTCTO	  9728
.DTESP	  9770
.DTRSW	  9776
.PVHCN	  5570
.RTMCO	 10531#
.RTMCU	 10530#
.RTMSV	 10529#
.RTMUS	 10532#
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Macro/Opdef cross reference

ADJBP	  9666
CHRATR	   872#	   887	   888	   889	   890	   893	   894	   895	   896	   897	   898	   899	   900	   901
	   902	   903	   904	   905	   906	   909	   910	   911	   912	   915	   916	   917	   918	   919
	   920	   921	   922	   923	   924	   929	   930	   931	   932	   933	   934	   935	   936	   937
	   938	   939	   940	   941	   942	   943	   944	   947	   948	   949	   950	   951	   952	   953
	   954	   955	   956	   959	   960	   961	   962	   963	   964	   965	   970	   971	   972	   973
	   974	   975	   976	   977	   978	   979	   980	   981	   982	   983	   984	   985	   986	   987
	   988	   989	   990	   991	   992	   993	   994	   995	   998	   999	  1000	  1001	  1002	  1003
	  1008	  1009	  1010	  1011	  1012	  1013	  1014	  1015	  1016	  1017	  1018	  1019	  1020	  1021
	  1022	  1023	  1024	  1025	  1026	  1027	  1028	  1029	  1030	  1031	  1032	  1033	  1036	  1037
	  1038	  1039	  1040
CSHREF	  4979	  4987
CSHUNL	  3943
CSHVAL	  3973
FILLP	  4742#	  4754	  4755	  4756	  4759	  4760	  4761	  4764	  4765	  4766	  4769	  4770	  4771
GENFL	  4776#	  4786
GTLNK	 11481
IFCPU	  1256	  1323	  1337	  1758	  3936	  3947	  3966	  4031	  4830	  4973	  7453	  7454	  7947	  7988
	  8050	  8089	  8183	  8497	  9466	  9467	  9468	  9625	  9664	  9669	  9686	  9696	  9721	 11279
IFKMC	   823	  1271	  1285	  1310	  1319	  1349	  1935	  4011	  4847	  7544	  7881	  7992	  8224	  8271
	  8284	  8532	  8582	 11243	 11371
IFNCPU	  1754	  4026	  8065	  8092	  8514	  9635
IFNKMC	   835	  1304	  4024	  7470	  7560	  7877	  7985	  8516	  8576
LMOD	  2897#	  2899	  2900	  2901	  2902	  2903	  2904	  2905	  2906	  2907	  2908	  2909	  2910	  2911
	  2912	  2913	  2914	  2915	  2916	  2917	  2918	  2919	  2920	  2921	  2922	  2923	  2924	  2925
	  2926	  2927	  2928	  2929	  2930
ND	  4831
NOCHAR	  5307	  5386	  5447	  5814	  5831	  5841	  5881	  5901	  5929	  6024	  6033	  6043	  6064	  6108
	  6938	  6947	  6958	  7861	  7964	  8049
OUTBIT	   268#	   304	  3102	  3127
PFALL	  2066	  2349	  2961	  3003	  3596	  3731	  3753	  4411	  5550	  6202	  7085	  7316	  7325	  7791
	  8105	  8192	  9042	  9246	  9533	  9549	 10272	 10337	 10709
PJRST	  1172	  1435	  1527	  1627	  1657	  1700	  1707	  1753	  1833	  1910	  1915	  2175	  2181	  2187
	  2364	  2443	  2450	  2462	  2471	  2675	  2685	  2699	  2727	  2858	  2879	  2991	  3305	  3315
	  3324	  3331	  4036	  5118	  5258	  5340	  5462	  5835	  5877	  5910	  6184	  6229	  6230	  6426
	  6843	  6854	  6891	  6897	  6909	  6915	  7032	  7183	  7191	  7226	  7228	  7295	  7424	  7442
	  7445	  7770	  7779	  7797	  7852	  7940	  7975	  8141	  8149	  8272	  8561	  8621	  8683	  8921
	  8964	  9021	  9035	  9092	  9096	  9316	  9404	  9433	  9438	  9452	  9476	  9813	  9832	 10349
	 10501	 10775	 10878
PJUMPE	  1668	  1685	  1732
PRINTF	  1404	  1565	  5672	  6725	  6816	  9563	  9694
PXCT	  5318	  5329	  5334	  5372	  5399	  5408	  5448	  5458	  5461	  5466	  5723	  5813	  5830	  5843
	  5882	  5884	  5892	  5902	  5904	  5906	  5919	  5920	  5932	  5934	  5938	  5948	  5977	  5980
	  6010	  6057	  6074	  6120	  6132	  6158	  6337	  6340	  6431	  6437	  6551	  6552	  6555	  6568
	  6575	  6579	  6828	  6837	  6848	  6864	  6873	  6880	  6883	  6924	  6930	  6943	  6965	  6969
	  6978	  6986	  7013	  7053	  7059	  7070	  7100	  7182	  7489	  7592	  7600	  7618	  7632	  7635
	  7636	  7679	  7699	  7701	  7708	  7879	  7935	  7972	  7983	  7987	  9988	  9994	 10547	 10548
	 10608	 10741
PXGEN	  5318	  5329	  5334	  5372	  5399	  5408	  5448	  5458	  5461	  5466	  5723	  5813	  5830	  5843
	  5882	  5884	  5892	  5902	  5904	  5906	  5919	  5920	  5932	  5934	  5938	  5948	  5977	  5980
	  6010	  6057	  6074	  6120	  6132	  6158	  6337	  6340	  6431	  6437	  6551	  6552	  6555	  6568
	  6575	  6579	  6828	  6837	  6848	  6864	  6873	  6880	  6883	  6924	  6930	  6943	  6965	  6969
	  6978	  6986	  7013	  7053	  7059	  7070	  7100	  7182	  7489	  7592	  7600	  7618	  7632	  7635
SCNSER - TYMNET VERSION OF SCNSER	MACRO 12.5-46.0 22:44 25-JAN-91
SCNSER.MAC	25-JAN-91 22:40		Macro/Opdef cross reference

	  7636	  7679	  7699	  7701	  7708	  7879	  7935	  7972	  7983	  7987	  9988	  9994	 10547	 10548	 10608
	 10741
RDPI	  9758
RTYMOD	 10528#	 10641
STOPCD	    10	  1104	  1134	  1135	  1380	  1403	  1439	  1462	  1465	  1467	  1470	  1472	  1474	  1476
	  1478	  1481	  1483	  1486	  1489	  1494	  1497	  1505	  1626	  1635	  1666	  1802	  2969	  2996
	  3080	  3190	  3246	  3257	  3278	  3347	  3378	  3395	  3424	  3457	  3461	  3468	  3481	  3494
	  3567	  3636	  3653	  3672	  3851	  3906	  3955	  3963	  4835	  5053	  5072	  5084	  5147	  5159
	  5174	  5179	  5185	  5219	  5691	  6019	  6373	  6376	  6414	  6578	  6710	  6804	  7041	  7432
	  7433	  7435	  7437	  7953	  8088	  8102	  8250	  8256	  8268	  8277	  8494	  8521	  8579	  8796
	  9797	  9846	 10315	 10618	 10691	 10753	 11230	 11238	 11241
SY$DV0	  6542#	  6542	  6544	  6546	  6548	  9611#	  9611	  9613	  9615
SY$DV1	  6542#	  6542	  6544	  6546	  6548	  9611#	  9611	  9613	  9615
SYDVF	  6541	  9610
TC	   188#	   190	   197#	   202	   203	   204	   205	   206	   207	   208	   209	   210	   211	   212
	   213	   214	   215	   216	   217	   218	   219	   220	   221	   222	   227#	   232	   233	   234
	   235	   236	   237	   238	   239	   240	   241	   242	   243	   244	   245	   246	   247	   248
	   249	   250	   251	   252	   510#	   513
TCHARS	   112#	   150	  6630	  6662
TERCH	  2191#	  2193	  2194	  2195	  2196	  2197	  2198	  2199	  2200	  2201	  2202	  2203	  2204	  2205
	  2206	  2207	  2208	  2209	  2210	  2211	  2212	  2213	  2214	  2215	  2216	  2217	  2218	  2219
	  2220	  2221	  2222	  2223	  2224
TERCHR	   161#	   190	   202	   232	   513
TYPI	   843#	  1269	  1765	  3687	  3705	  3710	  3715	  3722	  3725	  3730	  3774	  3793	  3847	  3948
	  3980	  4044	  4049	  4127	  4132	  4134	  7383	  7396	 10182	 10185	 10225
UMOVE	  5466	  5813	  5830	  6132	  6930	  6965
UMOVEM	  6074	  6158	  6337	  6340	  6924	  6943	  7182	  7592	  7600	  7632	  7636	  7708	 10608	 10741
UUIDPB	   841#	  3507	  3759	  4520	  4526	  4542	  4590	  4607	  4699
UUILDB	   840#	  1929	  1952	  3222	  3506
WRPI	  9759	  9769
XCTBU	  5372	  5919	  5980	  6555	  6575	  6579	  6828	  6837	  6848	  6864	  6873	  7699	  7701	  7972
	  7983
XCTFU	  5318	  5329	  5334	  5399	  5408	  5448	  5458	  5461	  5466	  5723	  5813	  5830	  5843	  5882
	  5884	  5902	  5904	  5906	  5932	  5934	  5938	  5948	  6010	  6132	  6431	  6437	  6551	  6552
	  6880	  6930	  6965	  6969	  6978	  6986	  7013	  7053	  7059	  7489	  7679	  7935	  7987	  9988
	  9994	 10547	 10548
XCTTU	  5892	  5920	  5977	  6057	  6074	  6120	  6158	  6337	  6340	  6568	  6883	  6924	  6943	  7070
	  7100	  7182	  7592	  7600	  7618	  7632	  7635	  7636	  7708	  7879	 10608	 10741
Z	   146#	   150	  6629#	  6630	  6631	  6632	  6633	  6634	  6635	  6636	  6637	  6638	  6639	  6640
	  6641	  6642	  6643	  6644	  6645	  6646	  6647	  6648	  6649	  6650	  6651	  6652	  6653	  6654
	  6655	  6656	  6657	  6658	  6659	  6661#	  6662	  6663	  6664	  6665	  6666	  6667	  6668	  6669
	  6670	  6671	  6672	  6673	  6674	  6675	  6676	  6677	  6678	  6679	  6680	  6681	  6682	  6683
	  6684	  6685	  6686	  6687	  6688	  6689	  6690	  6691
ZZZ	   296#	   304	   305	   306	   307	   308	   309	   310	   311	   312	   313	   314	   315	   316
	   317	   318	   319	   320	   321	   322	   323	   324	   325	   326	   570#	   577	   578	   579
	   580	   581	   582	   583	   584	   585	   586	   587	   588	  3101#	  3102	  3103	  3104	  3105
	  3106	  3107	  3108	  3109	  3110	  3111	  3112	  3113	  3114	  3115	  3116	  3117	  3118	  3119
	  3120	  3121	  3122	  3123	  3124	  3126#	  3127	  3128	  3129	  3130	  3131	  3132	  3133	  3134
	  3135	  3136	  3137	  3138	  3139	  3140	  3141	  3142	  3143	  3144	  3145	  3146	  3147	  3148
	  3149
$END	 11515   #