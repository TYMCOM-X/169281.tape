PROCEDURE LINE.ITEM

%---------------------------------------------------------------------------

Name: LINE.ITEM         Author: Mary Winslow            Date: 1/18/82

Purpose:  This procedure uses an I/O screen generated by the Screen
        Generator.  It is intended to be used in conjunction with
        the MAGNUM Maintenance and Implementation class which instructs
        a user in how to use the MAGNUM Screen Generator.  This
        procedure retrieves, updates, and deletes sales order line items
        from the CAMERA demonstration data base.

Input:  SALES.ORD.NO, LINE.NO, PROD.NO, PROD.QTY, TO.SHIP.DATE,
        SHIPPED.FLAG, STATUS.CODE

Output:  The same as those input

Relations Affected:  SO.LINE.ITEM

Relations Referenced:  PRODUCT, SALES.ORDER

-----------------------------------------------------------------------------%

BEGIN % line item %

INCLUDE TEXT "CRT.CONTROLS"
INCLUDE TEXT "SALES.ITEM.LIB"

CONTROLS FOR RELATION 
  CONCURRENT UPDATE

DISPLAY SALES.ITEM
BEGIN % diplay mask %

  APPLY DISP.SALES.ITEM

  ITEM.LOOP:
    BEGIN % loop %

      INPUT FUNCTION.KEY

      CONDITIONAL ON FUNCT.KEY
        BEGIN % conditional %

          FUNCT.T:
            BEGIN % retrieve %
                APPLY PROCESS.SALES.ITEM
                IF EDIT.CANCELED EQ 'Y'
                  THEN
                    BEGIN % cancel edit %
                        LET EDIT.CANCELED = 'N'
                        TYPE TO TERMINAL ERROR.LINE, 'Input Edit cancelled',
                          BELL, HOME
                    END % of cancel edit %
                SELECT SO.LINE.ITEM VIA KEY
                  THEN
                    BEGIN % found the instance %
                        APPLY EXPAND.SALES.ITEM
                        SET.CURSOR PROD.NO OF SALES.ITEM
                        REPEAT ITEM.LOOP
                    END % of found the instance %

                  ELSE
                    BEGIN % not found %
                        TYPE TO TERMINAL ERROR.LINE, 'ERROR: Line Item not ',
                          'found', BELL, HOME
                        REPEAT ITEM.LOOP
                    END % of not found %
            END % of retrieve %

          FUNCT.U:
            BEGIN % update %
                IF SALES.ORD.NO EQ DEFAULT
                  THEN
                    BEGIN % must retrieve instance first %
                        TYPE TO TERMINAL ERROR.LINE,
                          'ERROR: Line item not retrieved', BELL, HOME
                        REPEAT ITEM.LOOP
                    END % of must retrieve instance first %
                SELECT SO.LINE.ITEM VIA KEY
                  THEN
                    BEGIN % find the instance %
                        APPLY PROCESS.SALES.ITEM
                        IF EDIT.CANCELED EQ 'Y'
                          THEN
                            BEGIN % cancel edit %
                                TYPE TO TERMINAL ERROR.LINE,
                                  'INPUT ERROR: Line item update',
                                  ' cancelled', BELL, HOME
                                REPEAT ITEM.LOOP
                            END % of cancel edit %
                          ELSE NOTHING
                        ALTER SO.LINE.ITEM USING
                          (PROD.NO OF SALES.ITEM FOR PROD.NO,
                           PROD.QTY OF SALES.ITEM FOR PROD.QTY,
                           TO.SHIP.DATE OF SALES.ITEM FOR TO.SHIP.DATE,
                           SHIPPED.FLAG OF SALES.ITEM FOR SHIPPED.FLAG,
                           STATUS.CODE OF SALES.ITEM FOR STATUS.CODE)
                        APPLY DEFAULT.SALES.ITEM
                        REPEAT ITEM.LOOP
                    END % of find the instance %
                  ELSE
                    BEGIN % instance not found %
                        TYPE TO TERMINAL ERROR.LINE, 'ERROR: Line item not ',
                          'found', BELL, HOME
                        REPEAT ITEM.LOOP
                    END % of instance not found %
            END % of update %

          FUNCT.D:
            BEGIN % redisplay defaults %
                APPLY DEFAULT.SALES.ITEM
                REPEAT ITEM.LOOP
            END % of redisplay defaults %

          FUNCT.R:
            BEGIN % restore current values %
                APPLY RESTORE.SALES.ITEM
                REPEAT ITEM.LOOP
            END % of restore current values %

          FUNCT.Q: FINISH ITEM.LOOP

        END % of conditional %

      ELSE 
        BEGIN % invalid function key %
            TYPE TO TERMINAL ERROR.LINE, 'ERROR: Invalid function key ',
              'entered', BELL, HOME
            REPEAT ITEM.LOOP
        END % of invalid function key %

    END % of loop %


END % of display mask %

END % of line item %
