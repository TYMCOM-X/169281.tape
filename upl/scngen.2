PROCEDURE CODE.GENERATOR2 (SCREEN.NAME)
BEGIN

  FIELDS
  TAB. AS 'NN',
  HELP.SW AS 'N',
  RESTORE.SW. AS 'N',
  KEY.SW AS 'N',
  LAST.Y SAME AS Y.COR,
  LAST.X SAME AS X.COR,
  LAST.LEN SAME AS FLD.LENGTH,
  CY AS '3N',
  CX AS '3N',
  LINE1 SAME AS LINE.,
  LINE2 SAME AS LINE.,
  CURRENT.CHAR AS 'NN',
  CNT. AS '2N'

  CONTROLS FOR RELATIONS
  CONCURRENT UPDATE

  INCLUDE TEXT "CRT.SETUP"

  FORMAT FLD.NAME 'FLD.',FLD.NO,'.',TRIM(SCREEN.NAME)

  RELATION LINE.FLDS IS
  KEY LINE.NO., CHAR.CNT
  DATA FLD.NO,
       FLD.LENGTH,
       FIELD.TYPE,
       ACTUAL.FLD,
       ACTUAL.QFR,
       REQUIRED.


  MOVE DEFAULT TO Y.COR,X.COR,FLD.LENGTH,FLD.NO,SCREEN.TYPE,SPACE.X,SPACING.,
  STARTING.LINE.NO.,ENDING.LINE.NO.

  TYPE TO TERMINAL SET.PROTECT.MODE.OFF,
       SET.CONV.MODE,@CR,@CR,
       'GENERATING LIBRARY TEXT: ',TRIM(SCREEN.NAME),'.LIB',@CR,@CR,
       'GENERATING FIELD NAMES',@CR


  TYPE '  % TEXT FOR SCREEN: ',TRIM(SCREEN.NAME),'.LIB %',@CR,@CR,
  '  % DEFINITION OF SCREEN FLDS %', @CR, @CR

  SELECT SCREENS VIA KEY THEN
  BEGIN
    MOVE SCREEN.TYPE TO SCREEN.TYPE OF CODE.GENERATOR2
    MOVE SPACE.X TO SPACE.X OF CODE.GENERATOR2
    MOVE STARTING.LINE.NO. TO STARTING.LINE.NO. OF CODE.GENERATOR2
    MOVE ENDING.LINE.NO. TO ENDING.LINE.NO. OF CODE.GENERATOR2
    MOVE POSITION(X.Y.POS,Y.COR) + 31 TO CY
    MOVE POSITION(X.Y.POS,X.COR) + 31 TO CX
    MOVE SPACING. TO SPACING. OF CODE.GENERATOR2
  END

  FOR EACH SCREEN.FLDS VIA SCREEN.NAME
  BEGIN
    IF FIELD.TYPE EQ 'E' THEN
    IF HELP. EQ 'Y' THEN
    LET HELP.SW = 1
    IF FIELD.TYPE NE 'K' AND 'D' THEN
    TYPE 'FIELD ',FLD.NAME, " AS '",FLD.LENGTH AS '2N',"C'",
    '  % ',TRIM(ACTUAL.FLD),'  %', @CR
    IF FIELD.TYPE EQ 'C' OR 'E' OR 'I' THEN
    LET RESTORE.SW. = 1
    IF FIELD.TYPE EQ 'K' THEN
    LET KEY.SW = 1
    IF FIELD.TYPE EQ 'E' OR 'I' THEN
    BEGIN
      ADD FLD.LENGTH TO TOT.FLD.LENGTH
      LET LAST.LEN = FLD.LENGTH
      LET LAST.Y = Y.COR
      LET LAST.X = X.COR
      IF FIELD.TYPE EQ 'E' AND ACTUAL.QFR NE DEFAULT THEN
      TYPE 'FIELD WORK.',FLD.NO,'.',TRIM(SCREEN.NAME),' SAME AS ',
      TRIM(ACTUAL.FLD),@CR
    END
    LET LINE.NO. = POSITION(X.Y.POS,Y.COR)
    LET CHAR.CNT = POSITION(X.Y.POS,X.COR)
    IF FIELD.TYPE EQ 'E' OR 'I' THEN
    SUBTRACT 1 FROM CHAR.CNT
    INSERT INTO LINE.FLDS
  END
  IF SCREEN.TYPE EQ 'INQ' AND SPACE.X NE DEFAULT THEN
  BEGIN
    LET LINE.NO. = STARTING.LINE.NO.
    LET FIELD.TYPE = 'I'
    LET CHAR.CNT = POSITION(X.Y.POS,SPACE.X)
    LET FLD.LENGTH = 1
    INSERT INTO LINE.FLDS
    LET FLD.LENGTH = 0
  END

  IF SCREEN.TYPE EQ 'INQ' THEN
  TYPE 'FIELD CL.',TRIM(SCREEN.NAME)," AS 'NN' % CURRENT LINE INDICATOR %",@CR

  TYPE @CR, '  % Formats to position the cursor to the beginning',
  ' of the field %', @CR,@CR

  FOR EACH SCREEN.FLDS VIA SCREEN.NAME
  IF FIELD.TYPE NE 'K' AND 'D' THEN
  BEGIN
    TYPE 'FORMAT ', FLD.NAME, '.CP ',
    'POSITION.CURSOR, @', (POSITION(X.Y.POS,Y.COR) + 31) AS '3N',
    ', @', (POSITION(X.Y.POS,X.COR) + 31) AS '3N', ' % ', 
    TRIM(ACTUAL.FLD), ' %', @CR
  END


  TYPE @CR, '  % END OF SCREEN FIELD DEFINITIONS %', @CR, @CR


  TYPE TO TERMINAL @CR,'GENERATING SCREEN DISPLAYS AND FORMATS',@CR


  TYPE @CR, '  % Screen displays and formats for SCREEN: ',
  TRIM(SCREEN.NAME), ' %', @CR, @CR

  TYPE 'FORMAT ', TRIM(SCREEN.NAME), '.MASK', @CR,
  'DISABLE.KEYBOARD, SET.PROTECT.MODE.OFF, CLEAR.SCREEN.TO.SPACES,', @CR,
  'SET.WRITE.PROTECT.ON, SET.BLOCK.MODE,', @CR

  LET LINE.NO. = 1
  DO
  GEN.MASK:
  BEGIN
    TYPE 'LINE.ERASE,'
    IF SCREEN.TYPE EQ 'INQ' AND LINE.NO. EQ STARTING.LINE.NO. THEN
    BEGIN
      TYPE 'NEW.LINE,',@CR
      ADD 1 TO LINE.NO.
      FINISH GEN.MASK
    END
    SELECT SCREEN.MASK VIA KEY THEN
    LET LINE1 = LINE.
    ELSE LET LINE1 = DEFAULT

    LET CURRENT.CHAR = 1
    FOR EACH LINE.FLDS VIA LINE.NO.
    BEGIN
      IF CURRENT.CHAR NE CHAR.CNT THEN
      IF SUBSTR(LINE1,CURRENT.CHAR,CHAR.CNT-CURRENT.CHAR) NE ' ' THEN
      BEGIN
        LET LINE2 = SUBSTR(LINE1,CURRENT.CHAR,CHAR.CNT-CURRENT.CHAR)
        LET CNT. = 1
        WHILE SUBSTR(LINE2,CNT.,1) EQ ' ' DO
        ADD 1 TO CNT.
        IF CNT. GT 6 THEN
        TYPE 'POSITION.CURSOR, @',(LINE.NO.+31) AS '3N',', @',
        (CURRENT.CHAR+CNT.+30) AS '3N',', "',SUBSTR(LINE2,CNT.,CHAR.CNT-
        CURRENT.CHAR-CNT.+1),'",'
        ELSE
        TYPE '"',SUBSTR(LINE2,1,CHAR.CNT-CURRENT.CHAR),'",'
      END
      ELSE
      BEGIN
        TYPE 'POSITION.CURSOR, @',(LINE.NO.+31) AS '3N',', @',
        (CHAR.CNT+31) AS '3N',', '
      END

      IF FIELD.TYPE EQ 'E' OR 'I' THEN
      BEGIN
        IF FIELD.TYPE EQ 'E' AND REQUIRED. EQ 'Y' THEN
        BEGIN
          LET LEFT.D = '['
          LET RIGHT.D = ']'
        END
        ELSE
        BEGIN
          LET LEFT.D = '('
          LET RIGHT.D = ')'
        END
        TYPE '"',LEFT.D,'", SET.WRITE.PROTECT.OFF,',@CR,FLD.NAME,
        ', SET.WRITE.PROTECT.ON, "',RIGHT.D,'",'
        LET CURRENT.CHAR = CHAR.CNT + FLD.LENGTH + 2
      END
      ELSE
      BEGIN
        TYPE FLD.NAME,', '
        LET CURRENT.CHAR = CHAR.CNT + FLD.LENGTH
      END
      IF LINE.NO. NOT CHANGING THEN
      TYPE @CR
    END
    %  FOR EACH LINE.FLDS  %

    IF CURRENT.CHAR LE SIZE(LINE1) THEN
    IF SUBSTR(LINE1,CURRENT.CHAR) NE ' ' THEN
    BEGIN
      LET LINE2 = SUBSTR(LINE1,CURRENT.CHAR)
      LET CNT. = 1
      WHILE SUBSTR(LINE2,CNT.,1) EQ ' ' DO
      ADD 1 TO CNT.
      IF CNT. GT 6 THEN
      TYPE 'POSITION.CURSOR, @',(LINE.NO.+31) AS '3N',', @',(CURRENT.CHAR+CNT.+
      30) AS '3N',', "',TRIM(SUBSTR(LINE2,CNT.)),'",'
      ELSE
      TYPE '"',TRIM(LINE2),'",'
      ADD LENGTH(LINE2) TO CURRENT.CHAR
    END
    ADD 1 TO LINE.NO.
    IF CURRENT.CHAR LT 81 THEN
    TYPE 'NEW.LINE,',@CR
    ELSE TYPE @CR
  END
  %  GEN.MASK  %
  WHILE LINE.NO. LT 24

  TYPE 'SET.WRITE.PROTECT.OFF,SET.PROTECT.MODE.ON, @CR,', @CR,
       'POSITION.CURSOR, @',CY,', @',CX,', ENABLE.KEYBOARD',@CR,@CR

  IF RESTORE.SW. EQ 1 THEN
  BEGIN
    TYPE @CR, '  FORMAT ', TRIM(SCREEN.NAME), '.DATA', @CR,
    @TAB TO 6, "DISABLE.KEYBOARD, CLEAR.FG.TO.SPACES, SET.PROTECT.MODE.OFF,",@CR

    LET CNT. = 0
    FOR EACH SCREEN.FLDS VIA SCREEN.NAME
    IF FIELD.TYPE EQ 'C' OR 'E' OR 'I' THEN
    BEGIN
      IF FIELD.TYPE EQ 'C' THEN
      IF CNT. EQ 0 THEN
      BEGIN
        TYPE @TAB TO 6,'SET.WRITE.PROTECT.ON,',@CR
        LET CNT. = 1
      END
      ELSE NOTHING
      ELSE IF CNT. EQ 1 THEN
      BEGIN
        TYPE @TAB TO 6,'SET.WRITE.PROTECT.OFF,',@CR
        LET CNT. = 0
      END
      IF FIELD.TYPE NE 'C' THEN
      TYPE @TAB TO 6, FLD.NAME, '.CP, TRIM(', FLD.NAME, '),',
      '   % ', TRIM(ACTUAL.FLD), ' %', @CR
      ELSE TYPE @TAB TO 6, FLD.NAME, '.CP, ',FLD.NAME, ',',
      '   % ', TRIM(ACTUAL.FLD), ' %', @CR
    END

    IF CNT. EQ 1 THEN
    TYPE @TAB TO 6,'SET.WRITE.PROTECT.OFF,',@CR

    TYPE @TAB TO 6, 'SET.PROTECT.MODE.ON,@CR, POSITION.CURSOR, @',CY,', @',CX,
    ', ENABLE.KEYBOARD'


    TYPE @CR,@CR, '  PROCEDURE DEFAULT.', TRIM(SCREEN.NAME), @CR, '  BEGIN', @CR

    FOR EACH SCREEN.FLDS VIA SCREEN.NAME
    IF FIELD.TYPE EQ 'C' OR 'E' OR 'I' THEN
    IF DEFAULT.EXPRESSION EQ DEFAULT
    THEN
    TYPE '    MOVE DEFAULT TO ', FLD.NAME, '   % ', TRIM(ACTUAL.FLD), ' %', @CR
    ELSE
    TYPE '    MOVE (', TRIM(DEFAULT.EXPRESSION), ') AS ', FLD.NAME, ' TO ', FLD.NAME,
    '   % ', TRIM(ACTUAL.FLD), ' %', @CR

    TYPE @CR, '    TYPE TO TERMINAL ', TRIM(SCREEN.NAME), '.DATA', @CR,
    '  END', @CR, @CR

    TYPE @CR,'  PROCEDURE EXPAND.',TRIM(SCREEN.NAME),@CR,'  BEGIN',@CR
    FOR EACH SCREEN.FLDS VIA SCREEN.NAME
    IF FIELD.TYPE EQ 'C' OR 'E' OR 'I' THEN
    BEGIN
      TYPE '    MOVE ',TRIM(ACTUAL.FLD)
      IF ACTUAL.QFR NE DEFAULT THEN
      TYPE ' OF ',TRIM(ACTUAL.QFR)
      TYPE ' AS ',FLD.NAME,' TO ',FLD.NAME,@CR
    END
    TYPE '    TYPE TO TERMINAL ',TRIM(SCREEN.NAME),'.DATA',@CR,
    '  END',@CR,@CR
  END

  TYPE @CR,'  PROCEDURE DISP.', TRIM(SCREEN.NAME), @CR, '  BEGIN', @CR

  IF SCREEN.TYPE EQ 'INQ' THEN
  TYPE '    MOVE DEFAULT TO CL.',TRIM(SCREEN.NAME),@CR

  FOR EACH SCREEN.FLDS VIA SCREEN.NAME
  IF FIELD.TYPE NE 'K' AND 'D' THEN
  IF DEFAULT.EXPRESSION EQ DEFAULT THEN
  IF FIELD.TYPE EQ 'O' THEN
  BEGIN
    TYPE '    MOVE ',TRIM(ACTUAL.FLD)
    IF ACTUAL.QFR NE DEFAULT THEN
    TYPE ' OF ',TRIM(ACTUAL.QFR)
    TYPE ' AS ',FLD.NAME,' TO ',FLD.NAME,'   % ',TRIM(ACTUAL.FLD),' %',@CR
  END
  ELSE
  TYPE '    MOVE DEFAULT TO ',FLD.NAME,'   % ',TRIM(ACTUAL.FLD),' %',@CR
  ELSE
  TYPE '    MOVE (', TRIM(DEFAULT.EXPRESSION), ') AS ', FLD.NAME, ' TO ', FLD.NAME,
  '   % ', TRIM(ACTUAL.FLD), ' %', @CR

  TYPE @CR, '    TYPE TO TERMINAL ', TRIM(SCREEN.NAME), '.MASK', @CR,@CR,
  '  END', @CR, @CR

  IF (SCREEN.TYPE EQ 'INQ' AND SPACE.X NE DEFAULT) OR (TOT.FLD.LENGTH NE
  DEFAULT) THEN
  BEGIN
    IF TOT.FLD.LENGTH NE DEFAULT THEN
    LET TYPE.RECORD. = 1
    IF SCREEN.TYPE EQ 'INQ' AND KEY.SW EQ 1 AND SPACE.X NE DEFAULT THEN
    IF TYPE.RECORD. EQ 1 THEN
    LET TYPE.RECORD. = 3
    ELSE LET TYPE.RECORD. = 2
  END

  IF SCREEN.TYPE EQ 'INQ' AND STARTING.LINE.NO. NE DEFAULT THEN
  BEGIN
    TYPE '  FORMAT EL.',TRIM(SCREEN.NAME),' SET.PROTECT.MODE.OFF, SET.WRITE.PROTECT.ON,'
    LET LINE.NO. = STARTING.LINE.NO.
    DO
    BEGIN
      TYPE @CR,'        POSITION.CURSOR, @',(LINE.NO.+31) AS '3N',', @032, ',
      'LINE.ERASE,'
      ADD SPACING. TO LINE.NO.
    END
    WHILE LINE.NO. LE ENDING.LINE.NO.
    TYPE '@CR',@CR,@CR,
    '  PROCEDURE WL.',TRIM(SCREEN.NAME),@CR,'  BEGIN',@CR,
    '    %  ROUTINE TO DISPLAY AN INQUIRY DETAIL LINE  %',@CR,@CR,
    '    IF SCREEN.FULL EQ "Y" THEN',@CR,
    '    BEGIN',@CR,
    '      TYPE TO TERMINAL EL.',TRIM(SCREEN.NAME),@CR,
    '      MOVE 0 TO CHAR.CNT',@CR,
    '    END',@CR,
    '    IF CL.',TRIM(SCREEN.NAME),' EQ DEFAULT THEN',@CR,
    '    BEGIN',@CR,
    '      MOVE ',STARTING.LINE.NO.,' TO CL.',TRIM(SCREEN.NAME),@CR,
    '      MOVE "N" TO SCREEN.FULL',@CR,
    '    END',@CR,
    '    ELSE ADD ',SPACING.,' TO CL.',TRIM(SCREEN.NAME),@CR,
    '    CONDITIONAL ON CL.',TRIM(SCREEN.NAME),@CR,
    '    BEGIN',@CR
    MOVE STARTING.LINE.NO. TO LINE.NO.
    WHILE LINE.NO. LE ENDING.LINE.NO. - SPACING. DO
    BEGIN
      TYPE '      ',LINE.NO.,': MOVE @',(LINE.NO.+31) AS '3N',' TO CURRENT.Y',@CR
      ADD SPACING. TO LINE.NO.
    END
    TYPE '      ',LINE.NO.,':',@CR,
    '      BEGIN',@CR,
    '        MOVE @',(LINE.NO.+31) AS '3N',' TO CURRENT.Y',@CR,
    '        MOVE "Y" TO SCREEN.FULL',@CR,
    '        MOVE DEFAULT TO CL.',TRIM(SCREEN.NAME),@CR,
    '      END',@CR,
    '    END',@CR,
    '    ADD 1 TO CHAR.CNT',@CR,
    '    TYPE TO TERMINAL DISABLE.KEYBOARD, SET.PROTECT.MODE.OFF,',@CR,
    '    SET.WRITE.PROTECT.ON, POSITION.CURSOR, CURRENT.Y, @032,',@CR
    LET LINE.NO. = STARTING.LINE.NO.
    LET CURRENT.CHAR = 1
    SELECT SCREEN.MASK VIA KEY THEN
    LET LINE1 = LINE.
    ELSE LET LINE1 = DEFAULT
    FOR EACH LINE.FLDS VIA LINE.NO.
    BEGIN
      IF CURRENT.CHAR NE CHAR.CNT THEN
      IF SUBSTR(LINE1,CURRENT.CHAR,CHAR.CNT-CURRENT.CHAR) NE ' ' THEN
      BEGIN
        LET LINE2 = SUBSTR(LINE1,CURRENT.CHAR,CHAR.CNT-CURRENT.CHAR)
        LET CNT. = 1
        WHILE SUBSTR(LINE2,CNT.,1) EQ ' ' DO
        ADD 1 TO CNT.
        IF CNT. GT 6 THEN
        TYPE '    POSITION.CURSOR, CURRENT.Y, @',(CURRENT.CHAR+CNT.+30) AS
        '3N',', "',SUBSTR(LINE2,CNT.,CHAR.CNT-CURRENT.CHAR-CNT.+1),'",'
        ELSE TYPE '    "',SUBSTR(LINE2,1,CHAR.CNT-CURRENT.CHAR),'",'
      END
      ELSE IF CHAR.CNT - CURRENT.CHAR GT 4 THEN
      TYPE '    POSITION.CURSOR, CURRENT.Y, @',(CHAR.CNT+31) AS '3N',','
      ELSE
      TYPE '    "',(CHAR.CNT-CURRENT.CHAR)*' ','",'
      ELSE TYPE '    '
      IF FIELD.TYPE EQ 'I' THEN
      TYPE 'SET.WRITE.PROTECT.OFF, " ", SET.WRITE.PROTECT.ON,',@CR
      ELSE
      BEGIN
        TYPE TRIM(ACTUAL.FLD)
        IF ACTUAL.QFR NE DEFAULT THEN
        TYPE ' OF ',TRIM(ACTUAL.QFR),',',@CR
        ELSE TYPE ',',@CR
      END
      LET CURRENT.CHAR = CHAR.CNT + FLD.LENGTH
    END
    IF CURRENT.CHAR LE SIZE(LINE1) THEN
    IF SUBSTR(LINE1,CURRENT.CHAR) NE ' ' THEN
    BEGIN
      LET LINE2 = SUBSTR(LINE1,CURRENT.CHAR)
      LET CNT. = 1
      WHILE SUBSTR(LINE2,CNT.,1) EQ ' ' DO
      ADD 1 TO CNT.
      IF CNT. GT 6 THEN
      TYPE '    POSITION.CURSOR, CURRENT.Y, @',(CURRENT.CHAR+CNT.+30) AS '3N',
      ', "',TRIM(SUBSTR(LINE2,CNT.)),'",',@CR
      ELSE TYPE '    "',TRIM(LINE2),'",',@CR
    END
    TYPE '    SET.WRITE.PROTECT.OFF, @CR, ENABLE.KEYBOARD',@CR,
    '    IF SCREEN.FULL EQ "Y" THEN',@CR,
    '    TYPE TO TERMINAL SET.PROTECT.MODE.ON, ERROR.LINE',@CR,
    '  END',@CR
  END

  IF HELP.SW EQ 1 THEN
  BEGIN
    LET CNT. = 0
    TYPE @CR,'  PROCEDURE HELP.',TRIM(SCREEN.NAME),@CR,'  BEGIN',@CR,
    '    MOVE DEFAULT TO HELP.FIELD',@CR,
    '    TYPE TO TERMINAL READ.CURSOR',@CR,
    '    RC.',TRIM(SCREEN.NAME),':',@CR,
    '    FOR EACH CURSOR.READ',@CR,
    '    BEGIN',@CR,
    '      CONDITIONAL ON CURRENT.Y',@CR,
    '      BEGIN',@CR
    FOR EACH LINE.FLDS
    BEGIN
      IF LINE.NO. NE STARTING.LINE.NO. THEN
      IF FIELD.TYPE EQ 'E' THEN
      IF HELP. EQ 'Y' THEN
      BEGIN
        IF CNT. EQ 0 THEN
        BEGIN
          TYPE '        @',(LINE.NO.+31) AS '3N',':',@CR
          LET CNT. = 1
        END
        ELSE TYPE '        ELSE',@CR
        TYPE '        IF CURRENT.X GT @',(CHAR.CNT+31) AS '3N',' AND LE @',
        (CHAR.CNT+FLD.LENGTH+31) AS '3N',' THEN',@CR,
        '        MOVE "',TRIM(ACTUAL.FLD),'" TO HELP.FIELD',@CR
      END
      IF LINE.NO. CHANGING THEN
      LET CNT. = 0
    END
    TYPE '      END',@CR,'      FINISH RC.',TRIM(SCREEN.NAME),@CR,
    '    END',@CR,'    % READ CURSOR %',@CR,'  END',@CR,'  % HELP %',@CR
  END

  TYPE @CR, '  % End of screen display and formats for SCREEN: ',
  TRIM(SCREEN.NAME), ' %', @CR,@CR


  TYPE TO TERMINAL @CR,'GENERATING FIELD VERIFIES',@CR


  IF TYPE.RECORD. NE 0 THEN
  BEGIN
    TYPE @CR,'  SOURCE ',TRIM(SCREEN.NAME),'.REC',' FROM TERMINAL NO ECHO',@CR,
    '  FIXED FORM', @CR
    IF TYPE.RECORD. EQ 2 OR 3 THEN
    ADD 4 TO TOT.FLD.LENGTH
    IF TOT.FLD.LENGTH GT 256 THEN
    TYPE '  LINE.LENGTH ', TOT.FLD.LENGTH, @CR
    TYPE '  INPUT',@CR

    IF TYPE.RECORD. EQ 2 OR 3 THEN
    TYPE '  CONDITIONAL ON TYPE.RECORD.',@CR,'  BEGIN',@CR,
    '    1: CURRENT.Y, CURRENT.X, @CR'
    IF TYPE.RECORD. EQ 3 THEN TYPE ',',@CR,@TAB TO 8
    ELSE IF TYPE.RECORD. EQ 2 THEN TYPE @CR,@TAB TO 5
    ELSE TYPE '  '

    IF TYPE.RECORD. EQ 1 OR 3 THEN
    BEGIN
      MOVE DEFAULT TO CNT.
      FOR EACH LINE.FLDS
      IF FIELD.TYPE EQ 'E' OR 'I' THEN
      SOURCE1:
      BEGIN
        IF TYPE.RECORD. EQ 3 AND LINE.NO. EQ STARTING.LINE.NO. THEN
        IF ENDING.LINE.NO. NE 23 THEN
        BEGIN
          ADD 1 TO CNT.
          TYPE '@TAB CHAR.CNT, '
        END
        ELSE FINISH SOURCE1
        ELSE
        BEGIN
          ADD 1 TO CNT.
          TYPE FLD.NAME,', '
        END
        IF CNT. MOD 2 EQ 0 THEN
        IF TYPE.RECORD. EQ 1 THEN
        TYPE @CR, @TAB TO 3
        ELSE TYPE @CR, @TAB TO 8
      END
      TYPE '@CR',@CR
    END
    IF TYPE.RECORD. EQ 2 OR 3 THEN
    BEGIN
      TYPE @TAB TO 5,'2: '
      LET CNT. = 0
      LET CURRENT.CHAR = 1
      FOR EACH LINE.FLDS VIA LINE.NO.=STARTING.LINE.NO.
      IF FIELD.TYPE EQ 'K' THEN
      BEGIN
        LET TAB. = CHAR.CNT - CURRENT.CHAR
        TYPE '@TAB ',TAB.,', ',TRIM(ACTUAL.FLD),','
        ADD FLD.LENGTH + TAB. TO CURRENT.CHAR
        ADD 1 TO CNT.
        IF CNT. MOD 2 EQ 0 THEN
        TYPE @CR,@TAB TO 8
      END
      TYPE '@CR',@CR,'  END',@CR,@CR
    END

    IF TYPE.RECORD. EQ 2 OR 3 THEN
    TYPE '  FIELD SELECT.',TRIM(SCREEN.NAME)," AS 'C' DEFAULT 'N'",@CR
    TYPE @CR,@CR,'  PROCEDURE PROCESS.',TRIM(SCREEN.NAME),@CR,'  BEGIN',@CR,@CR
    IF TYPE.RECORD. EQ 2 OR 3 THEN
    BEGIN
      TYPE '    MOVE 1 TO TYPE.RECORD.',@CR,'    TYPE TO TERMINAL READ.CURSOR'
      IF TYPE.RECORD. EQ 3 THEN
      TYPE ', DISABLE.KEYBOARD, ',
      'POSITION.CURSOR, @',(POSITION(X.Y.POS,LAST.Y)+31) AS '3N',', @',
      (POSITION(X.Y.POS,LAST.X)+30+LAST.LEN) AS '3N',', SEND.PAGE.FG,',
      ' ENABLE.KEYBOARD',@CR,@CR
      ELSE TYPE @CR
    END
    ELSE
    TYPE '    TYPE TO TERMINAL DISABLE.KEYBOARD, POSITION.CURSOR, @',
    (POSITION(X.Y.POS,LAST.Y) +31)AS '3N',
    ',@',(POSITION(X.Y.POS,LAST.X,1) +30 + LAST.LEN) AS '3N',
    ', SEND.PAGE.FG, ENABLE.KEYBOARD', @CR,@CR
    TYPE '    ', TRIM(SCREEN.NAME),'.READ:',@CR,
    '    FOR EACH ', TRIM(SCREEN.NAME), '.REC', @CR,
    '    ',TRIM(SCREEN.NAME),'.PROC:',@CR,'    BEGIN',@CR
  END

  IF TYPE.RECORD. EQ 2 OR 3 THEN
  BEGIN
    TYPE @TAB TO 7,'IF CURRENT.Y GE @',(STARTING.LINE.NO.+31) AS '3N',
    ' AND LE @',(ENDING.LINE.NO.+31) AS '3N',' THEN',@CR,
    @TAB TO 7,'IF TYPE.RECORD. EQ 1 THEN',@CR,@TAB TO 7,
    'BEGIN',@CR,@TAB TO 9,'LET TYPE.RECORD. = 2',@CR,@TAB TO 9,
    'MOVE "Y" TO SELECT.',TRIM(SCREEN.NAME),@CR,@TAB TO 9,
    'TYPE TO TERMINAL DISABLE.KEYBOARD,',@CR,@TAB TO 9,
    'SET.PROTECT.MODE.OFF,POSITION.CURSOR,CURRENT.Y,@111,',
    @CR,@TAB TO 9,'SEND.LINE.ALL,SET.PROTECT.MODE.ON,ENABLE.KEYBOARD,@CR',@CR,
    @TAB TO 9,'FINISH ',TRIM(SCREEN.NAME),'.PROC',@CR,@TAB TO 7,'END',@CR,
    @TAB TO 7,'ELSE NOTHING',@CR,@TAB TO 7,
    'ELSE MOVE "N" TO SELECT.',TRIM(SCREEN.NAME),@CR

    FOR EACH LINE.FLDS VIA LINE.NO.=STARTING.LINE.NO.
    IF FIELD.TYPE EQ 'K' THEN
    SELECT SCREEN.KEYS VIA KEY THEN
    BEGIN
      TYPE @TAB TO 7,'MOVE ',TRIM(ACTUAL.FLD),' AS ',TRIM(SINK.FLD),' TO ',
      TRIM(SINK.FLD)
      IF SINK.QFR NE DEFAULT THEN
      TYPE ' OF ',TRIM(SINK.QFR),@CR
      ELSE TYPE @CR
    END
    TYPE @TAB TO 7,'TYPE TO TERMINAL POSITION.CURSOR,CURRENT.Y,CURRENT.X',@CR
  END

  IF TYPE.RECORD. EQ 1 OR 3 THEN
  BEGIN
    TYPE @CR,'      % Field verifictaion for SCREEN: ',TRIM(SCREEN.NAME),' %',
    @C,'      MOVE 1 TO FIELD.NO', @CR,
    '      DO', @CR,
    '      BEGIN',@CR,
    '        MOVE "N" TO ERROR.', @CR,
    '        CONDITIONAL ON FIELD.NO', @CR,
    '        BEGIN', @CR


    FOR EACH SCREEN.FLDS VIA SCREEN.NAME
    IF FIELD.TYPE EQ 'E' OR 'I' THEN
    BEGIN
      TYPE @TAB TO 11, FLD.NO, ':',@CR,
      @TAB TO 11,'BEGIN   % ', TRIM(ACTUAL.FLD), ' %', @CR


      IF FIELD.TYPE EQ 'I' THEN
      BEGIN
        TYPE @TAB TO 13,'MOVE ',FLD.NAME,' TO ',TRIM(ACTUAL.FLD)
        IF ACTUAL.QFR NE DEFAULT THEN
        TYPE ' OF ',TRIM(ACTUAL.QFR),@CR
        ELSE
        TYPE @CR
      END
      ELSE
      BEGIN
        IF REQUIRED. EQ 'Y' THEN
        BEGIN
          MOVE '[' TO LEFT.D
          MOVE ']' TO RIGHT.D
        END
        ELSE
        BEGIN
          MOVE '(' TO LEFT.D
          MOVE ')' TO RIGHT.D
        END

        TYPE @TAB TO 13, 'MOVE @', (POSITION(X.Y.POS,Y.COR) + 31) AS '3N',
        ' TO Y.COR', @CR,
        @TAB TO 13, 'MOVE @', (POSITION(X.Y.POS,X.COR) + 31) AS '3N',
        ' TO X.COR', @CR,
        @TAB TO 13, 'MOVE @', (POSITION(X.Y.POS,X.COR) + 30) AS '3N',
        ' TO LEFT.X', @CR,
        @TAB TO 13,'MOVE @',(POSITION(X.Y.POS,X.COR) + 31 + FLD.LENGTH) AS '3N',
        ' TO RIGHT.X', @CR,
        @TAB TO 13, "MOVE '", LEFT.D, "' TO LEFT.D", @CR,
        @TAB TO 13, "MOVE '", RIGHT.D, "' TO RIGHT.D", @CR,
        @TAB TO 13, "MOVE '", REQUIRED., "' TO REQUIRED.", @CR,
        @TAB TO 13, "MOVE ", REQ.ERR.NUM AS '4N', " TO REQ.ERR.NUM", @CR,
        @TAB TO 13, "MOVE ", MIN.LENGTH AS '2N', " TO MIN.LENGTH", @CR,
        @TAB TO 13,"MOVE ",MIN.LEN.ERR.NUM AS '4N'," TO MIN.LEN.ERR.NUM",@CR,
        @TAB TO 13, "MOVE ", VERIFY.ERR.NUM AS '4N', " TO VERIFY.ERR.NUM", @CR,
        @TAB TO 13, "MOVE ", IS.ERR.NUM AS '4N', " TO IS.ERR.NUM", @CR

        SELECT PRE.PROCESS VIA KEY THEN
        BEGIN
          IF PRE.PROCESS.STMT1 NE DEFAULT THEN
          TYPE @CR,@TAB TO 13,TRIM(PRE.PROCESS.STMT1),@CR
          IF PRE.PROCESS.STMT2 NE DEFAULT THEN
          TYPE @TAB TO 13,TRIM(PRE.PROCESS.STMT2),@CR
        END

        TYPE @CR, @TAB TO 13, "APPLY CHK.FLD"

        IF VERIFY.ERR.NUM EQ DEFAULT THEN
        TYPE '.NO.VERIFY'

        IF ACTUAL.QFR NE DEFAULT THEN
        TYPE "(",FLD.NAME,",WORK.",FLD.NO,".",TRIM(SCREEN.NAME),")",@CR,
        @TAB TO 13,"IF ERROR. EQ 'N' THEN",@CR,@TAB TO 13,
        "MOVE WORK.",FLD.NO,".",TRIM(SCREEN.NAME)," TO ",TRIM(ACTUAL.FLD),
        " OF ",TRIM(ACTUAL.QFR),@CR
        ELSE
        TYPE '(',FLD.NAME,',', TRIM(ACTUAL.FLD), ')',@CR

        SELECT LOOKUP VIA KEY
        THEN
        BEGIN

          IF VIA.CLAUSE EQ DEFAULT THEN
          LET VIA.CLAUSE = 'KEY'

          TYPE @CR, @TAB TO 13, "IF ERROR. EQ 'N'", @CR,
          @TAB TO 13, "THEN", @CR,
          @TAB TO 13, "BEGIN", @CR

          IF PRE.SELECT.STMT NE DEFAULT
          THEN
          TYPE @TAB TO 15, TRIM(PRE.SELECT.STMT),@CR

          IF RELATION.NAME NE DEFAULT
          THEN
          BEGIN
            TYPE @TAB TO 15, "SELECT ", TRIM(RELATION.NAME), " VIA "
            IF VIA.CLAUSE EQ 'KEY' THEN
            TYPE 'KEY',@CR
            ELSE TYPE '(',TRIM(VIA.CLAUSE),')',@CR
            TYPE @TAB TO 15, "THEN", @CR,
            @TAB TO 15, "BEGIN", @CR

            IF THEN.STMT EQ DEFAULT AND THEN.ERR.NUM EQ DEFAULT
            THEN
             TYPE @TAB TO 17, "NOTHING", @CR, @TAB TO 15, "END", @CR
            ELSE
            IF THEN.STMT EQ DEFAULT THEN
            TYPE @TAB TO 17, "MOVE 'Y' TO ERROR.", @CR,
            @TAB TO 17, "MOVE ", THEN.ERR.NUM AS '4N', " TO ERR.NUM", @CR,
            @TAB TO 15, "END", @CR
            ELSE
            TYPE @TAB TO 17,TRIM(THEN.STMT), @CR,
            @TAB TO 15, "END", @CR

            TYPE @TAB TO 15, "ELSE", @CR,
            @TAB TO 15, "BEGIN", @CR

            IF ELSE.STMT EQ DEFAULT AND ELSE.ERR.NUM EQ DEFAULT
            THEN
             TYPE @TAB TO 17, "NOTHING", @CR, @TAB TO 15, "END", @CR
            ELSE
            IF ELSE.STMT EQ DEFAULT
            THEN
            TYPE @TAB TO 17, "MOVE 'Y' TO ERROR.", @CR,
            @TAB TO 17, "MOVE ", ELSE.ERR.NUM AS '4N', ' TO ERR.NUM', @CR,
            @TAB TO 15, "END", @CR
            ELSE
            TYPE @TAB TO 17, TRIM(ELSE.STMT), @CR,
            @TAB TO 15, "END", @CR

          END

          TYPE @TAB TO 13, 'END', @CR
        END

        SELECT POST.PROCESS VIA KEY
        THEN
        TYPE @CR, @TAB TO 13, 'IF ERROR. EQ "N"', @CR,
        @TAB TO 13, 'THEN', @CR,
        @TAB TO 13, 'BEGIN', @CR,
        @TAB TO 15, TRIM(POST.PROCESS.STMT), @CR,
        @TAB TO 13, 'END', @CR

        MOVE FLD.NO TO FLD.NO OF CODE.GENERATOR2
      END
      %  EDIT FIELDS  %

      TYPE @TAB TO 11, "END", @CR

    END
    %  FOR EACH  %

    TYPE @CR, @TAB TO 9, 'END', @CR

    TYPE @CR, @TAB TO 9, 'IF ERROR. EQ "Y"', @CR,
    @TAB TO 9, 'THEN', @CR,
    @TAB TO 9, 'BEGIN', @CR,
    @TAB TO 11, 'APPLY FLD.ERROR', @CR,
    @TAB TO 11, 'CONDITIONAL ON FIELD.NO', @CR,
    @TAB TO 11, 'BEGIN', @CR

    FOR EACH SCREEN.FLDS VIA SCREEN.NAME
    IF FIELD.TYPE EQ 'E' THEN
    TYPE @TAB TO 13, FLD.NO, ': MOVE BUF TO ', FLD.NAME, @CR

    TYPE @TAB TO 13, '1000: NOTHING % EDIT TERMINATED %', @CR,
    @TAB TO 11, 'END', @CR, @TAB TO 9, 'END', @CR, 
    @TAB TO 9, 'ELSE', @CR, @TAB TO 9, 'ADD 1 TO FIELD.NO', @CR

    TYPE @CR, @TAB TO 7, "END", @CR,
    @TAB TO 7, "WHILE FIELD.NO LE ", FLD.NO, @CR

    TYPE @CR,@TAB TO 7, '% End of field verify for SCREEN: ', TRIM(SCREEN.NAME),
    ' %', @CR,@CR

  END
  IF TYPE.RECORD. NE 0 THEN
  TYPE '      FINISH ', TRIM(SCREEN.NAME),'.READ',@CR,
  '    END % FOR EACH %', @CR,@CR, '  END', @CR,@CR,
  '  % End of PROCEDURE PROCESS.', TRIM(SCREEN.NAME), ' %', @CR

  SELECT SCREENS VIA KEY THEN
  BEGIN
    LET STATUS. = 'CCODE'
    LET CODE.DATE = TODAY
    ALTER SCREENS
  END

  TYPE TO TERMINAL @CR,'SCREEN GENERATION DONE',@CR,SET.BLOCK.MODE

END
 09ND