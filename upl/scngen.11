PROCEDURE PARSE.LINE(BUFFER,FIELD.RELATION)
BEGIN
  MOVE SUBSTR(X.Y.POS,LINE.NO.,1) TO Y.COR
  MOVE 'N' TO ERROR.
  MOVE 0 TO DELIMITER.SW

  IF LENGTH(BUFFER) EQ 0 THEN
  NOTHING
  ELSE IF POSITION(BUFFER,'@') EQ 0 AND POSITION(BUFFER,'<') EQ 0 AND
  POSITION(BUFFER,'>') EQ 0 AND POSITION(BUFFER,'$') EQ 0 AND
  POSITION(BUFFER,'^') EQ 0 AND POSITION(BUFFER,'SPACING=') EQ 0 AND
  POSITION(BUFFER,'|') EQ 0 THEN
  IF SCREEN.TYPE EQ 'FRM' THEN
  BEGIN
    IF STARTING.LINE.NO. EQ DEFAULT THEN
    LET STARTING.LINE.NO. = LINE.NO.
    LET ENDING.LINE.NO. = LINE.NO.
  END
  ELSE
  IF (SCREEN.TYPE EQ 'MSI' OR 'FMI') AND SUBSTR(BUFFER,1,4) EQ 'KEY=' THEN
  BEGIN
    IF STARTING.LINE.NO. EQ DEFAULT OR (ENDING.LINE.NO. NE DEFAULT AND
    LINE.NO. GT ENDING.LINE.NO.) THEN
    BEGIN
      LET ERROR. = 'Y'
      TYPE TO TERMINAL SET.PROTECT.MODE.OFF,SET.WRITE.PROTECT.ON,ERROR.LINE,
      "LINE ",LINE.NO.," CHAR 01: 'KEY=' MUST BE WITHIN INQUIRY DETAIL AREA",
      SET.WRITE.PROTECT.OFF,SET.PROTECT.MODE.ON,@CR,
      POSITION.CURSOR,Y.COR,' '
    END
  END
  ELSE
  IF INQUIRY.SW EQ 1 THEN
  BEGIN
    IF DOLLAR.SW EQ 1 THEN
    IF STARTING.LINE.NO. NE DEFAULT THEN
    IF ENDING.LINE.NO. EQ DEFAULT THEN
    LET ENDING.LINE.NO. = LINE.NO. - 1
  END
  ELSE
  NOTHING
  ELSE
  BEGIN
    IF SCREEN.TYPE EQ 'FRM' THEN
    BEGIN
      IF STARTING.LINE.NO. EQ DEFAULT THEN
      LET STARTING.LINE.NO. = LINE.NO.
      LET ENDING.LINE.NO. = LINE.NO.
    END
    IF SUBSTR(BUFFER,80,1) EQ '$' THEN
    IF INQUIRY.SW EQ 1 THEN
    BEGIN
      LET DOLLAR.SW = 1
      LET SUBSTR(BUFFER,80,1) = ' '
    END
    LET CHAR.POS = POSITION(BUFFER,'SPACING=')
    IF INQUIRY.SW EQ 1 AND CHAR.POS NE 0 THEN
    BEGIN
      IF SUBSTR(BUFFER,CHAR.POS+8,1) EQ '1' OR '2' OR '3' THEN
      BEGIN
        LET SPACING. = SUBSTR(BUFFER,CHAR.POS+8,1) AS 'B'
        LET SUBSTR(BUFFER,CHAR.POS,9) = '         '
      END
      ELSE
      BEGIN
        LET ERROR. = 'Y'
        LET CHAR.POS = CHAR.POS + 8
        TYPE TO TERMINAL SET.PROTECT.MODE.OFF,SET.WRITE.PROTECT.ON,ERROR.LINE,
             "LINE ",LINE.NO.," CHAR ",CHAR.POS,": EXPECTING '1' OR '2' OR '3'",
             SET.WRITE.PROTECT.OFF,SET.PROTECT.MODE.ON,@CR,POSITION.CURSOR,
             Y.COR,SUBSTR(X.Y.POS,CHAR.POS,1)
        LET CHAR.POS = 100
      END
    END
    IF CHAR.POS NE 100 THEN
    MOVE 1 TO CHAR.POS
    DELIMITER.CHK:
    WHILE CHAR.POS LE LENGTH(BUFFER) DO
    BEGIN
      MOVE SUBSTR(X.Y.POS,CHAR.POS,1) TO X.COR
      MOVE SUBSTR(BUFFER,CHAR.POS,1) TO CHAR

      IF CHAR EQ '^' THEN
      BEGIN
        IF INQUIRY.SW EQ 1 AND (LINE.NO. EQ STARTING.LINE.NO. OR
        (POSITION(BUFFER,'<') NE 0) OR (POSITION(BUFFER,'@') NE 0)) THEN
        IF CHAR.POS EQ 80 AND (SCREEN.TYPE EQ 'FMI' OR 'MSI') THEN
        BEGIN
          LET ERROR. = 'Y'
          TYPE TO TERMINAL SET.PROTECT.MODE.OFF,SET.WRITE.PROTECT.ON,ERROR.LINE,
          "LINE ",LINE.NO.," CHAR ",CHAR.POS,": EXPECTING ' ' BUT FOUND '^'",
          SET.WRITE.PROTECT.OFF,SET.PROTECT.MODE.ON,@CR,POSITION.CURSOR,
          Y.COR,X.COR
        END
        ELSE
        IF DELIMITER.SW EQ 0 THEN
        BEGIN
          LET SPACE.X = X.COR
          LET SUBSTR(BUFFER,CHAR.POS,1) = ' '
        END
        ELSE
        BEGIN
          LET ERROR. = 'Y'
          TYPE TO TERMINAL SET.PROTECT.MODE.OFF,SET.WRITE.PROTECT.ON,ERROR.LINE,
          "LINE ",LINE.NO.," CHAR ",CHAR.POS,": EXPECTING '>' BUT FOUND '^'",
          SET.WRITE.PROTECT.OFF,SET.PROTECT.MODE.ON,@CR,POSITION.CURSOR,
          Y.COR,X.COR
        END
      END
      ELSE IF CHAR EQ '@' THEN
      IF DELIMITER.SW EQ 0 THEN
      BEGIN
        MOVE 1 TO FLD.LENGTH
        MOVE ' ' TO SUBSTR(BUFFER,CHAR.POS,1)
        IF DOLLAR.SW EQ 1 THEN
        IF STARTING.LINE.NO. EQ DEFAULT THEN
        LET STARTING.LINE.NO. = LINE.NO.
        ELSE IF ENDING.LINE.NO. EQ DEFAULT AND STARTING.LINE.NO. NE LINE.NO.
        THEN
        LET ENDING.LINE.NO. = LINE.NO. - 1
        IF LINE.NO. EQ STARTING.LINE.NO. AND INQUIRY.SW EQ 1 THEN
        MOVE 'D' TO FIELD.TYPE
        ELSE MOVE 'O' TO FIELD.TYPE
        ADD 1 TO FLD.NO
        INSERT INTO FIELD.RELATION
      END
      ELSE
      BEGIN
        LET ERROR. = 'Y'
        TYPE TO TERMINAL SET.PROTECT.MODE.OFF,SET.WRITE.PROTECT.ON,ERROR.LINE,
        "LINE ",LINE.NO.," CHAR ",CHAR.POS,": EXPECTING '>' BUT FOUND '@'",
        SET.WRITE.PROTECT.OFF,SET.PROTECT.MODE.ON,@CR,POSITION.CURSOR,
        Y.COR,X.COR
      END
      ELSE IF CHAR EQ '<' THEN
      IF DELIMITER.SW EQ 0 THEN
      BEGIN
        LET DELIMITER.SW = 1
        LET BEG.POS = CHAR.POS
        LET BEG.X.COR = SUBSTR(X.Y.POS,CHAR.POS+1,1)
        IF DOLLAR.SW EQ 1 THEN
        IF STARTING.LINE.NO. EQ DEFAULT THEN
        LET STARTING.LINE.NO. = LINE.NO.
        ELSE IF ENDING.LINE.NO. EQ DEFAULT AND STARTING.LINE.NO. NE LINE.NO.
        THEN
        LET ENDING.LINE.NO. = LINE.NO. - 1
      END
      ELSE
      BEGIN
        LET ERROR. = 'Y'
        TYPE TO TERMINAL SET.PROTECT.MODE.OFF,SET.WRITE.PROTECT.ON,ERROR.LINE,
        "LINE ",LINE.NO.," CHAR ",CHAR.POS,": EXPECTING '>' BUT FOUND '<'",
        SET.WRITE.PROTECT.OFF,SET.PROTECT.MODE.ON,@CR,POSITION.CURSOR,
        Y.COR,X.COR
      END
      ELSE IF CHAR EQ '>' THEN
      IF DELIMITER.SW EQ 1 THEN
      BEGIN
        LET DELIMITER.SW = 0
        LET FLD.LENGTH = CHAR.POS - BEG.POS - 1
        IF FLD.LENGTH GT 0 THEN
        BEGIN
          IF LINE.NO. EQ STARTING.LINE.NO. AND INQUIRY.SW EQ 1 THEN
          LET FIELD.TYPE = 'D'
          ELSE LET FIELD.TYPE = 'E'
          LET X.COR = BEG.X.COR
          LET SUBSTR(BUFFER,BEG.POS,FLD.LENGTH+2) = (FLD.LENGTH+2) * ' '
          ADD 1 TO FLD.NO
          INSERT INTO FIELD.RELATION
        END
        ELSE
        BEGIN
          LET ERROR. = 'Y'
          TYPE TO TERMINAL SET.PROTECT.MODE.OFF,SET.WRITE.PROTECT.ON,ERROR.LINE,
          "LINE ",LINE.NO.," CHAR ",CHAR.POS,": MINIMUM FIELD LENGTH IS ",
          "ONE CHARACTER",SET.WRITE.PROTECT.OFF,SET.PROTECT.MODE.ON,@CR,
          POSITION.CURSOR,Y.COR,X.COR
        END
      END
      ELSE
      BEGIN
        LET ERROR. = 'Y'
        TYPE TO TERMINAL SET.PROTECT.MODE.OFF,SET.WRITE.PROTECT.ON,ERROR.LINE,
        "LINE ",LINE.NO.," CHAR ",CHAR.POS,": EXPECTING ' ' OR '@' OR '<'",
        " BUT FOUND '>'",SET.WRITE.PROTECT.OFF,SET.PROTECT.MODE.ON,@CR,
        POSITION.CURSOR,Y.COR,X.COR
      END

      IF ERROR. EQ 'Y' THEN FINISH DELIMITER.CHK

      ADD 1 TO CHAR.POS
    END  %  DO  %

    IF ERROR. EQ 'N' THEN
    IF CHAR EQ '|' AND CHAR.POS EQ 81 THEN
    IF SCREEN.TYPE EQ 'FI' OR 'FMI' THEN
    IF STARTING.LINE.NO. NE DEFAULT THEN
    IF LINE.NO. GT STARTING.LINE.NO. THEN
    IF ENDING.LINE.NO. EQ DEFAULT THEN
    BEGIN
      LET ENDING.LINE.NO. = LINE.NO.
      LET SUBSTR(BUFFER,80,1) = ' '
    END

    IF DELIMITER.SW EQ 1 AND ERROR. EQ 'N' THEN
    BEGIN
      LET ERROR. = 'Y'
      TYPE TO TERMINAL SET.PROTECT.MODE.OFF,SET.WRITE.PROTECT.ON,ERROR.LINE,
      "LINE ",LINE.NO.," CHAR 80: EXPECTING '>' BUT FOUND NO DELIMITER",
      SET.WRITE.PROTECT.OFF,SET.PROTECT.MODE.ON,@CR,POSITION.CURSOR,
      Y.COR,BEG.X.COR
    END

  END  % DELIMITERS  %

  IF ERROR. EQ 'N' THEN
  IF INQUIRY.SW EQ 1 THEN
  IF LINE.NO. EQ 23 THEN
  IF DOLLAR.SW EQ 0 THEN
  BEGIN
    LET ERROR. = 'Y'
    TYPE TO TERMINAL SET.PROTECT.MODE.OFF,SET.WRITE.PROTECT.ON,ERROR.LINE,
    "LINE ?? CHAR 80: '$' REQUIRED FOR ALL TYPES OF INQUIRIES",
    SET.WRITE.PROTECT.OFF,SET.PROTECT.MODE.ON,@CR
  END
  ELSE
  NOTHING
  ELSE
  IF LINE.NO. EQ STARTING.LINE.NO. THEN
  IF SCREEN.TYPE EQ 'MSI' OR 'FMI' THEN
  IF SPACE.X EQ DEFAULT THEN
  BEGIN
    LET ERROR. = 'Y'
    TYPE TO TERMINAL SET.PROTECT.MODE.OFF,SET.WRITE.PROTECT.ON,ERROR.LINE,
    "LINE ",LINE.NO.," CHAR ??: '^' REQUIRED FOR MULTI-SELECTABLE INQUIRIES",
    SET.WRITE.PROTECT.OFF,SET.PROTECT.MODE.ON,@CR,POSITION.CURSOR,Y.COR,' '
  END

  MOVE BUFFER TO LINE.

END
  