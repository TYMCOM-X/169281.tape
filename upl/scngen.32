PROCEDURE SCREEN.MOD.TRX (SCREEN.NAME,SCREEN.TYPE)
BEGIN

  FIELDS
  OLD.SCREEN.TYPE SAME AS SCREEN.TYPE,
  FLD.NO.DESC AS '12C',
  SAME.AS.DESC AS '7C',
  CURSOR.SW AS 'N',
  REQ.ERR.NUM1 SAME AS REQ.ERR.NUM,
  MIN.LENGTH1 SAME AS MIN.LENGTH,
  MIN.LEN.ERR.NUM1 SAME AS MIN.LEN.ERR.NUM,
  VERIFY.ERR.NUM1 SAME AS VERIFY.ERR.NUM,
  IS.ERR.NUM1 SAME AS IS.ERR.NUM,
  REQED SAME AS REQUIRED.,
  BEG.POS AS '2N',
  CX AS 'C',
  CY AS 'C',
  CURSOR AS 'C' VERIFY CURSOR EQ 'Y' OR 'N',
  CHAR.POS AS '2N',
  CHAR AS 'C',
  BEG.X.COR AS 'C',
  DISP.SW AS 'N',
  DELIMITER.SW AS 'N',
  DOLLAR.SW AS 'N',
  INQUIRY.SW AS 'N',
  LINE1 AS '80C',
  LINE2 AS '80C',
  LINE3 AS '80C',
  LINE4 AS '80C',
  LINE5 AS '80C',
  LINE6 AS '80C',
  LINE7 AS '80C',
  LINE8 AS '80C',
  LINE9 AS '80C',
  LINE10 AS '80C',
  LINE11 AS '80C',
  LINE12 AS '80C',
  LINE13 AS '80C',
  LINE14 AS '80C',
  LINE15 AS '80C',
  LINE16 AS '80C',
  LINE17 AS '80C',
  LINE18 AS '80C',
  LINE19 AS '80C',
  LINE20 AS '80C',
  LINE21 AS '80C',
  LINE22 AS '80C',
  LINE23 AS '80C',
  FLD.NO1 SAME AS FLD.NO,
  FLD.NO2 SAME AS FLD.NO,
  FLD.NO3 SAME AS FLD.NO,
  FLD.NO4 SAME AS FLD.NO,
  OLD.TOT.FLDS SAME AS FLD.NO,
  NEW.TOT.FLDS SAME AS FLD.NO,
  COPY.SCREEN.NAME SAME AS SCREEN.NAME,
  MOD.SCREEN.NAME SAME AS SCREEN.NAME,
  EDIT. AS 'C' VERIFY EDIT. EQ 'Y' OR 'N'

  RELATION LINE.FLDS IS
  KEY Y.COR, X.COR
  DATA FIELD.TYPE, FLD.LENGTH

  RELATION TEMP.SCREEN SAME AS SCREENS

  RELATION TEMP.FIELD SAME AS SCREEN.FLDS

  RELATION TEMP.MASK SAME AS SCREEN.MASK

  RELATION TEMP.LOOKUP SAME AS LOOKUP

  RELATION TEMP.PRE.PROCESS SAME AS PRE.PROCESS

  RELATION TEMP.POST.PROCESS SAME AS POST.PROCESS

  RELATION TEMP.KEYS SAME AS SCREEN.KEYS

  CONTROLS FOR RELATIONS
  CONCURRENT UPDATE

  INCLUDE TEXT "CRT.CONTROLS"
  INCLUDE TEXT "MULTI.SCREEN.CTL"
  INCLUDE TEXT "SCREEN.UPD.LIBRARY"
  INCLUDE TEXT "SCREEN.INP.LIB"
  INCLUDE TEXT "PARSE.LINE"
  INCLUDE TEXT "SCREEN.UPD.LIB"

  PROCEDURE RANGE (F1,F2)
  BEGIN
    IF F1 GT F2 THEN
    BEGIN
      LET ERROR. = 'Y'
      LET ERR.NUM = 9917
    END
  END

  PROCEDURE COPY.CHK
  BEGIN
    IF FLD.NO1 EQ DEFAULT OR FLD.NO2 EQ DEFAULT THEN
    MOVE DEFAULT TO COPY.SCREEN.NAME
    IF COPY.SCREEN.NAME NE DEFAULT THEN
    SELECT SCREENS VIA SCREEN.NAME=COPY.SCREEN.NAME THEN
    BEGIN
      IF STATUS. EQ 'CMASK' THEN
      BEGIN
        LET ERROR. = 'Y'
        LET ERR.NUM = 9918
      END
    END
    ELSE
    BEGIN
      LET ERROR. = 'Y'
      LET ERR.NUM = 9906
    END
  END

  INCLUDE TEXT "SCREEN.MOD.LIB"


  MOVE FUNCT.D TO FUNCT.KEY

  BUILD.MASK:
  DISPLAY SCREEN.INP USING DISPLAY.
  MASK.INPUT:
  BEGIN

    IF FUNCT.KEY EQ FUNCT.T THEN
    BEGIN
      MOVE 1 TO LINE.NO.,SPACING.
      MOVE DEFAULT TO FLD.NO, TOT.FLD.LENGTH, FLD.LENGTH, STARTING.LINE.NO.,
      ENDING.LINE.NO.,SPACE.X,DOLLAR.SW
      INPUT FRAME SCREEN.INP SENDING @27+'#'+@27+'=6o'+@27+'7'+@27+'"'

      MASK1:
      DO
      BEGIN
        TYPE TO TERMINAL SET.PROTECT.MODE.OFF,
        ERROR.LINE, ' LINE NO: ', LINE.NO.
        CONDITIONAL ON LINE.NO.
        BEGIN
          1: MOVE LINE1 TO BUF
          2: MOVE LINE2 TO BUF
          3: MOVE LINE3 TO BUF
          4: MOVE LINE4 TO BUF
          5: MOVE LINE5 TO BUF
          6: MOVE LINE6 TO BUF
          7: MOVE LINE7 TO BUF
          8: MOVE LINE8 TO BUF
          9: MOVE LINE9 TO BUF
          10: MOVE LINE10 TO BUF
          11: MOVE LINE11 TO BUF
          12: MOVE LINE12 TO BUF
          13: MOVE LINE13 TO BUF
          14: MOVE LINE14 TO BUF
          15: MOVE LINE15 TO BUF
          16: MOVE LINE16 TO BUF
          17: MOVE LINE17 TO BUF
          18: MOVE LINE18 TO BUF
          19: MOVE LINE19 TO BUF
          20: MOVE LINE20 TO BUF
          21: MOVE LINE21 TO BUF
          22: MOVE LINE22 TO BUF
          23: MOVE LINE23 TO BUF
          24: FINISH MASK.INPUT
        END

        APPLY PARSE.LINE(BUF,TEMP.FIELD)
        IF ERROR. EQ 'Y' THEN
        BEGIN
          DELETE FROM TEMP.MASK ALL
          DELETE FROM TEMP.FIELD ALL
          FINISH MASK1
        END
        ELSE IF LINE. NE DEFAULT THEN
        INSERT INTO TEMP.MASK
        ADD 1 TO LINE.NO.
      END
      % DO %
      WHILE LINE.NO. LE 24

    END


    ELSE IF FUNCT.KEY EQ FUNCT.Q THEN
    BEGIN
      TYPE TO TERMINAL SET.PROTECT.MODE.OFF,ERROR.LINE
      RETURN
    END
    ELSE IF FUNCT.KEY EQ FUNCT.R THEN
    TYPE TO TERMINAL CLEAR.FG.TO.SPACES, HOME
    ELSE IF FUNCT.KEY EQ FUNCT.D THEN
    BEGIN
      TYPE TO TERMINAL SET.PROTECT.MODE.OFF,CLEAR.SCREEN.TO.SPACES,
      SET.WRITE.PROTECT.ON,
      ERROR.LINE,
      34 * ' ', 'MESSAGE LINE',
      SET.WRITE.PROTECT.OFF,
      SET.PROTECT.MODE.ON,
      SET.BLOCK.MODE
      FOR EACH SCREEN.FLDS VIA SCREEN.NAME
      BEGIN
        LET OLD.TOT.FLDS = FLD.NO
        INSERT INTO LINE.FLDS
      END
      MOVE DEFAULT TO CRE.DATE,CODE.DATE
      SELECT SCREENS VIA KEY THEN
      BEGIN
        MOVE CRE.DATE TO CRE.DATE OF SCREEN.MOD.TRX
        MOVE CODE.DATE TO CODE.DATE OF SCREEN.MOD.TRX
        MOVE STARTING.LINE.NO. TO STARTING.LINE.NO. OF SCREEN.MOD.TRX
        MOVE ENDING.LINE.NO. TO ENDING.LINE.NO. OF SCREEN.MOD.TRX
        MOVE SPACE.X TO SPACE.X OF SCREEN.MOD.TRX
        MOVE SCREEN.TYPE TO OLD.SCREEN.TYPE
      END
      IF SCREEN.TYPE EQ '   ' THEN
      LET SCREEN.TYPE = OLD.SCREEN.TYPE
      IF SCREEN.TYPE EQ 'INQ' OR 'FI' OR 'MSI' OR 'FMI' THEN
      LET INQUIRY.SW = 1
      LET LINE.NO. = 1
      DO
      BEGIN
        SELECT SCREEN.MASK VIA KEY THEN
        MOVE LINE. TO LINE. OF SCREEN.MOD.TRX
        ELSE MOVE DEFAULT TO LINE.
        MOVE SUBSTR(X.Y.POS,LINE.NO.,1) TO CY
        FOR EACH LINE.FLDS VIA Y.COR=CY
        BEGIN
          IF FLD.LENGTH EQ 1 AND (FIELD.TYPE NE 'E' AND 'I') THEN
          MOVE '@' TO SUBSTR(LINE.,POSITION(X.Y.POS,X.COR),1)
          ELSE
          BEGIN
            MOVE '<' TO SUBSTR(LINE.,POSITION(X.Y.POS,X.COR)-1,1)
            MOVE '>' TO SUBSTR(LINE.,POSITION(X.Y.POS,X.COR)+FLD.LENGTH,1)
          END
        END
        IF INQUIRY.SW EQ 1 AND LINE.NO. EQ STARTING.LINE.NO. THEN
        BEGIN
          LET SUBSTR(LINE.,80,1) = '$'
          IF SPACE.X NE DEFAULT THEN
          LET SUBSTR(LINE.,POSITION(X.Y.POS,SPACE.X),1) = '^'
        END
        IF LINE.NO. NE 23 THEN
        IF SCREEN.TYPE EQ 'FI' OR 'FMI' THEN
        IF LINE.NO. EQ ENDING.LINE.NO. AND LINE. EQ DEFAULT THEN
        LET SUBSTR(LINE.,80,1) = '|'

        IF LINE. NE DEFAULT THEN
        TYPE TO TERMINAL POSITION.CURSOR,CY,' ',TRIM(LINE.)
        ADD 1 TO LINE.NO.
      END
      WHILE LINE.NO. LE 23
      TYPE TO TERMINAL HOME
    END
    ELSE TYPE TO TERMINAL BELL

    INPUT FUNCTION.KEY
    IF FUNCT.KEY EQ FUNCT.D THEN
    BEGIN
      IF COUNT(LINE.FLDS) NE 0 THEN
      DELETE FROM LINE.FLDS ALL
      REPEAT BUILD.MASK
    END
    REPEAT MASK.INPUT

  END
  %  MASK.INPUT  %
  %  BUILD.MASK  %

  TYPE TO TERMINAL ERROR.LINE
  LET NEW.TOT.FLDS = FLD.NO
  MOVE DEFAULT TO Y.COR,X.COR
  IF ENDING.LINE.NO. EQ DEFAULT THEN
  LET ENDING.LINE.NO. = 23
  IF INQUIRY.SW EQ 1 THEN
  LET CURRENT.Y = SUBSTR(X.Y.POS,STARTING.LINE.NO.,1)
  ELSE LET CURRENT.Y = '|'

  LET MOD.DATE = TODAY
  LET STATUS. = 'MSCRN'
  IF SCREEN.TYPE EQ 'I/O' THEN
  LET STARTING.LINE.NO. = 1
  INSERT INTO TEMP.SCREEN

  LET FLD.NO3 = 1

  DISP.MASK:
  DISPLAY SCREEN.UPD USING DISPLAY.
  BEGIN
    MOVE 'FIELD NUMBER' TO FLD.NO.DESC
    MOVE 'SAME AS' TO SAME.AS.DESC
    MOVE SCREEN.NAME OF SCREEN.MOD.TRX TO SCREEN.NAME,MOD.SCREEN.NAME
    IF INQUIRY.SW EQ 1 THEN
    LET FIELD.TYPE = 'O'
    ELSE LET FIELD.TYPE = 'E'
    APPLY DISP.SCREEN.UPD
    TYPE TO TERMINAL PAGE.FORWARD
    APPLY DISP.SCREEN.MOD
    IF SCREEN.TYPE NE OLD.SCREEN.TYPE THEN
    TYPE TO TERMINAL ERROR.LINE,BELL,
    'WARNING: SCREEN TYPE HAS CHANGED FROM ',OLD.SCREEN.TYPE,' TO ',
    SCREEN.TYPE,BELL,HOME
    MOVE DEFAULT TO FUNCT.KEY

    RECON.LOOP:
    BEGIN
      LET DISP.SW = 0
      IF FUNCT.KEY EQ FUNCT.T THEN
      BEGIN
        APPLY PROCESS.SCREEN.MOD
        IF EDIT.CANCELED EQ 'N' THEN
        IF COPY.SCREEN.NAME NE DEFAULT AND (FLD.NO2 - FLD.NO1 NE FLD.NO4
        - FLD.NO3) THEN
        TYPE TO TERMINAL ERROR.LINE, 'FIELD RANGES ARE NOT EQUAL'
        ELSE IF COPY.SCREEN.NAME NE DEFAULT AND FLD.NO1 GT FLD.NO2 THEN
        TYPE TO TERMINAL ERROR.LINE,
        'FOR COPY FROM RANGE, STARTING RANGE GREATER THAN ENDING RANGE'
        ELSE IF FLD.NO3 GT FLD.NO4 THEN
        TYPE TO TERMINAL ERROR.LINE,
        'FOR COPY TO RANGE, STARTING RANGE GREATER THAN ENDING RANGE'
        ELSE
        BEGIN
          EDIT.LOOP:
          FOR EACH TEMP.FIELD VIA (SCREEN.NAME,FLD.NO GE FLD.NO3)
          IF FLD.NO GT FLD.NO4 THEN FINISH EDIT.LOOP
          ELSE
          BEGIN
            ADD 1 TO FLD.NO3
            IF COPY.SCREEN.NAME NE DEFAULT THEN
            SELECT SCREENS VIA SCREEN.NAME = COPY.SCREEN.NAME THEN
            SELECT SCREEN.FLDS VIA (SCREEN.NAME,FLD.NO=FLD.NO1) THEN
            BEGIN
              ADD 1 TO FLD.NO1
              IF EDIT. EQ 'N' THEN
              BEGIN
                IF CURSOR.SW EQ DEFAULT THEN
                IF Y.COR OF SCREENS EQ Y.COR AND X.COR OF SCREENS EQ X.COR THEN
                SELECT TEMP.SCREEN VIA SCREEN.NAME=SCREEN.NAME OF TEMP.FIELD
                THEN
                BEGIN
                  LET Y.COR = Y.COR OF SCREEN.FLDS
                  LET X.COR = X.COR OF SCREEN.FLDS
                  LET CURSOR.SW = 1
                  ALTER TEMP.SCREEN
                END
                LET ACTUAL.FLD OF TEMP.FIELD = ACTUAL.FLD
                LET ACTUAL.QFR OF TEMP.FIELD = ACTUAL.QFR
                LET REQUIRED. OF TEMP.FIELD = REQUIRED.
                LET MIN.LENGTH OF TEMP.FIELD = MIN.LENGTH
                LET HELP. OF TEMP.FIELD = HELP.
                LET DEFAULT.EXPRESSION OF TEMP.FIELD = DEFAULT.EXPRESSION
                IF FIELD.TYPE EQ 'K' OR 'D' THEN
                IF Y.COR OF TEMP.FIELD EQ CURRENT.Y THEN
                IF FIELD.TYPE EQ 'K' THEN
                SELECT SCREEN.KEYS VIA KEY THEN
                BEGIN
                  LET FIELD.TYPE OF TEMP.FIELD = 'K'
                  INSERT INTO TEMP.KEYS USING
                  (SCREEN.NAME OF TEMP.FIELD FOR SCREEN.NAME,
                  FLD.NO OF TEMP.FIELD FOR FLD.NO)
                END
                ELSE LET FIELD.TYPE OF TEMP.FIELD = 'D'
                ELSE LET FIELD.TYPE OF TEMP.FIELD = 'D'
                ELSE LET FIELD.TYPE OF TEMP.FIELD = 'O'
                ELSE
                IF Y.COR OF TEMP.FIELD EQ CURRENT.Y THEN
                LET FIELD.TYPE OF TEMP.FIELD = 'D'
                ELSE LET FIELD.TYPE OF TEMP.FIELD = FIELD.TYPE
                LET REQ.ERR.NUM OF TEMP.FIELD = REQ.ERR.NUM
                LET MIN.LEN.ERR.NUM OF TEMP.FIELD = MIN.LEN.ERR.NUM
                LET VERIFY.ERR.NUM OF TEMP.FIELD = VERIFY.ERR.NUM
                LET IS.ERR.NUM OF TEMP.FIELD = IS.ERR.NUM
                SELECT LOOKUP VIA KEY THEN
                INSERT INTO TEMP.LOOKUP USING
                (SCREEN.NAME OF TEMP.FIELD FOR SCREEN.NAME,
                FLD.NO OF TEMP.FIELD FOR FLD.NO)
                SELECT PRE.PROCESS VIA KEY THEN
                INSERT INTO TEMP.PRE.PROCESS USING
                (SCREEN.NAME OF TEMP.FIELD FOR SCREEN.NAME,
                FLD.NO OF TEMP.FIELD FOR FLD.NO)
                SELECT POST.PROCESS VIA KEY THEN
                INSERT INTO TEMP.POST.PROCESS USING
                (SCREEN.NAME OF TEMP.FIELD FOR SCREEN.NAME,
                FLD.NO OF TEMP.FIELD FOR FLD.NO)
              END
              ELSE
              BEGIN
                IF DISP.SW EQ 0 THEN
                BEGIN
                  LET DISP.SW = 1
                  TYPE TO TERMINAL PAGE.FLIP
                END
                MOVE FLD.NO OF TEMP.FIELD TO FLD.NO OF SCREEN.UPD ECHO
                MOVE FLD.LENGTH OF TEMP.FIELD TO FLD.LENGTH OF SCREEN.UPD ECHO
                INCLUDE TEXT "DISP.ATTR"
                LET FUNCT.KEY = DEFAULT
              END
            END
            ELSE LET EDIT. = 'Y'
            ELSE LET EDIT. = 'Y'
            ELSE LET EDIT. = 'Y'
            IF EDIT. EQ 'Y' THEN
            UPD1:
            BEGIN
              IF DISP.SW EQ 0 THEN
              BEGIN
                LET DISP.SW = 1
                TYPE TO TERMINAL PAGE.FLIP
                MOVE FUNCT.R TO FUNCT.KEY
              END
              MOVE FLD.LENGTH TO FLD.LENGTH OF SCREEN.MOD.TRX
              MOVE X.COR TO CX
              MOVE Y.COR TO CY

              IF FUNCT.KEY EQ DEFAULT THEN NOTHING

              ELSE IF FUNCT.KEY EQ FUNCT.T THEN
              PROCESS.LOOP:
              BEGIN
                INCLUDE TEXT 'SAME.AS.CHK'
                IF ERROR. NE 'N' THEN
                FINISH PROCESS.LOOP
                APPLY PROCESS.SCREEN.UPD

                MOVE CX TO X.COR
                MOVE CY TO Y.COR

                IF EDIT.CANCELED EQ 'N' THEN
                BEGIN
                  IF CURSOR EQ 'Y' THEN
                  BEGIN
                    LET CURSOR.SW = 1
                    SELECT TEMP.SCREEN VIA KEY THEN
                    ALTER TEMP.SCREEN USING (CX FOR X.COR,CY FOR Y.COR)
                  END
                  MOVE FLD.LENGTH OF SCREEN.MOD.TRX TO FLD.LENGTH
                  MOVE ACTUAL.FLD OF SCREEN.UPD TO ACTUAL.FLD OF TEMP.FIELD
                  MOVE ACTUAL.QFR OF SCREEN.UPD TO ACTUAL.QFR OF TEMP.FIELD
                  MOVE DEFAULT.EXPRESSION OF SCREEN.UPD TO DEFAULT.EXPRESSION
                  OF TEMP.FIELD
                  MOVE REQED TO REQUIRED.
                  MOVE REQ.ERR.NUM1 TO REQ.ERR.NUM
                  MOVE MIN.LENGTH1 TO MIN.LENGTH
                  MOVE MIN.LEN.ERR.NUM1 TO MIN.LEN.ERR.NUM
                  MOVE VERIFY.ERR.NUM1 TO VERIFY.ERR.NUM
                  MOVE IS.ERR.NUM1 TO IS.ERR.NUM
                  MOVE HELP. OF SCREEN.UPD TO HELP.
                  IF RELATION.NAME NE DEFAULT THEN
                  INSERT INTO TEMP.LOOKUP
                  IF (PRE.PROCESS.STMT1 NE DEFAULT) OR PRE.PROCESS.STMT2 NE
                  DEFAULT THEN
                  INSERT INTO TEMP.PRE.PROCESS
                  IF POST.PROCESS.STMT NE DEFAULT THEN
                  INSERT INTO TEMP.POST.PROCESS
                  IF Y.COR EQ CURRENT.Y THEN
                  IF SINK.FLD NE DEFAULT THEN
                  BEGIN
                    LET FIELD.TYPE = 'K'
                    INSERT INTO TEMP.KEYS
                  END
                  ELSE LET FIELD.TYPE = 'D'
                  ELSE LET FIELD.TYPE = FIELD.TYPE OF SCREEN.UPD

                  LET FUNCT.KEY = FUNCT.R
                  FINISH UPD1
                END
                %  EDIT CANCELED %
              END
              %  PROCESS.LOOP  %

              ELSE IF FUNCT.KEY EQ FUNCT.Q THEN
              BEGIN
                SUBTRACT 1 FROM FLD.NO3
                TYPE TO TERMINAL PAGE.FLIP
                MOVE FUNCT.R TO FUNCT.KEY
                REPEAT RECON.LOOP
              END

              ELSE IF FUNCT.KEY EQ FUNCT.R THEN
              BEGIN
                IF INQUIRY.SW EQ 1 THEN
                LET FIELD.TYPE = 'O'
                APPLY DEFAULT.SCREEN.UPD
              END

              ELSE IF FUNCT.KEY EQ FUNCT.D THEN
              BEGIN
                SUBTRACT 1 FROM FLD.NO3
                REPEAT DISP.MASK
              END

              ELSE TYPE TO TERMINAL BELL

              INPUT FUNCTION.KEY
              REPEAT UPD1
            END
            %  UPD1  %

            ALTER TEMP.FIELD
          END
          IF FLD.NO3 GT NEW.TOT.FLDS THEN FINISH RECON.LOOP
          %  IF SCREEN.MOD MASK IS NOT UP DISPLAY IT %
          IF DISP.SW EQ 1 THEN
          TYPE TO TERMINAL PAGE.FLIP
          MOVE FUNCT.R TO FUNCT.KEY
          REPEAT RECON.LOOP
        END
      END

      ELSE IF FUNCT.KEY EQ FUNCT.Q THEN
      BEGIN
        TYPE TO TERMINAL BELL,
        ERROR.LINE,'ENTER FUNCTION KEY Q AGAIN TO ABORT'
        INPUT FUNCTION.KEY
        IF FUNCT.KEY EQ FUNCT.Q THEN
        BEGIN
          TYPE TO TERMINAL ERROR.LINE,'MODIFY ABORTED'
          RETURN
        END
        ELSE REPEAT RECON.LOOP
      END

      ELSE IF FUNCT.KEY EQ FUNCT.R THEN
      APPLY DEFAULT.SCREEN.MOD

      ELSE IF FUNCT.KEY EQ FUNCT.D THEN
      REPEAT DISP.MASK

      ELSE IF FUNCT.KEY EQ DEFAULT THEN NOTHING

      ELSE TYPE TO TERMINAL BELL

      INPUT FUNCTION.KEY
      REPEAT RECON.LOOP
    END
    %  RECON.LOOP  %
  END
  %  DISP.MASK  %


  DELETE FROM SCREENS VIA KEY
  SELECT TEMP.SCREEN VIA KEY THEN
  INSERT INTO SCREENS

  DELETE FROM SCREEN.FLDS VIA SCREEN.NAME
  FOR EACH TEMP.FIELD VIA SCREEN.NAME
  INSERT INTO SCREEN.FLDS

  DELETE FROM SCREEN.MASK VIA SCREEN.NAME
  FOR EACH TEMP.MASK VIA SCREEN.NAME
  INSERT INTO SCREEN.MASK

  DELETE FROM LOOKUP VIA SCREEN.NAME
  FOR EACH TEMP.LOOKUP VIA SCREEN.NAME
  INSERT INTO LOOKUP

  DELETE FROM PRE.PROCESS VIA SCREEN.NAME
  FOR EACH TEMP.PRE.PROCESS VIA SCREEN.NAME
  INSERT INTO PRE.PROCESS

  DELETE FROM POST.PROCESS VIA SCREEN.NAME
  FOR EACH TEMP.POST.PROCESS VIA SCREEN.NAME
  INSERT INTO POST.PROCESS

  DELETE FROM SCREEN.KEYS VIA SCREEN.NAME
  IF INQUIRY.SW EQ 1 THEN
  FOR EACH TEMP.KEYS
  INSERT INTO SCREEN.KEYS

END
%  PROCEDURE  %
    