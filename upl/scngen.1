PROCEDURE CODE.GENERATOR (SCREEN.NAME)
BEGIN

  FIELDS
  %  SCREEN.TYPE        DESCRIPTION %
  %  I/O                INPUT / OUTPUT FULL SCREEN %
  %  INQ                INQUIRY FULL SCREEN %
  %  FRM                INPUT / OUTPUT FRAME (PARTIAL SCREEN) %
  %  FI                 INQUIRY FRAME (PARTIAL SCREEN) %
  %  MSI                MULTI SELECTABLE INQUIRY FULL SCREEN %
  %  FMI                MULTI SELECTABLE INQUIRY FRAME (PARTIAL SCREEN) %

  %  TYPE.RECORD.       DESCRIPTION %
  %  0                  SCREEN HAS NO INPUT %
  %  1                  INPUT / OUTPUT FULL OR PARTIAL SCREEN %
  %  2                  SELECTABLE INQUIRY (INQ, FI, MSI, OR FMI) WITH NO %
  %                     OTHER INPUT %
  %  3                  SELECTABLE INQUIRY WITH OTHER INPUT %

  START.FRAME AS '2N',          % STARTING LINE NUMBER OF FRAME %
  END.FRAME AS '2N',            % ENDING LINE NUMBER OF FRAME %
  END.MARK AS '2N',             % ENDING LINE NUMBER OF FRAME MARKS %
  FRAME.SW AS 'N',              % SET IF SCREEN IS A FRAME %
  INQUIRY.SW AS 'N',            % SET IF SCREEN IS AN INQUIRY %
  INPUT.SW AS 'N',              % SET TO 1 IF INPUT FRAME IS TO BE USED %
                                % OTHERWISE, INPUT BATCH IS TO BE USED i.e. %
                                % MORE CHARACTERS ARE TRANSMITTED THAN ARE TO %
                                % BE STORED IN FIELDS (SELECTABLE INQUIRY %
                                % WITH TRAILING INPUT FIELDS) %
  STX.Y AS '3N',                % NUMERIC Y.COR FOR STX ON FRAME %
  STX.X AS '3N',                % NUMERIC X.COR FOR STX ON FRAME %
  ETX.Y AS '3N',                % NUMERIC Y.COR FOR ETX ON FRAME %
  ETX.X AS '3N',                % NUMERIC X.COR FOR ETX ON FRAME %
  STX.DELIM AS 'C',             % DELIMITER STX REPLACED %
  ETX.DELIM AS 'C',             % DELIMITER ETX REPLACED %
  TAB. AS 'NN',                 % USED FOR CALCULATING RELATIVE TABS FOR %
                                % INPUT OF INQUIRY KEY FIELDS %
  EDIT.SW AS 'N',               % SET IF 1 OR MORE EDIT FIELDS ARE ON FRAME %
  PROCESS.SW AS 'N',            % SET IF 1 OR MORE EDIT FIELDS OR QUALIFIED %
                                % INPUT ONLY FIELDS ARE ON FRAME %
  RESTORE.SW. AS 'N',           % SET IF 1 OR MORE EDIT, INPUT ONLY, OR %
                                % CHANGING OUTPUT FIELDS ARE ON FRAME %
  KEY.SW AS 'N',                % SET IF 1 OR MORE INQUIRY KEYS FOR %
                                % SELECTABLE INQUIRY %
  HELP.SW AS 'N',               % SET IF 1 OR MORE EDIT FIELDS REQUEST HELP %
  DATA.SW AS 'N',               % SET IF 2 OR MORE SINGLE CHARACTER OUTPUT %
                                % ONLY OR CHANGING OUTPUT FIELDS ARE ADJACENT %
  CHAR. AS 'C',                 % CHARACTER USED TO MARK FIELDS ON %
                                % FRAME.FORMAT DECLARATION (EITHER @ OR <) %
                                % ALSO USED IN SENDING STRING FOR INPUT FRAME %
                                % AND INPUT BATCH OF ALL EDIT AND INPUT FIELDS %
  LAST.X AS '3N',               % NUMERIC X.COR + FLD.LENGTH + 30 OF LAST %
                                % INQUIRY KEY FIELD %
  LAST.LEN SAME AS FLD.LENGTH,  % CONTAINS LENGTH OF LAST NON INQUIRY DATA %
                                % FIELD. USED TO SET DATA.SW %
  CY AS 'C',                    % USED IN SETTING UP POS.CURSOR.NAME %
  CX AS 'C',                    % USED IN SETTING UP POS.CURSOR.NAME %
  ROW. AS '3N',                 % NUMERIC VALUE OF Y.COR %
  COL. AS '3N',                 % NUMERIC VALUE OF X.COR %
  LEFT.COL AS '3N',             % COL. - 1 %
  RIGHT.COL AS '3N',            % COL. + FLD.LENGTH %
  LAST.FLD.NO SAME AS FLD.NO,   % SET TO LAST NON INQUIRY DATA FIELD %
                                % DETERMINES IF DATA.NAMES IS GENERATED %
  LAST.INPUT.NAME AS '30C',     % NAME OF LAST EDIT OR INPUT ONLY FIELD %
  LAST.KEY.FLD AS '3N',         % FIELD NO. OF LAST INQUIRY KEY FIELD %
  POS.CURSOR.NAME AS '30C',     % NAME OF FIELD THAT DISPLAY ROUTINES %
                                % POSITION CURSOR TO %
  LINE1 SAME AS LINE.,          % CONTAINS 1 LINE OF THE MASK %
  LINE2 SAME AS LINE.,          % CONTAINS A SUBSET OF THE LINE DISPLAYED FOR %
                                % AN INQUIRY DETAIL LINE %
  CURRENT.CHAR AS '2N',         % CHARACTER POSITION OF THE CURRENT CHARACTER %
  DUMMY AS '3N',                % DUMMY KEY FOR KEY.FLDS RELATION %
  CNT. AS '2N'                  % MULTI-PURPOSE COUNTER %

  CONTROLS FOR RELATIONS
  CONCURRENT UPDATE

  INCLUDE TEXT "CRT.SETUP"

  FORMAT FLD.NAME TRIM(ACTUAL.FLD),' OF ',TRIM(SCREEN.NAME)

  FORMAT FLD.NAME.ECHO TRIM(ACTUAL.FLD),' OF ',TRIM(SCREEN.NAME),' ECHO'

  FORMAT ERR.OUT @CR,'  DEFINE % ',TRIM(ACTUAL.FLD),' %',@CR,
  '  V',FLD.NO,TRIM(SCREEN.NAME),' =',@CR,
  '   @27+@39+@27+"="+@',ROW.,'+@',RIGHT.COL,'+@27+"G0"+@27+"="+@',
  ROW.,'+@',LEFT.COL,@CR,
  '   +@27+"G4"+@27+"&"+@27+"="+@',ROW.,'+@',COL.,',',@CR,
  '  M',FLD.NO,TRIM(SCREEN.NAME),' =',@CR,
  '   @27+@39+@27+"="+@',ROW.,'+@',LEFT.COL,
  '+@27+@02+@27+"="+@',ROW.,'+@',RIGHT.COL,'+@27+@03+@27+"S",',@CR,
  '  R',FLD.NO,TRIM(SCREEN.NAME),' =',@CR,
  '   @27+")"+@27+"="+@',ROW.,'+@',LEFT.COL,'+"',LEFT.D,
  '"+@27+"="+@',ROW.,'+@',RIGHT.COL,'+"',RIGHT.D,'"',@CR,
  '   +@27+"("+@27+"=7 "+@27+"T"+@27+"&"+@27+"="+@',ROW.,'+@',COL.,@CR

  RELATION LINE.FLDS IS
  KEY LINE.NO., CHAR.CNT
  DATA FLD.NO,
       FLD.LENGTH,
       FIELD.TYPE,
       ACTUAL.FLD,
       ACTUAL.QFR,
       HELP.,
       REQUIRED.

  RELATION KEY.FLDS IS
  KEY DUMMY
  DATA ACTUAL.FLD,
       ACTUAL.QFR

  RELATION LAST.PROCESS IS
  KEY FLD.NO
  DATA POST.PROCESS.STMT


  MOVE DEFAULT TO Y.COR,X.COR,FLD.LENGTH,FLD.NO,SCREEN.TYPE,SPACE.X,SPACING.,
  STARTING.LINE.NO.,ENDING.LINE.NO.,DUMMY

  TYPE TO TERMINAL SET.PROTECT.MODE.OFF,
       SET.CONV.MODE,@CR,
       'GENERATING LIBRARY TEXT: ',TRIM(SCREEN.NAME),'.LIB',@CR


  TYPE '  % TEXT FOR SCREEN: ',TRIM(SCREEN.NAME),'.LIB %',@CR,@CR,
           '  % UTILIZING MAGNUM DATA ENTRY %',@CR

  SELECT SCREENS VIA KEY THEN
  BEGIN
    MOVE SCREEN.TYPE TO SCREEN.TYPE OF CODE.GENERATOR
    MOVE SPACE.X TO SPACE.X OF CODE.GENERATOR
    MOVE STARTING.LINE.NO. TO STARTING.LINE.NO. OF CODE.GENERATOR,START.FRAME
    MOVE ENDING.LINE.NO. TO ENDING.LINE.NO. OF CODE.GENERATOR,END.FRAME
    MOVE Y.COR TO CY
    MOVE X.COR TO CX
    MOVE SPACING. TO SPACING. OF CODE.GENERATOR
  END

  IF SCREEN.TYPE EQ 'INQ' OR 'FI' OR 'MSI' OR 'FMI' THEN
  LET INQUIRY.SW = 1
  IF SCREEN.TYPE EQ 'FI' OR 'FRM' OR 'FMI' THEN
  LET FRAME.SW = 1
  IF SCREEN.TYPE EQ 'INQ' OR 'MSI' OR 'I/O' THEN
  BEGIN
    LET START.FRAME = 1
    LET END.FRAME = 23
  END

  FOR EACH SCREEN.FLDS VIA SCREEN.NAME
  BEGIN
    LET ROW. = POSITION(X.Y.POS,Y.COR)
    IF ROW. LT START.FRAME THEN
    LET START.FRAME = ROW.
    ELSE
    IF ROW. GT END.FRAME THEN
    LET END.FRAME = ROW.
    LET ROW. = ROW. + 31
    IF FIELD.TYPE EQ 'E' THEN
    BEGIN
      IF HELP. EQ 'Y' THEN
      LET HELP.SW = 1
      LET EDIT.SW,PROCESS.SW = 1
      IF REQUIRED. EQ 'Y' THEN
      BEGIN
        MOVE '[' TO LEFT.D
        MOVE ']' TO RIGHT.D
      END
      ELSE
      BEGIN
        MOVE '(' TO LEFT.D
        MOVE ')' TO RIGHT.D
      END
      LET COL. = POSITION(X.Y.POS,X.COR) + 31
      LET LEFT.COL = COL. - 1
      LET RIGHT.COL = COL. + FLD.LENGTH
      TYPE ERR.OUT
    END
    IF FIELD.TYPE EQ 'I' AND ACTUAL.QFR NE DEFAULT THEN
    LET PROCESS.SW = 1
    IF FIELD.TYPE EQ 'C' OR 'E' OR 'I' THEN
    LET RESTORE.SW. = 1
    IF FIELD.TYPE EQ 'K' THEN
    BEGIN
      IF SCREEN.TYPE EQ 'MSI' OR 'FMI' THEN
      BEGIN
        ADD 1 TO DUMMY
        INSERT INTO KEY.FLDS
      END
      LET LAST.KEY.FLD = FLD.NO
      LET KEY.SW = 1
    END
    IF FIELD.TYPE EQ 'E' OR 'I' THEN
    BEGIN
      IF (Y.COR EQ CY AND X.COR EQ CX) OR POS.CURSOR.NAME EQ DEFAULT THEN
      LET POS.CURSOR.NAME = ACTUAL.FLD
      IF FRAME.SW EQ 1 THEN
      BEGIN
        IF REQUIRED. EQ 'Y' THEN
        BEGIN
          IF STX.DELIM EQ ' ' THEN
          BEGIN
            LET STX.Y = POSITION(X.Y.POS,Y.COR) + 31
            LET STX.X = POSITION(X.Y.POS,X.COR) + 30
            LET STX.DELIM = '['
          END
          LET ETX.Y = POSITION(X.Y.POS,Y.COR) + 31
          LET ETX.X = POSITION(X.Y.POS,X.COR) + 31 + FLD.LENGTH
          LET ETX.DELIM = ']'
        END
        ELSE
        BEGIN
          IF STX.DELIM EQ ' ' THEN
          BEGIN
            LET STX.Y = POSITION(X.Y.POS,Y.COR) + 31
            LET STX.X = POSITION(X.Y.POS,X.COR) + 30
            LET STX.DELIM = '('
          END
          LET ETX.Y = POSITION(X.Y.POS,Y.COR) + 31
          LET ETX.X = POSITION(X.Y.POS,X.COR) + 31 + FLD.LENGTH
          LET ETX.DELIM = ')'
        END
      END
      LET LAST.INPUT.NAME = ACTUAL.FLD
      ADD FLD.LENGTH TO TOT.FLD.LENGTH
    END
    IF FIELD.TYPE NE 'D' THEN
    LET LAST.FLD.NO = FLD.NO
    LET LINE.NO. = POSITION(X.Y.POS,Y.COR)
    LET CHAR.CNT = POSITION(X.Y.POS,X.COR)
    IF FIELD.TYPE EQ 'K' THEN
    LET LAST.X = CHAR.CNT + FLD.LENGTH + 30
    ELSE
    IF FIELD.TYPE EQ 'E' OR 'I' THEN
    BEGIN
      IF INQUIRY.SW EQ 1 THEN
      BEGIN
        IF LINE.NO. LT STARTING.LINE.NO. THEN
        LET INPUT.SW = 1
        ELSE
        IF INPUT.SW EQ 1 THEN
        LET INPUT.SW = 3
        ELSE
        IF INPUT.SW EQ 0 THEN
        LET INPUT.SW = 2
      END
      ELSE
      LET INPUT.SW = 1
      SUBTRACT 1 FROM CHAR.CNT
    END
    INSERT INTO LINE.FLDS
  END
  IF INQUIRY.SW EQ 1 AND SPACE.X NE DEFAULT THEN
  BEGIN
    LET LINE.NO. = STARTING.LINE.NO.
    LET FIELD.TYPE = 'I'
    LET CHAR.CNT = POSITION(X.Y.POS,SPACE.X)
    LET FLD.LENGTH = 1
    INSERT INTO LINE.FLDS
    LET FLD.LENGTH = 0
  END

  IF INQUIRY.SW  EQ 1 THEN
  TYPE @CR,'  FIELD CL.',TRIM(SCREEN.NAME),
  " AS 'NN' % CURRENT LINE INDICATOR %",@CR

  IF SCREEN.TYPE EQ 'MSI' OR 'FMI' THEN
  BEGIN
    TYPE @CR,'  FIELDS',@CR
    LET LINE.NO. = STARTING.LINE.NO.
    LET CHAR.CNT = 0
    WHILE LINE.NO. LE ENDING.LINE.NO. DO
    BEGIN
      ADD 1 TO CHAR.CNT
      TYPE '  C',CHAR.CNT,'.',TRIM(SCREEN.NAME),' AS "',CHAR.CNT,'C",',@CR
      ADD SPACING. TO LINE.NO.
    END
    TYPE '  CHR.',TRIM(SCREEN.NAME),' AS "',CHAR.CNT,'C"',@CR
  END

  TYPE TO TERMINAL @CR,'GENERATING SCREEN DISPLAYS AND FORMATS',@CR


  TYPE @CR, '  % Screen displays and formats for SCREEN: ',
  TRIM(SCREEN.NAME), ' %', @CR, @CR

  TYPE '  FRAME.FORMAT ', TRIM(SCREEN.NAME), '.MASK', @CR

  IF SCREEN.TYPE EQ 'FI' OR 'FMI' THEN
  BEGIN
    IF START.FRAME NE 1 THEN
    SELECT SMALLEST SCREEN.MASK VIA (SCREEN.NAME,LINE.NO. GT 0) THEN
    IF LINE.NO. LT START.FRAME THEN
    LET START.FRAME = LINE.NO.
    IF END.FRAME NE 23 THEN
    SELECT LARGEST SCREEN.MASK VIA (SCREEN.NAME,LINE.NO. LT 24) THEN
    IF LINE.NO. GT END.FRAME THEN
    LET END.FRAME = LINE.NO.
  END

  LET LINE.NO. = START.FRAME
  DO
  BEGIN
    IF INQUIRY.SW EQ 1 AND LINE.NO. EQ STARTING.LINE.NO. THEN
    LET LINE1 = DEFAULT
    ELSE
    SELECT SCREEN.MASK VIA KEY THEN
    LET LINE1 = LINE.
    ELSE LET LINE1 = DEFAULT

    IF SCREEN.TYPE EQ 'MSI' OR 'FMI' THEN
    IF SUBSTR(LINE1,1,4) EQ 'KEY=' THEN
    BEGIN
      LET LINE1 = SUBSTR(LINE1,5)
      IF LINE1 NE DEFAULT THEN
      BEGIN
        LET KEY.SW = 1
        WHILE SUBSTR(LINE1,1,1) EQ ' ' DO
        LET LINE1 = SUBSTR(LINE1,2)
        LET CHAR.CNT = POSITION(LINE1,' ')
        LET ACTUAL.FLD = SUBSTR(LINE1,1,CHAR.CNT)
        LET CHAR.CNT = POSITION(LINE1,' OF ',CHAR.CNT)
        IF CHAR.CNT NE 0 THEN
        BEGIN
          LET LINE1 = SUBSTR(LINE1,CHAR.CNT+4)
          IF LINE1 NE DEFAULT THEN
          WHILE SUBSTR(LINE1,1,1) EQ ' ' DO
          LET LINE1 = SUBSTR(LINE1,2)
          LET ACTUAL.QFR = LINE1
        END
        ELSE
        LET ACTUAL.QFR = DEFAULT
        ADD 1 TO DUMMY
        INSERT INTO KEY.FLDS
      END
      LET LINE1 = DEFAULT
    END

    FOR EACH LINE.FLDS VIA LINE.NO.
    IF FIELD.TYPE NE 'D' THEN
    GET.FLDS:
    BEGIN
      IF INQUIRY.SW EQ 1 THEN
      IF FIELD.TYPE EQ 'I' THEN
      IF LINE.NO. EQ STARTING.LINE.NO. THEN
      FINISH GET.FLDS

      IF FIELD.TYPE EQ 'E' OR 'I' THEN
      BEGIN
        IF FIELD.TYPE EQ 'E' AND REQUIRED. EQ 'Y' THEN
        BEGIN
          LET LEFT.D = '['
          LET RIGHT.D = ']'
        END
        ELSE
        BEGIN
          LET LEFT.D = '('
          LET RIGHT.D = ')'
        END
        LET SUBSTR(LINE1,CHAR.CNT,FLD.LENGTH+2) = LEFT.D + (FLD.LENGTH*'@') +
        RIGHT.D
%       LET LINE1 = SUBSTR(LINE1,1,CHAR.CNT-1) + LEFT.D + (FLD.LENGTH*'@') +
        RIGHT.D + SUBSTR(LINE1,CHAR.CNT+FLD.LENGTH+2)%
      END
      ELSE
      BEGIN
        LET CHAR. = '@'
        IF FLD.LENGTH EQ 1 THEN
        IF LAST.LEN EQ 1 THEN
        BEGIN
          LET DATA.SW = 1
          LET CHAR. = '<'
        END
        ELSE
        LET LAST.LEN = 1
        ELSE
        LET LAST.LEN = 0
        LET SUBSTR(LINE1,CHAR.CNT,FLD.LENGTH) = (FLD.LENGTH * CHAR.)
%       LET LINE1 = SUBSTR(LINE1,1,CHAR.CNT-1) + (FLD.LENGTH*CHAR.) +
        SUBSTR(LINE1,CHAR.CNT+FLD.LENGTH)%
      END
    END
    %  GET.FLDS  %

    TYPE '  "',TRIM(LINE1),'"',@CR
    ADD 1 TO LINE.NO.
  END
  WHILE LINE.NO. LE END.FRAME

  TYPE @CR,'  FRAME ',TRIM(SCREEN.NAME),' FROM ',TRIM(SCREEN.NAME),'.MASK',@CR,
  '  FRAME.AREA ',START.FRAME,' TO ',END.FRAME,@CR
  IF LAST.FLD.NO NE DEFAULT THEN
  BEGIN
    TYPE '  DATA "@"'
    IF DATA.SW EQ 1 THEN
    TYPE ' OR "<"',@CR
    ELSE
    TYPE @CR
    TYPE '  DATA.NAMES'
    LET CNT. = 0
    FOR EACH SCREEN.FLDS VIA SCREEN.NAME
    IF FIELD.TYPE NE 'D' THEN
    BEGIN
      IF CNT. MOD 3 EQ 0 THEN
      TYPE @CR,'  '
      TYPE TRIM(ACTUAL.FLD)
      IF FLD.NO EQ LAST.FLD.NO THEN
      TYPE @CR
      ELSE
      TYPE ','
      ADD 1 TO CNT.
    END
    FOR EACH SCREEN.FLDS VIA SCREEN.NAME
    IF FIELD.TYPE NE 'D' THEN
    BEGIN
      TYPE '  FIELD.CONTROL ',TRIM(ACTUAL.FLD)
      IF FIELD.TYPE NE 'E' AND 'I' THEN
      TYPE ' LOW.INTENSITY PROTECTED'
      IF FIELD.TYPE EQ 'E' OR 'I' THEN
      TYPE ' MINIMUM.LENGTH ',MIN.LENGTH AS '2N',@CR
      ELSE
      TYPE @CR
    END
  END

  IF RESTORE.SW. EQ 1 THEN
  BEGIN
    TYPE @CR,@CR,'  PROCEDURE DEFAULT.',TRIM(SCREEN.NAME),@CR,'  BEGIN',@CR,
    '    TYPE TO TERMINAL DISABLE.KEYBOARD + SET.PROTECT.MODE.ON',@CR
    IF FRAME.SW EQ 0 THEN
    TYPE '    + CLEAR.FG.TO.SPACES',@CR,@CR
    ELSE
    TYPE '    + ERROR.LINE',@CR,@CR

    FOR EACH SCREEN.FLDS VIA SCREEN.NAME
    IF FIELD.TYPE EQ 'C' OR 'E' OR 'I' THEN
    IF DEFAULT.EXPRESSION EQ DEFAULT THEN
    IF FIELD.TYPE EQ 'C' OR FRAME.SW EQ 1 THEN
    TYPE '    MOVE DEFAULT TO ', FLD.NAME.ECHO, @CR
    ELSE
    TYPE '    MOVE DEFAULT TO ', FLD.NAME, @CR
    ELSE
    TYPE '    MOVE (',TRIM(DEFAULT.EXPRESSION),') TO ', FLD.NAME.ECHO,@CR

    TYPE @CR, '    TYPE TO TERMINAL SET.PROTECT.MODE.ON + ENABLE.KEYBOARD',@CR
    IF POS.CURSOR.NAME NE DEFAULT THEN
    TYPE '    SET.CURSOR ',TRIM(POS.CURSOR.NAME),' OF ',TRIM(SCREEN.NAME),@CR
    TYPE '  END', @CR, @CR

    TYPE @CR,'  PROCEDURE EXPAND.',TRIM(SCREEN.NAME),@CR,'  BEGIN',@CR,
    '    TYPE TO TERMINAL DISABLE.KEYBOARD + SET.PROTECT.MODE.ON',@CR
    IF FRAME.SW EQ 0 THEN
    TYPE '    + CLEAR.FG.TO.SPACES',@CR,@CR
    ELSE
    TYPE '    + ERROR.LINE',@CR,@CR
    FOR EACH SCREEN.FLDS VIA SCREEN.NAME
    IF FIELD.TYPE EQ 'C' OR 'E' OR 'I' THEN
    BEGIN
      TYPE '    MOVE ',TRIM(ACTUAL.FLD)
      IF ACTUAL.QFR NE DEFAULT THEN
      TYPE ' OF ',TRIM(ACTUAL.QFR)
      TYPE ' TO ',FLD.NAME.ECHO,@CR
    END
    TYPE @CR,'    TYPE TO TERMINAL SET.PROTECT.MODE.ON + ENABLE.KEYBOARD',@CR
    IF POS.CURSOR.NAME NE DEFAULT THEN
    TYPE '    SET.CURSOR ',TRIM(POS.CURSOR.NAME),' OF ',TRIM(SCREEN.NAME),@CR
    TYPE '  END',@CR,@CR
  END

  TYPE @CR,'  PROCEDURE RESTORE.', TRIM(SCREEN.NAME), @CR, '  BEGIN', @CR,
  '    TYPE TO TERMINAL DISABLE.KEYBOARD + SET.BLOCK.MODE',@CR,@CR
  IF INQUIRY.SW EQ 1 THEN
  TYPE '    MOVE DEFAULT TO CL.',TRIM(SCREEN.NAME),@CR
  IF SCREEN.TYPE EQ 'MSI' OR 'FMI' THEN
  TYPE '    MOVE 1 TO MSI.FLAG',@CR
  FOR EACH SCREEN.FLDS VIA SCREEN.NAME
  IF FIELD.TYPE NE 'K' AND 'D' THEN
  BEGIN
    TYPE '    MOVE ',TRIM(ACTUAL.FLD)
    IF ACTUAL.QFR NE DEFAULT THEN
    TYPE ' OF ',TRIM(ACTUAL.QFR)
    TYPE ' TO ',FLD.NAME.ECHO,@CR
  END
  TYPE @CR,'    TYPE TO TERMINAL SET.PROTECT.MODE.ON + ENABLE.KEYBOARD',@CR
  IF POS.CURSOR.NAME NE DEFAULT THEN
  TYPE '    SET.CURSOR ',TRIM(POS.CURSOR.NAME),' OF ',TRIM(SCREEN.NAME),@CR
  TYPE '  END',@CR,@CR

  TYPE @CR,'  PROCEDURE DISP.', TRIM(SCREEN.NAME), @CR, '  BEGIN', @CR,
  '    TYPE TO TERMINAL DISABLE.KEYBOARD + SET.BLOCK.MODE',@CR,@CR

  IF INQUIRY.SW EQ 1 THEN
  TYPE '    MOVE DEFAULT TO CL.',TRIM(SCREEN.NAME),@CR
  IF SCREEN.TYPE EQ 'MSI' OR 'FMI' THEN
  TYPE '    MOVE 1 TO MSI.FLAG',@CR

  FOR EACH SCREEN.FLDS VIA SCREEN.NAME
  IF FIELD.TYPE NE 'K' AND 'D' THEN
  IF DEFAULT.EXPRESSION EQ DEFAULT THEN
  IF FIELD.TYPE EQ 'O' THEN
  BEGIN
    TYPE '    MOVE ',TRIM(ACTUAL.FLD)
    IF ACTUAL.QFR NE DEFAULT THEN
    TYPE ' OF ',TRIM(ACTUAL.QFR)
    TYPE ' TO ',FLD.NAME.ECHO,@CR
  END
  ELSE
  TYPE '    MOVE DEFAULT TO ',FLD.NAME,@CR
  ELSE
  TYPE '    MOVE (',TRIM(DEFAULT.EXPRESSION),') TO ', FLD.NAME.ECHO,@CR

  TYPE @CR, '    TYPE TO TERMINAL SET.PROTECT.MODE.ON + ENABLE.KEYBOARD',@CR
  IF POS.CURSOR.NAME NE DEFAULT THEN
  TYPE '    SET.CURSOR ',TRIM(POS.CURSOR.NAME),' OF ',TRIM(SCREEN.NAME),@CR
  TYPE '  END', @CR, @CR

  % ************************ TYPE.RECORD. SET HERE ************************ %

  IF (INQUIRY.SW EQ 1 AND SPACE.X NE DEFAULT) OR (TOT.FLD.LENGTH NE
  DEFAULT) THEN
  BEGIN
    IF TOT.FLD.LENGTH NE DEFAULT THEN
    LET TYPE.RECORD. = 1
    IF INQUIRY.SW EQ 1 AND KEY.SW EQ 1 AND SPACE.X NE DEFAULT THEN
    IF TYPE.RECORD. EQ 1 THEN
    LET TYPE.RECORD. = 3
    ELSE LET TYPE.RECORD. = 2
  END

  % *********************** TYPE.RECORD. SET ABOVE ********************

  IF FRAME.SW EQ 1 THEN
  BEGIN
    IF SCREEN.TYPE EQ 'FRM' THEN
    LET END.MARK = END.FRAME
    ELSE
    LET END.MARK = STARTING.LINE.NO. - 1
    TYPE '  DEFINE MARK.',TRIM(SCREEN.NAME),
    ' = SET.PROTECT.MODE.OFF + SET.WRITE.PROTECT.ON +'
    LET LINE.NO. = START.FRAME
    DO
    BEGIN
      IF LINE.NO. EQ 1 THEN
      TYPE @CR,'        HOME + "l" +'
      ELSE
      IF LINE.NO. EQ START.FRAME THEN
      TYPE @CR,'        POSITION.CURSOR + @',(LINE.NO.+31) AS '3N',
      ' + @032 + "l" +'
      ELSE
      TYPE @CR,'        NEW.LINE + "l" +'
      ADD 1 TO LINE.NO.
    END
    WHILE LINE.NO. LE END.MARK
    TYPE @CR,'        SET.WRITE.PROTECT.OFF + @CR',@CR,@CR,
    '  DEFINE UNMARK.',TRIM(SCREEN.NAME),
    ' = SET.PROTECT.MODE.OFF + SET.WRITE.PROTECT.ON +'
    LET LINE.NO. = START.FRAME
    DO
    BEGIN
      IF LINE.NO. EQ 1 THEN
      TYPE @CR,'        HOME + " " +'
      ELSE
      IF LINE.NO. EQ START.FRAME THEN
      TYPE @CR,'        POSITION.CURSOR + @',(LINE.NO.+31) AS '3N',
      ' + @032 + " " +'
      ELSE
      TYPE @CR,'        NEW.LINE + " " +'
      ADD 1 TO LINE.NO.
    END
    WHILE LINE.NO. LE END.MARK
    TYPE @CR,'        SET.WRITE.PROTECT.OFF + @CR',@CR
  END

  IF INQUIRY.SW EQ 1 AND STARTING.LINE.NO. NE DEFAULT THEN
  BEGIN
    TYPE @CR,'  DEFINE EL.',TRIM(SCREEN.NAME),
    ' = SET.PROTECT.MODE.OFF + SET.WRITE.PROTECT.ON +'
    LET LINE.NO. = STARTING.LINE.NO.
    DO
    BEGIN
      IF LINE.NO. EQ 1 THEN
      TYPE @CR,'        HOME + LINE.ERASE +'
      ELSE
      IF LINE.NO. EQ STARTING.LINE.NO. THEN
      TYPE @CR,'        POSITION.CURSOR + @',(LINE.NO.+31) AS '3N',
      ' + @032 + LINE.ERASE +'
      ELSE
      TYPE @CR,'        ',SPACING.*'NEW.LINE + ','LINE.ERASE +'
      ADD SPACING. TO LINE.NO.
    END
    WHILE LINE.NO. LE ENDING.LINE.NO.
    TYPE ' @CR',@CR
    IF TYPE.RECORD. EQ 2 OR 3 THEN
    BEGIN
      TYPE @CR,'  FIELD SELECT.',TRIM(SCREEN.NAME)," AS 'C'"
      IF SCREEN.TYPE EQ 'INQ' OR 'FI' THEN
      TYPE " DEFAULT 'N'",@CR
      ELSE
      TYPE @CR
      IF SCREEN.TYPE EQ 'MSI' OR 'FMI' THEN
      BEGIN
        TYPE @CR,'  FIELD CNT.',TRIM(SCREEN.NAME)," AS '9ZN'",@CR,@CR,
        '  RELATION ',TRIM(SCREEN.NAME),'.ITEM IS',@CR,
        '  KEY CNT.',TRIM(SCREEN.NAME),',CHAR.CNT',@CR,
        '  DATA',@CR
        FOR EACH KEY.FLDS
        TYPE '    ',TRIM(ACTUAL.FLD),',',@CR
        TYPE '    SELECT.',TRIM(SCREEN.NAME),@CR
      END
    END
    TYPE @CR,'  PROCEDURE WL.',TRIM(SCREEN.NAME),@CR,'  BEGIN',@CR,
    '    %  ROUTINE TO DISPLAY AN INQUIRY DETAIL LINE  %',@CR,@CR,
    '    IF SCREEN.FULL EQ "Y" THEN',@CR,
    '    TYPE TO TERMINAL EL.',TRIM(SCREEN.NAME),@CR,
    '    IF CL.',TRIM(SCREEN.NAME),' EQ DEFAULT THEN',@CR,
    '    BEGIN',@CR,
    '      MOVE ',STARTING.LINE.NO.,' TO CL.',TRIM(SCREEN.NAME),@CR,
    '      MOVE "N" TO SCREEN.FULL',@CR
    IF TYPE.RECORD. EQ 2 OR 3 THEN
    TYPE '      MOVE 0 TO CHAR.CNT',@CR
    IF SCREEN.TYPE EQ 'MSI' OR 'FMI' THEN
    TYPE '      ADD 1 TO CNT.',TRIM(SCREEN.NAME),@CR
    TYPE '    END',@CR,
    '    ELSE ADD ',SPACING.,' TO CL.',TRIM(SCREEN.NAME),@CR,
    '    CONDITIONAL ON CL.',TRIM(SCREEN.NAME),@CR,
    '    BEGIN',@CR
    MOVE STARTING.LINE.NO. TO LINE.NO.
    WHILE LINE.NO. LE ENDING.LINE.NO. - SPACING. DO
    BEGIN
      TYPE '      ',LINE.NO.,': MOVE @',(LINE.NO.+31) AS '3N',' TO CURRENT.Y',@CR
      ADD SPACING. TO LINE.NO.
    END
    TYPE '      ',LINE.NO.,':',@CR,
    '      BEGIN',@CR,
    '        MOVE @',(LINE.NO.+31) AS '3N',' TO CURRENT.Y',@CR,
    '        MOVE "Y" TO SCREEN.FULL',@CR,
    '        MOVE DEFAULT TO CL.',TRIM(SCREEN.NAME),@CR,
    '      END',@CR,
    '    END',@CR
    IF TYPE.RECORD. EQ 2 OR 3 THEN
    BEGIN
      IF SCREEN.TYPE EQ 'MSI' OR 'FMI' THEN
      TYPE '    IF MSI.FLAG EQ 1 THEN',@CR
      TYPE '    ADD 1 TO CHAR.CNT',@CR
    END
    TYPE '    TYPE TO TERMINAL DISABLE.KEYBOARD, SET.PROTECT.MODE.OFF,',@CR,
    '    SET.WRITE.PROTECT.ON, POSITION.CURSOR, CURRENT.Y, @032,',@CR
    LET LINE.NO. = STARTING.LINE.NO.
    LET CURRENT.CHAR = 1
    SELECT SCREEN.MASK VIA KEY THEN
    LET LINE1 = LINE.
    ELSE LET LINE1 = DEFAULT
    FOR EACH LINE.FLDS VIA LINE.NO.
    BEGIN
      IF CURRENT.CHAR NE CHAR.CNT THEN
      IF SUBSTR(LINE1,CURRENT.CHAR,CHAR.CNT-CURRENT.CHAR) NE ' ' THEN
      BEGIN
        LET LINE2 = SUBSTR(LINE1,CURRENT.CHAR,CHAR.CNT-CURRENT.CHAR)
        LET CNT. = 1
        WHILE SUBSTR(LINE2,CNT.,1) EQ ' ' DO
        ADD 1 TO CNT.
        IF CNT. GT 4 THEN
        TYPE '    POSITION.CURSOR, CURRENT.Y, @',(CURRENT.CHAR+CNT.+30) AS
        '3N',', "',SUBSTR(LINE2,CNT.,CHAR.CNT-CURRENT.CHAR-CNT.+1),'",'
        ELSE TYPE '    "',SUBSTR(LINE2,1,CHAR.CNT-CURRENT.CHAR),'",'
      END
      ELSE IF CHAR.CNT - CURRENT.CHAR GT 4 THEN
      TYPE '    POSITION.CURSOR, CURRENT.Y, @',(CHAR.CNT+31) AS '3N',','
      ELSE
      TYPE '    "',(CHAR.CNT-CURRENT.CHAR)*' ','",'
      ELSE TYPE '    '
      IF FIELD.TYPE EQ 'I' THEN
      BEGIN
        IF SCREEN.TYPE EQ 'MSI' OR 'FMI' THEN
        TYPE 'MSI.FLAG * '
        TYPE 'SET.WRITE.PROTECT.OFF, " ", SET.WRITE.PROTECT.ON,',@CR
      END
      ELSE
      BEGIN
        IF FLD.LENGTH EQ 78 THEN
        TYPE 'TRIM(',TRIM(ACTUAL.FLD),')'
        ELSE
        TYPE TRIM(ACTUAL.FLD)
        IF ACTUAL.QFR NE DEFAULT THEN
        TYPE ' OF ',TRIM(ACTUAL.QFR),',',@CR
        ELSE TYPE ',',@CR
      END
      LET CURRENT.CHAR = CHAR.CNT + FLD.LENGTH
    END
    IF CURRENT.CHAR LE SIZE(LINE1) THEN
    IF SUBSTR(LINE1,CURRENT.CHAR) NE ' ' THEN
    BEGIN
      LET LINE2 = SUBSTR(LINE1,CURRENT.CHAR)
      LET CNT. = 1
      WHILE SUBSTR(LINE2,CNT.,1) EQ ' ' DO
      ADD 1 TO CNT.
      IF CNT. GT 4 THEN
      TYPE '    POSITION.CURSOR, CURRENT.Y, @',(CURRENT.CHAR+CNT.+30) AS '3N',
      ', "',TRIM(SUBSTR(LINE2,CNT.)),'",',@CR
      ELSE TYPE '    "',TRIM(LINE2),'",',@CR
    END
    TYPE '    SET.WRITE.PROTECT.OFF, @CR, ENABLE.KEYBOARD',@CR,
    '    IF SCREEN.FULL EQ "Y" THEN',@CR,
    '    TYPE TO TERMINAL SET.PROTECT.MODE.ON, ERROR.LINE',@CR
    IF SCREEN.TYPE EQ 'MSI' OR 'FMI' THEN
    BEGIN
      TYPE '    IF MSI.FLAG EQ 1 THEN',@CR,
           '    INSERT INTO ',TRIM(SCREEN.NAME),'.ITEM USING (',@CR
      FOR EACH KEY.FLDS
      BEGIN
        TYPE '    ',TRIM(ACTUAL.FLD)
        IF ACTUAL.QFR NE DEFAULT THEN
        TYPE ' OF ',TRIM(ACTUAL.QFR)
        TYPE ' FOR ',TRIM(ACTUAL.FLD),',',@CR
      END
      TYPE '    " " FOR SELECT.',TRIM(SCREEN.NAME),')',@CR
    END
    TYPE '  END',@CR
  END

  TYPE @CR, '  % End of screen displays and formats for SCREEN: ',
  TRIM(SCREEN.NAME), ' %', @CR,@CR

  IF HELP.SW NE DEFAULT THEN
  BEGIN
    LET CNT. = 0
    TYPE @CR,'  PROCEDURE HELP.',TRIM(SCREEN.NAME),@CR,'  BEGIN',@CR,
    '    MOVE DEFAULT TO HELP.FIELD',@CR,
    '    INPUT BATCH CURRENT.Y,CURRENT.X SENDING @027 + "?"',@CR,
    '    CONDITIONAL ON CURRENT.Y',@CR,
    '    BEGIN',@CR
    FOR EACH LINE.FLDS
    BEGIN
      IF FIELD.TYPE EQ 'E' THEN
      IF HELP. EQ 'Y' THEN
      BEGIN
        IF CNT. EQ 0 THEN
        BEGIN
          TYPE '      @',(LINE.NO.+31) AS '3N',':',@CR
          LET CNT. = 1
        END
        ELSE TYPE '      ELSE',@CR
        TYPE '      IF CURRENT.X GT @',(CHAR.CNT+31) AS '3N',' AND LE @',
        (CHAR.CNT+FLD.LENGTH+31) AS '3N',' THEN',@CR,
        '      MOVE "',TRIM(ACTUAL.FLD),'" TO HELP.FIELD',@CR
      END
      IF LINE.NO. CHANGING THEN
      LET CNT. = 0
    END
    TYPE '    END',@CR,
    '  END',@CR,'  % HELP %',@CR
  END


  TYPE TO TERMINAL @CR,'GENERATING FIELD VERIFIES',@CR


  IF TYPE.RECORD. NE 0 THEN
  BEGIN
    TYPE @CR,@CR,'  PROCEDURE PROCESS.',TRIM(SCREEN.NAME),@CR,'  BEGIN',@CR,@CR
    IF TYPE.RECORD. EQ 2 OR 3 THEN
    IF SCREEN.TYPE EQ 'INQ' OR 'FI' THEN
    TYPE '    INPUT BATCH CURRENT.Y,CURRENT.X SENDING @27 + "?"',@CR
    IF TYPE.RECORD. EQ 1 OR 3 THEN
    BEGIN
      IF SCREEN.TYPE EQ 'I/O' OR 'INQ' OR 'MSI' THEN
      BEGIN
        LET CHAR. = '5'
        TYPE '    SET.CURSOR AFTER ',TRIM(LAST.INPUT.NAME),' OF ',
        TRIM(SCREEN.NAME),@CR
      END
      ELSE
      BEGIN
        LET CHAR. = 'S'
        IF INPUT.SW EQ 2 THEN
        LET INPUT.SW = 1
        TYPE '    TYPE TO TERMINAL @27 + "''" + @27 + "=" + @',STX.Y,' + @',
        STX.X,@CR,'    + @27 + @02 + @27 + "=" + @',ETX.Y,' + @',ETX.X,@CR,
        '    + @27 + @03 + @27 + "&" + @CR + @27 + "=" + @',ETX.Y,' + @',
        (ETX.X-1) AS '3N',@CR
      END
      IF TYPE.RECORD. EQ 1 OR (TYPE.RECORD. EQ 3 AND INPUT.SW EQ 1) THEN
      TYPE '    INPUT FRAME ',TRIM(SCREEN.NAME),
      " SENDING @27+'#'+@27+'",CHAR.,"'+@27+","'",'"',"'",@CR
      ELSE
      BEGIN
        TYPE '    INPUT BATCH',@CR,'    '
        MOVE 0 TO CNT.
        FOR EACH LINE.FLDS
        IF FIELD.TYPE EQ 'E' OR 'I' THEN
        BEGIN
          IF LINE.NO. EQ STARTING.LINE.NO. THEN
          TYPE '@TAB CHAR.CNT, '
          ELSE
          IF ACTUAL.FLD EQ LAST.INPUT.NAME THEN
          TYPE TRIM(ACTUAL.FLD),@CR
          ELSE
          TYPE TRIM(ACTUAL.FLD),','
          ADD 1 TO CNT.
          IF CNT. MOD 2 EQ 0 THEN
          TYPE @CR,'    '
        END
        IF CNT. MOD 2 EQ 1 THEN
        TYPE @CR,'    '
        TYPE "SENDING @27+'#'+@27+'",CHAR.,"'+@27+'",'"',"'",@CR
      END
      IF FRAME.SW EQ 1 THEN
      TYPE '    TYPE TO TERMINAL @27 + "''" + @27 + ")" + @27 + "=" + @',ETX.Y,
      ' + @',ETX.X,@CR,'    + "',ETX.DELIM,'" + @27 + "=" + @',STX.Y,' + @',
      STX.X,' + "',STX.DELIM,'" + @27 + "(" + @27 + "&" + @CR',@CR
    END
  END

  IF TYPE.RECORD. EQ 2 OR 3 THEN
  BEGIN
    IF SCREEN.TYPE EQ 'INQ' OR 'FI' THEN
    BEGIN
      TYPE @CR,@TAB TO 5,'IF CURRENT.Y GE @',(STARTING.LINE.NO.+31) AS '3N',
      ' AND LE @',(ENDING.LINE.NO.+31) AS '3N',' THEN',@CR,
      @TAB TO 5,'BEGIN',@CR,
      @TAB TO 7,'MOVE "Y" TO SELECT.',TRIM(SCREEN.NAME),@CR,
      @TAB TO 7,'TYPE TO TERMINAL SET.PROTECT.MODE.OFF, ',
      'POSITION.CURSOR,CURRENT.Y,@',LAST.X,@CR,
      @TAB TO 7,'INPUT BATCH',@CR,@TAB TO 7
      LET CNT. = 0
      LET CURRENT.CHAR = 1
      FOR EACH LINE.FLDS VIA LINE.NO. = STARTING.LINE.NO.
      IF FIELD.TYPE EQ 'K' THEN
      BEGIN
        LET TAB. = CHAR.CNT - CURRENT.CHAR
        IF TAB. NE 0 THEN
        TYPE '@TAB ',TAB.,', '
        TYPE TRIM(ACTUAL.FLD)
        TYPE ' OF ',TRIM(SCREEN.NAME)
        ADD FLD.LENGTH + TAB. TO CURRENT.CHAR
        ADD 1 TO CNT.
        IF FLD.NO EQ LAST.KEY.FLD THEN
        NOTHING
        ELSE
        BEGIN
          TYPE ','
          IF CNT. MOD 2 EQ 0 THEN
          TYPE @CR,@TAB TO 7
        END
      END
      TYPE @CR,@TAB TO 7,"SENDING @27+'#'+@27+'6'+@27+'",'"',"'",@CR,
      @TAB TO 7,'TYPE TO TERMINAL SET.PROTECT.MODE.ON, ',@CR,
      @TAB TO 7,'POSITION.CURSOR,CURRENT.Y,CURRENT.X',@CR
      FOR EACH LINE.FLDS VIA LINE.NO.=STARTING.LINE.NO.
      IF FIELD.TYPE EQ 'K' THEN
      BEGIN
        SELECT SCREEN.KEYS VIA KEY THEN
        BEGIN
          TYPE @TAB TO 7,'MOVE ',TRIM(ACTUAL.FLD),' OF ',TRIM(SCREEN.NAME),
          ' AS ',TRIM(SINK.FLD),' TO ', TRIM(SINK.FLD)
          IF SINK.QFR NE DEFAULT THEN
          TYPE ' OF ',TRIM(SINK.QFR),@CR
          ELSE TYPE @CR
        END
      END
      TYPE @TAB TO 5,'END',@CR,
      @TAB TO 5,'ELSE MOVE "N" TO SELECT.',TRIM(SCREEN.NAME),@CR
    END
    ELSE
    BEGIN
      TYPE '    IF CHAR.CNT GT 0 AND LE ',(ENDING.LINE.NO.-STARTING.LINE.NO.+1)
      AS '2N',' THEN',@CR,
      '    BEGIN',@CR,
      '      TYPE TO TERMINAL DISABLE.KEYBOARD+SET.PROTECT.MODE.OFF+',@CR,
      '      POSITION.CURSOR+@',(STARTING.LINE.NO.+30) AS '3N','+"o"+STX+',@CR,
      '      POSITION.CURSOR+@',(ENDING.LINE.NO.+31) AS '3N','+"o"+ETX+',@CR,
      '      SET.PROTECT.MODE.ON+@CR+POSITION.CURSOR+@',(STARTING.LINE.NO.+31)
      AS '3N','+@',(POSITION(X.Y.POS,SPACE.X)+31) AS '3N',@CR,
      '      CONDITIONAL ON CHAR.CNT',@CR,
      '      BEGIN',@CR
      LET LINE.NO. = STARTING.LINE.NO.
      LET CHAR.CNT = 0
      WHILE LINE.NO. LE ENDING.LINE.NO. DO
      BEGIN
        ADD 1 TO CHAR.CNT
        TYPE '        ',CHAR.CNT,':',@CR,
        '        BEGIN',@CR,
        '          INPUT BATCH C',CHAR.CNT,'.',TRIM(SCREEN.NAME),
        " SENDING @27 + 'S' + @27 + '",'"',"'",@CR,
        '          MOVE C',CHAR.CNT,'.',TRIM(SCREEN.NAME),' TO CHR.',
        TRIM(SCREEN.NAME),@CR,
        '        END',@CR
        ADD SPACING. TO LINE.NO.
      END
      TYPE '      END',@CR,
      '      TYPE TO TERMINAL SET.PROTECT.MODE.OFF+SET.WRITE.PROTECT.ON+',@CR,
      '      POSITION.CURSOR+@',(STARTING.LINE.NO.+30) AS '3N','+"o "+',@CR,
      '      POSITION.CURSOR+@',(ENDING.LINE.NO.+31) AS '3N','+"o "+',@CR,
      '      SET.WRITE.PROTECT.OFF+SET.PROTECT.MODE.ON+@CR',@CR,
      '      LET CHAR.CNT = 1',@CR,
      '      WHILE CHAR.CNT LE ',CHAR.CNT,' DO',@CR,
      '      BEGIN',@CR,
      '        LET C01.',TRIM(SCREEN.NAME),' = SUBSTR(CHR.',TRIM(SCREEN.NAME),
      ',CHAR.CNT,1)',@CR,
      '        IF C01.',TRIM(SCREEN.NAME),' NE " " THEN',@CR,
      '        SELECT ',TRIM(SCREEN.NAME),'.ITEM VIA KEY THEN',@CR,
      '        ALTER ',TRIM(SCREEN.NAME),'.ITEM USING',@CR,
      '        (C01.',TRIM(SCREEN.NAME),' FOR SELECT.',TRIM(SCREEN.NAME),')',
      @CR,
      '        ADD 1 TO CHAR.CNT',@CR,
      '      END',@CR,
      '    END',@CR
    END
  END

  IF PROCESS.SW EQ 1 THEN
  BEGIN
    TYPE @CR,'    % Field verifictaion for SCREEN: ',TRIM(SCREEN.NAME),' %',
    @CR,@CR,'    MOVE 1 TO FIELD.NO', @CR,
    '    DO', @CR,
    '    BEGIN',@CR,
    '      MOVE "N" TO ERROR.', @CR,
    '      CONDITIONAL ON FIELD.NO', @CR,
    '      BEGIN', @CR


    FOR EACH SCREEN.FLDS VIA SCREEN.NAME
    IF FIELD.TYPE EQ 'E' OR (FIELD.TYPE EQ 'I' AND ACTUAL.QFR NE DEFAULT) THEN
    BEGIN
      TYPE @TAB TO 9, FLD.NO, ':',@CR,
      @TAB TO 9,'BEGIN   % ', TRIM(ACTUAL.FLD), ' %', @CR


      IF FIELD.TYPE EQ 'I' THEN
      BEGIN
        TYPE @TAB TO 11,'MOVE ',TRIM(ACTUAL.FLD),' OF ',TRIM(SCREEN.NAME),
        ' TO ',TRIM(ACTUAL.FLD),' OF ',TRIM(ACTUAL.QFR),@CR
      END
      ELSE
      BEGIN
        TYPE @TAB TO 11,"MOVE "
        IF REQUIRED. EQ 'Y' THEN
        TYPE 'TRUE '
        ELSE
        TYPE 'FALSE '
        TYPE 'TO REQUIRED FLAG.OF ',TRIM(ACTUAL.FLD),' OF ',TRIM(SCREEN.NAME),
        @CR,@TAB TO 11, "MOVE ", REQ.ERR.NUM AS '4N', " TO REQ.ERR.NUM", @CR,
        @TAB TO 11,"MOVE ",MIN.LEN.ERR.NUM AS '4N'," TO MIN.LEN.ERR.NUM",@CR,
        @TAB TO 11, "MOVE ", VERIFY.ERR.NUM AS '4N', " TO VERIFY.ERR.NUM", @CR,
        @TAB TO 11, "MOVE ", IS.ERR.NUM AS '4N', " TO IS.ERR.NUM", @CR

        SELECT PRE.PROCESS VIA KEY THEN
        BEGIN
          IF PRE.PROCESS.STMT1 NE DEFAULT THEN
          TYPE @CR,@TAB TO 11,TRIM(PRE.PROCESS.STMT1),@CR
          IF PRE.PROCESS.STMT2 NE DEFAULT THEN
          TYPE @TAB TO 11,TRIM(PRE.PROCESS.STMT2),@CR
        END

        TYPE @CR, @TAB TO 11, "APPLY CHECK.FLD (",TRIM(ACTUAL.FLD),",",
        TRIM(SCREEN.NAME),")",@CR

        IF ACTUAL.QFR NE DEFAULT AND SCREEN.NAME THEN
        TYPE @TAB TO 11,"IF ERROR. EQ 'N' THEN",@CR,@TAB TO 11,
        "MOVE ",TRIM(ACTUAL.FLD)," OF ",TRIM(SCREEN.NAME)," TO ",
        TRIM(ACTUAL.FLD)," OF ",TRIM(ACTUAL.QFR),@CR

        SELECT LOOKUP VIA KEY
        THEN
        BEGIN

          IF VIA.CLAUSE EQ DEFAULT THEN
          LET VIA.CLAUSE = 'KEY'

          TYPE @CR, @TAB TO 11, "IF ERROR. EQ 'N' THEN", @CR,
          @TAB TO 11, "BEGIN", @CR

          IF PRE.SELECT.STMT NE DEFAULT
          THEN
          TYPE @TAB TO 13, TRIM(PRE.SELECT.STMT),@CR

          IF RELATION.NAME NE DEFAULT
          THEN
          BEGIN
            TYPE @TAB TO 13, "SELECT ", TRIM(RELATION.NAME), " VIA "
            IF VIA.CLAUSE EQ 'KEY' THEN
            TYPE 'KEY',@CR
            ELSE TYPE '(',TRIM(VIA.CLAUSE),')',@CR
            TYPE @TAB TO 13, "THEN", @CR,
            @TAB TO 13, "BEGIN", @CR

            IF THEN.STMT EQ DEFAULT AND THEN.ERR.NUM EQ DEFAULT
            THEN
             TYPE @TAB TO 15, "NOTHING", @CR, @TAB TO 13, "END", @CR
            ELSE
            IF THEN.STMT EQ DEFAULT THEN
            TYPE @TAB TO 15, "MOVE 'Y' TO ERROR.", @CR,
            @TAB TO 15, "MOVE ", THEN.ERR.NUM AS '4N', " TO ERR.NUM", @CR,
            @TAB TO 13, "END", @CR
            ELSE
            TYPE @TAB TO 15,TRIM(THEN.STMT), @CR,
            @TAB TO 13, "END", @CR

            TYPE @TAB TO 13, "ELSE", @CR,
            @TAB TO 13, "BEGIN", @CR

            IF ELSE.STMT EQ DEFAULT AND ELSE.ERR.NUM EQ DEFAULT
            THEN
             TYPE @TAB TO 15, "NOTHING", @CR, @TAB TO 13, "END", @CR
            ELSE
            IF ELSE.STMT EQ DEFAULT
            THEN
            TYPE @TAB TO 15, "MOVE 'Y' TO ERROR.", @CR,
            @TAB TO 15, "MOVE ", ELSE.ERR.NUM AS '4N', ' TO ERR.NUM', @CR,
            @TAB TO 13, "END", @CR
            ELSE
            TYPE @TAB TO 15, TRIM(ELSE.STMT), @CR,
            @TAB TO 13, "END", @CR

          END

          TYPE @TAB TO 11, 'END', @CR
        END

        SELECT POST.PROCESS VIA KEY
        THEN
        IF SUBSTR(POST.PROCESS.STMT,1,5) EQ 'LAST=' THEN
        BEGIN
          LET POST.PROCESS.STMT = SUBSTR(POST.PROCESS.STMT,6)
          INSERT INTO LAST.PROCESS
        END
        ELSE
        TYPE @CR, @TAB TO 11, "IF ERROR. EQ 'N' THEN", @CR,
        @TAB TO 11, 'BEGIN', @CR,
        @TAB TO 13, TRIM(POST.PROCESS.STMT), @CR,
        @TAB TO 11, 'END', @CR

        MOVE FLD.NO TO FLD.NO OF CODE.GENERATOR
      END
      %  EDIT FIELDS  %

      TYPE @TAB TO 9, "END", @CR

    END
    %  FOR EACH  %

    TYPE @CR, @TAB TO 7, 'END', @CR

    IF EDIT.SW EQ 1 THEN
    BEGIN
      IF COUNT(LAST.PROCESS) NE 0 THEN
      BEGIN
        FOR EACH LAST.PROCESS
        TYPE @CR, @TAB TO 7, "IF ERROR. EQ 'N' THEN", @CR,
        @TAB TO 7, "BEGIN", @CR,
        @TAB TO 9, TRIM(POST.PROCESS.STMT), @CR,
        @TAB TO 7, "END",@CR
      END

      TYPE @CR, @TAB TO 7, "IF ERROR. EQ 'Y' THEN", @CR,
      @TAB TO 7, 'BEGIN', @CR,
      @TAB TO 9, 'APPLY FIELD.ERR1', @CR,
      @TAB TO 9, 'CONDITIONAL ON FIELD.NO', @CR,
      @TAB TO 9, 'BEGIN', @CR

      FOR EACH SCREEN.FLDS VIA SCREEN.NAME
      IF FIELD.TYPE EQ 'E' THEN
      TYPE @TAB TO 11, FLD.NO,':',@CR, @TAB TO 11,'BEGIN',@CR,@TAB TO 13,
      'MOVE V',FLD.NO,TRIM(SCREEN.NAME),' TO VIDEO.ON',@CR,@TAB TO 13,
      'MOVE R',FLD.NO,TRIM(SCREEN.NAME),' TO RESET.ERR',@CR,@TAB TO 11,
      'END',@CR

      TYPE @TAB TO 9,'END',@CR,@TAB TO 9,'TYPE TO TERMINAL VIDEO.ON',@CR,
      @TAB TO 9,'INPUT FUNCTION.KEY',@CR,
      @TAB TO 9,'IF FUNCT.KEY EQ FUNCT.T OR FUNCT.U THEN',@CR,
      @TAB TO 9,'BEGIN',@CR,
      @TAB TO 11,'MOVE "N" TO EDIT.CANCELED',@CR,
      @TAB TO 11,'CONDITIONAL ON FIELD.NO',@CR,
      @TAB TO 11,'BEGIN',@CR

      FOR EACH SCREEN.FLDS VIA SCREEN.NAME
      IF FIELD.TYPE EQ 'E' THEN
      TYPE @TAB TO 13,FLD.NO,': INPUT BATCH ',TRIM(ACTUAL.FLD),' OF ',
      TRIM(SCREEN.NAME),' SENDING M',FLD.NO,TRIM(SCREEN.NAME),@CR

      TYPE @TAB TO 11,'END',@CR,
      @TAB TO 9,'END',@CR,
      @TAB TO 9,'ELSE',@CR,
      @TAB TO 9,'BEGIN',@CR,
      @TAB TO 11,'MOVE 1000 TO FIELD.NO',@CR,
      @TAB TO 11,'MOVE "Y" TO EDIT.CANCELED',@CR,
      @TAB TO 11,'TYPE TO TERMINAL SET.PROTECT.MODE.OFF',@CR,
      @TAB TO 9,'END',@CR,
      @TAB TO 9,'TYPE TO TERMINAL RESET.ERR',@CR,
      @TAB TO 7,'END',@CR,
      @TAB TO 7, 'ELSE', @CR, @TAB TO 7, 'ADD 1 TO FIELD.NO', @CR

    END
    ELSE
    TYPE @TAB TO 7,"ADD 1 TO FIELD.NO",@CR
    TYPE @CR, @TAB TO 5, "END", @CR,
    @TAB TO 5, "WHILE FIELD.NO LE ", FLD.NO, @CR

    TYPE @CR,@TAB TO 5, '% End of field verify for SCREEN: ', TRIM(SCREEN.NAME),
    ' %', @CR,@CR

  END
  IF TYPE.RECORD. NE 0 THEN
  TYPE '  END', @CR,@CR,
  '  % End of PROCEDURE PROCESS.', TRIM(SCREEN.NAME), ' %', @CR

  SELECT SCREENS VIA KEY THEN
  BEGIN
    LET STATUS. = 'CCODE'
    LET CODE.DATE = TODAY
    ALTER SCREENS
  END

  TYPE TO TERMINAL @CR,'SCREEN GENERATION DONE',@CR,SET.BLOCK.MODE

END
    RvV