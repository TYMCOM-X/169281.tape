PROCEDURE MAINTAIN.HW.TIME


ENTIRE.PROCEDURE:
BEGIN

  CONTROLS FOR RELATIONS CONCURRENT UPDATE

  RELATION L.HW.TIME. SAME AS HW.TIME.
  RELATION D.HW.TIME. SAME AS HW.TIME.

  IF COUNT(TIME.)=COUNT(HW.TIME.)
    THEN BEGIN
           TYPE 'RELATIONS TIME. AND HW.TIME. HAVE THE SAME NUMBER ',
                'OF INSTANCES.'
           FINISH ENTIRE.PROCEDURE
         END

  TYPE 'TIME. INSTANCE WITH NO CORRESPONDING HW.TIME. INSTANCE:', @CR,
       'SYSTEM.ID', @TAB 4, 'DATE.', @TAB 3, 'START.TIME', @TAB 2, 'SITE.ID',
       @TAB 2, 'CLASS.ID', @TAB 2, 'CODE.ID', @TAB 2, 'STOP.TIME', @TAB 2,
       'SCHED.FLAG', @TAB 2, 'PRIME.FLAG', @TAB 2, 'FT.FLAG', @TAB 2, 'HW.ID',
        @CR, @CR
  FOR EACH TIME.
     SELECT HW.TIME. VIA KEY
       THEN NOTHING
       ELSE BEGIN
              TYPE @TAB 2, SYSTEM.ID, @TAB 4, DATE., @TAB 5, START.TIME, @TAB 7,
                   SITE.ID, @TAB 8, CLASS.ID, @TAB 7, CODE.ID, @TAB 6,
                   STOP.TIME, @TAB 9, SCHED.FLAG, @TAB 11, PRIME.FLAG, @TAB 10,
                   FT.FLAG, @TAB 6, HW.ID, @CR
              INSERT INTO L.HW.TIME.
            END

  TYPE 'HW.TIME. INSTANCE WITH NO CORRESPONDING TIME. INSTANCE:', @CR,
       'HW.ID', @TAB 4, 'DATE.', @TAB 3, 'START.TIME', @TAB 2, 'SYSTEM.ID',
       @CR, @CR
  FOR EACH HW.TIME.
     SELECT TIME. VIA KEY
       THEN NOTHING
       ELSE BEGIN
              TYPE @TAB 1, HW.ID, @TAB 3, DATE., @TAB 5, START.TIME, @TAB 7,
                   SYSTEM.ID, @CR
              INSERT INTO D.HW.TIME.
            END

  LET BUSY=TIME
  SELECT BUSY. VIA KEY
     THEN ALTER BUSY.
     ELSE INSERT INTO BUSY.

  TYPE 'RELATION HW.TIME. IS NOW BEING MODIFIED.'
  FOR EACH L.HW.TIME.
    INSERT INTO HW.TIME.
  FOR EACH D.HW.TIME.
    DELETE FROM HW.TIME. VIA KEY

  DELETE FROM BUSY. ALL

END  % entire.procedure %
