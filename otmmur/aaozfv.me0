PROCEDURE GEN.CRASH.PLOT.TEST
ENTIRE.PROCEDURE:
BEGIN

  FIELDS

    ALL.CRASHES                                AS '3N',
    ALL.CRASHES.TEMP                           AS '3N',

    CLASS.ABBREV                               AS '3C',
    CLASS.INPUT                                AS '4C',
    CLASS.MATCH                                AS '3C' DEFAULT 'NO',
    CLASS.TITLE                                AS '15C',
    CODE.TITLE                                 AS '28C',
    COL.COUNT                                  AS '2N',
    COL.COUNT.TEMP                             AS '2N',
    CRASH.COUNT                                AS '2ZN.5N',
    CRASH.FLAG                                 AS 'N' DEFAULT 1,

    DATE.PERIOD                                AS 'C',

    OUTPUT.FILE.1                              AS '30C',
    OUTPUT.FILE.2                              AS '30C',

    PERCENT.TOTAL                              AS '2ZN.N',
    PREVIOUS.CLASS                             AS 'N',
    PRIME.CRASHES                              AS '3N',
    PRIME.CRASH.FLAG                           AS 'N' DEFAULT 1,
    PRIME.CRASHES.TEMP                         AS '3N',

    REPORT.COUNT                               AS '2N',
    REPORT.COUNT.TEMP                          AS '2N',
    REPORT.END.DATE                            AS DATE 'MM-DD-YY',
    REPORT.NO                                  AS '2N',
    REPORT.START.DATE                          AS DATE 'MM-DD-YY',

    SCHEDULED.CRASHES                          AS '3N',
    SCHEDULED.CRASH.FLAG                       AS 'N' DEFAULT 1,
    SCHEDULED.CRASHES.TEMP                     AS '3N',
    SET.NO                                     AS '2N',
    SITE.IDENT                                 AS 'C',
    SITE.INPUT                                 AS '3C',
    SITES                                      AS '10C',
    SITE.SYSNO                                 AS '5C',
    SUB.REPORT.COUNT                           AS 'N',
    SYS.OR.CLS                                 AS 'C',
    SYSTEM.INPUT                               AS '4C',

    TEMP.DATE                                  AS DATE 'MM-YY',
    T.FR.INPUT                                 AS '3C',
    TOTAL.CRASHES                              AS '3ZN.5N',

    VALID.END.DATE                             AS DATE 'MM-DD-YY',
    VALID.INPUT                                AS DATE 'MM-DD-YY',
    VALID.START.DATE                           AS DATE 'MM-DD-YY'

  CONTROLS FOR RELATIONS CONCURRENT UPDATE

  RELATION CLASS.TEMP IS
    KEY CLASS.ABBREV
    DATA CLASS.TITLE,
         SET.NO

  RELATION SYSTEM.TEMP IS
    KEY SET.NO,
        SYSNO,
        SYSTEM.ID
    DATA CLASS.ABBREV

  RELATION CRASH. IS
    KEY SET.NO,
        CLASS.ABBREV,
        CODE.ID
    DATA CODE.TITLE,
         ALL.CRASHES,
         SCHEDULED.CRASHES,
         PRIME.CRASHES

  REPORT RPT.A1 TO OUTPUT.FILE.1
    PAGE.SIZE 0

  REPORT RPT.A2 TO OUTPUT.FILE.2
    PAGE.SIZE 66

  REPORT RPT.B1 TO OUTPUT.FILE.1
     PAGE.SIZE 0

  REPORT RPT.B2 TO OUTPUT.FILE.2
    PAGE.SIZE 66

REPORT.SUBJECT:
BEGIN
  TYPE @CR, 'DO YOU WANT THIS REPORT GENERATED FOR A SYSTEM(S) OR FOR A',
       @CR, 'CLASS OF SYSTEMS(C)? '
  ACCEPT SYS.OR.CLS

  IF SYS.OR.CLS = 'S' OR 'C'
    THEN NOTHING
    ELSE BEGIN
           TYPE @CR, 'THIS IS NOT AN OPTION........'
           REPEAT REPORT.SUBJECT
         END
END  % report.subject %

  IF SYS.OR.CLS = 'S'
    THEN BEGIN
SYSTEM.INFO:
BEGIN
           TYPE @CR, 'PLEASE ENTER THE NUMBER OF THE SYSTEM TO BE REPORTED: '
           ACCEPT SYSTEM.INPUT

           TYPE @CR, 'PLEASE ENTER A DATE AS "MM-DD-YY" FOR WHICH THE SYSTEM IS VALID: '
           ACCEPT VALID.INPUT

           DELETE FROM SYSTEM.TEMP ALL
           DELETE FROM CLASS.TEMP ALL

           FOR EACH SYSTEM. WHERE (SYSNO = SYSTEM.INPUT AS '3ZN' AND VALID.INPUT GE START.DATE AND
                                   VALID.INPUT LE END.DATE)
             BEGIN
               TYPE @CR, 'THIS SYSTEM IS VALID FROM ', START.DATE, ' TO ', END.DATE, ' .', @CR
               LET VALID.START.DATE = START.DATE
               LET VALID.END.DATE = END.DATE
               INSERT INTO SYSTEM.TEMP USING (1 FOR SET.NO,
                                              ID FOR SYSTEM.ID,
                                              ABBREV(CLASS. VIA ID = CLASS.ID) FOR CLASS.ABBREV)
               INSERT INTO CLASS.TEMP USING (ABBREV(CLASS. VIA ID = CLASS.ID) FOR CLASS.ABBREV,
                                             TITLE(CLASS. VIA ID = CLASS.ID) FOR CLASS.TITLE,
                                             1 FOR SET.NO)
               CONDITIONAL ON SITE.ID
                 BEGIN
                   1: LET SITE.IDENT = 'F'
                 END
               LET SITE.SYSNO = SITE.IDENT + TRIM(SYSTEM.INPUT)
               LET REPORT.COUNT = 1
             END
           IF COUNT(SYSTEM.TEMP) = 0
             THEN BEGIN
                    TYPE @CR, 'THIS SYSTEM DOES NOT EXIST........'
                    REPEAT SYSTEM.INFO
                  END
END  % system.info %

GET.DATES.1:
BEGIN
           TYPE @CR, 'PLEASE ENTER THE DATE PERIOD OF THIS(ESE) REPORT(S).',
                @CR, 'THIS MONTH(T), LAST MONTH(L), OR A DATE RANGE(R): '
           ACCEPT DATE.PERIOD

           CONDITIONAL ON DATE.PERIOD
             BEGIN
               'T': BEGIN
                      LET TEMP.DATE = TODAY AS DATE 'MM-YY'
                      LET REPORT.START.DATE = FIRST.DAY(TEMP.DATE)
                      LET REPORT.END.DATE = TODAY AS DATE 'MM-DD-YY'
                      FINISH GET.DATES.1
                    END  % conditional on 't' %
               'L': BEGIN
                      LET TEMP.DATE = TODAY AS DATE 'MM-YY'
                      SUBTRACT 1 FROM MONTH(TEMP.DATE)
                      LET REPORT.START.DATE = FIRST.DAY(TEMP.DATE)
                      LET REPORT.END.DATE = LAST.DAY(TEMP.DATE)
                      FINISH GET.DATES.1
                    END  % conditional on 'l' %
               'R': BEGIN
GET.RANGE.1:
BEGIN
                      TYPE @CR, 'PLEASE ENTER THE START AND END DATES AS "MM-DD-YY"',
                           @CR, '(SEPARATE THE ENTRIES WITH COMMAS): '
                      ACCEPT REPORT.START.DATE, REPORT.END.DATE

                      IF REPORT.START.DATE GT REPORT.END.DATE
                        THEN BEGIN
                               TYPE @CR, 'THE START DATE IS GREATER THAN THE END DATE.'
                               REPEAT GET.RANGE.1
                             END
                      IF REPORT.END.DATE GT TODAY AS DATE 'MM-DD-YY'
                        THEN BEGIN
                               TYPE @CR, 'THE END DATE CANNOT BE GREATER THAN THE CURRENT DATE.'
                               REPEAT GET.RANGE.1
                             END
END  % get.range.1 %
                    END  % conditional on 'r' %
             END  % conditional on date.period %
           IF REPORT.START.DATE LT VALID.START.DATE OR REPORT.END.DATE GT VALID.END.DATE
             THEN BEGIN
                    TYPE @CR, 'THIS SYSTEM IS NOT VALID FOR THIS DATE RANGE.'
                    REPEAT GET.DATES.1
                  END
END  % get.dates.1 %
         END  % if sys.or.class ... then %
    ELSE BEGIN
GET.DATES.2:
BEGIN
           TYPE @CR, 'PLEASE ENTER THE DATE PERIOD OF THIS(ESE) REPORT(S).',
                @CR, 'THIS MONTH(T), LAST MONTH(L), OR A DATE RANGE(R): '
           ACCEPT DATE.PERIOD

           CONDITIONAL ON DATE.PERIOD
             BEGIN
               'T': BEGIN
                      LET TEMP.DATE = TODAY AS DATE 'MM-YY'
                      LET REPORT.START.DATE = FIRST.DAY(TEMP.DATE)
                      LET REPORT.END.DATE = TODAY AS DATE 'MM-DD-YY'
                      FINISH GET.DATES.2
                    END  % conditional on 't' %
               'L': BEGIN
                      LET TEMP.DATE = TODAY AS DATE 'MM-YY'
                      SUBTRACT 1 FROM MONTH(TEMP.DATE)
                      LET REPORT.START.DATE = FIRST.DAY(TEMP.DATE)
                      LET REPORT.END.DATE = LAST.DAY(TEMP.DATE)
                      FINISH GET.DATES.2
                    END  % conditional on 'l' %
               'R': BEGIN
GET.RANGE.2:
BEGIN
                     TYPE @CR, 'PLEASE ENTER THE START AND END DATES AS "MM-DD-YY"',
                          @CR, '(SEPARATE THE ENTRIES WITH COMMAS): '
                     ACCEPT REPORT.START.DATE, REPORT.END.DATE

                     IF REPORT.START.DATE GT REPORT.END.DATE
                       THEN BEGIN
                              TYPE @CR, 'THE START DATE IS GREATER THAN THE END DATE.'
                              REPEAT GET.RANGE.2
                            END
                     IF REPORT.END.DATE GT TODAY AS DATE 'MM-DD-YY'
                       THEN BEGIN
                              TYPE @CR, 'THE END DATE CANNOT BE GREATER THAN THE CURRENT DATE.'
                              REPEAT GET.RANGE.2
                            END
END  % get.range.2 %
                   END  % conditional on 'r' %
             END  % condition on date.period %
END  % get.dates.2 %

           TYPE @CR, 'PLEASE ENTER THE SYSTEM CLASS TO BE REPORTED (FOR A LIST',
                @CR, 'OF THE CLASS CHOICES, TYPE "HELP"): '
REP.GET.CLASS:
BEGIN
             ACCEPT CLASS.INPUT

             IF CLASS.INPUT = 'H' OR 'HE' OR 'HEL' OR 'HELP'
               THEN BEGIN
                      TYPE @CR, 'THE CLASS CHOICES ARE:'
                      FOR EACH CLASS.
                        TYPE @CR, @TAB 5, TRIM(ABBREV)
                      TYPE @CR, @TAB 5, 'ALL',
                           @CR, @CR, 'PLEASE ENTER THE CLASS TO BE REPORTED: '
                      REPEAT REP.GET.CLASS
                    END
             IF CLASS.INPUT = 'ALL'
               THEN NOTHING
               ELSE BEGIN
                      FOR EACH CLASS. WHERE (ABBREV = CLASS.INPUT)
                        LET CLASS.MATCH = 'YES'
                      IF CLASS.MATCH = 'NO'
                        THEN BEGIN
                               TYPE @CR, 'THERE IS NO SUCH CLASS........',
                                    @CR, 'PLEASE ENTER THE CLASS TO BE REPORTED: '
                               REPEAT REP.GET.CLASS
                             END
                    END
  END  % rep.get.class %

           TYPE @CR, 'PLEASE ENTER THE SITE TO BE REPORTED.  CUPERTINO(CUP),',
                @CR, 'VALLEY FORGE(VF), DALLAS(DAL), HOUSTON(HOU), FREMONT(FRE), ',
                @CR, 'OR ALL OF THESE SITES(ALL): '
  REP.GET.SITE:
  BEGIN
             ACCEPT SITE.INPUT

             CONDITIONAL ON SITE.INPUT
               BEGIN
                 'FRE': LET SITES = '1'
                 'ALL': LET SITES = '1235678'
               END
             ELSE BEGIN
                    TYPE @CR, 'THIS CHOICE FOR THE SITE DOES NOT EXIST........',
                         @CR, 'PLEASE ENTER THE SITE TO BE REPORTED: '
                    REPEAT REP.GET.SITE
                  END
  END  % rep.get.site %

           DELETE FROM CLASS.TEMP ALL
           DELETE FROM SYSTEM.TEMP ALL

           IF CLASS.INPUT = 'ALL'
             THEN BEGIN
                    LET PREVIOUS.CLASS = 0
                    LET REPORT.COUNT = 0
                    FOR EACH SYSTEM. WHERE (START.DATE LE REPORT.END.DATE AND END.DATE GE REPORT.START.DATE
                                            AND APPLICABLE = 'Y') SORTED ON CLASS.ID
                      BEGIN
                        SELECT CLASS. VIA (ID = CLASS.ID)
                          THEN BEGIN
                                 CONDITIONAL ON SITE.ID
                                   BEGIN
                                     1: LET SITE.IDENT = '1'
                                     2: LET SITE.IDENT = '2'
                                     3: LET SITE.IDENT = '3'
                                     5: LET SITE.IDENT = '5'
                                     6: LET SITE.IDENT = '6'
                                     7: LET SITE.IDENT = '7'
                                     8: LET SITE.IDENT = '8'
                                   END
                                   ELSE LET SITE.IDENT = ''
                                 IF POSITION(TRIM(SITES),SITE.IDENT) > 0
                                   THEN BEGIN
                                          IF CLASS.ID NE PREVIOUS.CLASS
                                            THEN BEGIN
                                                   LET PREVIOUS.CLASS = CLASS.ID
                                                   ADD 1 TO REPORT.COUNT
                                                   INSERT INTO CLASS.TEMP USING (ABBREV FOR CLASS.ABBREV,
                                                                                 TITLE FOR CLASS.TITLE,
                                                                                 REPORT.COUNT FOR SET.NO)
                                                 END
                                          INSERT INTO SYSTEM.TEMP USING (REPORT.COUNT FOR SET.NO,
                                                                         ID OF SYSTEM. FOR SYSTEM.ID,
                                                                         ABBREV FOR CLASS.ABBREV)
                                        END  % if position %
                               END  % select class. %
                      END  % for each system. %
                    IF COUNT(CLASS.) NE COUNT(CLASS.TEMP)
                      THEN BEGIN
                             TYPE @CR, 'THERE ARE CURRENTLY NO SYSTEMS OF THE FOLLOWING CLASS(ES):'
                             FOR EACH CLASS.
                               SELECT CLASS.TEMP VIA (CLASS.ABBREV = ABBREV)
                                 THEN NOTHING
                                 ELSE TYPE @CR, @TAB 5, TRIM(ABBREV)
                           END
                    IF REPORT.COUNT = 0
                      THEN FINISH ENTIRE.PROCEDURE
                  END  % if class.input = 'all' then %
             ELSE BEGIN
                    FOR EACH CLASS. WHERE (ABBREV = CLASS.INPUT)
                      BEGIN
                        FOR EACH SYSTEM. WHERE (CLASS.ID = ID OF CLASS. AND START.DATE LE REPORT.END.DATE
                                                AND END.DATE GE REPORT.START.DATE AND APPLICABLE = 'Y')
                          BEGIN
                            CONDITIONAL ON SITE.ID
                              BEGIN
                                1: LET SITE.IDENT = '1'
                                2: LET SITE.IDENT = '2'
                                3: LET SITE.IDENT = '3'
                                5: LET SITE.IDENT = '5'
                                6: LET SITE.IDENT = '6'
                                7: LET SITE.IDENT = '7'
                                8: LET SITE.IDENT = '8'
                              END
                              ELSE LET SITE.IDENT = ''
                            IF POSITION(TRIM(SITES),SITE.IDENT) > 0
                              THEN INSERT INTO SYSTEM.TEMP USING (1 FOR SET.NO,
                                                                  ID OF SYSTEM. FOR SYSTEM.ID,
                                                                  ABBREV FOR CLASS.ABBREV)
                          END
                     IF COUNT(SYSTEM.TEMP) = 0
                       THEN BEGIN
                              TYPE @CR, 'THERE ARE CURRENTLY NO SYSTEMS OF THIS CLASS AT THIS(ESE) SITE(S).'
                              FINISH ENTIRE.PROCEDURE
                            END
                       ELSE BEGIN
                              LET REPORT.COUNT = 1
                              INSERT INTO CLASS.TEMP USING (ABBREV FOR CLASS.ABBREV,
                                                            TITLE FOR CLASS.TITLE,
                                                            1 FOR SET.NO)
                            END
                      END  % for each class. %
                  END  % if class.input = 'all' else %
         END  % if sys.or.cls ... else %

GET.TIME.FRAME:
BEGIN
  TYPE @CR, 'PLEASE ENTER THE TIME FRAME BEING REPORTED.  SCHEDULED',
       @CR, 'TIME(S), PRIME TIME(P), 24 HOURS(24), OR ALL OF THESE',
       @CR, 'TIME FRAMES(ALL): '
REP.GET.T.FR:
BEGIN
  ACCEPT T.FR.INPUT

  IF T.FR.INPUT = '24' OR 'S' OR 'P' OR 'ALL'
    THEN NOTHING
    ELSE BEGIN
           TYPE @CR, 'THIS TIME FRAME OPTION DOES NOT EXIST........',
                @CR, 'PLEASE ENTER THE TIME FRAME TO BE REPORTED: '
           REPEAT REP.GET.T.FR
         END
END  % rep.get.t.fr %
END  % get.time.frame %

  TYPE @CR, @CR, 'PLEASE WAIT........', @CR

  DELETE FROM CRASH. ALL

  CONDITIONAL ON T.FR.INPUT
    BEGIN
      '24': BEGIN
              FOR EACH SYSTEM.TEMP
                BEGIN
                  LET CRASH.FLAG = 1
                  FOR EACH TIME. VIA (SYSTEM.ID = SYSTEM.ID OF SYSTEM.TEMP), WHERE
                                     (DATE. GE REPORT.START.DATE AND DATE. LE REPORT.END.DATE)
                    BEGIN
                      IF CRASH.FLAG = 1 AND TYPE.ABBREV(CODE. VIA ID = CODE.ID) = 'LST'
                        THEN BEGIN
                               SELECT CRASH. VIA (SET.NO = SET.NO OF SYSTEM.TEMP,
                                                  CLASS.ABBREV = CLASS.ABBREV OF SYSTEM.TEMP,
                                                  CODE.ID = CODE.ID OF TIME.)
                                 THEN ALTER CRASH. USING (ALL.CRASHES + 1 FOR ALL.CRASHES)
                                 ELSE INSERT INTO CRASH. USING (TITLE(CODE. VIA ID = CODE.ID) FOR CODE.TITLE,
                                                                1 FOR ALL.CRASHES,
                                                                0 FOR SCHEDULED.CRASHES,
                                                                0 FOR PRIME.CRASHES)
                             END
                 IF TYPE.ABBREV(CODE. VIA ID = CODE.ID) = 'UP'
                        THEN LET CRASH.FLAG = 1
                        ELSE LET CRASH.FLAG = 0
                    END  % for each time. %
                END  % for each system.temp %
            END
      'S': BEGIN
             FOR EACH SYSTEM.TEMP
               BEGIN
                 LET SCHEDULED.CRASH.FLAG = 1
                 FOR EACH TIME. VIA (SYSTEM.ID = SYSTEM.ID OF SYSTEM.TEMP), WHERE
                                    (DATE. GE REPORT.START.DATE AND DATE. LE REPORT.END.DATE)
                   BEGIN
                     LET SCHEDULED.CRASHES.TEMP = 0
                     CONDITIONAL ON SCHED.FLAG
                       BEGIN
                         1: CONDITIONAL ON TYPE.ABBREV(CODE. VIA ID = CODE.ID)
                              BEGIN
                                'UP': LET SCHEDULED.CRASH.FLAG = 1
                                'SDN': LET SCHEDULED.CRASH.FLAG = 0
                                'LST': BEGIN
                                         IF SCHEDULED.CRASH.FLAG = 1
                                           THEN LET SCHEDULED.CRASHES.TEMP = 1
                                         LET SCHEDULED.CRASH.FLAG = 0
                                       END
                             END
                        2: LET SCHEDULED.CRASH.FLAG = 0
                      END
                    IF TYPE.ABBREV(CODE. VIA ID = CODE.ID) = 'LST'
                      THEN SELECT CRASH. VIA (SET.NO = SET.NO OF SYSTEM.TEMP,
                                              CLASS.ABBREV = CLASS.ABBREV OF SYSTEM.TEMP,
                                              CODE.ID = CODE.ID OF TIME.)
                             THEN ALTER CRASH. USING (SCHEDULED.CRASHES.TEMP + SCHEDULED.CRASHES FOR SCHEDULED.CRASHES)
                             ELSE INSERT INTO CRASH. USING (TITLE(CODE. VIA ID = CODE.ID) FOR CODE.TITLE,
                                                            0 FOR ALL.CRASHES,
                                                            SCHEDULED.CRASHES.TEMP FOR SCHEDULED.CRASHES,
                                                            0 FOR PRIME.CRASHES)
                   END  % for each time. %
               END  %for each system.temp %
           END  % 's' %
      'P': BEGIN
             FOR EACH SYSTEM.TEMP
               BEGIN
                 LET PRIME.CRASH.FLAG = 1
                 FOR EACH TIME. VIA (SYSTEM.ID = SYSTEM.ID OF SYSTEM.TEMP), WHERE
                                    (DATE. GE REPORT.START.DATE AND DATE. LE REPORT.END.DATE)
                   BEGIN
                     LET PRIME.CRASHES.TEMP = 0
                     CONDITIONAL ON PRIME.FLAG
                       BEGIN
                         1: CONDITIONAL ON TYPE.ABBREV(CODE. VIA ID = CODE.ID)
                              BEGIN
                                'UP': LET PRIME.CRASH.FLAG = 1
                                'SDN': LET PRIME.CRASH.FLAG = 0
                                'LST': BEGIN
                                         IF PRIME.CRASH.FLAG = 1
                                           THEN LET PRIME.CRASHES.TEMP = 1
                                         LET PRIME.CRASH.FLAG = 0
                                       END
                              END
                         2: LET PRIME.CRASH.FLAG = 0
                       END
                     IF TYPE.ABBREV(CODE. VIA ID = CODE.ID) = 'LST'
                       THEN SELECT CRASH. VIA (SET.NO = SET.NO OF SYSTEM.TEMP,
                                               CLASS.ABBREV = CLASS.ABBREV OF SYSTEM.TEMP,
                                               CODE.ID = CODE.ID OF TIME.)
                              THEN ALTER CRASH. USING (PRIME.CRASHES.TEMP + PRIME.CRASHES FOR PRIME.CRASHES)
                              ELSE INSERT INTO CRASH. USING (TITLE(CODE. VIA ID = CODE.ID) FOR CODE.TITLE,
                                                             0 FOR ALL.CRASHES,
                                                             0 FOR SCHEDULED.CRASHES,
                                                             PRIME.CRASHES.TEMP FOR PRIME.CRASHES)
                   END  % for each time. %
               END  % for each system.temp %
           END
      'ALL': BEGIN
               FOR EACH SYSTEM.TEMP
                 BEGIN
                   LET CRASH.FLAG = 1
                   LET SCHEDULED.CRASH.FLAG = 1
                   LET PRIME.FLAG = 1
                   FOR EACH TIME. VIA (SYSTEM.ID = SYSTEM.ID OF SYSTEM.TEMP), WHERE
                                      (DATE. GE REPORT.START.DATE AND DATE. LE REPORT.END.DATE)
                     BEGIN
                       LET ALL.CRASHES.TEMP = 0
                       LET SCHEDULED.CRASHES.TEMP = 0
                       LET PRIME.CRASHES.TEMP = 0
                       IF CRASH.FLAG = 1 AND TYPE.ABBREV(CODE. VIA ID = CODE.ID) = 'LST'
                         THEN LET ALL.CRASHES.TEMP = 1
                       IF TYPE.ABBREV(CODE. VIA ID = CODE.ID) = 'UP'
                         THEN LET CRASH.FLAG = 1
                         ELSE LET CRASH.FLAG = 0
                       CONDITIONAL ON SCHED.FLAG
                         BEGIN
                           1: CONDITIONAL ON TYPE.ABBREV(CODE. VIA ID = CODE.ID)
                                BEGIN
                                  'UP': LET SCHEDULED.CRASH.FLAG = 1
                                  'SDN': LET SCHEDULED.CRASH.FLAG = 0
                                  'LST': BEGIN
                                           IF SCHEDULED.CRASH.FLAG = 1
                                             THEN LET SCHEDULED.CRASHES.TEMP = 1
                                           LET SCHEDULED.CRASH.FLAG = 0
                                         END
                                END
                           2: LET SCHEDULED.CRASH.FLAG = 0
                         END
                       CONDITIONAL ON PRIME.FLAG
                         BEGIN
                           1: CONDITIONAL ON TYPE.ABBREV(CODE. VIA ID = CODE.ID)
                                BEGIN
                                  'UP': LET PRIME.CRASH.FLAG = 1
                                  'SDN': LET PRIME.CRASH.FLAG = 0
                                  'LST': BEGIN
                                           IF PRIME.CRASH.FLAG = 1
                                             THEN LET PRIME.CRASHES.TEMP = 1
                                           LET PRIME.CRASH.FLAG = 0
                                         END
                                END
                           2: LET PRIME.CRASH.FLAG = 0
                         END
                       IF TYPE.ABBREV(CODE. VIA ID = CODE.ID) = 'LST'
                         THEN SELECT CRASH. VIA (SET.NO = SET.NO OF SYSTEM.TEMP,
                                                 CLASS.ABBREV = CLASS.ABBREV OF SYSTEM.TEMP,
                                                 CODE.ID = CODE.ID OF TIME.)
                                THEN ALTER CRASH. USING (ALL.CRASHES.TEMP + ALL.CRASHES FOR ALL.CRASHES,
                                                         SCHEDULED.CRASHES.TEMP + SCHEDULED.CRASHES FOR SCHEDULED.CRASHES,
                                                         PRIME.CRASHES.TEMP + PRIME.CRASHES FOR PRIME.CRASHES)
                                ELSE INSERT INTO CRASH. USING (TITLE(CODE. VIA ID = CODE.ID) FOR CODE.TITLE,
                                                               ALL.CRASHES.TEMP FOR ALL.CRASHES,
                                                               SCHEDULED.CRASHES.TEMP FOR SCHEDULED.CRASHES,
                                                               PRIME.CRASHES.TEMP FOR PRIME.CRASHES)
                     END  % for each time. %
                  END  % for each system.temp %
             END
    END  %conditional on t.fr.time %

  IF T.FR.INPUT = 'ALL'
    THEN LET REPORT.COUNT.TEMP = REPORT.COUNT * 3
    ELSE LET REPORT.COUNT.TEMP = REPORT.COUNT
  TYPE @CR, 'THE NUMBER OF REPORTS TO BE GENERATED BY THIS PROCEDURE = ', REPORT.COUNT.TEMP, '.',
       @CR, 'THE REPORT(S) MAY ONLY BE PRINTED TO A FILE(S).', @CR
  LET REPORT.NO = 1
  WHILE REPORT.NO LE REPORT.COUNT
    DO IF T.FR.INPUT = 'ALL'
         THEN FOR EACH CLASS.TEMP WHERE (SET.NO = REPORT.NO)
                BEGIN
                  LET SUB.REPORT.COUNT = 1
                  WHILE SUB.REPORT.COUNT LE 3
                    DO BEGIN
                         TYPE @CR, 'THIS REPORT IS FOR TIME FRAME = '
                         CONDITIONAL ON SUB.REPORT.COUNT
                           BEGIN
                             1: TYPE '24 HOURS, '
                             2: TYPE 'SCHEDULED TIME, '
                             3: TYPE 'PRIME TIME, '
                           END
                         IF SYS.OR.CLS = 'S'
                           THEN TYPE 'SYSTEM = ', TRIM(SITE.SYSNO)
                           ELSE TYPE 'SITE = ', TRIM(SITE.INPUT)
                         TYPE ', AND CLASS = ', TRIM(CLASS.ABBREV), '.'
REP.GET.DEST.A:
BEGIN
                         TYPE @CR, 'PLEASE ENTER THE FILE NAME OF THE GRAPHICS AND STATISTICS',
                              @CR, 'FILE FOR THIS REPORT: '
                         ACCEPT OUTPUT.FILE
     
                         IF OUTPUT.FILE = 'T' OR 'TE' OR 'TER' OR 'TERM' OR 'TERMI' OR 'TERMIN' OR 'TERMINA' OR
                                          'TERMINAL' OR DEFAULT
                           THEN BEGIN
                                  TYPE @CR, 'THIS REPORT CAN ONLY BE PRINTED TO FILES.'
                                  REPEAT REP.GET.DEST.A
                                END
                         IF SUBSTR(OUTPUT.FILE,1,1) NE '('
                           THEN IF SUBSTR(OUTPUT.FILE,1,1) GE 'A'
                                  THEN IF POSITION(OUTPUT.FILE,'.') = 0
                                         THEN BEGIN
                                                IF LENGTH(OUTPUT.FILE) LE 6
                                                  THEN FINISH REP.GET.DEST.A
                                              END
                         TYPE @CR, 'ENTER ONLY THE FILE NAME; DO NOT INCLUDE A USER NAME, A',
                              @CR, 'SEPARATING PERIOD OR AN EXTENSION.  THE FILE NAME SHOULD',
                              @CR, 'NOT TOTAL MORE THAN 6 CHARACTERS AND THE FIRST CHARACTER',
                              @CR, 'MUST BE AN ALPHA CHARACTER FROM A-Z.'
                         REPEAT REP.GET.DEST.A
END  % rep.get.dest.a %
                         LET OUTPUT.FILE.1 = '(MURADMIN)' + TRIM(OUTPUT.FILE) + '.DAT'
                         TYPE @CR, 'THE GRAPHICS FILE WILL BE PRINTED TO THE FILE ', TRIM(OUTPUT.FILE.1), '.', @CR
                         LET OUTPUT.FILE.2 = '(MURADMIN)' + TRIM(OUTPUT.FILE) + '.RPT'
                         TYPE @CR, 'THE STATISTICS FILE WILL BE PRINTED TO THE FILE ', TRIM(OUTPUT.FILE.2), '.', @CR
                         WRITE REPORT RPT.A1, RPT.A2
                           BEGIN
                             PRINT TO RPT.A1 'GENERATE A PIE CHART.', @CR, 'TITLE IS "TYMSHARE '
                             PRINT TO RPT.A2 'TYMSHARE '
                             IF SYS.OR.CLS = 'S'
                               THEN BEGIN
                                      PRINT TO RPT.A1 TRIM(CLASS.TITLE), '"', @CR, '"SYSTEM ', TRIM(SITE.SYSNO),
                                            '"', @CR
                                      PRINT TO RPT.A2 TRIM(CLASS.TITLE), @TAB TO 60, 'Report date: ',
                                            TODAY AS DATE 'MM-DD-YY', @CR, 'SYSTEM ', TRIM(SITE.SYSNO), @CR
                                    END
                               ELSE BEGIN
                                      PRINT TO RPT.A1 TRIM(CLASS.TITLE), '"', @CR
                                      PRINT TO RPT.A2 TRIM(CLASS.TITLE), @TAB TO 60, 'Report date: ', TODAY
                                            AS DATE 'MM-DD-YY', @CR
                                      CONDITIONAL ON SITE.INPUT
                                        BEGIN
                                          'CUP': BEGIN
                                                   PRINT TO RPT.A1 '"CUPERTINO"', @CR
                                                   PRINT TO RPT.A2 'CUPERTINO', @CR
                                                 END
                                          'VF': BEGIN
                                                  PRINT TO RPT.A1 '"VALLEY FORGE"', @CR
                                                  PRINT TO RPT.A2 'VALLEY FORGE', @CR
                                                END
                                          'DAL': BEGIN
                                                   PRINT TO RPT.A1 '"DALLAS"', @CR
                                                   PRINT TO RPT.A2 'DALLAS', @CR
                                                 END
                                          'HOU': BEGIN
                                                   PRINT TO RPT.A1 '"HOUSTON"', @CR
                                                   PRINT TO RPT.A2 'HOUSTON', @CR
                                                 END
                                          'FRE': BEGIN
                                                   PRINT TO RPT.A1 '"FREMONT"', @CR
                                                   PRINT TO RPT.A2 'FREMONT', @CR
                                                 END
                                          'ALL': NOTHING
                                        END
                                  END
                             CONDITIONAL ON SUB.REPORT.COUNT
                               BEGIN
                                 1: BEGIN
                                      PRINT TO RPT.A1 '"CRASH CAUSES DURING 24 HOURS".', @CR
                                      PRINT TO RPT.A2 'CRASH CAUSES DURING 24 HOURS', @CR
                                    END
                                 2: BEGIN
                                      PRINT TO RPT.A1 '"CRASH CAUSES DURING SCHEDULED TIME".', @CR
                                      PRINT TO RPT.A2 'CRASH CAUSES DURING SCHEDULED TIME', @CR
                                    END
                                 3: BEGIN
                                      PRINT TO RPT.A1 '"CRASH CAUSES DURING PRIME TIME".', @CR
                                      PRINT TO RPT.A2 'CRASH CAUSES DURING PRIME TIME', @CR
                                    END
                               END
                             PRINT TO RPT.A2 'FROM: ', REPORT.START.DATE, '  TO: ', REPORT.END.DATE, @SKIP 2,
                                   @TAB TO 42, 'NUMBER', @TAB 10, 'PERCENTAGE', @CR, @TAB TO 15, 'CRASH CAUSE CODE',
                                   @TAB 7, 'OF OCCURRENCES', @TAB 7, 'OF TOTAL', @CR, @TAB TO 14, 18 * '-',
                                   @TAB 6, 14 * '-', @TAB 6, 10 * '-'
                             PRINT TO RPT.A1 'TITLE HEIGHT .25.', @CR, 'BORDER OFF.', @CR, 'SEQUENCE DATA.',
                                   @CR, '"', REPORT.START.DATE AS DATE 'MM-DD-YY', ' TO ', REPORT.END.DATE 
                                   AS DATE 'MM-DD-YY', '"', @CR
                             LET TOTAL.CRASHES = 0
                             FOR EACH CRASH. VIA (SET.NO = REPORT.NO)
                               BEGIN
                                 CONDITIONAL ON SUB.REPORT.COUNT
                                   BEGIN
                                     1: LET CRASH.COUNT = ALL.CRASHES
                                     2: LET CRASH.COUNT = SCHEDULED.CRASHES
                                     3: LET CRASH.COUNT = PRIME.CRASHES
                                   END
                                 PRINT TO RPT.A1 CRASH.COUNT AS '2ZN', ' '
                                 ADD CRASH.COUNT TO TOTAL.CRASHES
                               END
                             PRINT TO RPT.A1 @CR, 'END OF DATA.', @CR,
                                   'SLICE 1 SHADE PATTERN 45150.', @CR,
                                   'SLICE 2 SHADE PATTERN 145350.', @CR,
                                   'SLICE 3 SHADE PATTERN 135150.', @CR,
                                   'SLICE 4 SHADE PATTERN 45250.', @CR,
                                   'SLICE 5 SHADE PATTERN 45141.', @CR,
                                   'SLICE 6 SHADE PATTERN 135250.', @CR,
                                   'SLICE 7 SHADE PATTERN 45431.', @CR,
                                   'SLICE 8 SHADE PATTERN 30140.', @CR,
                                   'SLICE 9 SHADE PATTERN 45241.', @CR,
                                   'SLICE 10 SHADE PATTERN 151.', @CR,
                                   'SLICE 11 SHADE PATTERN 45350.', @CR,
                                   'SLICE 12 SHADE PATTERN 70450.', @CR,
                                   'SLICE 13 SHADE PATTERN 45351.', @CR,
                                   'SLICE 14 SHADE PATTERN 431.', @CR,
                                   'SLICE 15 SHADE PATTERN 135240.', @CR,
                                   'SLICE 16 SHADE PATTERN 140.', @CR,
                                   'SLICE 17 SHADE PATTERN 135141.', @CR,
                                   'DIVISION LABELS', @CR
                             TYPE @CR, 'THE FOLLOWING TYPE(S) OF CRASH CAUSES IS LESS THAN .1 % OF',
                                  @CR, 'THE TOTAL CRASH CAUSES (', TOTAL.CRASHES, '):', @CR
                             LET COL.COUNT = 0
                             FOR EACH CRASH. VIA (SET.NO = REPORT.NO)
                               BEGIN
                                 CONDITIONAL ON SUB.REPORT.COUNT
                                   BEGIN
                                     1: LET CRASH.COUNT = ALL.CRASHES
                                     2: LET CRASH.COUNT = SCHEDULED.CRASHES
                                     3: LET CRASH.COUNT = PRIME.CRASHES
                                   END
                                 LET PERCENT.TOTAL = (CRASH.COUNT / TOTAL.CRASHES) * 100
                                 CONDITIONAL ON CODE.TITLE
                                   BEGIN
                                     'COMM BOX 3705': LET CODE.TITLE = 'COMM. BOX 3705'
                                     'CUST INFO CONTR': LET CODE.TITLE = 'CUST. INFO. CONTR.'
                                     'DISC CLEAN': LET CODE.TITLE = 'DISK CLEAN'
                                     'NETWRK H/W': LET CODE.TITLE = 'NETWORK H/W'
                                     'NETWRK S/W': LET CODE.TITLE = 'NETWORK S/W'
                                     'NETWRK F.T. S/W': LET CODE.TITLE = 'NETWORK F.T. S/W'
                                     'NETWRK HARDWARE': LET CODE.TITLE = 'NETWORK H/W'
                                     'NETWRK SOFTWARE': LET CODE.TITLE = 'NETWORK S/W'
                                     'SELECTOR CHAN': LET CODE.TITLE = 'SELECTOR CHANNEL'
                                     'SYSTEM SOFTWARE': LET CODE.TITLE = 'SYSTEM S/W'
                                   END
                                 PRINT TO RPT.A2 @SKIP 1, @TAB TO 14, TRIM(CODE.TITLE), @TAB TO 43, CRASH.COUNT AS '2ZN'
                                 IF PERCENT.TOTAL LT .1
                                   THEN BEGIN
                                          TYPE @CR, @TAB 5, CODE.TITLE, @TAB 2, CRASH.COUNT, @TAB 2, PERCENT.TOTAL, ' %'
                                          PRINT TO RPT.A2 @TAB TO 61, '<0.1'
                                        END
                                   ELSE PRINT TO RPT.A2 @TAB TO 60, PERCENT.TOTAL
                                 LET COL.COUNT.TEMP = COL.COUNT + LENGTH(CODE.TITLE) + 3
                                 IF COL.COUNT.TEMP GE 80
                                   THEN BEGIN
                                          PRINT TO RPT.A1 @CR, '"', TRIM(CODE.TITLE), '" '
                                          LET COL.COUNT = LENGTH(CODE.TITLE) + 3
                                        END
                                   ELSE BEGIN
                                          PRINT TO RPT.A1 '"', TRIM(CODE.TITLE), '" '
                                          LET COL.COUNT = COL.COUNT + LENGTH(CODE.TITLE) + 3
                                        END
                               END
                             PRINT TO RPT.A1 '.', @CR, 'GO.'
                             PRINT TO RPT.A2 @CR, @TAB TO 38, 14 * '-', @CR, @TAB TO 42, TOTAL.CRASHES AS '3ZN'
                           END  % write report %
                         ADD 1 TO SUB.REPORT.COUNT
                       END
                  ADD 1 TO REPORT.NO
                END  % for each class.temp %
         ELSE BEGIN
                FOR EACH CLASS.TEMP WHERE (SET.NO = REPORT.NO)
                  BEGIN
                    TYPE @CR, 'THIS REPORT IS FOR TIME FRAME = '
                    CONDITIONAL ON T.FR.INPUT
                      BEGIN
                        '24': TYPE '24 HOUR, '
                        'S': TYPE 'SCHEDULED TIME, '
                        'P': TYPE 'PRIME TIME, '
                      END
                    IF SYS.OR.CLS = 'S'
                      THEN TYPE 'SYSTEM = ', TRIM(SITE.SYSNO)
                      ELSE TYPE 'SITE = ', TRIM(SITE.INPUT)
                    TYPE ', AND CLASS = ', TRIM(CLASS.ABBREV), '.'
REP.GET.DEST.B:
BEGIN
                    TYPE @CR, 'PLEASE ENTER THE FILE NAME OF THE GRAPHICS AND STATISTICS',
                         @CR, 'FILE FOR THIS REPORT: '
                    ACCEPT OUTPUT.FILE

                    IF OUTPUT.FILE = 'T' OR 'TE' OR 'TER' OR 'TERM' OR 'TERMI' OR 'TERMIN' OR 'TERMINA' OR
                                     'TERMINAL' OR DEFAULT
                      THEN BEGIN
                             TYPE @CR, 'THIS REPORT CAN ONLY BE PRINTED TO FILES.'
                             REPEAT REP.GET.DEST.B
                           END
                    IF SUBSTR(OUTPUT.FILE,1,1) NE '('
                      THEN IF SUBSTR(OUTPUT.FILE,1,1) GE 'A'
                             THEN IF POSITION(OUTPUT.FILE,'.') = 0
                                    THEN BEGIN
                                           IF LENGTH(OUTPUT.FILE) LE 6
                                             THEN FINISH REP.GET.DEST.B
                                         END
                    TYPE @CR, 'ENTER ONLY THE FILE NAME; DO NOT INCLUDE A USER NAME, A',
                         @CR, 'SEPARATING PERIOD OR AN EXTENSION.  THE FILE NAME SHOULD',
                         @CR, 'NOT TOTAL MORE THAN 6 CHARACTERS AND THE FIRST CHARACTER',
                         @CR, 'MUST BE AN ALPHA CHARACTER FROM A-Z.'
                    REPEAT REP.GET.DEST.B
END  % rep.get.dest.b %
                    LET OUTPUT.FILE.1 = '(MURADMIN)' + TRIM(OUTPUT.FILE) + '.DAT'
                    TYPE @CR, 'THE GRAPHICS FILE WILL BE PRINTED TO THE FILE ', TRIM(OUTPUT.FILE.1), '.', @CR
                    LET OUTPUT.FILE.2 = '(MURADMIN)' + TRIM(OUTPUT.FILE) + '.RPT'
                    TYPE @CR, 'THE STATISTICS FILE WILL BE PRINTED TO THE FILE ', TRIM(OUTPUT.FILE.2), '.', @CR
                    WRITE REPORT RPT.B1, RPT.B2
                      BEGIN
                        PRINT TO RPT.B1 'GENERATE A PIE CHART.', @CR, 'TITLE IS "TYMSHARE '
                        PRINT TO RPT.B2 'TYMSHARE '
                        IF SYS.OR.CLS = 'S'
                          THEN BEGIN
                                 PRINT TO RPT.B1 TRIM(CLASS.TITLE), '"', @CR, '"SYSTEM ', TRIM(SITE.SYSNO),
                                       '"', @CR
                                 PRINT TO RPT.B2 TRIM(CLASS.TITLE), @TAB TO 60, 'Report date: ',
                                       TODAY AS DATE 'MM-DD-YY', @CR, 'SYSTEM ', TRIM(SITE.SYSNO), @CR
                               END
                          ELSE BEGIN
                                 PRINT TO RPT.B1 TRIM(CLASS.TITLE), '"', @CR
                                 PRINT TO RPT.B2 TRIM(CLASS.TITLE), @TAB TO 60, 'Report date: ', TODAY
                                       AS DATE 'MM-DD-YY', @CR
                                 CONDITIONAL ON SITE.INPUT
                                   BEGIN
                                     'FRE': BEGIN
                                              PRINT TO RPT.B1 '"FREMONT"', @CR
                                              PRINT TO RPT.B2 'FREMONT', @CR
                                            END
                                     'ALL': NOTHING
                                   END
                               END
                        CONDITIONAL ON T.FR.INPUT
                          BEGIN
                            '24': BEGIN
                                    PRINT TO RPT.B1 '"CRASH CAUSES DURING 24 HOURS".', @CR
                                    PRINT TO RPT.B2 'CRASH CAUSES DURING 24 HOURS', @CR
                                  END
                            'S': BEGIN
                                   PRINT TO RPT.B1 '"CRASH CAUSES DURING SCHEDULED TIME".', @CR
                                   PRINT TO RPT.B2 'CRASH CAUSES DURING SCHEDULED TIME', @CR
                                 END
                            'P': BEGIN
                                   PRINT TO RPT.B1 '"CRASH CAUSES DURING PRIME TIME".', @CR
                                   PRINT TO RPT.B2 'CRASH CAUSES DURING PRIME TIME', @CR
                                 END
                          END
                        PRINT TO RPT.B2 'FROM: ', REPORT.START.DATE, '  TO: ', REPORT.END.DATE, @SKIP 2,
                              @TAB TO 42, 'NUMBER', @TAB 10, 'PERCENTAGE', @CR, @TAB TO 15, 'CRASH CAUSE CODE',
                              @TAB 7, 'OF OCCURRENCES', @TAB 7, 'OF TOTAL', @CR, @TAB TO 14, 18 * '-',
                              @TAB 6, 14 * '-', @TAB 6, 10 * '-'
                        PRINT TO RPT.B1 'TITLE HEIGHT .25.', @CR, 'BORDER OFF.', @CR, 'SEQUENCE DATA.',
                              @CR, '"', REPORT.START.DATE AS DATE 'MM-DD-YY', ' TO ', REPORT.END.DATE
                              AS DATE 'MM-DD-YY', '"', @CR
                        LET TOTAL.CRASHES = 0
                        FOR EACH CRASH. VIA (SET.NO = REPORT.NO)
                          BEGIN
                            CONDITIONAL ON T.FR.INPUT
                              BEGIN
                                '24': LET CRASH.COUNT = ALL.CRASHES
                                'S': LET CRASH.COUNT = SCHEDULED.CRASHES
                                'P': LET CRASH.COUNT = PRIME.CRASHES
                              END
                            PRINT TO RPT.B1 CRASH.COUNT AS '2ZN', ' '
                            ADD CRASH.COUNT TO TOTAL.CRASHES
                          END
                        PRINT TO RPT.B1 @CR, 'END OF DATA.', @CR,
                              'SLICE 1 SHADE PATTERN 45150.', @CR,
                              'SLICE 2 SHADE PATTERN 145350.', @CR,
                              'SLICE 3 SHADE PATTERN 135150.', @CR,
                              'SLICE 4 SHADE PATTERN 4525O.', @CR,
                              'SLICE 5 SHADE PATTERN 45141.', @CR,
                              'SLICE 6 SHADE PATTERN 135250.', @CR,
                              'SLICE 7 SHADE PATTERN 45431.', @CR,
                              'SLICE 8 SHADE PATTERN 30140.', @CR,
                              'SLICE 9 SHADE PATTERN 45241.', @CR,
                              'SLICE 10 SHADE PATTERN 151.', @CR,
                              'SLICE 11 SHADE PATTERN 45350.', @CR,
                              'SLICE 12 SHADE PATTERN 70450.', @CR,
                              'SLICE 13 SHADE PATTERN 45351.', @CR,
                              'SLICE 14 SHADE PATTERN 431.', @CR,
                              'SLICE 15 SHADE PATTERN 135240.', @CR,
                              'SLICE 16 SHADE PATTERN 140.', @CR,
                              'SLICE 17 SHADE PATTERN 135141.', @CR,
                              'DIVISION LABELS', @CR
                        TYPE @CR, 'THE FOLLOWING TYPE(S) OF CRASH CAUSES IS LESS THAN .1 % OF',
                             @CR, 'THE TOTAL CRASH CAUSES (', TOTAL.CRASHES, '):', @CR
                        LET COL.COUNT = 0
                        FOR EACH CRASH. VIA (SET.NO = REPORT.NO)
                          BEGIN
                            CONDITIONAL ON T.FR.INPUT
                              BEGIN
                                '24': LET CRASH.COUNT = ALL.CRASHES
                                'S': LET CRASH.COUNT = SCHEDULED.CRASHES
                                'P': LET CRASH.COUNT = PRIME.CRASHES
                              END
                            LET PERCENT.TOTAL = (CRASH.COUNT / TOTAL.CRASHES) * 100
                            CONDITIONAL ON CODE.TITLE
                              BEGIN
                                'COMM BOX 3705': LET CODE.TITLE = 'COMM. BOX 3705'
                                'CUST INFO CONTR': LET CODE.TITLE = 'CUST. INFO. CONTR.'
                                'DISC CLEAN': LET CODE.TITLE = 'DISK CLEAN'
                                'NETWRK H/W': LET CODE.TITLE = 'NETWORK H/W'
                                'NETWRK S/W': LET CODE.TITLE = 'NETWORK S/W'
                                'NETWRK F.T. S/W': LET CODE.TITLE = 'NETWORK F.T. S/W'
                                'NETWRK HARDWARE': LET CODE.TITLE = 'NETWORK H/W'
                                'NETWRK SOFTWARE': LET CODE.TITLE = 'NETWORK S/W'
                                'OPER PERS ERR': LET CODE.TITLE = 'OPER/PERS/ERR'
                                'SELECTOR CHAN': LET CODE.TITLE = 'SELECTOR CHANNEL'
                                'SYSTEM SOFTWARE': LET CODE.TITLE = 'SYSTEM S/W'
                              END
                            PRINT TO RPT.B2 @SKIP 1, @TAB TO 14, TRIM(CODE.TITLE), @TAB TO 43, CRASH.COUNT AS '2ZN'
                            IF PERCENT.TOTAL LT .1
                              THEN BEGIN
                                     TYPE @CR, @TAB 5, CODE.TITLE, @TAB 2, CRASH.COUNT, @TAB 2, PERCENT.TOTAL, ' %'
                                     PRINT TO RPT.B2 @TAB TO 61, '<0.1'
                                   END
                              ELSE PRINT TO RPT.B2 @TAB TO 60, PERCENT.TOTAL
                            LET COL.COUNT.TEMP = COL.COUNT + LENGTH(CODE.TITLE) + 3
                            IF COL.COUNT.TEMP GE 80
                              THEN BEGIN
                                     PRINT TO RPT.B1 @CR, '"', TRIM(CODE.TITLE), '" '
                                     LET COL.COUNT = LENGTH(CODE.TITLE) + 3
                                   END
                              ELSE BEGIN
                                     PRINT TO RPT.B1 '"', TRIM(CODE.TITLE), '" '
                                     LET COL.COUNT = COL.COUNT + LENGTH(CODE.TITLE) + 3
                                   END
                          END
                        PRINT TO RPT.B1 '.', @CR, 'GO.'
                        PRINT TO RPT.B2 @CR, @TAB TO 38, 14 * '-', @CR, @TAB TO 42, TOTAL.CRASHES AS '3ZN'
                        ADD 1 TO REPORT.NO
                      END  % write report %
                  END  % for each class.temp %
              END  % for each class.temp %

END  % entire.procedure %
   `Akbm