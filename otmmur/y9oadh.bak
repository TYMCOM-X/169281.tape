PROCEDURE INFO
 BEGIN

 FIELDS
NEW.PRIME.STOP           SAME AS PRIME.STOP,
YEAR.            AS "NN",
C.HW.ID         SAME AS HW.ID,
DATE.INPUT      SAME AS DATE.,
NEW.PRIME.START          SAME AS PRIME.START,
NEW.START.DATE           SAME AS START.DATE,
NEW.END.DATE             SAME AS END.DATE,
EARLIEST.DATE            SAME AS END.DATE,
LATEST.DATE              SAME AS END.DATE,
FIRST.FLAG               AS "N",
NEW.APPLICABLE           SAME AS APPLICABLE,
 AFFECTED.ID             SAME AS ID,
 HIGH.ID                 SAME AS ID,
 NEW.HW.ID               SAME AS HW.ID,
 NEW.SCHED.UP            SAME AS SCHED.UP,
 NEW.SCHED.DN            SAME AS SCHED.DN,
 NEW.TIME                SAME AS SCHED.UP,
 NEW.ABBREV              SAME AS ABBREV,
 NEW.CLASS               SAME AS ABBREV,
 NEW.SYSNO               SAME AS SYSNO,
 NEW.TITLE               SAME AS TITLE,
 CHANGE.ENTRY            AS "C",
 CHANGE                  AS "C",
 ADD.CHANGE              AS "C",
 ABBREV.TO.CHANGE        SAME AS ABBREV,
 QUESTION                AS "2Z",
 INPUT.COMMAND           AS "24C",
 ANSWER                  AS "C",
CODE.START.DATE          SAME AS DATE.,
CODE.END.DATE            SAME AS DATE.,
CODE.DATE                SAME AS DATE.,
 NEW.EXCEPTION.FLAG      SAME AS EXCEPTION.FLAG,
 NEW.CLASS.ID            SAME AS CLASS.ID,
 NEW.SITE.ID             SAME AS SITE.ID,
 NEW.SYSTEM.ID           SAME AS ID,
 HIGH.POS                SAME AS POS,
 NEW.POS                 SAME AS POS,
 CURRENT.POS             SAME AS POS,
 NEW.GROUP.ID            SAME AS ID,
 NEW.TYPE.ABBREV         SAME AS ABBREV,
 NEW.GROUP               SAME AS ABBREV,
 NEW.CODE                SAME AS CODE,
 CODE.TO.CHANGE          SAME AS CODE,
 NEW.GROUP.ABBREV        SAME AS ABBREV,
 GROUP.ABBREV            SAME AS ABBREV

CONTROLS FOR RELATIONS CONCURRENT UPDATE

RELATION L.NORMAL.SCHEDULE. SAME AS NORMAL.SCHEDULE.

PROCEDURE CHECK.USER.ID
BEGIN
 IF USER.NAME = "DANIELSR"
    THEN NOTHING
    ELSE ABORT @CR,"FOR ASSISTANCE, CALL RICK DANIELS AT (415)794-2509",@CR
END

 ENTIRE.PROCEDURE:
 BEGIN

  TYPE @CR,"> "
  ACCEPT INPUT.COMMAND

  IF INPUT.COMMAND ="QUIT" OR "Q" OR "EXIT" OR "EXI" OR "QUI" THEN
   FINISH ENTIRE.PROCEDURE

%%
IF INPUT.COMMAND="HELP" OR "HEL" OR "?" THEN
   BEGIN
   TYPE @CR,"VALID COMMANDS:",@CR,@CR
   TYPE "ADD SITE       ADD NEW SITE",@CR
   TYPE "ADD CLASS      ADD NEW CLASS",@CR
   TYPE "ADD SYSTEM     ADD NEW SYSTEM",@CR
   TYPE "ADD GROUP      ADD NEW CODE GROUP",@CR
   TYPE "ADD CODE       ADD NEW CODE",@CR
   TYPE "ADD HOLIDAY    ADD NEW HOLIDAY",@CR
   TYPE "CHANGE SITE    CHANGE EXISTING SITE",@CR
   TYPE "CHANGE CLASS   CHANGE EXISTING CLASS",@CR
   TYPE "CHANGE SYSTEM  CHANGE EXISTING SYSTEM",@CR,@CR
   TYPE "CHANGE GROUP   CHANGE EXISTING GROUP",@CR
   TYPE "CHANGE CODE    CHANGE EXISTING CODE",@CR
   TYPE "LIST SITES     TYPES ALL SITES",@CR
   TYPE "LIST CLASSES   TYPES ALL CLASSES",@CR
   TYPE "LIST SYSTEM    TYPES A GIVEN SYSTEM",@CR
   TYPE "LIST SYSTEMS   TYPES ALL SYSTEMS",@CR
   TYPE "LIST GROUPS    TYPES ALL GROUPS",@CR
   TYPE "LIST CODES     TYPES ALL CODES FOR A GIVEN CLASS FOR A GIVEN DATE RANGE",@CR
   TYPE "LIST CODE      TO LIST A GIVEN CODE USE CHANGE CODE",@CR
   TYPE "LIST TYPE      TYPES OUT ALL CODE TYPES (CANNOT BE MODIFIED)",@CR
   TYPE "LIST HOLIDAYS  TYPES ALL HOLIDAYS FOR A GIVEN YEAR",@CR
   TYPE "DELETE SITE    DELETES AN EXISTING SITE",@CR
   TYPE "DELETE CLASS   DELETES AN EXISTING CLASS",@CR
   TYPE "DELETE SYSTEM  DELETES AN EXISTING SYSTEM",@CR,@CR
   TYPE "DELETE GROUP   DELETES AN EXISTING CODE GROUP",@CR
   TYPE "DELETE CODE    DELETES AN EXITSING CODE",@CR
   TYPE "DELETE HOLIDAY DELETES AN EXISTING HOLIDAY",@CR
   TYPE "QUIT,EXIT,OR Q RETURNS TO MAGNUM COMMAND LEVEL",@CR
   TYPE "HELP OR ?      RETYPES THIS LIST",@CR,@CR
   TYPE "DATE INPUT IS IN MM-DD-YY FORMAT UNLESS SPECIFIED OTHERWISE",@CR
   TYPE "SITE,CLASS,GROUP, AND TYPE INPUT IS THE ABBREVIATION UNLESS SPECIFIED OTHERWISE",@CR
   TYPE "SYSTEM INPUT IS THE SOFTWARE SYSTEM NUMBER UNLESS SPECIFIED OTHERWISE",@CR
   TYPE "CODE INPUT IS THE CODE NUMBER UNLESS SPECIFIED OTHERWISE",@CR,@CR
   REPEAT ENTIRE.PROCEDURE
   END
%%
  IF INPUT.COMMAND ="ADD SITE" THEN
  A1:
   BEGIN

  APPLY CHECK.USER.ID

   TYPE @CR,"TITLE: "
   ACCEPT NEW.TITLE
   IF NEW.TITLE ="" THEN
    BEGIN
    TYPE "ILLEGAL TITLE",@CR,@CR
    REPEAT ENTIRE.PROCEDURE
    END
   TYPE "ABBREV: "
   ACCEPT NEW.ABBREV
   IF NEW.ABBREV ="" THEN
   BEGIN
   TYPE "ILLEGAL ABBREV",@CR,@CR
   REPEAT ENTIRE.PROCEDURE
   END
   FOR EACH SITE.
    BEGIN
    IF TITLE = NEW.TITLE THEN
     BEGIN
     TYPE "A SITE WITH THAT TITLE ALREADY EXISTS",@CR,@CR
     REPEAT ENTIRE.PROCEDURE
     END
    IF ABBREV = NEW.ABBREV THEN
     BEGIN
     TYPE "A SITE WITH THAT ABBREV ALREADY EXISTS",@CR
     REPEAT A1
     END
    END
   FOR EACH SITE. LET HIGH.ID =ID
   LET ID =HIGH.ID +1
   LET ABBREV = NEW.ABBREV
   LET TITLE = NEW.TITLE
   INSERT INTO SITE.
   TYPE "NEW SITE ENTERED",@CR,@CR
   FINISH ENTIRE.PROCEDURE
   END %ADD SITE%

%%
  IF INPUT.COMMAND ="CHANGE SITE" THEN
  B1:
   BEGIN

  APPLY CHECK.USER.ID

   TYPE @CR,"ABBREV: "
   ACCEPT ABBREV.TO.CHANGE
   LET AFFECTED.ID =0
   FOR EACH SITE.
    BEGIN
    IF ABBREV.TO.CHANGE = ABBREV THEN
     BEGIN
     LET AFFECTED.ID = ID
     TYPE "NEW ABBREV: "
     ACCEPT NEW.ABBREV
     IF NEW.ABBREV ="" THEN
      BEGIN
      TYPE "ILLEGAL ABBREV",@CR,@CR
      REPEAT ENTIRE.PROCEDURE
      END
     TYPE "NEW TITLE: "
     ACCEPT NEW.TITLE
     IF NEW.TITLE ="" THEN
      BEGIN
      TYPE "ILLEGAL TITLE",@CR,@CR
      REPEAT ENTIRE.PROCEDURE
      END
     FOR EACH SITE. WHERE ID # AFFECTED.ID
      BEGIN
      IF ABBREV = NEW.ABBREV THEN
       BEGIN
       TYPE "A SITE WITH THAT ABBREV ALREADY EXISTS",@CR,@CR
       REPEAT B1
       END
      IF TITLE = NEW.TITLE THEN
       BEGIN
       TYPE "A SITE WITH THAT TITLE ALREADY EXISTS",@CR,@CR
       REPEAT B1
       END
      END
     LET ID = AFFECTED.ID
     LET ABBREV = NEW.ABBREV
     LET TITLE = NEW.TITLE
     ALTER SITE.
     TYPE "SITE CHANGED",@CR,@CR
     FINISH ENTIRE.PROCEDURE
     END %IF SITE TO CHANGE EXISTS%
    END %FOR EACH SITE%
   TYPE "NO SUCH SITE",@CR,@CR
   REPEAT ENTIRE.PROCEDURE
   END %CHANGE SITE%

%%
   IF INPUT.COMMAND ="DELETE SITE" THEN
    BEGIN

   APPLY CHECK.USER.ID

    TYPE "ABBREV: "
    ACCEPT NEW.ABBREV
    LET AFFECTED.ID =0
    FOR EACH SITE. WHERE ABBREV = NEW.ABBREV LET AFFECTED.ID =ID
    IF AFFECTED.ID =0 THEN
     BEGIN
     TYPE "NO SUCH SITE",@CR,@CR
     REPEAT ENTIRE.PROCEDURE
     END
    FOR EACH SYSTEM. WHERE SITE.ID =AFFECTED.ID
        BEGIN
        TYPE "THIS SITE MAY NOT BE DELETED",@CR
        REPEAT ENTIRE.PROCEDURE
        END
    DELETE FROM SITE. VIA ID =AFFECTED.ID
    TYPE "SITE DELETED",@CR,@CR
    FINISH ENTIRE.PROCEDURE
    END %DELETE SITE%

%%
   IF INPUT.COMMAND ="LIST SITES" THEN
    BEGIN
    TYPE @CR,"SITES AS OF ",
   (TIME/60/60) AS "ZN",":",(TIME/60-((TIME/60/60)*60)) AS "NN"," ",
   TODAY AS DATE "WWW MMM ZD,YYYY",@CR,@CR
    FOR EACH SITE. SORTED ON ABBREV TYPE ABBREV," ",TRIM(TITLE),@CR
    TYPE @CR
    REPEAT ENTIRE.PROCEDURE
    END %LIST SITE%

%%
  IF INPUT.COMMAND ="ADD CLASS" THEN
  A2:
   BEGIN

   APPLY CHECK.USER.ID

   TYPE @CR,"ABBREV: "
   ACCEPT NEW.ABBREV
   IF NEW.ABBREV ="" THEN
    BEGIN
    TYPE "ILLEGAL ABBREV",@CR,@CR
    REPEAT ENTIRE.PROCEDURE
    END
   TYPE "TITLE: "
   ACCEPT NEW.TITLE
   IF NEW.TITLE ="" THEN
    BEGIN
    TYPE "ILLEGAL TITLE",@CR,@CR
    REPEAT ENTIRE.PROCEDURE
    END
   FOR EACH CLASS.
    BEGIN
    IF TITLE = NEW.TITLE THEN
     BEGIN
     TYPE "A CLASS WITH THAT TITLE ALREADY EXISTS",@CR,@CR
     REPEAT ENTIRE.PROCEDURE
     END
    IF ABBREV = NEW.ABBREV THEN
     BEGIN
     TYPE "A CLASS WITH THAT ABBREV ALREADY EXISTS",@CR
     REPEAT A2
     END
    END
   LET HIGH.ID =0
   FOR EACH CLASS. IF ID>HIGH.ID THEN LET HIGH.ID =ID
   LET ID =HIGH.ID +1
   LET ABBREV = NEW.ABBREV
   LET TITLE = NEW.TITLE
   INSERT INTO CLASS.
   TYPE "NEW CLASS ENTERED",@CR,@CR
   FINISH ENTIRE.PROCEDURE
   END %ADD SITE%

%%
  IF INPUT.COMMAND ="CHANGE CLASS" THEN
  B2:
   BEGIN

   APPLY CHECK.USER.ID

   TYPE @CR,"ABBREV: "
   ACCEPT ABBREV.TO.CHANGE
   LET AFFECTED.ID =0
   FOR EACH CLASS.
    BEGIN
    IF ABBREV.TO.CHANGE = ABBREV THEN
     BEGIN
     LET AFFECTED.ID = ID
     TYPE "NEW ABBREV: "
     ACCEPT NEW.ABBREV
     IF NEW.ABBREV ="" THEN
      BEGIN
      TYPE "ILLEGAL ABBREV",@CR,@CR
      REPEAT ENTIRE.PROCEDURE
      END
     TYPE "NEW TITLE: "
     ACCEPT NEW.TITLE
     IF NEW.TITLE ="" THEN
     BEGIN
     TYPE "ILLEGAL TITLE",@CR,@CR
     REPEAT ENTIRE.PROCEDURE
     END
     FOR EACH CLASS. WHERE ID # AFFECTED.ID
      BEGIN
      IF ABBREV = NEW.ABBREV THEN
       BEGIN
       TYPE "A CLASS WITH THAT ABBREV ALREADY EXISTS",@CR,@CR
       REPEAT B2
       END
      IF TITLE = NEW.TITLE THEN
       BEGIN
       TYPE "A CLASS WITH THAT TITLE ALREADY EXISTS",@CR,@CR
       REPEAT B2
       END
      END
     LET ID = AFFECTED.ID
     LET ABBREV = NEW.ABBREV
     LET TITLE = NEW.TITLE
     ALTER CLASS.
     TYPE "CLASS CHANGED",@CR,@CR
     FINISH ENTIRE.PROCEDURE
     END %IF CLASS TO CHANGE EXISTS%
    END %FOR EACH CLASS%
   TYPE "NO SUCH CLASS",@CR,@CR
   REPEAT ENTIRE.PROCEDURE
   END %CHANGE SITE%

%%
   IF INPUT.COMMAND ="DELETE CLASS" THEN
    BEGIN

    APPLY CHECK.USER.ID

    TYPE "ABBREV: "
    ACCEPT NEW.ABBREV
    LET AFFECTED.ID =0
    FOR EACH CLASS. WHERE ABBREV = NEW.ABBREV LET AFFECTED.ID =ID
    IF AFFECTED.ID =0 THEN
     BEGIN
     TYPE "NO SUCH CLASS",@CR,@CR
     REPEAT ENTIRE.PROCEDURE
     END
    FOR EACH CODE. WHERE CLASS.ID =AFFECTED.ID
        BEGIN
        TYPE "THIS CLASS MAY NOT BE DELETED",@CR
        REPEAT ENTIRE.PROCEDURE
        END
    FOR EACH SYSTEM. WHERE CLASS.ID=AFFECTED.ID
        BEGIN
        TYPE "THIS CLASS MAY NOT BE DELETED",@CR,@CR
        REPEAT ENTIRE.PROCEDURE
        END
    DELETE FROM CLASS. VIA ID =AFFECTED.ID
    TYPE "CLASS DELETED",@CR,@CR
    FINISH ENTIRE.PROCEDURE
    END %DELETE CLASS%

%%
   IF INPUT.COMMAND ="LIST CLASSES" THEN
    BEGIN
    TYPE @CR,"CLASSES AS OF ",
   (TIME/60/60) AS "ZN",":",(TIME/60-((TIME/60/60)*60)) AS "NN"," ",
   TODAY AS DATE "WWW MMM ZD,YYYY",@CR,@CR
    FOR EACH CLASS. SORTED ON ABBREV TYPE ABBREV," ",TRIM(TITLE),@CR
    TYPE @CR
    REPEAT ENTIRE.PROCEDURE
    END %LIST CLASS%

%%
IF INPUT.COMMAND ="ADD SYSTEM" OR "CHANGE SYSTEM" THEN
BEGIN

APPLY CHECK.USER.ID

IF INPUT.COMMAND ="CHANGE SYSTEM" THEN
   BEGIN
   LET ADD.CHANGE ="Y"
   LET CHANGE ="Y"
   LET CHANGE.ENTRY ="Y"
   LET QUESTION =0
   END
 ELSE
   BEGIN
   LET ADD.CHANGE ="N"
   LET CHANGE ="N"
   LET CHANGE.ENTRY ="N"
   END



ADD.SYSTEM.COMMAND:
BEGIN
QUESTIONS:
BEGIN

 QUESTION.1:
 BEGIN
 IF CHANGE ="Y" AND CHANGE.ENTRY ="Y" THEN FINISH QUESTIONS
 IF ADD.CHANGE="Y" AND QUESTION#1 THEN
  FINISH QUESTION.1
 IF CHANGE ="Y" THEN
  BEGIN
  TYPE @CR,"THE SYSTEM NUMBER MAY NOT BE CHANGED",@CR,@CR
  FINISH ENTIRE.PROCEDURE
  END
 TYPE @CR,"1. SYSTEM NUMBER: "
 ACCEPT NEW.SYSNO
 IF NEW.SYSNO =0 THEN
  BEGIN
  TYPE "ILLEGAL SYSTEM NUMBER",@CR,@CR
  REPEAT QUESTION.1
  END
  FOR EACH SYSTEM. WHERE SYSNO=NEW.SYSNO AND END.DATE>=TODAY
      BEGIN
      TYPE @CR,"CONFLICT WITH EXISTING SYSTEM-1",@CR,@CR
      REPEAT ENTIRE.PROCEDURE
      END
  FOR EACH SYSTEM. LET HIGH.ID =ID
  LET ID =HIGH.ID +1
  LET SYSNO =NEW.SYSNO
  LET SYSTEM.ID=ID
  IF ADD.CHANGE ="Y" THEN FINISH QUESTIONS
  END %QUESTION.1%



 QUESTION.2:
  BEGIN
 IF ADD.CHANGE="Y" AND QUESTION#2 THEN
  FINISH QUESTION.2
  TYPE "2. SITE ABBREV: "
  ACCEPT NEW.ABBREV
  LET NEW.SITE.ID=0
  FOR EACH SITE. WHERE ABBREV =NEW.ABBREV LET NEW.SITE.ID =ID
   IF NEW.SITE.ID =0 THEN
    BEGIN
    TYPE @CR,"NO SUCH SITE",@CR
    REPEAT QUESTION.2
    END
 LET SITE.ID =NEW.SITE.ID
 IF ADD.CHANGE ="Y" THEN FINISH QUESTIONS
 END %QUESTION.2%



 QUESTION.3:
 BEGIN
 IF ADD.CHANGE="Y" AND QUESTION#3 THEN
  FINISH QUESTION.3
 IF CHANGE="Y" THEN
    BEGIN
    TYPE @CR,"CLASS MAY NOT BE CHANGED",@CR,@CR
    FINISH ENTIRE.PROCEDURE
    END
   TYPE "3. CLASS ABBREV: "
   ACCEPT NEW.ABBREV
   LET ANSWER ="N"
   FOR EACH CLASS. WHERE ABBREV =NEW.ABBREV
    BEGIN
    LET ANSWER ="Y"
    LET CLASS.ID =ID
    END
   IF ANSWER ="N" THEN
    BEGIN
    TYPE @CR,"NO SUCH CLASS ABBREV",@CR
    REPEAT QUESTION.3
    END
   LET NEW.CLASS.ID=CLASS.ID
 IF ADD.CHANGE ="Y" THEN FINISH QUESTIONS
 END %QUESTION.3%



 QUESTION.4:
 BEGIN
 IF ADD.CHANGE="Y" AND QUESTION#4 THEN
  FINISH QUESTION.4
  TYPE "4. HARDWARE ID: "
  ACCEPT HW.ID
LET C.HW.ID=HW.ID
IF CHANGE="Y" THEN LET NEW.CLASS.ID=CLASS.ID(SYSTEM. VIA ID=SYSTEM.ID)
FOR EACH SYSTEM.
    IF CLASS.ID=NEW.CLASS.ID AND
       HW.ID=C.HW.ID AND
       SYSTEM.ID#ID AND
       END.DATE>=TODAY THEN
           BEGIN
           TYPE @CR,TRIM(TITLE(SITE. VIA ID=SITE.ID))," "
           TYPE TRIM(ABBREV(CLASS. VIA ID=CLASS.ID))," SYSTEM "
           TYPE SYSNO," IS ALSO ASSIGNED TO HARDWARE ",TRIM(HW.ID),@CR
           DUP.HW:
           BEGIN
           TYPE "DO YOU WISH TO CONTINUE? " ACCEPT ANSWER
           IF ANSWER ="Y" OR "N" THEN NOTHING ELSE REPEAT DUP.HW
           END %DUP.HW%
           IF ANSWER="N" THEN
              BEGIN
              TYPE @CR
              REPEAT ENTIRE.PROCEDURE
              END
           END

  LET NEW.HW.ID =C.HW.ID
 IF ADD.CHANGE ="Y" THEN FINISH QUESTIONS
 END %QUESTION.4%



QUESTION.5:
BEGIN
 IF ADD.CHANGE="Y" AND QUESTION#5 THEN FINISH QUESTION.5
 DELETE FROM L.NORMAL.SCHEDULE. VIA SYSTEM.ID
 INPUT.SCHEDULE:
  BEGIN
  TYPE "5. SCHED.UP,SCHED.DN: "
  ACCEPT NEW.SCHED.UP,NEW.SCHED.DN
  IF NEW.SCHED.UP<0 OR >2400 THEN REPEAT INPUT.SCHEDULE
  IF NEW.SCHED.UP-((NEW.SCHED.UP/100)*100)>59 THEN REPEAT INPUT.SCHEDULE
  IF NEW.SCHED.DN<0 OR >2400 THEN REPEAT INPUT.SCHEDULE
  IF NEW.SCHED.DN-((NEW.SCHED.DN/100)*100)>59 THEN REPEAT INPUT.SCHEDULE
  IF NEW.SCHED.UP>NEW.SCHED.DN THEN REPEAT INPUT.SCHEDULE
  LET NEW.SCHED.UP=((NEW.SCHED.UP/100)*60)+(NEW.SCHED.UP-(NEW.SCHED.UP/100)*100)
  LET NEW.SCHED.DN=((NEW.SCHED.DN/100)*60)+(NEW.SCHED.DN-(NEW.SCHED.DN/100)*100)
  CHECK.SCHEDULE:
   BEGIN
   FOR EACH L.NORMAL.SCHEDULE. VIA SYSTEM.ID SORTED ON SCHED.UP
    IF NEW.SCHED.UP>SCHED.DN OR NEW.SCHED.DN<SCHED.UP THEN NOTHING ELSE
     BEGIN
     TYPE "THAT ENTRY CONFLICTS WITH A PREVIOUS ENTRY AND IS NOT RETAINED",@CR
     TYPE "PREVIOUS ENTRIES, HOWEVER, ARE RETAINED",@CR
     FINISH CHECK.SCHEDULE
     END
   INSERT INTO L.NORMAL.SCHEDULE. USING
    (NEW.SCHED.UP FOR SCHED.UP,NEW.SCHED.DN FOR SCHED.DN)
   END %CHECK SCHEDULE%
  MSI:
   BEGIN
    TYPE "MORE SCHEDULE INPUT? "
    ACCEPT ANSWER
    IF ANSWER="Y" OR "N" THEN NOTHING ELSE REPEAT MSI
   END %MSI%
   IF ANSWER="Y" THEN REPEAT INPUT.SCHEDULE
  END %INPUT.SCHEDULE%
   IF ADD.CHANGE="Y" THEN FINISH QUESTIONS
  END %QUESTION.5%



 QUESTION.6:
 BEGIN
 IF ADD.CHANGE="Y" AND QUESTION#6 THEN
  FINISH QUESTION.6
   TYPE "6. PRIME START,STOP TIMES: "
   ACCEPT PRIME.START,PRIME.STOP
   IF PRIME.START <0 OR >2400 THEN REPEAT QUESTION.6
   IF PRIME.STOP<0 OR >2400 OR <PRIME.START THEN REPEAT QUESTION.6
   IF PRIME.START-((PRIME.START/100)*100)>59 THEN REPEAT QUESTION.6
   IF PRIME.STOP-((PRIME.STOP/100)*100)>59 THEN REPEAT QUESTION.6
   LET NEW.PRIME.START =((PRIME.START/100)*60)+(PRIME.START-(PRIME.START/100)*100)
   LET NEW.PRIME.STOP =((PRIME.STOP/100)*60)+(PRIME.STOP-(PRIME.STOP/100)*100)
   LET PRIME.START=NEW.PRIME.START
   LET PRIME.STOP=NEW.PRIME.STOP
 IF ADD.CHANGE ="Y" THEN FINISH QUESTIONS
 END %QUESTION.6%



QUESTION.7:
BEGIN
IF ADD.CHANGE="Y" AND QUESTION#7 THEN
   FINISH QUESTION.7
   TYPE "7. APPLICABLE? "
   ACCEPT APPLICABLE
   IF APPLICABLE="Y" OR "N" THEN NOTHING ELSE
      BEGIN
      TYPE "ENTER Y OR N, ONLY",@CR
      REPEAT QUESTION.7
      END
   LET NEW.APPLICABLE=APPLICABLE
  IF ADD.CHANGE="Y" THEN FINISH QUESTIONS
 END %QUESTION.7%



 QUESTION.8:
 BEGIN
 IF ADD.CHANGE="Y" AND QUESTION#8 THEN FINISH QUESTION.8
 IF CHANGE="N" THEN
  BEGIN
  LET END.DATE ="12-31-99" AS DATE "MM-DD-YY"
  LET NEW.END.DATE=END.DATE
  FOR EACH SYSTEM. WHERE SYSNO=NEW.SYSNO AND ID#SYSTEM.ID
       IF NEW.END.DATE>=START.DATE AND <=END.DATE THEN
       BEGIN
       TYPE @CR,"CONFLICT WITH EXISTING SYSTEM-2",@CR,@CR
       REPEAT ENTIRE.PROCEDURE
       END
  FINISH QUESTION.8
  END
  TYPE "8. END DATE: "
  ACCEPT NEW.END.DATE
  IF NEW.END.DATE<START.DATE(SYSTEM. VIA ID=SYSTEM.ID) THEN
     BEGIN
     TYPE "END DATE LESS THAN START DATE",@CR
     REPEAT QUESTION.8
     END
CHECK.END.DATE:
  FOR EACH TIME. VIA SYSTEM.ID SORTED ON -DATE.
      BEGIN
      IF NEW.END.DATE<DATE. THEN
         BEGIN
         TYPE @CR,"EARLIEST ALLOWABLE END DATE IS ",DATE.,@CR
         REPEAT ENTIRE.PROCEDURE
         END
      FINISH CHECK.END.DATE
      END
LET END.DATE=NEW.END.DATE
LET NEW.START.DATE=START.DATE(SYSTEM. VIA ID=SYSTEM.ID)
  FOR EACH SYSTEM. WHERE ID#SYSTEM.ID AND SYSNO=NEW.SYSNO
     IF NOT (START.DATE>NEW.END.DATE OR NEW.START.DATE>END.DATE) THEN
         BEGIN
         TYPE @CR,"CONFLICT WITH EXISTING SYSTEM-3",@CR,@CR
         REPEAT ENTIRE.PROCEDURE
         END
IF ADD.CHANGE="Y" THEN FINISH QUESTIONS
END %QUESTION.8%



QUESTION.9:
BEGIN
IF ADD.CHANGE="Y" AND QUESTION#9 THEN FINISH QUESTION.9
   TYPE "9. START DATE: "
   ACCEPT NEW.START.DATE
   SELECT SYSTEM. VIA ID=SYSTEM.ID THEN LET NEW.END.DATE=END.DATE
   IF NEW.START.DATE>NEW.END.DATE THEN
      BEGIN
      TYPE @CR,"START DATE GREATER THAN END DATE",@CR
      REPEAT ENTIRE.PROCEDURE
      END
  FOR EACH SYSTEM. WHERE ID#SYSTEM.ID AND SYSNO=NEW.SYSNO
      IF NOT (START.DATE>NEW.END.DATE OR NEW.START.DATE>END.DATE) THEN
         BEGIN
         TYPE @CR,"CONFLICT WITH EXISTING SYSTEM-4",@CR
         REPEAT ENTIRE.PROCEDURE
         END
   GET.LATEST.DATE:
       FOR EACH TIME. VIA SYSTEM.ID SORTED ON DATE.
           BEGIN
           IF NEW.START.DATE>DATE. THEN
              BEGIN
              TYPE @CR,"LATEST VALID START DATE IS ",DATE.,@CR
              REPEAT ENTIRE.PROCEDURE
              END
           FINISH GET.LATEST.DATE
    END %GET.LATEST.DATE%
LET START.DATE=NEW.START.DATE
IF ADD.CHANGE="Y" THEN FINISH QUESTIONS
END %QUESTION.9%
END %QUESTIONS%



IF CHANGE.ENTRY ="Y" THEN
 BEGIN
 TYPE @CR,"SYSTEM NUMBER: "
 ACCEPT NEW.SYSNO
 TYPE "DATE: " ACCEPT NEW.END.DATE
 LET AFFECTED.ID =0
 FOR EACH SYSTEM. WHERE SYSNO =NEW.SYSNO
     AND NOT (NEW.END.DATE>END.DATE OR NEW.END.DATE<START.DATE)
     LET AFFECTED.ID=ID
 LET SYSTEM.ID =AFFECTED.ID
 IF AFFECTED.ID =0 THEN
  BEGIN
  TYPE @CR,"NO SUCH SYSTEM",@CR,@CR
  REPEAT ENTIRE.PROCEDURE
  END
  AS4:
  BEGIN
  TYPE @CR,"DO YOU NEED A LIST OF QUESTIONS? "
  ACCEPT ANSWER
  IF ANSWER ="Y" OR "N" THEN NOTHING ELSE REPEAT AS4
  END
  IF ANSWER ="Y" THEN
   BEGIN
   TYPE @CR,"2.SITE",@CR,"4.HWID",@CR,"5.SCHEDULE"
   TYPE @CR,"6.PRIME",@CR,"7.APPLICABLE",@CR,"8.END DATE"
   TYPE @CR,"9.START DATE",@CR
   END
  END %IF LIST OF QUESTIONS NEEDED%
 LET ANSWER ="N"



  AS8:
   BEGIN
 %PUT BACK IN WHEN MAGNUM ALLOWS MULTIPLE UPDATORS
   IF CHANGE.ENTRY ="N" THEN
      BEGIN
      TYPE @CR,"ALL ENTRIES CORRECT? "
      ACCEPT ANSWER
      END
   IF ANSWER ="Y" OR "N" THEN NOTHING ELSE REPEAT AS8
   %
   IF CHANGE.ENTRY="N" THEN LET ANSWER ="Y" %TAKE OUT%
   IF CHANGE ="Y" AND CHANGE.ENTRY ="N" THEN
       SELECT SYSTEM. VIA ID =SYSTEM.ID THEN
         CONDITIONAL ON QUESTION
         BEGIN
         2: ALTER SYSTEM. USING (NEW.SITE.ID FOR SITE.ID)
         3: ALTER SYSTEM. USING (NEW.CLASS.ID FOR CLASS.ID)
         4: ALTER SYSTEM. USING (NEW.HW.ID FOR HW.ID)
         5: BEGIN
            DELETE FROM NORMAL.SCHEDULE. VIA SYSTEM.ID
            FOR EACH L.NORMAL.SCHEDULE. INSERT INTO NORMAL.SCHEDULE.
            END
         6: ALTER SYSTEM. USING (NEW.PRIME.START FOR PRIME.START,
                                 NEW.PRIME.STOP FOR PRIME.STOP)
         7: ALTER SYSTEM. USING (NEW.APPLICABLE FOR APPLICABLE)
         8: ALTER SYSTEM. USING (NEW.END.DATE FOR END.DATE)
         9: ALTER SYSTEM. USING (NEW.START.DATE FOR START.DATE)
         END
   LET CHANGE.ENTRY ="N"
   IF ANSWER ="Y" THEN
    BEGIN
    IF CHANGE ="N" THEN
       BEGIN
       INSERT INTO SYSTEM.
       DELETE FROM NORMAL.SCHEDULE. VIA SYSTEM.ID
       FOR EACH L.NORMAL.SCHEDULE. VIA SYSTEM.ID INSERT INTO NORMAL.SCHEDULE.
       END
%   LET ADD.CHANGE ="N"%
    FINISH ENTIRE.PROCEDURE
    END
   IF ANSWER ="N" THEN
    BEGIN
    TYPE "QUESTION TO CHANGE: "
    ACCEPT QUESTION
    IF QUESTION <1 OR >9 THEN REPEAT AS8
    LET ADD.CHANGE ="Y"
    TYPE @CR
    REPEAT ADD.SYSTEM.COMMAND
    END %IF ALL ENTRIES NOT CORRECT%
   END %AS8%
  END %ADD SYSTEM COMMAND%
END %LINKS TO FIRST BEGIN IN ADD SYSTEM COMMAND%
%%
IF INPUT.COMMAND ="LIST SYSTEM" THEN
 BEGIN
 TYPE @CR,"SYSTEM NUMBER: "
 ACCEPT NEW.SYSNO
TYPE "DATE: " ACCEPT DATE.INPUT
SYS.CK:
BEGIN
FOR EACH SYSTEM. WHERE SYSNO=NEW.SYSNO AND
    NOT (DATE.INPUT>END.DATE OR <START.DATE) FINISH SYS.CK
TYPE @CR,"NO SUCH SYSTEM",@CR
REPEAT ENTIRE.PROCEDURE
END %SYS.CK%

 TYPE @CR,"HW   SN  SIT APP CLS START    END DATE PRIME     SCHED",@CR
 FOR EACH SYSTEM. WHERE SYSNO =NEW.SYSNO
     SORTED ON SITE.ID,CLASS.ID,SYSNO,-START.DATE
 BEGIN
  TYPE HW.ID," ",SYSNO," ",ABBREV(SITE. VIA ID =SITE.ID)," ",
       "  ",APPLICABLE," ",
       ABBREV(CLASS. VIA ID =CLASS.ID)," ",
       START.DATE," ",END.DATE," ",
       (((PRIME.START/60)*100)+(PRIME.START-((PRIME.START/60)*60))) AS "4N","-",
       (((PRIME.STOP/60)*100)+(PRIME.STOP-((PRIME.STOP/60)*60))) AS "4N"
       LET FIRST.FLAG=0
       FOR EACH NORMAL.SCHEDULE. VIA SYSTEM.ID=ID OF SYSTEM. SORTED ON SCHED.UP
           BEGIN
           IF FIRST.FLAG=0 THEN
              BEGIN
              LET FIRST.FLAG=1
              TYPE " "
              END
             ELSE
              TYPE @TAB TO 49
           TYPE (((SCHED.UP/60)*100)+(SCHED.UP-((SCHED.UP/60)*60))) AS "4N","-",
              (((SCHED.DN/60)*100)+(SCHED.DN-((SCHED.DN/60)*60))) AS "4N",@CR
          END
  END %FOR EACH SYSTEM%
 TYPE @CR
 REPEAT ENTIRE.PROCEDURE
 END %LIST SYSTEM%
%%
IF INPUT.COMMAND ="LIST SYSTEMS" THEN
 BEGIN
TYPE @CR,"DATE: " ACCEPT DATE.INPUT
TYPE "SITE: " ACCEPT NEW.ABBREV
CK.SITE.LS:
BEGIN
IF NEW.ABBREV="ALL" THEN FINISH CK.SITE.LS
FOR EACH SITE.
 IF ABBREV=NEW.ABBREV THEN
  BEGIN
  LET NEW.TITLE=TITLE
  FINISH CK.SITE.LS
  END
 TYPE @CR,"NO SUCH SITE",@CR,@CR
 REPEAT ENTIRE.PROCEDURE
END %CK.SITE.LS%
TYPE "CLASS: " ACCEPT NEW.CLASS
CK.CLASS.LS:
BEGIN
IF NEW.CLASS="ALL" THEN FINISH CK.CLASS.LS
FOR EACH CLASS. IF ABBREV=NEW.CLASS THEN FINISH CK.CLASS.LS
TYPE @CR,"NO SUCH CLASS",@CR,@CR
REPEAT ENTIRE.PROCEDURE
END %CK.CLASS.LS%
TYPE @CR,@CR,@CR
 IF NEW.CLASS="ALL" AND NEW.ABBREV#"ALL" THEN TYPE "ALL "
 IF NEW.ABBREV="ALL" THEN TYPE "ALL " ELSE TYPE TRIM(NEW.TITLE)," "
 IF NEW.CLASS#"ALL" THEN TYPE TRIM(NEW.CLASS)," "
 TYPE "SYSTEMS AS OF ",
   DATE.INPUT AS DATE "WWW MMM ZD,YYYY",@CR,@CR,
    "HW   SN  SIT APP CLS START    END DATE PRIME     SCHED",@CR
   FOR EACH SYSTEM. WHERE NOT (DATE.INPUT>END.DATE OR <START.DATE)
   SORTED ON SITE.ID,CLASS.ID,SYSNO,-START.DATE
    BEGIN

      LIST.SYSTEM:
      BEGIN

      IF NEW.ABBREV="ALL" THEN NOTHING ELSE
      IF NEW.ABBREV#ABBREV(SITE. VIA ID=SITE.ID) THEN FINISH LIST.SYSTEM

      IF NEW.CLASS="ALL" THEN NOTHING ELSE
      IF NEW.CLASS#ABBREV(CLASS. VIA ID=CLASS.ID) THEN FINISH LIST.SYSTEM

      TYPE HW.ID," ",SYSNO," ",ABBREV(SITE. VIA ID =SITE.ID)," ",
       "  ",APPLICABLE," ",
       ABBREV(CLASS. VIA ID =CLASS.ID)," ",
      START.DATE," ",END.DATE," ",
     (((PRIME.START/60)*100)+(PRIME.START-((PRIME.START/60)*60))) AS "4N","-",
     (((PRIME.STOP/60)*100)+(PRIME.STOP-((PRIME.STOP/60)*60))) AS "4N"
       LET FIRST.FLAG=0
      FOR EACH NORMAL.SCHEDULE. VIA SYSTEM.ID=ID OF SYSTEM. SORTED ON SCHED.UP
      BEGIN
       IF FIRST.FLAG=0 THEN
         BEGIN
          LET FIRST.FLAG=1
          TYPE " "
          END
         ELSE
          TYPE @TAB TO 49
      TYPE (((SCHED.UP/60)*100)+(SCHED.UP-((SCHED.UP/60)*60))) AS "4N","-",
           (((SCHED.DN/60)*100)+(SCHED.DN-((SCHED.DN/60)*60))) AS "4N",@CR
      END %FOR EACH SCHEDULE%
      END %LIST SYSTEM%
   END %FOR EACH SYSTEM%
 TYPE @CR
 REPEAT ENTIRE.PROCEDURE
 END %LIST SYSTEMS%
%%
IF INPUT.COMMAND ="DELETE SYSTEM" THEN
 BEGIN

 APPLY CHECK.USER.ID

 TYPE @CR,"SYSTEM NUMBER: "
 ACCEPT NEW.SYSNO
 TYPE "ENTER A DATE FOR WHICH THE SYSTEM IS VALID: "
 ACCEPT DATE.INPUT
 SYS.CHECK:
 BEGIN
  FOR EACH SYSTEM. WHERE START.DATE<=DATE.INPUT AND END.DATE>=DATE.INPUT
   AND SYSNO=NEW.SYSNO
   BEGIN
   LET AFFECTED.ID=ID OF SYSTEM.
   FINISH SYS.CHECK
   END
 TYPE @CR,"NO SUCH SYSTEM",@CR,@CR
 REPEAT ENTIRE.PROCEDURE
 END %SYS.CHECK%
 FOR EACH TIME. VIA SYSTEM.ID=AFFECTED.ID
   BEGIN
   TYPE @CR,"SYSTEM MAY NOT BE DELETED",@CR,@CR
   REPEAT ENTIRE.PROCEDURE
   END
  DELETE FROM SYSTEM. VIA ID =AFFECTED.ID
  TYPE "SYSTEM DELETED",@CR,@CR
  FINISH ENTIRE.PROCEDURE
  END %DELETE SYSTEM%
%%
IF INPUT.COMMAND ="ADD GROUP" THEN
BEGIN

 APPLY CHECK.USER.ID

 TYPE @CR,"TITLE: "
 ACCEPT NEW.TITLE
IF NEW.TITLE ="" THEN
 BEGIN
 TYPE "ILLEGAL TITLE",@CR,@CR
 REPEAT ENTIRE.PROCEDURE
 END
 FOR EACH GROUP. WHERE TITLE =NEW.TITLE
  BEGIN
  TYPE "GROUP EXISTS",@CR,@CR
  REPEAT ENTIRE.PROCEDURE
  END
 AG1:
  BEGIN
  TYPE "ABBREV: "
  ACCEPT NEW.ABBREV
 IF NEW.ABBREV ="" THEN
  BEGIN
  TYPE "ILLEGAL ABBREV",@CR,@CR
  REPEAT ENTIRE.PROCEDURE
  END
  FOR EACH GROUP. WHERE ABBREV =NEW.ABBREV
   BEGIN
   TYPE "GROUP EXISTS",@CR,@CR
   REPEAT AG1
   END
  END %AG1%
 TYPE "TYPE ABBREV: "
 ACCEPT NEW.TYPE.ABBREV
 SELECT TYPE. VIA ABBREV =NEW.TYPE.ABBREV THEN NOTHING ELSE
  BEGIN
  TYPE "NO SUCH TYPE",@CR,@CR
  REPEAT ENTIRE.PROCEDURE
  END
 AG2:
 BEGIN
  TYPE "POSITION: "
  ACCEPT NEW.POS
  IF NEW.POS <1 THEN
   BEGIN
   TYPE @CR,"POSITION MUST BE >0",@CR
   REPEAT AG2
   END
  END %AG2%
 LET HIGH.ID =0
 FOR EACH GROUP. IF ID > HIGH.ID THEN LET HIGH.ID =ID
 LET HIGH.ID =HIGH.ID+1
 AG3:
 BEGIN
   IF NEW.POS GT COUNT(GROUP.)
     THEN BEGIN
            INSERT INTO GROUP. USING (HIGH.ID FOR ID,
                                      (COUNT(GROUP.) + 1) FOR POS,
                                      NEW.TYPE.ABBREV FOR TYPE.ABBREV,
                                      NEW.ABBREV FOR ABBREV,
                                      NEW.TITLE FOR TITLE)
            FINISH AG3
          END
   FOR EACH GROUP. SORTED ON DESCENDING POS
     BEGIN
       IF POS GE NEW.POS
         THEN BEGIN
                LET POS = POS + 1
                ALTER GROUP.
              END
         ELSE BEGIN
                INSERT INTO GROUP. USING (HIGH.ID FOR ID,
                                          NEW.POS FOR POS,
                                          NEW.TYPE.ABBREV FOR TYPE.ABBREV,
                                          NEW.ABBREV FOR ABBREV,
                                          NEW.TITLE FOR TITLE)
                FINISH AG3
              END
     END  % FOR EACH GROUP. %
 END  % AG3 %
 TYPE "GROUP ENTERED",@CR,@CR
 FINISH ENTIRE.PROCEDURE
 END %ADD GROUP%
%%
IF INPUT.COMMAND ="LIST GROUPS" THEN
BEGIN
 TYPE @CR,"CODE GROUPS AS OF ",
    (TIME/60/60) AS "BB",":",(TIME/60-((TIME/60/60)*60)) AS "NN"," ",
     TODAY AS DATE "WWW MMM ZD,YYYY",@CR,@CR
 TYPE "POS TYP GRP GROUP TITLE",@CR
 FOR EACH GROUP. SORTED ON POS,ID TYPE POS,": ",TYPE.ABBREV," ",ABBREV,
  " ",TRIM(TITLE),@CR
 TYPE @CR
 REPEAT ENTIRE.PROCEDURE
END %LIST GROUPS%
%%
IF INPUT.COMMAND ="DELETE GROUP" THEN
BEGIN

 APPLY CHECK.USER.ID

 TYPE @CR,"ABBREV: "
 ACCEPT NEW.ABBREV
 IF NEW.ABBREV ="" THEN
 BEGIN
  TYPE "ILLEGAL ABBREV",@CR,@CR
  REPEAT ENTIRE.PROCEDURE
  END
 GROUP.CHECK:
 BEGIN
  FOR EACH GROUP. WHERE ABBREV=NEW.ABBREV FINISH GROUP.CHECK
  TYPE @CR,"NO SUCH GROUP",@CR
  REPEAT ENTIRE.PROCEDURE
 END %GROUP.CHECK%
 FOR EACH GROUP. WHERE ABBREV =NEW.ABBREV
  BEGIN
  FOR EACH CODE. WHERE GROUP.ID = ID OF GROUP.
   BEGIN
   TYPE @CR,"THIS GROUP MAY NOT BE DELETED",@CR,@CR
   REPEAT ENTIRE.PROCEDURE
   END
  END
 FOR EACH GROUP. WHERE ABBREV =NEW.ABBREV
  BEGIN
  LET CURRENT.POS =POS
  DELETE FROM GROUP. VIA KEY
  END
 FOR EACH GROUP. IF POS > CURRENT.POS THEN
  BEGIN
  LET POS =POS-1
  ALTER GROUP.
  END
 TYPE "GROUP DELETED",@CR,@CR
 FINISH ENTIRE.PROCEDURE
END
%%
IF INPUT.COMMAND ="CHANGE GROUP" THEN
BEGIN

 APPLY CHECK.USER.ID

 TYPE @CR,"ABBREV: "
 ACCEPT ABBREV.TO.CHANGE
 LET AFFECTED.ID =0
 FOR EACH GROUP. WHERE ABBREV =ABBREV.TO.CHANGE LET AFFECTED.ID =ID
 IF AFFECTED.ID =0 THEN
  BEGIN
  TYPE "NO SUCH GROUP",@CR,@CR
  REPEAT ENTIRE.PROCEDURE
  END
TYPE @CR,"POS TYP ABV TITLE",@CR
SELECT GROUP. VIA ID=AFFECTED.ID THEN
       TYPE POS,": ",TYPE.ABBREV," ",ABBREV," ",TRIM(TITLE),@CR,@CR
  TYPE "NEW ABBREV: "
  ACCEPT NEW.ABBREV
  IF NEW.ABBREV ="" THEN
   BEGIN
   TYPE "ILLEGAL ABBREV",@CR,@CR
   REPEAT ENTIRE.PROCEDURE
   END
  FOR EACH GROUP. WHERE ID # AFFECTED.ID AND ABBREV =NEW.ABBREV
   BEGIN
   TYPE "GROUP EXISTS",@CR,@CR
   REPEAT ENTIRE.PROCEDURE
   END
 TYPE "NEW TITLE: "
 ACCEPT NEW.TITLE
 IF NEW.TITLE ="" THEN
  BEGIN
  TYPE "ILLEGAL TITLE",@CR,@CR
  REPEAT ENTIRE.PROCEDURE
  END
 FOR EACH GROUP. WHERE ID # AFFECTED.ID AND TITLE =NEW.TITLE
  BEGIN
   TYPE "GROUP EXISTS",@CR,@CR
   REPEAT ENTIRE.PROCEDURE
  END
 TYPE "NEW TYPE ABBREV: "
 ACCEPT NEW.TYPE.ABBREV
 SELECT TYPE. VIA ABBREV =NEW.TYPE.ABBREV THEN NOTHING ELSE
  BEGIN
   TYPE "NO SUCH TYPE",@CR,@CR
   REPEAT ENTIRE.PROCEDURE
  END
 SELECT GROUP. VIA ID =AFFECTED.ID THEN ALTER GROUP. USING
  (NEW.TITLE FOR TITLE, NEW.ABBREV FOR ABBREV,
   NEW.TYPE.ABBREV FOR TYPE.ABBREV)
FOR EACH CODE. WHERE GROUP.ID=AFFECTED.ID
    ALTER CODE. USING (NEW.TYPE.ABBREV FOR TYPE.ABBREV)
 CG2:
 BEGIN
  TYPE "NEW POSITION: "
  ACCEPT NEW.POS
  IF NEW.POS <1 THEN
   BEGIN
   TYPE @CR,"POSITION MUST BE >0",@CR
   REPEAT CG2
   END
  END %CG2%
 SELECT GROUP. VIA ID =AFFECTED.ID THEN IF POS = NEW.POS THEN
  BEGIN
  TYPE "GROUP CHANGED",@CR,@CR
  FINISH ENTIRE.PROCEDURE
  END
  ELSE LET CURRENT.POS =POS
 IF NEW.POS > COUNT(GROUP.) THEN LET NEW.POS =COUNT(GROUP.)
  FOR EACH GROUP.
  CG3:
   BEGIN
   IF (POS < CURRENT.POS AND NEW.POS)
   OR (POS > CURRENT.POS AND NEW.POS) THEN FINISH CG3
   IF POS <= NEW.POS AND > CURRENT.POS THEN
    BEGIN
    LET POS =POS-1
    ALTER GROUP.
    FINISH CG3
    END
   IF POS >= NEW.POS AND < CURRENT.POS THEN
    BEGIN
    LET POS = POS+1
    ALTER GROUP.
    FINISH CG3
    END
   IF POS =CURRENT.POS THEN ALTER GROUP. USING (NEW.POS FOR POS)
  END %FOR EACH GROUP%
 TYPE "GROUP CHANGED",@CR,@CR
 REPEAT ENTIRE.PROCEDURE
END %CHANGE GROUP%
%%
IF INPUT.COMMAND ="ADD CODE" THEN
BEGIN

 APPLY CHECK.USER.ID

 LET CODE.END.DATE="12-31-99" AS DATE "MM-DD-YY"
 TYPE @CR,"START DATE: "
 ACCEPT CODE.START.DATE
 TYPE "CLASS: "
 ACCEPT NEW.CLASS
 IF NEW.CLASS ="" THEN
  BEGIN
  TYPE "ILLEGAL ABBREV",@CR,@CR
  REPEAT ENTIRE.PROCEDURE
  END
 LET NEW.CLASS.ID =0
 FOR EACH CLASS. WHERE ABBREV =NEW.CLASS LET NEW.CLASS.ID =ID
 IF NEW.CLASS.ID =0 THEN
  BEGIN
  TYPE "NO SUCH CLASS",@CR,@CR
  REPEAT ENTIRE.PROCEDURE
  END
 ANC1:
 BEGIN
 TYPE "GROUP ABBREV: "
 ACCEPT NEW.GROUP
 LET NEW.GROUP.ID =0
 FOR EACH GROUP. WHERE ABBREV =NEW.GROUP LET NEW.GROUP.ID =ID
 IF NEW.GROUP.ID =0 THEN
  BEGIN
  TYPE "NO SUCH GROUP",@CR,@CR
  REPEAT ENTIRE.PROCEDURE
  END
ANCN:
BEGIN
 TYPE "CODE: "
 ACCEPT NEW.CODE
IF NEW.CODE<0 THEN REPEAT ANCN
END
 FOR EACH CODE. WHERE CODE =NEW.CODE AND CLASS.ID =NEW.CLASS.ID
     AND END.DATE>= CODE.START.DATE
  BEGIN
  TYPE "CODE EXISTS",@CR,@CR
  REPEAT ENTIRE.PROCEDURE
  END
ANC7:
BEGIN
 TYPE "ABBREV: "
 ACCEPT NEW.ABBREV
IF NEW.ABBREV ="" THEN REPEAT ANC7
END %ANC7%
 FOR EACH CODE. WHERE CLASS.ID =NEW.CLASS.ID AND ABBREV =NEW.ABBREV
     AND END.DATE >=CODE.START.DATE
  BEGIN
  TYPE "CODE EXISTS",@CR,@CR
  REPEAT ENTIRE.PROCEDURE
  END
ANC8:
BEGIN
 TYPE "TITLE: "
 ACCEPT NEW.TITLE
 IF NEW.TITLE ="" THEN REPEAT ANC8
END %ANC8%
 FOR EACH CODE. WHERE TITLE = NEW.TITLE AND CLASS.ID =NEW.CLASS.ID
  BEGIN
  TYPE "CODE EXISTS",@CR,@CR
  REPEAT ENTIRE.PROCEDURE
  END
ANCX:
BEGIN
TYPE "ADJUSTMENT? "
ACCEPT NEW.EXCEPTION.FLAG
IF NEW.EXCEPTION.FLAG ="Y" OR "N" THEN FINISH ANCX
   ELSE TYPE "Y OR N, ONLY",@CR
REPEAT ANCX
END %ANCX%
 LET HIGH.ID=0
FOR EACH CODE. LET HIGH.ID=ID
LET HIGH.ID=HIGH.ID+1
  INSERT INTO CODE. USING (NEW.TITLE FOR TITLE,NEW.ABBREV FOR ABBREV,
                         HIGH.ID FOR ID,NEW.GROUP.ID FOR GROUP.ID,
                         NEW.CLASS.ID FOR CLASS.ID,NEW.CODE FOR CODE,
                       TYPE.ABBREV(GROUP. VIA ID=NEW.GROUP.ID) FOR TYPE.ABBREV,
                   CODE.START.DATE FOR START.DATE,CODE.END.DATE FOR END.DATE,
                   NEW.EXCEPTION.FLAG FOR EXCEPTION.FLAG)
 TYPE @CR,"NEW CODE ADDED",@CR
 FINISH ENTIRE.PROCEDURE
 END %ANC1%
 END %ADD CODE%
%%
IF INPUT.COMMAND ="CHANGE CODE" THEN
BEGIN

APPLY CHECK.USER.ID

CC1:
BEGIN
TYPE @CR,"CLASS: "
ACCEPT NEW.CLASS
FOR EACH CLASS. WHERE ABBREV=NEW.CLASS
    BEGIN
    LET NEW.CLASS.ID=ID
    FINISH CC1
    END
TYPE "NO SUCH CLASS"
REPEAT CC1
END %CC1%

TYPE "CODE: "
ACCEPT CODE.TO.CHANGE
LET AFFECTED.ID=0
FOR EACH CODE. WHERE CODE=CODE.TO.CHANGE AND CLASS.ID=NEW.CLASS.ID
    SORTED ON -END.DATE
    THIS.CODE:
    BEGIN
    LET AFFECTED.ID=ID
    LET NEW.GROUP.ID=GROUP.ID
    LET NEW.CODE=CODE
    LET NEW.ABBREV=ABBREV
    LET NEW.TITLE=TITLE
    LET NEW.START.DATE=START.DATE
    LET NEW.END.DATE=END.DATE
    LET NEW.EXCEPTION.FLAG=EXCEPTION.FLAG

TYPE @CR,"TYP GRP COD AF ABV TITLE           START    END",@CR
TYPE TYPE.ABBREV(CODE. VIA ID=AFFECTED.ID)," ",
ABBREV(GROUP. VIA ID=NEW.GROUP.ID)," ",NEW.CODE,"  ",NEW.EXCEPTION.FLAG," ",NEW.ABBREV," ",
TITLE," ",START.DATE," ",NEW.END.DATE,@CR,@CR

CCA:
BEGIN
TYPE "ANY CHANGES? "
ACCEPT ANSWER
IF ANSWER ="Y" OR "N" THEN NOTHING ELSE REPEAT CCA
IF ANSWER ="N" THEN
   CCB:
   BEGIN
   TYPE "CHECK FOR OLDER CODE? "
   ACCEPT ANSWER
   IF ANSWER ="Y" OR "N" THEN NOTHING ELSE REPEAT CCB
   IF ANSWER ="N" THEN
      BEGIN
      TYPE @CR
      REPEAT ENTIRE.PROCEDURE
      END
      ELSE
      FINISH THIS.CODE
   END %CCB%
END %CCA%

CC3A:
BEGIN
TYPE "CHANGE START DATE? "
ACCEPT ANSWER
IF ANSWER="Y" OR "N" THEN NOTHING ELSE REPEAT CC3A
IF ANSWER="N" THEN FINISH CC3A
TYPE "NEW START DATE: "
ACCEPT NEW.START.DATE
IF NEW.START.DATE>END.DATE THEN
 BEGIN
 TYPE "START DATE MUST NOT BE LATER THEN THE END DATE, END DATE IS "
 TYPE END.DATE,@CR
 LET NEW.START.DATE=START.DATE(CODE. VIA ID=AFFECTED.ID)
 REPEAT CC3A
 END
LET EARLIEST.DATE="12-31-99" AS DATE "MM-DD-YY"
TYPE "CHECKING ALL TIME RECORDS FOR THIS CODE, PLEASE STAND BY",@CR
GED:
FOR EACH TIME. WHERE CODE.ID=AFFECTED.ID SORTED ON DATE.
 BEGIN
 LET EARLIEST.DATE=DATE.
 FINISH GED
 END
IF NEW.START.DATE>EARLIEST.DATE THEN
 BEGIN
 TYPE "LATEST ALLOWABLE START DATE IS ",EARLIEST.DATE,@CR
 LET NEW.START.DATE=START.DATE(CODE. VIA ID=AFFECTED.ID)
 REPEAT CC3A
 END
END %CC3A%

CC3:
BEGIN
TYPE "CHANGE END DATE? "
ACCEPT ANSWER
IF ANSWER ="N" OR "Y" THEN NOTHING ELSE REPEAT CC3
IF ANSWER ="N" THEN FINISH CC3
TYPE "NEW END DATE: "
ACCEPT NEW.END.DATE
IF NEW.END.DATE<START.DATE THEN
 BEGIN
TYPE "END DATE MAY NOT BE BEFORE START DATE. START DATE IS ",START.DATE,@CR
LET NEW.END.DATE=END.DATE(CODE. VIA ID=AFFECTED.ID)
 REPEAT CC3
 END
IF NEW.END.DATE>=TODAY THEN FINISH CC3
LET LATEST.DATE="01-01-00" AS DATE "MM-DD-YY"
TYPE "CHECKING ALL TIME RECORDS FOR THIS CODE, PLEASE STAND BY",@CR
GLD:
FOR EACH TIME. WHERE CODE.ID=AFFECTED.ID SORTED ON -DATE.
 BEGIN
 LET LATEST.DATE=DATE.
 FINISH GLD
 END
IF NEW.END.DATE<LATEST.DATE THEN
 BEGIN
 TYPE "EARLIEST ALLOWABLE END DATE IS ",LATEST.DATE,@CR
 LET NEW.END.DATE=END.DATE(CODE. VIA ID=AFFECTED.ID)
 REPEAT CC3
 END
END %CC3%

CC4:
BEGIN
TYPE "CHANGE GROUP? "
ACCEPT ANSWER
IF ANSWER ="Y" OR "N" THEN NOTHING ELSE REPEAT CC4
IF ANSWER ="N" THEN FINISH CC4
TYPE "NEW GROUP: "
ACCEPT NEW.GROUP
FOR EACH GROUP. WHERE ABBREV=NEW.GROUP
    BEGIN
    LET NEW.GROUP.ID=ID
    FINISH CC4
    END
LET NEW.GROUP=ABBREV(CODE. VIA ID=AFFECTED.ID)
TYPE"NO SUCH GROUP",@CR,@CR
REPEAT CC4
END %CC4%

CC5:
BEGIN
TYPE "CHANGE CODE? "
ACCEPT ANSWER
IF ANSWER ="Y" OR "N" THEN NOTHING ELSE REPEAT CC5
IF ANSWER ="N" THEN FINISH CC5
TYPE "NEW CODE: "
ACCEPT NEW.CODE
END %CC5%

CC6:
BEGIN
TYPE "CHANGE ABBREV? "
ACCEPT ANSWER
IF ANSWER ="Y" OR "N" THEN NOTHING ELSE REPEAT CC6
IF ANSWER ="N" THEN FINISH CC6
TYPE "NEW ABBREV: "
ACCEPT NEW.ABBREV
IF NEW.ABBREV="" THEN
   BEGIN
   TYPE "ILLEGAL ABBREV",@CR,@CR
   LET NEW.ABBREV=ABBREV(CODE. VIA ID=AFFECTED.ID)
   REPEAT CC6
   END
END %CC6%

CC7:
BEGIN
TYPE "CHANGE TITLE? "
ACCEPT ANSWER
IF ANSWER ="Y" OR "N" THEN NOTHING ELSE REPEAT CC7
IF ANSWER ="N" THEN FINISH CC7
TYPE "NEW TITLE: "
ACCEPT NEW.TITLE
IF NEW.TITLE="" THEN
   BEGIN
   TYPE "ILLEGAL TITLE",@CR,@CR
   LET NEW.TITLE=TITLE(CODE. VIA ID=AFFECTED.ID)
   REPEAT CC7
   END
END %CC7%

CC8:
BEGIN
TYPE "CHANGE ADJUSTMENT FLAG? "
ACCEPT ANSWER
IF ANSWER ="Y" OR "N" THEN NOTHING ELSE REPEAT CC8
IF ANSWER ="N" THEN FINISH CC8
TYPE "NEW ADJUSTMENT FLAG: "
ACCEPT NEW.EXCEPTION.FLAG
IF NEW.EXCEPTION.FLAG="Y" OR "N" THEN NOTHING ELSE
   BEGIN
   TYPE @CR,"MUST BE Y OR N, ONLY",@CR
   LET NEW.EXCEPTION.FLAG=EXCEPTION.FLAG(CODE. VIA ID=AFFECTED.ID)
   REPEAT CC8
   END
END %CC8%

FOR EACH CODE. WHERE AFFECTED.ID#ID AND CLASS.ID=NEW.CLASS.ID
 AND NOT (START.DATE>NEW.END.DATE OR END.DATE<NEW.START.DATE)
 AND CODE=NEW.CODE
  BEGIN
  TYPE "CODE NOT UNIQUE AMONG ITS CONTEMPORARIES",@CR,@CR
  REPEAT ENTIRE.PROCEDURE
  END

FOR EACH CODE. WHERE AFFECTED.ID#ID AND CLASS.ID=NEW.CLASS.ID
 AND NOT (START.DATE>NEW.END.DATE OR END.DATE<NEW.START.DATE)
 AND ABBREV=NEW.ABBREV
  BEGIN
  TYPE "ABBREV NOT UNIQUE AMONG ITS CONTEMPORARIES",@CR,@CR
  REPEAT ENTIRE.PROCEDURE
  END

FOR EACH CODE. WHERE ID#AFFECTED.ID AND CLASS.ID=NEW.CLASS.ID
    AND TITLE=NEW.TITLE
    BEGIN
    TYPE "TITLE NOT UNIQUE",@CR,@CR
    REPEAT ENTIRE.PROCEDURE
    END

SELECT CODE. VIA ID=AFFECTED.ID THEN ALTER CODE. USING
 (NEW.GROUP.ID FOR GROUP.ID,
  NEW.CODE FOR CODE,
  NEW.ABBREV FOR ABBREV,
  NEW.TITLE FOR TITLE,
  TYPE.ABBREV(GROUP. VIA ID=NEW.GROUP.ID) FOR TYPE.ABBREV,
  NEW.START.DATE FOR START.DATE,
  NEW.END.DATE FOR END.DATE,
NEW.EXCEPTION.FLAG FOR EXCEPTION.FLAG)

TYPE "CODE CHANGED",@CR,@CR
FINISH ENTIRE.PROCEDURE
END %THIS.CODE%
IF AFFECTED.ID =0 THEN TYPE "NO SUCH CODE",@CR
TYPE @CR
REPEAT ENTIRE.PROCEDURE
END %CHANGE CODE%
%%
IF INPUT.COMMAND ="LIST CODE" THEN
BEGIN
 TYPE "USE THE COMMAND 'CHANGE CODE'",@CR,@CR
 REPEAT ENTIRE.PROCEDURE
 END



IF INPUT.COMMAND ="LIST CODES" THEN
BEGIN
 TYPE @CR,"CLASS: "
 ACCEPT NEW.CLASS
 LET NEW.CLASS.ID =0
 FOR EACH CLASS. WHERE ABBREV =NEW.CLASS LET NEW.CLASS.ID =ID
 IF NEW.CLASS.ID =0 THEN
  BEGIN
  TYPE "NO SUCH CLASS",@CR,@CR
  REPEAT ENTIRE.PROCEDURE
  END

GET.CODE.DATE:
BEGIN
TYPE "DATE: " ACCEPT CODE.DATE
IF CODE.DATE>TODAY THEN REPEAT GET.CODE.DATE
END %GET.CODE.DATE%
 TYPE @CR,TRIM(NEW.CLASS)," CODES AS OF ",
      CODE.DATE AS DATE "WWW MMM ZD,YYYY",@CR,@CR
 TYPE "TYP GRP COD AF ABV TITLE           START    END",@CR
FOR EACH GROUP. SORTED ON POS
 FOR EACH CODE. WHERE CLASS.ID =NEW.CLASS.ID AND
     NOT (CODE.DATE>END.DATE OR <START.DATE)
     AND GROUP.ID=ID OF GROUP. SORTED ON CODE
TYPE TYPE.ABBREV," ",
     ABBREV(GROUP. VIA ID =GROUP.ID)," ",CODE,"  ",EXCEPTION.FLAG,"  ",ABBREV," ",TITLE," ",START.DATE," ",END.DATE,@CR
  TYPE @CR
  REPEAT ENTIRE.PROCEDURE
  END %LIST CODES%
%%
IF INPUT.COMMAND ="DELETE CODE" THEN
BEGIN

 APPLY CHECK.USER.ID

 TYPE @CR,"CLASS: "
 ACCEPT NEW.CLASS
 LET NEW.CLASS.ID =0
 FOR EACH CLASS. WHERE ABBREV =NEW.CLASS LET NEW.CLASS.ID =ID
 IF NEW.CLASS.ID =0 THEN
  BEGIN
  TYPE "NO SUCH CLASS",@CR,@CR
  REPEAT ENTIRE.PROCEDURE
  END
 TYPE "CODE: "
 ACCEPT NEW.CODE
LET AFFECTED.ID=0
FOR EACH CODE. WHERE CODE=NEW.CODE AND CLASS.ID=NEW.CLASS.ID
    DC1:
    BEGIN
    LET AFFECTED.ID=ID
    IF START.DATE#TODAY THEN FINISH DC1
    FOR EACH TIME. WHERE CODE.ID=AFFECTED.ID
   BEGIN
 TYPE "BEFORE THIS CODE MAY BE DELETED,",@CR,
      "THE TIME RECORDS WHICH POINT TO IT MUST BE DELETED",@CR,@CR
   REPEAT ENTIRE.PROCEDURE
   END
 DELETE FROM CODE. VIA KEY
 TYPE "CODE DELETED",@CR,@CR
 FINISH ENTIRE.PROCEDURE
END %DC1%
IF AFFECTED.ID=0 THEN
 BEGIN
 TYPE "NO SUCH CODE",@CR,@CR
 REPEAT ENTIRE.PROCEDURE
 END
TYPE @CR,"CODE EXISTS BUT WAS ENTERED BEFORE TODAY AND MAY NOT BE DELETED",@CR,@CR
 REPEAT ENTIRE.PROCEDURE
END %DELETE CODE%
%%
IF INPUT.COMMAND = "LIST TYPES" THEN
   BEGIN
   TYPE @CR
   FOR EACH TYPE. SORTED ON POS TYPE ABBREV," ",TRIM(TITLE),@CR
   TYPE @CR
   REPEAT ENTIRE.PROCEDURE
   END
%%
IF INPUT.COMMAND ="ADD TYPE" OR "CHANGE TYPE" OR "DELETE TYPE" THEN
BEGIN
 TYPE @CR,"CODE TYPES MAY NOT BE MODIFIED",@CR,@CR
 REPEAT ENTIRE.PROCEDURE
END
%%
IF INPUT.COMMAND="ADD HOLIDAY" THEN
ADD.HOLIDAY:
BEGIN


%APPLY CHECK.USER.ID%

TYPE @CR,"DATE OF NEW HOLIDAY: " ACCEPT HOLIDAY

SELECT HOLIDAY. VIA HOLIDAY THEN
       BEGIN
       TYPE @CR,"ALREADY ENTERED",@CR
       REPEAT ENTIRE.PROCEDURE
       END
  ELSE
       BEGIN
       INSERT INTO HOLIDAY.
       FINISH ENTIRE.PROCEDURE
       END

END %ADD.HOLIDAY%
%%
IF INPUT.COMMAND="DELETE HOLIDAY" THEN
DELETE.HOLIDAY:
BEGIN

APPLY CHECK.USER.ID

TYPE @CR,"DATE OF HOLIDAY TO DELETE: " ACCEPT HOLIDAY

SELECT HOLIDAY. VIA HOLIDAY THEN
       BEGIN
       DELETE FROM HOLIDAY. VIA HOLIDAY
       TYPE @CR,"HOLIDAY DELETED",@CR
       FINISH ENTIRE.PROCEDURE
       END
   ELSE BEGIN
        TYPE @CR,"HOLIDAY NOT ON FILE",@CR
        REPEAT ENTIRE.PROCEDURE
        END

END %DELETE HOLIDAY%
%%
IF INPUT.COMMAND="LIST HOLIDAYS" THEN
LIST.HOLIDAYS:
BEGIN

TYPE @CR,"ENTER YEAR YOU WISH TO SEE AS YY: " ACCEPT YEAR.

TYPE @CR
FOR EACH HOLIDAY. WHERE ((HOLIDAY AS DATE "YY") AS "CC") AS "NN"=YEAR.
TYPE HOLIDAY AS DATE "MMM ZD",@CR

TYPE @CR
REPEAT ENTIRE.PROCEDURE
END %LIST HOLIDAYS%
%%
  TYPE"?",@CR,@CR
  REPEAT ENTIRE.PROCEDURE
  END %ENTIRE PROCEDURE%

 END
    yh,,